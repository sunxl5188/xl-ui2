import Vue from 'vue';

function _typeof$3(o) {
  "@babel/helpers - typeof";

  return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof$3(o);
}

function _toPrimitive$1(input, hint) {
  if (_typeof$3(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof$3(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}

function _toPropertyKey(arg) {
  var key = _toPrimitive$1(arg, "string");
  return _typeof$3(key) === "symbol" ? key : String(key);
}

function _defineProperty$1(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */


function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */

function _typeof$2(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$2 = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof$2 = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof$2(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

// The rational behind the verbose Reflect-feature check below is the fact that there are polyfills
// which add an implementation for Reflect.defineMetadata but not for Reflect.getOwnMetadataKeys.
// Without this check consumers will encounter hard to track down runtime errors.
function reflectionIsSupported() {
  return typeof Reflect !== 'undefined' && Reflect.defineMetadata && Reflect.getOwnMetadataKeys;
}
function copyReflectionMetadata(to, from) {
  forwardMetadata(to, from);
  Object.getOwnPropertyNames(from.prototype).forEach(function (key) {
    forwardMetadata(to.prototype, from.prototype, key);
  });
  Object.getOwnPropertyNames(from).forEach(function (key) {
    forwardMetadata(to, from, key);
  });
}

function forwardMetadata(to, from, propertyKey) {
  var metaKeys = propertyKey ? Reflect.getOwnMetadataKeys(from, propertyKey) : Reflect.getOwnMetadataKeys(from);
  metaKeys.forEach(function (metaKey) {
    var metadata = propertyKey ? Reflect.getOwnMetadata(metaKey, from, propertyKey) : Reflect.getOwnMetadata(metaKey, from);

    if (propertyKey) {
      Reflect.defineMetadata(metaKey, metadata, to, propertyKey);
    } else {
      Reflect.defineMetadata(metaKey, metadata, to);
    }
  });
}

var fakeArray = {
  __proto__: []
};
var hasProto = fakeArray instanceof Array;
function createDecorator(factory) {
  return function (target, key, index) {
    var Ctor = typeof target === 'function' ? target : target.constructor;

    if (!Ctor.__decorators__) {
      Ctor.__decorators__ = [];
    }

    if (typeof index !== 'number') {
      index = undefined;
    }

    Ctor.__decorators__.push(function (options) {
      return factory(options, key, index);
    });
  };
}
function isPrimitive(value) {
  var type = _typeof$2(value);

  return value == null || type !== 'object' && type !== 'function';
}

function collectDataFromConstructor(vm, Component) {
  // override _init to prevent to init as Vue instance
  var originalInit = Component.prototype._init;

  Component.prototype._init = function () {
    var _this = this;

    // proxy to actual vm
    var keys = Object.getOwnPropertyNames(vm); // 2.2.0 compat (props are no longer exposed as self properties)

    if (vm.$options.props) {
      for (var key in vm.$options.props) {
        if (!vm.hasOwnProperty(key)) {
          keys.push(key);
        }
      }
    }

    keys.forEach(function (key) {
      Object.defineProperty(_this, key, {
        get: function get() {
          return vm[key];
        },
        set: function set(value) {
          vm[key] = value;
        },
        configurable: true
      });
    });
  }; // should be acquired class property values


  var data = new Component(); // restore original _init to avoid memory leak (#209)

  Component.prototype._init = originalInit; // create plain data object

  var plainData = {};
  Object.keys(data).forEach(function (key) {
    if (data[key] !== undefined) {
      plainData[key] = data[key];
    }
  });

  return plainData;
}

var $internalHooks = ['data', 'beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeDestroy', 'destroyed', 'beforeUpdate', 'updated', 'activated', 'deactivated', 'render', 'errorCaptured', 'serverPrefetch' // 2.6
];
function componentFactory(Component) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  options.name = options.name || Component._componentTag || Component.name; // prototype props.

  var proto = Component.prototype;
  Object.getOwnPropertyNames(proto).forEach(function (key) {
    if (key === 'constructor') {
      return;
    } // hooks


    if ($internalHooks.indexOf(key) > -1) {
      options[key] = proto[key];
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(proto, key);

    if (descriptor.value !== void 0) {
      // methods
      if (typeof descriptor.value === 'function') {
        (options.methods || (options.methods = {}))[key] = descriptor.value;
      } else {
        // typescript decorated data
        (options.mixins || (options.mixins = [])).push({
          data: function data() {
            return _defineProperty({}, key, descriptor.value);
          }
        });
      }
    } else if (descriptor.get || descriptor.set) {
      // computed properties
      (options.computed || (options.computed = {}))[key] = {
        get: descriptor.get,
        set: descriptor.set
      };
    }
  });
  (options.mixins || (options.mixins = [])).push({
    data: function data() {
      return collectDataFromConstructor(this, Component);
    }
  }); // decorate options

  var decorators = Component.__decorators__;

  if (decorators) {
    decorators.forEach(function (fn) {
      return fn(options);
    });
    delete Component.__decorators__;
  } // find super


  var superProto = Object.getPrototypeOf(Component.prototype);
  var Super = superProto instanceof Vue ? superProto.constructor : Vue;
  var Extended = Super.extend(options);
  forwardStaticMembers(Extended, Component, Super);

  if (reflectionIsSupported()) {
    copyReflectionMetadata(Extended, Component);
  }

  return Extended;
}
var shouldIgnore = {
  prototype: true,
  arguments: true,
  callee: true,
  caller: true
};

function forwardStaticMembers(Extended, Original, Super) {
  // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable
  Object.getOwnPropertyNames(Original).forEach(function (key) {
    // Skip the properties that should not be overwritten
    if (shouldIgnore[key]) {
      return;
    } // Some browsers does not allow reconfigure built-in properties


    var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);

    if (extendedDescriptor && !extendedDescriptor.configurable) {
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(Original, key); // If the user agent does not support `__proto__` or its family (IE <= 10),
    // the sub class properties may be inherited properties from the super class in TypeScript.
    // We need to exclude such properties to prevent to overwrite
    // the component options object which stored on the extended constructor (See #192).
    // If the value is a referenced value (object or function),
    // we can check equality of them and exclude it if they have the same reference.
    // If it is a primitive value, it will be forwarded for safety.

    if (!hasProto) {
      // Only `cid` is explicitly exluded from property forwarding
      // because we cannot detect whether it is a inherited property or not
      // on the no `__proto__` environment even though the property is reserved.
      if (key === 'cid') {
        return;
      }

      var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);

      if (!isPrimitive(descriptor.value) && superDescriptor && superDescriptor.value === descriptor.value) {
        return;
      }
    } // Warn if the users manually declare reserved properties

    Object.defineProperty(Extended, key, descriptor);
  });
}

function Component(options) {
  if (typeof options === 'function') {
    return componentFactory(options);
  }

  return function (Component) {
    return componentFactory(Component, options);
  };
}

Component.registerHooks = function registerHooks(keys) {
  $internalHooks.push.apply($internalHooks, _toConsumableArray(keys));
};

var __spreadArrays = (window && window.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Code copied from Vue/src/shared/util.js
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = function (str) { return str.replace(hyphenateRE, '-$1').toLowerCase(); };
/**
 * decorator of an event-emitter function
 * @param  event The name of the event
 * @return MethodDecorator
 */
function Emit(event) {
    return function (_target, propertyKey, descriptor) {
        var key = hyphenate(propertyKey);
        var original = descriptor.value;
        descriptor.value = function emitter() {
            var _this = this;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var emit = function (returnValue) {
                var emitName = event || key;
                if (returnValue === undefined) {
                    if (args.length === 0) {
                        _this.$emit(emitName);
                    }
                    else if (args.length === 1) {
                        _this.$emit(emitName, args[0]);
                    }
                    else {
                        _this.$emit.apply(_this, __spreadArrays([emitName], args));
                    }
                }
                else {
                    args.unshift(returnValue);
                    _this.$emit.apply(_this, __spreadArrays([emitName], args));
                }
            };
            var returnValue = original.apply(this, args);
            if (isPromise$1(returnValue)) {
                returnValue.then(emit);
            }
            else {
                emit(returnValue);
            }
            return returnValue;
        };
    };
}
function isPromise$1(obj) {
    return obj instanceof Promise || (obj && typeof obj.then === 'function');
}

/** @see {@link https://github.com/vuejs/vue-class-component/blob/master/src/reflect.ts} */
var reflectMetadataIsSupported = typeof Reflect !== 'undefined' && typeof Reflect.getMetadata !== 'undefined';
function applyMetadata(options, target, key) {
    if (reflectMetadataIsSupported) {
        if (!Array.isArray(options) &&
            typeof options !== 'function' &&
            !options.hasOwnProperty('type') &&
            typeof options.type === 'undefined') {
            var type = Reflect.getMetadata('design:type', target, key);
            if (type !== Object) {
                options.type = type;
            }
        }
    }
}

/**
 * decorator of model
 * @param  event event name
 * @param options options
 * @return PropertyDecorator
 */
function Model(event, options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
            componentOptions.model = { prop: k, event: event || k };
        })(target, key);
    };
}

/**
 * decorator of a prop
 * @param  options the options for the prop
 * @return PropertyDecorator | void
 */
function Prop(options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
        })(target, key);
    };
}

/**
 * decorator of a watch function
 * @param  path the path or the expression to observe
 * @param  WatchOption
 * @return MethodDecorator
 */
function Watch(path, options) {
    if (options === void 0) { options = {}; }
    var _a = options.deep, deep = _a === void 0 ? false : _a, _b = options.immediate, immediate = _b === void 0 ? false : _b;
    return createDecorator(function (componentOptions, handler) {
        if (typeof componentOptions.watch !== 'object') {
            componentOptions.watch = Object.create(null);
        }
        var watch = componentOptions.watch;
        if (typeof watch[path] === 'object' && !Array.isArray(watch[path])) {
            watch[path] = [watch[path]];
        }
        else if (typeof watch[path] === 'undefined') {
            watch[path] = [];
        }
        watch[path].push({ handler: handler, deep: deep, immediate: immediate });
    });
}

let XlTable = class XlTable extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "tableAttribute", void 0);
    _defineProperty$1(this, "attribute", void 0);
    _defineProperty$1(this, "events", void 0);
    _defineProperty$1(this, "sourceData", void 0);
    _defineProperty$1(this, "columns", void 0);
    _defineProperty$1(this, "load", void 0);
    _defineProperty$1(this, "selection", void 0);
    // checkbox:多选 radio:单选
    _defineProperty$1(this, "total", void 0);
    // 分页总条数
    _defineProperty$1(this, "currentPage", void 0);
    // 当前页
    _defineProperty$1(this, "pageSize", void 0);
    // 每页大小
    _defineProperty$1(this, "pageSizes", void 0);
    // 每页显示个数选择器的选项设置
    _defineProperty$1(this, "layout", void 0);
    // 每页显示个数选择器的选项设置
    _defineProperty$1(this, "pageAlign", void 0);
    // 分页对齐方式
    _defineProperty$1(this, "pageHidden", void 0);
    // 是否显示分页
    // model =======================
    _defineProperty$1(this, "value", void 0);
    // data=======================
    _defineProperty$1(this, "selectData", '');
  }
  // emit ========================
  //选择数据时回调
  handleSelectionChange(data) {
    return data;
  }
  //分页发生变化时
  handleCurrentChange(page) {
    this.$emit('update:currentPage', page.currentPage);
    this.$emit('update:pageSize', page.pageSize);
    return page;
  }
  /**
   * @description: 设置表格翻页的序号递增
   * @param {*} index
   * @return {*}
   */
  indexMethod(index) {
    return index + 1 + (this.currentPage - 1) * this.pageSize; // 返回表格序号
  }
};

__decorate([Prop({
  type: Object,
  default: () => {}
})], XlTable.prototype, "tableAttribute", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlTable.prototype, "attribute", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlTable.prototype, "events", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [];
  }
})], XlTable.prototype, "sourceData", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [];
  }
})], XlTable.prototype, "columns", void 0);
__decorate([Prop({
  type: Boolean,
  default: false
})], XlTable.prototype, "load", void 0);
__decorate([Prop({
  type: String,
  default: ''
})], XlTable.prototype, "selection", void 0);
__decorate([Prop({
  type: Number,
  default: 0
})], XlTable.prototype, "total", void 0);
__decorate([Prop({
  type: Number,
  default: 0
})], XlTable.prototype, "currentPage", void 0);
__decorate([Prop({
  type: Number,
  default: 10
})], XlTable.prototype, "pageSize", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [10, 20, 30, 40, 50, 100];
  }
})], XlTable.prototype, "pageSizes", void 0);
__decorate([Prop({
  type: String,
  default: 'sizes, prev, pager, next, jumper, ->, total'
})], XlTable.prototype, "layout", void 0);
__decorate([Prop({
  type: String,
  default: 'right'
})], XlTable.prototype, "pageAlign", void 0);
__decorate([Prop({
  type: Boolean,
  default: false
})], XlTable.prototype, "pageHidden", void 0);
__decorate([Model('change', {
  type: String
})], XlTable.prototype, "value", void 0);
__decorate([Emit('selection-change')], XlTable.prototype, "handleSelectionChange", null);
__decorate([Emit('change')], XlTable.prototype, "handleCurrentChange", null);
XlTable = __decorate([Component({
  name: 'XlTable',
  components: {}
})], XlTable);
var script$d = XlTable;

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

const isOldIE = typeof navigator !== 'undefined' &&
    /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());
function createInjector(context) {
    return (id, style) => addStyle(id, style);
}
let HEAD;
const styles = {};
function addStyle(id, css) {
    const group = isOldIE ? css.media || 'default' : id;
    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });
    if (!style.ids.has(id)) {
        style.ids.add(id);
        let code = css.source;
        if (css.map) {
            // https://developer.chrome.com/devtools/docs/javascript-debugging
            // this makes source maps inside style tags work properly in Chrome
            code += '\n/*# sourceURL=' + css.map.sources[0] + ' */';
            // http://stackoverflow.com/a/26603875
            code +=
                '\n/*# sourceMappingURL=data:application/json;base64,' +
                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +
                    ' */';
        }
        if (!style.element) {
            style.element = document.createElement('style');
            style.element.type = 'text/css';
            if (css.media)
                style.element.setAttribute('media', css.media);
            if (HEAD === undefined) {
                HEAD = document.head || document.getElementsByTagName('head')[0];
            }
            HEAD.appendChild(style.element);
        }
        if ('styleSheet' in style.element) {
            style.styles.push(code);
            style.element.styleSheet.cssText = style.styles
                .filter(Boolean)
                .join('\n');
        }
        else {
            const index = style.ids.size - 1;
            const textNode = document.createTextNode(code);
            const nodes = style.element.childNodes;
            if (nodes[index])
                style.element.removeChild(nodes[index]);
            if (nodes.length)
                style.element.insertBefore(textNode, nodes[index]);
            else
                style.element.appendChild(textNode);
        }
    }
}

/* script */
const __vue_script__$d = script$d;

/* template */
var __vue_render__$d = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_c("el-table", _vm._g(_vm._b({
    directives: [{
      name: "loading",
      rawName: "v-loading",
      value: _vm.load,
      expression: "load"
    }],
    ref: "myTable",
    staticStyle: {
      width: "100%"
    },
    attrs: {
      data: _vm.sourceData
    },
    on: {
      "selection-change": _vm.handleSelectionChange
    },
    scopedSlots: _vm._u([{
      key: "empty",
      fn: function () {
        return [!_vm.load ? _c("div", {
          staticClass: "py-4"
        }, [_c("div", {
          staticClass: "leading-7"
        }, [_vm._v("暂无相关数据")])]) : _vm._e()];
      },
      proxy: true
    }])
  }, "el-table", Object.assign({}, {
    stripe: false,
    rowKey: "id",
    border: true
  }, _vm.tableAttribute), false), Object.assign({}, {}, _vm.events)), [_vm.selection === "checkbox" ? _c("el-table-column", _vm._b({}, "el-table-column", {
    type: "selection",
    "reserve-selection": true,
    width: "55",
    align: "center"
  }, false)) : _vm._e(), _vm._v(" "), _vm.selection === "radio" ? _c("el-table-column", _vm._b({
    scopedSlots: _vm._u([{
      key: "default",
      fn: function (ref) {
        var row = ref.row;
        return [_c("el-radio", {
          attrs: {
            label: row
          },
          on: {
            change: _vm.handleSelectionChange
          },
          model: {
            value: _vm.selectData,
            callback: function ($$v) {
              _vm.selectData = $$v;
            },
            expression: "selectData"
          }
        })];
      }
    }], null, false, 2573376067)
  }, "el-table-column", {
    label: "选择",
    width: "55",
    align: "center"
  }, false)) : _vm._e(), _vm._v(" "), _vm._l(_vm.columns, function (item, index) {
    return [item.prop === "idx" ? _c("el-table-column", _vm._b({
      key: index + "index",
      attrs: {
        label: item.label,
        type: "index",
        index: _vm.indexMethod
      }
    }, "el-table-column", Object.assign({}, {
      width: 70,
      align: "center"
    }, item.attribute || {}), false)) : _c("el-table-column", _vm._b({
      key: index + "prop",
      attrs: {
        "column-key": item.prop,
        label: item.label,
        prop: item.prop
      },
      scopedSlots: _vm._u([item.customRender ? {
        key: "default",
        fn: function (scope) {
          return [_vm._t(item.customRender, null, {
            row: scope.row,
            index: scope.$index
          })];
        }
      } : null], null, true)
    }, "el-table-column", Object.assign({}, {}, item.attribute || {}), false))];
  })], 2), _vm._v(" "), _c("xl-pagination", {
    class: _vm.pageAlign,
    attrs: {
      page: _vm.currentPage,
      limit: _vm.pageSize,
      "page-sizes": _vm.pageSizes,
      layout: _vm.layout,
      total: _vm.total,
      hidden: _vm.pageHidden
    },
    on: {
      pagination: _vm.handleCurrentChange
    }
  })], 1);
};
var __vue_staticRenderFns__$d = [];
__vue_render__$d._withStripped = true;

/* style */
const __vue_inject_styles__$d = function (inject) {
  if (!inject) return;
  inject("data-v-51a21f86_0", {
    source: "[data-v-51a21f86] .el-radio .el-radio__label {\n  width: 0;\n  display: none;\n}\n[data-v-51a21f86] .el-table th.el-table__cell {\n  background: var(--header-table-cell);\n}\n.left[data-v-51a21f86] {\n  text-align: left;\n}\n.center[data-v-51a21f86] {\n  text-align: center;\n}\n.right[data-v-51a21f86] {\n  text-align: right;\n}\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["D:\\xl-ui2\\packages\\table\\src\\main.vue", "main.vue"],
      "names": [],
      "mappings": "AA4PA;EACA,QAAA;EACA,aAAA;AC3PA;AD+PA;EACA,oCAAA;AC7PA;ADkQA;EACA,gBAAA;AC/PA;ADiQA;EACA,kBAAA;AC9PA;ADgQA;EACA,iBAAA;AC7PA;;AAEA,mCAAmC",
      "file": "main.vue",
      "sourcesContent": ["<template>\r\n  <div>\r\n    <el-table\r\n      ref=\"myTable\"\r\n      v-loading=\"load\"\r\n      :data=\"sourceData\"\r\n      style=\"width: 100%\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      v-bind=\"{\r\n        ...{\r\n          stripe: false,\r\n          rowKey: 'id',\r\n          border: true\r\n        },\r\n        ...tableAttribute\r\n      }\"\r\n      v-on=\"{\r\n        ...{},\r\n        ...events\r\n      }\"\r\n    >\r\n      <!-- 选择 -->\r\n      <el-table-column\r\n        v-if=\"selection === 'checkbox'\"\r\n        v-bind=\"{\r\n          type: 'selection',\r\n          'reserve-selection': true,\r\n          width: '55',\r\n          align: 'center'\r\n        }\"\r\n      />\r\n      <el-table-column\r\n        v-if=\"selection === 'radio'\"\r\n        v-bind=\"{\r\n          label: '选择',\r\n          width: '55',\r\n          align: 'center'\r\n        }\"\r\n      >\r\n        <template #default=\"{ row }\">\r\n          <el-radio\r\n            v-model=\"selectData\"\r\n            :label=\"row\"\r\n            @change=\"handleSelectionChange\"\r\n          ></el-radio>\r\n        </template>\r\n      </el-table-column>\r\n      <template v-for=\"(item, index) of columns\">\r\n        <!-- 序号 -->\r\n        <el-table-column\r\n          v-if=\"item.prop === 'idx'\"\r\n          :key=\"index + 'index'\"\r\n          :label=\"item.label\"\r\n          type=\"index\"\r\n          :index=\"indexMethod\"\r\n          v-bind=\"{\r\n            ...{\r\n              width: 70,\r\n              align: 'center'\r\n            },\r\n            ...(item.attribute || {})\r\n          }\"\r\n        ></el-table-column>\r\n        <!-- 其它字段 -->\r\n        <el-table-column\r\n          v-else\r\n          :key=\"index + 'prop'\"\r\n          :column-key=\"item.prop\"\r\n          :label=\"item.label\"\r\n          :prop=\"item.prop\"\r\n          v-bind=\"{\r\n            ...{},\r\n            ...(item.attribute || {})\r\n          }\"\r\n        >\r\n          <template v-if=\"item.customRender\" #default=\"scope\">\r\n            <slot\r\n              :name=\"item.customRender\"\r\n              :row=\"scope.row\"\r\n              :index=\"scope.$index\"\r\n            >\r\n              <!-- --插槽内容-- -->\r\n            </slot>\r\n          </template>\r\n        </el-table-column>\r\n      </template>\r\n      <template #empty>\r\n        <div v-if=\"!load\" class=\"py-4\">\r\n          <div class=\"leading-7\">暂无相关数据</div>\r\n        </div>\r\n      </template>\r\n    </el-table>\r\n    <xl-pagination\r\n      :page=\"currentPage\"\r\n      :limit=\"pageSize\"\r\n      :page-sizes=\"pageSizes\"\r\n      :layout=\"layout\"\r\n      :total=\"total\"\r\n      :hidden=\"pageHidden\"\r\n      :class=\"pageAlign\"\r\n      @pagination=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Emit, Model, Prop, Vue } from 'vue-property-decorator'\r\n\r\ninterface columnType {\r\n  label: string\r\n  prop: string\r\n  customRender?: string\r\n  attribute?: object\r\n  events?: object\r\n}\r\n\r\n@Component({\r\n  name: 'XlTable',\r\n  components: {}\r\n})\r\nexport default class XlTable extends Vue {\r\n  // prop ========================\r\n  @Prop({ type: Object, default: () => {} })\r\n  readonly tableAttribute!: object\r\n\r\n  @Prop({\r\n    type: Object,\r\n    default() {\r\n      return {}\r\n    }\r\n  })\r\n  readonly attribute!: object\r\n\r\n  @Prop({\r\n    type: Object,\r\n    default() {\r\n      return {}\r\n    }\r\n  })\r\n  readonly events!: object\r\n\r\n  @Prop({\r\n    type: Array,\r\n    default() {\r\n      return []\r\n    }\r\n  })\r\n  readonly sourceData!: any[]\r\n\r\n  @Prop({\r\n    type: Array,\r\n    default() {\r\n      return []\r\n    }\r\n  })\r\n  readonly columns!: columnType[]\r\n\r\n  @Prop({\r\n    type: Boolean,\r\n    default: false\r\n  })\r\n  readonly load!: boolean\r\n\r\n  @Prop({\r\n    type: String,\r\n    default: ''\r\n  })\r\n  readonly selection!: string // checkbox:多选 radio:单选\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default: 0\r\n  })\r\n  readonly total!: number // 分页总条数\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default: 0\r\n  })\r\n  readonly currentPage!: number // 当前页\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default: 10\r\n  })\r\n  readonly pageSize!: number // 每页大小\r\n\r\n  @Prop({\r\n    type: Array,\r\n    default() {\r\n      return [10, 20, 30, 40, 50, 100]\r\n    }\r\n  })\r\n  readonly pageSizes!: number[] // 每页显示个数选择器的选项设置\r\n\r\n  @Prop({\r\n    type: String,\r\n    default: 'sizes, prev, pager, next, jumper, ->, total'\r\n  })\r\n  readonly layout!: string // 每页显示个数选择器的选项设置\r\n\r\n  @Prop({\r\n    type: String,\r\n    default: 'right'\r\n  })\r\n  readonly pageAlign!: string // 分页对齐方式\r\n\r\n  @Prop({\r\n    type: Boolean,\r\n    default: false\r\n  })\r\n  readonly pageHidden!: boolean // 是否显示分页\r\n\r\n  // model =======================\r\n  @Model('change', { type: String }) readonly value!: string\r\n\r\n  // emit ========================\r\n\r\n  //选择数据时回调\r\n  @Emit('selection-change')\r\n  public handleSelectionChange(data: object | object[]): object | object[] {\r\n    return data\r\n  }\r\n\r\n  //分页发生变化时\r\n  @Emit('change')\r\n  public handleCurrentChange(page: {\r\n    currentPage: number\r\n    pageSize: number\r\n  }): object {\r\n    this.$emit('update:currentPage', page.currentPage)\r\n    this.$emit('update:pageSize', page.pageSize)\r\n    return page\r\n  }\r\n\r\n  // data=======================\r\n  selectData: string | object | Array<object> = ''\r\n\r\n  /**\r\n   * @description: 设置表格翻页的序号递增\r\n   * @param {*} index\r\n   * @return {*}\r\n   */\r\n  public indexMethod(index: number): number {\r\n    return index + 1 + (this.currentPage - 1) * this.pageSize // 返回表格序号\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n::v-deep {\r\n  .el-radio {\r\n    & .el-radio__label {\r\n      width: 0;\r\n      display: none;\r\n    }\r\n  }\r\n  .el-table th {\r\n    &.el-table__cell {\r\n      background: var(--header-table-cell);\r\n    }\r\n  }\r\n}\r\n\r\n.left {\r\n  text-align: left;\r\n}\r\n.center {\r\n  text-align: center;\r\n}\r\n.right {\r\n  text-align: right;\r\n}\r\n</style>\r\n", "::v-deep .el-radio .el-radio__label {\n  width: 0;\n  display: none;\n}\n::v-deep .el-table th.el-table__cell {\n  background: var(--header-table-cell);\n}\n\n.left {\n  text-align: left;\n}\n\n.center {\n  text-align: center;\n}\n\n.right {\n  text-align: right;\n}\n\n/*# sourceMappingURL=main.vue.map */"]
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$d = "data-v-51a21f86";
/* module identifier */
const __vue_module_identifier__$d = undefined;
/* functional template */
const __vue_is_functional_template__$d = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$d = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$d,
  staticRenderFns: __vue_staticRenderFns__$d
}, __vue_inject_styles__$d, __vue_script__$d, __vue_scope_id__$d, __vue_is_functional_template__$d, __vue_module_identifier__$d, false, createInjector, undefined, undefined);

__vue_component__$d.install = Vue => {
  Vue.component(__vue_component__$d.extendOptions.name, __vue_component__$d);
};

const math = Math;
math.easeInOutQuad = function (t, b, c, d) {
  t /= d / 2;
  if (t < 1) {
    return c / 2 * t * t + b;
  }
  t--;
  return -c / 2 * (t * (t - 2) - 1) + b;
};
// requestAnimationFrame for Smart Animating http://goo.gl/sx5sts
const requestAnimFrame = function () {
  const wind = window;
  return wind.requestAnimationFrame || wind.webkitRequestAnimationFrame || wind.mozRequestAnimationFrame || function (callback) {
    wind.setTimeout(callback, 1000 / 60);
  };
}();
/**
 * Because it's so fucking difficult to detect the scrolling element, just move them all
 * @param {number} amount
 */
function move(amount) {
  document.documentElement.scrollTop = amount;
  document.body.parentNode.scrollTop = amount;
  document.body.scrollTop = amount;
}
function position() {
  return document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop;
}
/**
 * @param {number} to
 * @param {number} duration
 * @param {Function} callback
 */
const scrollTo = (to, duration, callback) => {
  const start = position();
  const change = to - start;
  const increment = 20;
  let currentTime = 0;
  duration = typeof duration === 'undefined' ? 500 : duration;
  const animateScroll = function () {
    // increment the time
    currentTime += increment;
    // find the value with the quadratic in-out easing function
    const val = math.easeInOutQuad(currentTime, start, change, duration);
    // move the document.body
    move(val);
    // do the animation unless its over
    if (currentTime < duration) {
      requestAnimFrame(animateScroll);
    } else {
      if (callback && typeof callback === 'function') {
        // the animation is done so lets callback
        callback();
      }
    }
  };
  animateScroll();
};

let XlPagination = class XlPagination extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "total", void 0);
    _defineProperty$1(this, "page", void 0);
    _defineProperty$1(this, "limit", void 0);
    _defineProperty$1(this, "pageSizes", void 0);
    _defineProperty$1(this, "pagerCount", void 0);
    _defineProperty$1(this, "layout", void 0);
    _defineProperty$1(this, "background", void 0);
    _defineProperty$1(this, "autoScroll", void 0);
    _defineProperty$1(this, "hidden", void 0);
  }
  // =======================
  // emit ========================
  handleSizeChange(val) {
    let page;
    if (this.page * val > this.total) {
      page = 1;
    } else {
      page = this.page;
    }
    if (this.autoScroll) {
      scrollTo(0, 800);
    }
    return {
      currentPage: page,
      pageSize: val
    };
  }
  handleCurrentChange(val) {
    if (this.autoScroll) {
      scrollTo(0, 800);
    }
    return {
      currentPage: val,
      pageSize: this.limit
    };
  }
};
__decorate([Prop({
  type: Number,
  default: 0
})], XlPagination.prototype, "total", void 0);
__decorate([Prop({
  type: Number,
  default: 1
})], XlPagination.prototype, "page", void 0);
__decorate([Prop({
  type: Number,
  default: 20
})], XlPagination.prototype, "limit", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [10, 20, 30, 50];
  }
})], XlPagination.prototype, "pageSizes", void 0);
__decorate([Prop({
  type: Number,
  default() {
    return document.body.clientWidth < 992 ? 5 : 7;
  }
})], XlPagination.prototype, "pagerCount", void 0);
__decorate([Prop({
  type: String,
  default: 'total, sizes, prev, pager, next, jumper'
})], XlPagination.prototype, "layout", void 0);
__decorate([Prop({
  type: Boolean,
  default: true
})], XlPagination.prototype, "background", void 0);
__decorate([Prop({
  type: Boolean,
  default: true
})], XlPagination.prototype, "autoScroll", void 0);
__decorate([Prop({
  type: Boolean,
  default: false
})], XlPagination.prototype, "hidden", void 0);
__decorate([Emit('pagination')], XlPagination.prototype, "handleSizeChange", null);
__decorate([Emit('pagination')], XlPagination.prototype, "handleCurrentChange", null);
XlPagination = __decorate([Component({
  name: 'XlPagination',
  components: {}
})], XlPagination);
var script$c = XlPagination;

/* script */
const __vue_script__$c = script$c;

/* template */
var __vue_render__$c = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return !_vm.hidden ? _c("div", {
    staticClass: "pagination-container"
  }, [_c("el-pagination", _vm._b({
    attrs: {
      background: _vm.background,
      "current-page": _vm.page,
      "page-size": _vm.limit,
      layout: _vm.layout,
      "page-sizes": _vm.pageSizes,
      "pager-count": _vm.pagerCount,
      total: _vm.total
    },
    on: {
      "size-change": _vm.handleSizeChange,
      "current-change": _vm.handleCurrentChange
    }
  }, "el-pagination", _vm.$attrs, false))], 1) : _vm._e();
};
var __vue_staticRenderFns__$c = [];
__vue_render__$c._withStripped = true;

/* style */
const __vue_inject_styles__$c = function (inject) {
  if (!inject) return;
  inject("data-v-8f84943a_0", {
    source: ".pagination-container[data-v-8f84943a] {\n  background: #fff;\n  padding: 32px 16px;\n}\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["D:\\xl-ui2\\packages\\pagination\\src\\main.vue", "main.vue"],
      "names": [],
      "mappings": "AAmHA;EACA,gBAAA;EACA,kBAAA;AClHA;;AAEA,mCAAmC",
      "file": "main.vue",
      "sourcesContent": ["<template>\r\n  <div v-if=\"!hidden\" class=\"pagination-container\">\r\n    <el-pagination\r\n      :background=\"background\"\r\n      :current-page=\"page\"\r\n      :page-size=\"limit\"\r\n      :layout=\"layout\"\r\n      :page-sizes=\"pageSizes\"\r\n      :pager-count=\"pagerCount\"\r\n      :total=\"total\"\r\n      v-bind=\"$attrs\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator'\r\nimport { scrollTo } from '../../../src/utils/scrollTo'\r\n\r\n@Component({\r\n  name: 'XlPagination',\r\n  components: {}\r\n})\r\nexport default class XlPagination extends Vue {\r\n  // prop ========================\r\n  @Prop({\r\n    type: Number,\r\n    default: 0\r\n  })\r\n  readonly total!: number\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default: 1\r\n  })\r\n  readonly page!: number\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default: 20\r\n  })\r\n  readonly limit!: number\r\n\r\n  @Prop({\r\n    type: Array,\r\n    default() {\r\n      return [10, 20, 30, 50]\r\n    }\r\n  })\r\n  readonly pageSizes!: number[]\r\n\r\n  @Prop({\r\n    type: Number,\r\n    default() {\r\n      return document.body.clientWidth < 992 ? 5 : 7\r\n    }\r\n  })\r\n  readonly pagerCount!: number\r\n\r\n  @Prop({\r\n    type: String,\r\n    default: 'total, sizes, prev, pager, next, jumper'\r\n  })\r\n  readonly layout!: string\r\n\r\n  @Prop({\r\n    type: Boolean,\r\n    default: true\r\n  })\r\n  readonly background!: boolean\r\n\r\n  @Prop({\r\n    type: Boolean,\r\n    default: true\r\n  })\r\n  readonly autoScroll!: boolean\r\n\r\n  @Prop({\r\n    type: Boolean,\r\n    default: false\r\n  })\r\n  readonly hidden!: boolean\r\n\r\n  // =======================\r\n\r\n  // emit ========================\r\n\r\n  @Emit('pagination')\r\n  public handleSizeChange(val: number) {\r\n    let page\r\n    if (this.page * val > this.total) {\r\n      page = 1\r\n    } else {\r\n      page = this.page\r\n    }\r\n    if (this.autoScroll) {\r\n      scrollTo(0, 800)\r\n    }\r\n\r\n    return { currentPage: page, pageSize: val }\r\n  }\r\n  @Emit('pagination')\r\n  public handleCurrentChange(val: number) {\r\n    if (this.autoScroll) {\r\n      scrollTo(0, 800)\r\n    }\r\n\r\n    return { currentPage: val, pageSize: this.limit }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.pagination-container {\r\n  background: #fff;\r\n  padding: 32px 16px;\r\n}\r\n</style>\r\n", ".pagination-container {\n  background: #fff;\n  padding: 32px 16px;\n}\n\n/*# sourceMappingURL=main.vue.map */"]
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$c = "data-v-8f84943a";
/* module identifier */
const __vue_module_identifier__$c = undefined;
/* functional template */
const __vue_is_functional_template__$c = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$c = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$c,
  staticRenderFns: __vue_staticRenderFns__$c
}, __vue_inject_styles__$c, __vue_script__$c, __vue_scope_id__$c, __vue_is_functional_template__$c, __vue_module_identifier__$c, false, createInjector, undefined, undefined);

__vue_component__$c.install = Vue => {
  Vue.component(__vue_component__$c.extendOptions.name, __vue_component__$c);
};

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function getAugmentedNamespace(n) {
  if (n.__esModule) return n;
  var f = n.default;
	if (typeof f == "function") {
		var a = function a () {
			if (this instanceof a) {
        return Reflect.construct(f, arguments, this.constructor);
			}
			return f.apply(this, arguments);
		};
		a.prototype = f.prototype;
  } else a = {};
  Object.defineProperty(a, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$i =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || commonjsGlobal || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$9 = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$8 = fails$9;

// Detect IE8's incomplete defineProperty implementation
var descriptors$1 = !fails$8(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});

var fails$7 = fails$9;

var functionBindNative = !fails$7(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$1 = functionBindNative;

var call$4 = Function.prototype.call;

var functionCall = NATIVE_BIND$1 ? call$4.bind(call$4) : function () {
  return call$4.apply(call$4, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$2 && !$propertyIsEnumerable$1.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$2(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable$1;

var createPropertyDescriptor$2 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND = functionBindNative;

var FunctionPrototype$1 = Function.prototype;
var call$3 = FunctionPrototype$1.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype$1.bind.bind(call$3, call$3);

var functionUncurryThis = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$3.apply(fn, arguments);
  };
};

var uncurryThis$8 = functionUncurryThis;

var toString$5 = uncurryThis$8({}.toString);
var stringSlice$1 = uncurryThis$8(''.slice);

var classofRaw = function (it) {
  return stringSlice$1(toString$5(it), 8, -1);
};

var uncurryThis$7 = functionUncurryThis;
var fails$6 = fails$9;
var classof$1 = classofRaw;

var $Object$2 = Object;
var split = uncurryThis$7(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$6(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$2('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof$1(it) === 'String' ? split(it, '') : $Object$2(it);
} : $Object$2;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$2 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$1 = isNullOrUndefined$2;

var $TypeError$7 = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$2 = function (it) {
  if (isNullOrUndefined$1(it)) throw $TypeError$7("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = indexedObject;
var requireObjectCoercible$1 = requireObjectCoercible$2;

var toIndexedObject$3 = function (it) {
  return IndexedObject(requireObjectCoercible$1(it));
};

var documentAll$2 = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;

var documentAll_1 = {
  all: documentAll$2,
  IS_HTMLDDA: IS_HTMLDDA
};

var $documentAll$1 = documentAll_1;

var documentAll$1 = $documentAll$1.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable$a = $documentAll$1.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$1;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$9 = isCallable$a;
var $documentAll = documentAll_1;

var documentAll = $documentAll.all;

var isObject$b = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable$9(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable$9(it);
};

var global$h = global$i;
var isCallable$8 = isCallable$a;

var aFunction$1 = function (argument) {
  return isCallable$8(argument) ? argument : undefined;
};

var getBuiltIn$2 = function (namespace, method) {
  return arguments.length < 2 ? aFunction$1(global$h[namespace]) : global$h[namespace] && global$h[namespace][method];
};

var uncurryThis$6 = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$6({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$g = global$i;
var userAgent = engineUserAgent;

var process$1 = global$g.process;
var Deno = global$g.Deno;
var versions = process$1 && process$1.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = engineV8Version;
var fails$5 = fails$9;
var global$f = global$i;

var $String$3 = global$f.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$5(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$3(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL$1 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$1
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var getBuiltIn$1 = getBuiltIn$2;
var isCallable$7 = isCallable$a;
var isPrototypeOf = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var $Object$1 = Object;

var isSymbol$3 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$1('Symbol');
  return isCallable$7($Symbol) && isPrototypeOf($Symbol.prototype, $Object$1(it));
};

var $String$2 = String;

var tryToString$1 = function (argument) {
  try {
    return $String$2(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$6 = isCallable$a;
var tryToString = tryToString$1;

var $TypeError$6 = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$1 = function (argument) {
  if (isCallable$6(argument)) return argument;
  throw $TypeError$6(tryToString(argument) + ' is not a function');
};

var aCallable = aCallable$1;
var isNullOrUndefined = isNullOrUndefined$2;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$1 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};

var call$2 = functionCall;
var isCallable$5 = isCallable$a;
var isObject$a = isObject$b;

var $TypeError$5 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$5(fn = input.toString) && !isObject$a(val = call$2(fn, input))) return val;
  if (isCallable$5(fn = input.valueOf) && !isObject$a(val = call$2(fn, input))) return val;
  if (pref !== 'string' && isCallable$5(fn = input.toString) && !isObject$a(val = call$2(fn, input))) return val;
  throw $TypeError$5("Can't convert object to primitive value");
};

var shared$6 = {exports: {}};

var global$e = global$i;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$3 = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$3(global$e, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$e[key] = value;
  } return value;
};

var global$d = global$i;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED$1 = '__core-js_shared__';
var store$5 = global$d[SHARED$1] || defineGlobalProperty$2(SHARED$1, {});

var sharedStore = store$5;

var store$4 = sharedStore;

(shared$6.exports = function (key, value) {
  return store$4[key] || (store$4[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.32.2',
  mode: 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.32.2/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var sharedExports = shared$6.exports;

var requireObjectCoercible = requireObjectCoercible$2;

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$4 = function (argument) {
  return $Object(requireObjectCoercible(argument));
};

var uncurryThis$5 = functionUncurryThis;
var toObject$3 = toObject$4;

var hasOwnProperty$2 = uncurryThis$5({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty$2(toObject$3(it), key);
};

var uncurryThis$4 = functionUncurryThis;

var id$2 = 0;
var postfix = Math.random();
var toString$4 = uncurryThis$4(1.0.toString);

var uid$5 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$4(++id$2 + postfix, 36);
};

var global$c = global$i;
var shared$5 = sharedExports;
var hasOwn$6 = hasOwnProperty_1;
var uid$4 = uid$5;
var NATIVE_SYMBOL = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var Symbol$2 = global$c.Symbol;
var WellKnownSymbolsStore = shared$5('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$2['for'] || Symbol$2 : Symbol$2 && Symbol$2.withoutSetter || uid$4;

var wellKnownSymbol$1 = function (name) {
  if (!hasOwn$6(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn$6(Symbol$2, name)
      ? Symbol$2[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var call$1 = functionCall;
var isObject$9 = isObject$b;
var isSymbol$2 = isSymbol$3;
var getMethod = getMethod$1;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol = wellKnownSymbol$1;

var $TypeError$4 = TypeError;
var TO_PRIMITIVE$1 = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$5 = function (input, pref) {
  if (!isObject$9(input) || isSymbol$2(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE$1);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$1(exoticToPrim, input, pref);
    if (!isObject$9(result) || isSymbol$2(result)) return result;
    throw $TypeError$4("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive$4 = toPrimitive$5;
var isSymbol$1 = isSymbol$3;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$3 = function (argument) {
  var key = toPrimitive$4(argument, 'string');
  return isSymbol$1(key) ? key : key + '';
};

var global$b = global$i;
var isObject$8 = isObject$b;

var document$1 = global$b.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$8(document$1) && isObject$8(document$1.createElement);

var documentCreateElement = function (it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};

var DESCRIPTORS$8 = descriptors$1;
var fails$4 = fails$9;
var createElement = documentCreateElement;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$8 && !fails$4(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});

var DESCRIPTORS$7 = descriptors$1;
var call = functionCall;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var createPropertyDescriptor$1 = createPropertyDescriptor$2;
var toIndexedObject$2 = toIndexedObject$3;
var toPropertyKey$2 = toPropertyKey$3;
var hasOwn$5 = hasOwnProperty_1;
var IE8_DOM_DEFINE$3 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$7 ? $getOwnPropertyDescriptor$2 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$2(O);
  P = toPropertyKey$2(P);
  if (IE8_DOM_DEFINE$3) try {
    return $getOwnPropertyDescriptor$2(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$5(O, P)) return createPropertyDescriptor$1(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$6 = descriptors$1;
var fails$3 = fails$9;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$6 && fails$3(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});

var isObject$7 = isObject$b;

var $String$1 = String;
var $TypeError$3 = TypeError;

// `Assert: Type(argument) is Object`
var anObject$6 = function (argument) {
  if (isObject$7(argument)) return argument;
  throw $TypeError$3($String$1(argument) + ' is not an object');
};

var DESCRIPTORS$5 = descriptors$1;
var IE8_DOM_DEFINE$2 = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var anObject$5 = anObject$6;
var toPropertyKey$1 = toPropertyKey$3;

var $TypeError$2 = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty$1 = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$5 ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject$5(O);
  P = toPropertyKey$1(P);
  anObject$5(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor$1(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty$1(O, P, Attributes);
} : $defineProperty$1 : function defineProperty(O, P, Attributes) {
  anObject$5(O);
  P = toPropertyKey$1(P);
  anObject$5(Attributes);
  if (IE8_DOM_DEFINE$2) try {
    return $defineProperty$1(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$2('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$4 = descriptors$1;
var definePropertyModule$2 = objectDefineProperty;
var createPropertyDescriptor = createPropertyDescriptor$2;

var createNonEnumerableProperty$2 = DESCRIPTORS$4 ? function (object, key, value) {
  return definePropertyModule$2.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$2 = {exports: {}};

var DESCRIPTORS$3 = descriptors$1;
var hasOwn$4 = hasOwnProperty_1;

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$3 && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$4(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$3 || (DESCRIPTORS$3 && getDescriptor(FunctionPrototype, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$3 = functionUncurryThis;
var isCallable$4 = isCallable$a;
var store$3 = sharedStore;

var functionToString = uncurryThis$3(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$4(store$3.inspectSource)) {
  store$3.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$1 = store$3.inspectSource;

var global$a = global$i;
var isCallable$3 = isCallable$a;

var WeakMap$2 = global$a.WeakMap;

var weakMapBasicDetection = isCallable$3(WeakMap$2) && /native code/.test(String(WeakMap$2));

var shared$4 = sharedExports;
var uid$3 = uid$5;

var keys = shared$4('keys');

var sharedKey$1 = function (key) {
  return keys[key] || (keys[key] = uid$3(key));
};

var hiddenKeys$3 = {};

var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$9 = global$i;
var isObject$6 = isObject$b;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$2;
var hasOwn$3 = hasOwnProperty_1;
var shared$3 = sharedStore;
var sharedKey = sharedKey$1;
var hiddenKeys$2 = hiddenKeys$3;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global$9.TypeError;
var WeakMap$1 = global$9.WeakMap;
var set, get, has$7;

var enforce = function (it) {
  return has$7(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject$6(it) || (state = get(it)).type !== TYPE) {
      throw TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared$3.state) {
  var store$2 = shared$3.state || (shared$3.state = new WeakMap$1());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store$2.get = store$2.get;
  store$2.has = store$2.has;
  store$2.set = store$2.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store$2.has(it)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store$2.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store$2.get(it) || {};
  };
  has$7 = function (it) {
    return store$2.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys$2[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn$3(it, STATE)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$1(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$3(it, STATE) ? it[STATE] : {};
  };
  has$7 = function (it) {
    return hasOwn$3(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has$7,
  enforce: enforce,
  getterFor: getterFor
};

var uncurryThis$2 = functionUncurryThis;
var fails$2 = fails$9;
var isCallable$2 = isCallable$a;
var hasOwn$2 = hasOwnProperty_1;
var DESCRIPTORS$2 = descriptors$1;
var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule = internalState;

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$2 = Object.defineProperty;
var stringSlice = uncurryThis$2(''.slice);
var replace = uncurryThis$2(''.replace);
var join = uncurryThis$2([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS$2 && !fails$2(function () {
  return defineProperty$2(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$1 = makeBuiltIn$2.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$2(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS$2) defineProperty$2(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$2(options, 'arity') && value.length !== options.arity) {
    defineProperty$2(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$2(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$2) defineProperty$2(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn$2(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$1(function toString() {
  return isCallable$2(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');

var makeBuiltInExports = makeBuiltIn$2.exports;

var isCallable$1 = isCallable$a;
var definePropertyModule$1 = objectDefineProperty;
var makeBuiltIn = makeBuiltInExports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$1 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$1(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$1.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var objectGetOwnPropertyNames = {};

var ceil$1 = Math.ceil;
var floor$1 = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor$1 : ceil$1)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$2 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$1 = toIntegerOrInfinity$2;

var max$1 = Math.max;
var min$3 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$2 = function (index, length) {
  var integer = toIntegerOrInfinity$1(index);
  return integer < 0 ? max$1(integer + length, 0) : min$3(integer, length);
};

var toIntegerOrInfinity = toIntegerOrInfinity$2;

var min$2 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$2 = function (argument) {
  return argument > 0 ? min$2(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength$1 = toLength$2;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$2 = function (obj) {
  return toLength$1(obj.length);
};

var toIndexedObject$1 = toIndexedObject$3;
var toAbsoluteIndex$1 = toAbsoluteIndex$2;
var lengthOfArrayLike$1 = lengthOfArrayLike$2;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$1($this);
    var length = lengthOfArrayLike$1(O);
    var index = toAbsoluteIndex$1(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

var uncurryThis$1 = functionUncurryThis;
var hasOwn$1 = hasOwnProperty_1;
var toIndexedObject = toIndexedObject$3;
var indexOf = arrayIncludes.indexOf;
var hiddenKeys$1 = hiddenKeys$3;

var push = uncurryThis$1([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$1(hiddenKeys$1, key) && hasOwn$1(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$1(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$3 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys = objectKeysInternal;
var enumBugKeys$2 = enumBugKeys$3;

var hiddenKeys = enumBugKeys$2.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn = getBuiltIn$2;
var uncurryThis = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var anObject$4 = anObject$6;

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject$4(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn = hasOwnProperty_1;
var ownKeys = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule = objectDefineProperty;

var copyConstructorProperties$1 = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$1 = fails$9;
var isCallable = isCallable$a;

var replacement = /#|\.prototype\./;

var isForced$1 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails$1(detection)
    : !!detection;
};

var normalize = isForced$1.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$1.data = {};
var NATIVE = isForced$1.NATIVE = 'N';
var POLYFILL = isForced$1.POLYFILL = 'P';

var isForced_1 = isForced$1;

var global$8 = global$i;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty = createNonEnumerableProperty$2;
var defineBuiltIn = defineBuiltIn$1;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties = copyConstructorProperties$1;
var isForced = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export$1 = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$8;
  } else if (STATIC) {
    target = global$8[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global$8[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$1(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};

var classof = classofRaw;

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
var isArray$4 = Array.isArray || function isArray(argument) {
  return classof(argument) === 'Array';
};

var DESCRIPTORS$1 = descriptors$1;
var isArray$3 = isArray$4;

var $TypeError$1 = TypeError;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Safari < 13 does not throw an error in this case
var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS$1 && !function () {
  // makes no sense without proper strict mode support
  if (this !== undefined) return true;
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty([], 'length', { writable: false }).length = 1;
  } catch (error) {
    return error instanceof TypeError;
  }
}();

var arraySetLength = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {
  if (isArray$3(O) && !getOwnPropertyDescriptor(O, 'length').writable) {
    throw $TypeError$1('Cannot set read only .length');
  } return O.length = length;
} : function (O, length) {
  return O.length = length;
};

var $TypeError = TypeError;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

var doesNotExceedSafeInteger$1 = function (it) {
  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');
  return it;
};

var $ = _export$1;
var toObject$2 = toObject$4;
var lengthOfArrayLike = lengthOfArrayLike$2;
var setArrayLength = arraySetLength;
var doesNotExceedSafeInteger = doesNotExceedSafeInteger$1;
var fails = fails$9;

var INCORRECT_TO_LENGTH = fails(function () {
  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;
});

// V8 and Safari <= 15.4, FF < 23 throws InternalError
// https://bugs.chromium.org/p/v8/issues/detail?id=12681
var properErrorOnNonWritableLength = function () {
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty([], 'length', { writable: false }).push();
  } catch (error) {
    return error instanceof TypeError;
  }
};

var FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();

// `Array.prototype.push` method
// https://tc39.es/ecma262/#sec-array.prototype.push
$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  push: function push(item) {
    var O = toObject$2(this);
    var len = lengthOfArrayLike(O);
    var argCount = arguments.length;
    doesNotExceedSafeInteger(len + argCount);
    for (var i = 0; i < argCount; i++) {
      O[len] = arguments[i];
      len++;
    }
    setArrayLength(O, len);
    return len;
  }
});

var global$7 = (typeof global !== "undefined" ? global :
  typeof self !== "undefined" ? self :
  typeof window !== "undefined" ? window : {});

function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}

// utils is a library of generic helper functions non-specific to axios

const {toString: toString$3} = Object.prototype;
const {getPrototypeOf: getPrototypeOf$1} = Object;

const kindOf = (cache => thing => {
    const str = toString$3.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(Object.create(null));

const kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type
};

const typeOfTest = type => thing => typeof thing === type;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 *
 * @returns {boolean} True if value is an Array, otherwise false
 */
const {isArray: isArray$2} = Array;

/**
 * Determine if a value is undefined
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if the value is undefined, otherwise false
 */
const isUndefined = typeOfTest('undefined');

/**
 * Determine if a value is a Buffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer$1(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
const isArrayBuffer = kindOfTest('ArrayBuffer');


/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  let result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a String, otherwise false
 */
const isString$1 = typeOfTest('string');

/**
 * Determine if a value is a Function
 *
 * @param {*} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
const isFunction = typeOfTest('function');

/**
 * Determine if a value is a Number
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Number, otherwise false
 */
const isNumber = typeOfTest('number');

/**
 * Determine if a value is an Object
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an Object, otherwise false
 */
const isObject$5 = (thing) => thing !== null && typeof thing === 'object';

/**
 * Determine if a value is a Boolean
 *
 * @param {*} thing The value to test
 * @returns {boolean} True if value is a Boolean, otherwise false
 */
const isBoolean = thing => thing === true || thing === false;

/**
 * Determine if a value is a plain Object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a plain Object, otherwise false
 */
const isPlainObject = (val) => {
  if (kindOf(val) !== 'object') {
    return false;
  }

  const prototype = getPrototypeOf$1(val);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
};

/**
 * Determine if a value is a Date
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Date, otherwise false
 */
const isDate = kindOfTest('Date');

/**
 * Determine if a value is a File
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
const isFile = kindOfTest('File');

/**
 * Determine if a value is a Blob
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Blob, otherwise false
 */
const isBlob = kindOfTest('Blob');

/**
 * Determine if a value is a FileList
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
const isFileList = kindOfTest('FileList');

/**
 * Determine if a value is a Stream
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Stream, otherwise false
 */
const isStream = (val) => isObject$5(val) && isFunction(val.pipe);

/**
 * Determine if a value is a FormData
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an FormData, otherwise false
 */
const isFormData = (thing) => {
  let kind;
  return thing && (
    (typeof FormData === 'function' && thing instanceof FormData) || (
      isFunction(thing.append) && (
        (kind = kindOf(thing)) === 'formdata' ||
        // detect form-data instance
        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')
      )
    )
  )
};

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
const isURLSearchParams = kindOfTest('URLSearchParams');

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 *
 * @returns {String} The String freed of excess whitespace
 */
const trim$1 = (str) => str.trim ?
  str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 *
 * @param {Boolean} [allOwnKeys = false]
 * @returns {any}
 */
function forEach(obj, fn, {allOwnKeys = false} = {}) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  let i;
  let l;

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray$2(obj)) {
    // Iterate over array values
    for (i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys.length;
    let key;

    for (i = 0; i < len; i++) {
      key = keys[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}

function findKey(obj, key) {
  key = key.toLowerCase();
  const keys = Object.keys(obj);
  let i = keys.length;
  let _key;
  while (i-- > 0) {
    _key = keys[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}

const _global$1 = (() => {
  /*eslint no-undef:0*/
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : (typeof window !== 'undefined' ? window : global$7)
})();

const isContextDefined = (context) => !isUndefined(context) && context !== _global$1;

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 *
 * @returns {Object} Result of all merge properties
 */
function merge$1(/* obj1, obj2, obj3, ... */) {
  const {caseless} = isContextDefined(this) && this || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge$1(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge$1({}, val);
    } else if (isArray$2(val)) {
      result[targetKey] = val.slice();
    } else {
      result[targetKey] = val;
    }
  };

  for (let i = 0, l = arguments.length; i < l; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 *
 * @param {Boolean} [allOwnKeys]
 * @returns {Object} The resulting value of object a
 */
const extend = (a, b, thisArg, {allOwnKeys}= {}) => {
  forEach(b, (val, key) => {
    if (thisArg && isFunction(val)) {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  }, {allOwnKeys});
  return a;
};

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 *
 * @returns {string} content value without BOM
 */
const stripBOM = (content) => {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
};

/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 *
 * @returns {void}
 */
const inherits = (constructor, superConstructor, props, descriptors) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, 'super', {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
};

/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function|Boolean} [filter]
 * @param {Function} [propFilter]
 *
 * @returns {Object}
 */
const toFlatObject = (sourceObj, destObj, filter, propFilter) => {
  let props;
  let i;
  let prop;
  const merged = {};

  destObj = destObj || {};
  // eslint-disable-next-line no-eq-null,eqeqeq
  if (sourceObj == null) return destObj;

  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter !== false && getPrototypeOf$1(sourceObj);
  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);

  return destObj;
};

/**
 * Determines whether a string ends with the characters of a specified string
 *
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 *
 * @returns {boolean}
 */
const endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === undefined || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};


/**
 * Returns new array from array like object or null if failed
 *
 * @param {*} [thing]
 *
 * @returns {?Array}
 */
const toArray = (thing) => {
  if (!thing) return null;
  if (isArray$2(thing)) return thing;
  let i = thing.length;
  if (!isNumber(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
};

/**
 * Checking if the Uint8Array exists and if it does, it returns a function that checks if the
 * thing passed in is an instance of Uint8Array
 *
 * @param {TypedArray}
 *
 * @returns {Array}
 */
// eslint-disable-next-line func-names
const isTypedArray = (TypedArray => {
  // eslint-disable-next-line func-names
  return thing => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== 'undefined' && getPrototypeOf$1(Uint8Array));

/**
 * For each entry in the object, call the function with the key and value.
 *
 * @param {Object<any, any>} obj - The object to iterate over.
 * @param {Function} fn - The function to call for each entry.
 *
 * @returns {void}
 */
const forEachEntry = (obj, fn) => {
  const generator = obj && obj[Symbol.iterator];

  const iterator = generator.call(obj);

  let result;

  while ((result = iterator.next()) && !result.done) {
    const pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
};

/**
 * It takes a regular expression and a string, and returns an array of all the matches
 *
 * @param {string} regExp - The regular expression to match against.
 * @param {string} str - The string to search.
 *
 * @returns {Array<boolean>}
 */
const matchAll = (regExp, str) => {
  let matches;
  const arr = [];

  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }

  return arr;
};

/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */
const isHTMLForm = kindOfTest('HTMLFormElement');

const toCamelCase = str => {
  return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,
    function replacer(m, p1, p2) {
      return p1.toUpperCase() + p2;
    }
  );
};

/* Creating a function that will check if an object has a property. */
const hasOwnProperty$1 = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);

/**
 * Determine if a value is a RegExp object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a RegExp object, otherwise false
 */
const isRegExp = kindOfTest('RegExp');

const reduceDescriptors = (obj, reducer) => {
  const descriptors = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};

  forEach(descriptors, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });

  Object.defineProperties(obj, reducedDescriptors);
};

/**
 * Makes all methods read-only
 * @param {Object} obj
 */

const freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    // skip restricted props in strict mode
    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {
      return false;
    }

    const value = obj[name];

    if (!isFunction(value)) return;

    descriptor.enumerable = false;

    if ('writable' in descriptor) {
      descriptor.writable = false;
      return;
    }

    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error('Can not rewrite read-only method \'' + name + '\'');
      };
    }
  });
};

const toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};

  const define = (arr) => {
    arr.forEach(value => {
      obj[value] = true;
    });
  };

  isArray$2(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));

  return obj;
};

const noop = () => {};

const toFiniteNumber = (value, defaultValue) => {
  value = +value;
  return Number.isFinite(value) ? value : defaultValue;
};

const ALPHA = 'abcdefghijklmnopqrstuvwxyz';

const DIGIT = '0123456789';

const ALPHABET = {
  DIGIT,
  ALPHA,
  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
};

const generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
  let str = '';
  const {length} = alphabet;
  while (size--) {
    str += alphabet[Math.random() * length|0];
  }

  return str;
};

/**
 * If the thing is a FormData object, return true, otherwise return false.
 *
 * @param {unknown} thing - The thing to check.
 *
 * @returns {boolean}
 */
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);
}

const toJSONObject = (obj) => {
  const stack = new Array(10);

  const visit = (source, i) => {

    if (isObject$5(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }

      if(!('toJSON' in source)) {
        stack[i] = source;
        const target = isArray$2(source) ? [] : {};

        forEach(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });

        stack[i] = undefined;

        return target;
      }
    }

    return source;
  };

  return visit(obj, 0);
};

const isAsyncFn = kindOfTest('AsyncFunction');

const isThenable = (thing) =>
  thing && (isObject$5(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);

var utils$2 = {
  isArray: isArray$2,
  isArrayBuffer,
  isBuffer: isBuffer$1,
  isFormData,
  isArrayBufferView,
  isString: isString$1,
  isNumber,
  isBoolean,
  isObject: isObject$5,
  isPlainObject,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isRegExp,
  isFunction,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge: merge$1,
  extend,
  trim: trim$1,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty: hasOwnProperty$1,
  hasOwnProp: hasOwnProperty$1, // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop,
  toFiniteNumber,
  findKey,
  global: _global$1,
  isContextDefined,
  ALPHABET,
  generateString,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable
};

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var inited = false;
function init () {
  inited = true;
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
  }

  revLookup['-'.charCodeAt(0)] = 62;
  revLookup['_'.charCodeAt(0)] = 63;
}

function toByteArray (b64) {
  if (!inited) {
    init();
  }
  var i, j, l, tmp, placeHolders, arr;
  var len = b64.length;

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;

  // base64 is 4/3 + up to two characters of the original data
  arr = new Arr(len * 3 / 4 - placeHolders);

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len;

  var L = 0;

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];
    arr[L++] = (tmp >> 16) & 0xFF;
    arr[L++] = (tmp >> 8) & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);
    arr[L++] = tmp & 0xFF;
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);
    arr[L++] = (tmp >> 8) & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);
    output.push(tripletToBase64(tmp));
  }
  return output.join('')
}

function fromByteArray (uint8) {
  if (!inited) {
    init();
  }
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
  var output = '';
  var parts = [];
  var maxChunkLength = 16383; // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    output += lookup[tmp >> 2];
    output += lookup[(tmp << 4) & 0x3F];
    output += '==';
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);
    output += lookup[tmp >> 10];
    output += lookup[(tmp >> 4) & 0x3F];
    output += lookup[(tmp << 2) & 0x3F];
    output += '=';
  }

  parts.push(output);

  return parts.join('')
}

function read (buffer, offset, isLE, mLen, nBytes) {
  var e, m;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = -7;
  var i = isLE ? (nBytes - 1) : 0;
  var d = isLE ? -1 : 1;
  var s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

function write (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
  var i = isLE ? 0 : (nBytes - 1);
  var d = isLE ? 1 : -1;
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128;
}

var toString$2 = {}.toString;

var isArray$1 = Array.isArray || function (arr) {
  return toString$2.call(arr) == '[object Array]';
};

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */


var INSPECT_MAX_BYTES = 50;

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global$7.TYPED_ARRAY_SUPPORT !== undefined
  ? global$7.TYPED_ARRAY_SUPPORT
  : true;

/*
 * Export kMaxLength after typed array support is determined.
 */
kMaxLength();

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length);
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length);
    }
    that.length = length;
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192; // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype;
  return arr
};

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
};

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) ;
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size);
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
};

function allocUnsafe (that, size) {
  assertSize(size);
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0;
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
};

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8';
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0;
  that = createBuffer(that, length);

  var actual = that.write(string, encoding);

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual);
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0;
  that = createBuffer(that, length);
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255;
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength; // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array);
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset);
  } else {
    array = new Uint8Array(array, byteOffset, length);
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array;
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array);
  }
  return that
}

function fromObject (that, obj) {
  if (internalIsBuffer(obj)) {
    var len = checked(obj.length) | 0;
    that = createBuffer(that, len);

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len);
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray$1(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}
Buffer.isBuffer = isBuffer;
function internalIsBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
};

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
};

Buffer.concat = function concat (list, length) {
  if (!isArray$1(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i;
  if (length === undefined) {
    length = 0;
    for (i = 0; i < list.length; ++i) {
      length += list[i].length;
    }
  }

  var buffer = Buffer.allocUnsafe(length);
  var pos = 0;
  for (i = 0; i < list.length; ++i) {
    var buf = list[i];
    if (!internalIsBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos);
    pos += buf.length;
  }
  return buffer
};

function byteLength (string, encoding) {
  if (internalIsBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string;
  }

  var len = string.length;
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
}
Buffer.byteLength = byteLength;

function slowToString (encoding, start, end) {
  var loweredCase = false;

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0;
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length;
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0;
  start >>>= 0;

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8';

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase();
        loweredCase = true;
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true;

function swap (b, n, m) {
  var i = b[n];
  b[n] = b[m];
  b[m] = i;
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length;
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1);
  }
  return this
};

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length;
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3);
    swap(this, i + 1, i + 2);
  }
  return this
};

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length;
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7);
    swap(this, i + 1, i + 6);
    swap(this, i + 2, i + 5);
    swap(this, i + 3, i + 4);
  }
  return this
};

Buffer.prototype.toString = function toString () {
  var length = this.length | 0;
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
};

Buffer.prototype.equals = function equals (b) {
  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
};

Buffer.prototype.inspect = function inspect () {
  var str = '';
  var max = INSPECT_MAX_BYTES;
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
    if (this.length > max) str += ' ... ';
  }
  return '<Buffer ' + str + '>'
};

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!internalIsBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0;
  }
  if (end === undefined) {
    end = target ? target.length : 0;
  }
  if (thisStart === undefined) {
    thisStart = 0;
  }
  if (thisEnd === undefined) {
    thisEnd = this.length;
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0;
  end >>>= 0;
  thisStart >>>= 0;
  thisEnd >>>= 0;

  if (this === target) return 0

  var x = thisEnd - thisStart;
  var y = end - start;
  var len = Math.min(x, y);

  var thisCopy = this.slice(thisStart, thisEnd);
  var targetCopy = target.slice(start, end);

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i];
      y = targetCopy[i];
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
};

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset;
    byteOffset = 0;
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff;
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000;
  }
  byteOffset = +byteOffset;  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1);
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1;
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0;
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding);
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (internalIsBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf$1(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF; // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf$1(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf$1 (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1;
  var arrLength = arr.length;
  var valLength = val.length;

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase();
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2;
      arrLength /= 2;
      valLength /= 2;
      byteOffset /= 2;
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i;
  if (dir) {
    var foundIndex = -1;
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i;
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex;
        foundIndex = -1;
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
    for (i = byteOffset; i >= 0; i--) {
      var found = true;
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false;
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
};

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
};

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
};

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0;
  var remaining = buf.length - offset;
  if (!length) {
    length = remaining;
  } else {
    length = Number(length);
    if (length > remaining) {
      length = remaining;
    }
  }

  // must be an even number of digits
  var strLen = string.length;
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2;
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16);
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed;
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8';
    length = this.length;
    offset = 0;
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset;
    length = this.length;
    offset = 0;
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0;
    if (isFinite(length)) {
      length = length | 0;
      if (encoding === undefined) encoding = 'utf8';
    } else {
      encoding = length;
      length = undefined;
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset;
  if (length === undefined || length > remaining) length = remaining;

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8';

  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
};

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
};

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return fromByteArray(buf)
  } else {
    return fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end);
  var res = [];

  var i = start;
  while (i < end) {
    var firstByte = buf[i];
    var codePoint = null;
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1;

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint;

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte;
          }
          break
        case 2:
          secondByte = buf[i + 1];
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint;
            }
          }
          break
        case 3:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint;
            }
          }
          break
        case 4:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          fourthByte = buf[i + 3];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint;
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD;
      bytesPerSequence = 1;
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000;
      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
      codePoint = 0xDC00 | codePoint & 0x3FF;
    }

    res.push(codePoint);
    i += bytesPerSequence;
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000;

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length;
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = '';
  var i = 0;
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    );
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F);
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i]);
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length;

  if (!start || start < 0) start = 0;
  if (!end || end < 0 || end > len) end = len;

  var out = '';
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i]);
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end);
  var res = '';
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length;
  start = ~~start;
  end = end === undefined ? len : ~~end;

  if (start < 0) {
    start += len;
    if (start < 0) start = 0;
  } else if (start > len) {
    start = len;
  }

  if (end < 0) {
    end += len;
    if (end < 0) end = 0;
  } else if (end > len) {
    end = len;
  }

  if (end < start) end = start;

  var newBuf;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
  } else {
    var sliceLen = end - start;
    newBuf = new Buffer(sliceLen, undefined);
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start];
    }
  }

  return newBuf
};

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }

  return val
};

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length);
  }

  var val = this[offset + --byteLength];
  var mul = 1;
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul;
  }

  return val
};

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  return this[offset]
};

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] | (this[offset + 1] << 8)
};

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return (this[offset] << 8) | this[offset + 1]
};

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
};

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
};

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val
};

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var i = byteLength;
  var mul = 1;
  var val = this[offset + --i];
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val
};

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
};

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset] | (this[offset + 1] << 8);
  return (val & 0x8000) ? val | 0xFFFF0000 : val
};

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset + 1] | (this[offset] << 8);
  return (val & 0x8000) ? val | 0xFFFF0000 : val
};

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
};

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
};

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return read(this, offset, true, 23, 4)
};

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return read(this, offset, false, 23, 4)
};

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return read(this, offset, true, 52, 8)
};

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return read(this, offset, false, 52, 8)
};

function checkInt (buf, value, offset, ext, max, min) {
  if (!internalIsBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var mul = 1;
  var i = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var i = byteLength - 1;
  var mul = 1;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  this[offset] = (value & 0xff);
  return offset + 1
};

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8;
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2
};

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8);
    this[offset + 1] = (value & 0xff);
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2
};

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24);
    this[offset + 2] = (value >>> 16);
    this[offset + 1] = (value >>> 8);
    this[offset] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4
};

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24);
    this[offset + 1] = (value >>> 16);
    this[offset + 2] = (value >>> 8);
    this[offset + 3] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4
};

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = 0;
  var mul = 1;
  var sub = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = byteLength - 1;
  var mul = 1;
  var sub = 0;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  if (value < 0) value = 0xff + value + 1;
  this[offset] = (value & 0xff);
  return offset + 1
};

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2
};

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8);
    this[offset + 1] = (value & 0xff);
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2
};

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
    this[offset + 2] = (value >>> 16);
    this[offset + 3] = (value >>> 24);
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4
};

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (value < 0) value = 0xffffffff + value + 1;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24);
    this[offset + 1] = (value >>> 16);
    this[offset + 2] = (value >>> 8);
    this[offset + 3] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4
};

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4);
  }
  write(buf, value, offset, littleEndian, 23, 4);
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
};

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
};

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8);
  }
  write(buf, value, offset, littleEndian, 52, 8);
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
};

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
};

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0;
  if (!end && end !== 0) end = this.length;
  if (targetStart >= target.length) targetStart = target.length;
  if (!targetStart) targetStart = 0;
  if (end > 0 && end < start) end = start;

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length;
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start;
  }

  var len = end - start;
  var i;

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start];
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start];
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    );
  }

  return len
};

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start;
      start = 0;
      end = this.length;
    } else if (typeof end === 'string') {
      encoding = end;
      end = this.length;
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0);
      if (code < 256) {
        val = code;
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255;
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0;
  end = end === undefined ? this.length : end >>> 0;

  if (!val) val = 0;

  var i;
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val;
    }
  } else {
    var bytes = internalIsBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString());
    var len = bytes.length;
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len];
    }
  }

  return this
};

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '');
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '=';
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity;
  var codePoint;
  var length = string.length;
  var leadSurrogate = null;
  var bytes = [];

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i);

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue
        }

        // valid lead
        leadSurrogate = codePoint;

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        leadSurrogate = codePoint;
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
    }

    leadSurrogate = null;

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint);
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      );
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo;
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i);
    hi = c >> 8;
    lo = c % 256;
    byteArray.push(lo);
    byteArray.push(hi);
  }

  return byteArray
}


function base64ToBytes (str) {
  return toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i];
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}


// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
function isBuffer(obj) {
  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))
}

function isFastBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))
}

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 *
 * @returns {Error} The created error.
 */
function AxiosError(message, code, config, request, response) {
  Error.call(this);

  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = (new Error()).stack;
  }

  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  response && (this.response = response);
}

utils$2.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils$2.toJSONObject(this.config),
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});

const prototype$1 = AxiosError.prototype;
const descriptors = {};

[
  'ERR_BAD_OPTION_VALUE',
  'ERR_BAD_OPTION',
  'ECONNABORTED',
  'ETIMEDOUT',
  'ERR_NETWORK',
  'ERR_FR_TOO_MANY_REDIRECTS',
  'ERR_DEPRECATED',
  'ERR_BAD_RESPONSE',
  'ERR_BAD_REQUEST',
  'ERR_CANCELED',
  'ERR_NOT_SUPPORT',
  'ERR_INVALID_URL'
// eslint-disable-next-line func-names
].forEach(code => {
  descriptors[code] = {value: code};
});

Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype$1, 'isAxiosError', {value: true});

// eslint-disable-next-line func-names
AxiosError.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(prototype$1);

  utils$2.toFlatObject(error, axiosError, function filter(obj) {
    return obj !== Error.prototype;
  }, prop => {
    return prop !== 'isAxiosError';
  });

  AxiosError.call(axiosError, error.message, code, config, request, response);

  axiosError.cause = error;

  axiosError.name = error.name;

  customProps && Object.assign(axiosError, customProps);

  return axiosError;
};

// eslint-disable-next-line strict
var httpAdapter = null;

/**
 * Determines if the given thing is a array or js object.
 *
 * @param {string} thing - The object or array to be visited.
 *
 * @returns {boolean}
 */
function isVisitable(thing) {
  return utils$2.isPlainObject(thing) || utils$2.isArray(thing);
}

/**
 * It removes the brackets from the end of a string
 *
 * @param {string} key - The key of the parameter.
 *
 * @returns {string} the key without the brackets.
 */
function removeBrackets(key) {
  return utils$2.endsWith(key, '[]') ? key.slice(0, -2) : key;
}

/**
 * It takes a path, a key, and a boolean, and returns a string
 *
 * @param {string} path - The path to the current key.
 * @param {string} key - The key of the current object being iterated over.
 * @param {string} dots - If true, the key will be rendered with dots instead of brackets.
 *
 * @returns {string} The path to the current key.
 */
function renderKey(path, key, dots) {
  if (!path) return key;
  return path.concat(key).map(function each(token, i) {
    // eslint-disable-next-line no-param-reassign
    token = removeBrackets(token);
    return !dots && i ? '[' + token + ']' : token;
  }).join(dots ? '.' : '');
}

/**
 * If the array is an array and none of its elements are visitable, then it's a flat array.
 *
 * @param {Array<any>} arr - The array to check
 *
 * @returns {boolean}
 */
function isFlatArray(arr) {
  return utils$2.isArray(arr) && !arr.some(isVisitable);
}

const predicates = utils$2.toFlatObject(utils$2, {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});

/**
 * Convert a data object to FormData
 *
 * @param {Object} obj
 * @param {?Object} [formData]
 * @param {?Object} [options]
 * @param {Function} [options.visitor]
 * @param {Boolean} [options.metaTokens = true]
 * @param {Boolean} [options.dots = false]
 * @param {?Boolean} [options.indexes = false]
 *
 * @returns {Object}
 **/

/**
 * It converts an object into a FormData object
 *
 * @param {Object<any, any>} obj - The object to convert to form data.
 * @param {string} formData - The FormData object to append to.
 * @param {Object<string, any>} options
 *
 * @returns
 */
function toFormData(obj, formData, options) {
  if (!utils$2.isObject(obj)) {
    throw new TypeError('target must be an object');
  }

  // eslint-disable-next-line no-param-reassign
  formData = formData || new (FormData)();

  // eslint-disable-next-line no-param-reassign
  options = utils$2.toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    // eslint-disable-next-line no-eq-null,eqeqeq
    return !utils$2.isUndefined(source[option]);
  });

  const metaTokens = options.metaTokens;
  // eslint-disable-next-line no-use-before-define
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;
  const useBlob = _Blob && utils$2.isSpecCompliantForm(formData);

  if (!utils$2.isFunction(visitor)) {
    throw new TypeError('visitor must be a function');
  }

  function convertValue(value) {
    if (value === null) return '';

    if (utils$2.isDate(value)) {
      return value.toISOString();
    }

    if (!useBlob && utils$2.isBlob(value)) {
      throw new AxiosError('Blob is not supported. Use a Buffer instead.');
    }

    if (utils$2.isArrayBuffer(value) || utils$2.isTypedArray(value)) {
      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
    }

    return value;
  }

  /**
   * Default visitor.
   *
   * @param {*} value
   * @param {String|Number} key
   * @param {Array<String|Number>} path
   * @this {FormData}
   *
   * @returns {boolean} return true to visit the each prop of the value recursively
   */
  function defaultVisitor(value, key, path) {
    let arr = value;

    if (value && !path && typeof value === 'object') {
      if (utils$2.endsWith(key, '{}')) {
        // eslint-disable-next-line no-param-reassign
        key = metaTokens ? key : key.slice(0, -2);
        // eslint-disable-next-line no-param-reassign
        value = JSON.stringify(value);
      } else if (
        (utils$2.isArray(value) && isFlatArray(value)) ||
        ((utils$2.isFileList(value) || utils$2.endsWith(key, '[]')) && (arr = utils$2.toArray(value))
        )) {
        // eslint-disable-next-line no-param-reassign
        key = removeBrackets(key);

        arr.forEach(function each(el, index) {
          !(utils$2.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),
            convertValue(el)
          );
        });
        return false;
      }
    }

    if (isVisitable(value)) {
      return true;
    }

    formData.append(renderKey(path, key, dots), convertValue(value));

    return false;
  }

  const stack = [];

  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });

  function build(value, path) {
    if (utils$2.isUndefined(value)) return;

    if (stack.indexOf(value) !== -1) {
      throw Error('Circular reference detected in ' + path.join('.'));
    }

    stack.push(value);

    utils$2.forEach(value, function each(el, key) {
      const result = !(utils$2.isUndefined(el) || el === null) && visitor.call(
        formData, el, utils$2.isString(key) ? key.trim() : key, path, exposedHelpers
      );

      if (result === true) {
        build(el, path ? path.concat(key) : [key]);
      }
    });

    stack.pop();
  }

  if (!utils$2.isObject(obj)) {
    throw new TypeError('data must be an object');
  }

  build(obj);

  return formData;
}

/**
 * It encodes a string by replacing all characters that are not in the unreserved set with
 * their percent-encoded equivalents
 *
 * @param {string} str - The string to encode.
 *
 * @returns {string} The encoded string.
 */
function encode$1(str) {
  const charMap = {
    '!': '%21',
    "'": '%27',
    '(': '%28',
    ')': '%29',
    '~': '%7E',
    '%20': '+',
    '%00': '\x00'
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}

/**
 * It takes a params object and converts it to a FormData object
 *
 * @param {Object<string, any>} params - The parameters to be converted to a FormData object.
 * @param {Object<string, any>} options - The options object passed to the Axios constructor.
 *
 * @returns {void}
 */
function AxiosURLSearchParams(params, options) {
  this._pairs = [];

  params && toFormData(params, this, options);
}

const prototype = AxiosURLSearchParams.prototype;

prototype.append = function append(name, value) {
  this._pairs.push([name, value]);
};

prototype.toString = function toString(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode$1);
  } : encode$1;

  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + '=' + _encode(pair[1]);
  }, '').join('&');
};

/**
 * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their
 * URI encoded counterparts
 *
 * @param {string} val The value to be encoded.
 *
 * @returns {string} The encoded value.
 */
function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @param {?object} options
 *
 * @returns {string} The formatted url
 */
function buildURL(url, params, options) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }
  
  const _encode = options && options.encode || encode;

  const serializeFn = options && options.serialize;

  let serializedParams;

  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils$2.isURLSearchParams(params) ?
      params.toString() :
      new AxiosURLSearchParams(params, options).toString(_encode);
  }

  if (serializedParams) {
    const hashmarkIndex = url.indexOf("#");

    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
}

class InterceptorManager {
  constructor() {
    this.handlers = [];
  }

  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }

  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  }

  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }

  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils$2.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  }
}

var InterceptorManager$1 = InterceptorManager;

var transitionalDefaults = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};

var URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;

var FormData$1 = typeof FormData !== 'undefined' ? FormData : null;

var Blob$1 = typeof Blob !== 'undefined' ? Blob : null;

var platform$1 = {
  isBrowser: true,
  classes: {
    URLSearchParams: URLSearchParams$1,
    FormData: FormData$1,
    Blob: Blob$1
  },
  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']
};

const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 *
 * @returns {boolean}
 */
const hasStandardBrowserEnv = (
  (product) => {
    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0
  })(typeof navigator !== 'undefined' && navigator.product);

/**
 * Determine if we're running in a standard browser webWorker environment
 *
 * Although the `isStandardBrowserEnv` method indicates that
 * `allows axios to run in a web worker`, the WebWorker will still be
 * filtered out due to its judgment standard
 * `typeof window !== 'undefined' && typeof document !== 'undefined'`.
 * This leads to a problem when axios post `FormData` in webWorker
 */
const hasStandardBrowserWebWorkerEnv = (() => {
  return (
    typeof WorkerGlobalScope !== 'undefined' &&
    // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope &&
    typeof self.importScripts === 'function'
  );
})();

var utils$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  hasBrowserEnv: hasBrowserEnv,
  hasStandardBrowserEnv: hasStandardBrowserEnv,
  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv
});

var platform = {
  ...utils$1,
  ...platform$1
};

function toURLEncodedForm(data, options) {
  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({
    visitor: function(value, key, path, helpers) {
      if (platform.isNode && utils$2.isBuffer(value)) {
        this.append(key, value.toString('base64'));
        return false;
      }

      return helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}

/**
 * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']
 *
 * @param {string} name - The name of the property to get.
 *
 * @returns An array of strings.
 */
function parsePropPath(name) {
  // foo[x][y][z]
  // foo.x.y.z
  // foo-x-y-z
  // foo x y z
  return utils$2.matchAll(/\w+|\[(\w*)]/g, name).map(match => {
    return match[0] === '[]' ? '' : match[1] || match[0];
  });
}

/**
 * Convert an array to an object.
 *
 * @param {Array<any>} arr - The array to convert to an object.
 *
 * @returns An object with the same keys and values as the array.
 */
function arrayToObject(arr) {
  const obj = {};
  const keys = Object.keys(arr);
  let i;
  const len = keys.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys[i];
    obj[key] = arr[key];
  }
  return obj;
}

/**
 * It takes a FormData object and returns a JavaScript object
 *
 * @param {string} formData The FormData object to convert to JSON.
 *
 * @returns {Object<string, any> | null} The converted object.
 */
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    let name = path[index++];

    if (name === '__proto__') return true;

    const isNumericKey = Number.isFinite(+name);
    const isLast = index >= path.length;
    name = !name && utils$2.isArray(target) ? target.length : name;

    if (isLast) {
      if (utils$2.hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }

      return !isNumericKey;
    }

    if (!target[name] || !utils$2.isObject(target[name])) {
      target[name] = [];
    }

    const result = buildPath(path, value, target[name], index);

    if (result && utils$2.isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }

    return !isNumericKey;
  }

  if (utils$2.isFormData(formData) && utils$2.isFunction(formData.entries)) {
    const obj = {};

    utils$2.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });

    return obj;
  }

  return null;
}

/**
 * It takes a string, tries to parse it, and if it fails, it returns the stringified version
 * of the input
 *
 * @param {any} rawValue - The value to be stringified.
 * @param {Function} parser - A function that parses a string into a JavaScript object.
 * @param {Function} encoder - A function that takes a value and returns a string.
 *
 * @returns {string} A stringified version of the rawValue.
 */
function stringifySafely(rawValue, parser, encoder) {
  if (utils$2.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils$2.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

const defaults = {

  transitional: transitionalDefaults,

  adapter: ['xhr', 'http'],

  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || '';
    const hasJSONContentType = contentType.indexOf('application/json') > -1;
    const isObjectPayload = utils$2.isObject(data);

    if (isObjectPayload && utils$2.isHTMLForm(data)) {
      data = new FormData(data);
    }

    const isFormData = utils$2.isFormData(data);

    if (isFormData) {
      if (!hasJSONContentType) {
        return data;
      }
      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;
    }

    if (utils$2.isArrayBuffer(data) ||
      utils$2.isBuffer(data) ||
      utils$2.isStream(data) ||
      utils$2.isFile(data) ||
      utils$2.isBlob(data)
    ) {
      return data;
    }
    if (utils$2.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils$2.isURLSearchParams(data)) {
      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);
      return data.toString();
    }

    let isFileList;

    if (isObjectPayload) {
      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {
        return toURLEncodedForm(data, this.formSerializer).toString();
      }

      if ((isFileList = utils$2.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {
        const _FormData = this.env && this.env.FormData;

        return toFormData(
          isFileList ? {'files[]': data} : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }

    if (isObjectPayload || hasJSONContentType ) {
      headers.setContentType('application/json', false);
      return stringifySafely(data);
    }

    return data;
  }],

  transformResponse: [function transformResponse(data) {
    const transitional = this.transitional || defaults.transitional;
    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    const JSONRequested = this.responseType === 'json';

    if (data && utils$2.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {
      const silentJSONParsing = transitional && transitional.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;

      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  env: {
    FormData: platform.classes.FormData,
    Blob: platform.classes.Blob
  },

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },

  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*',
      'Content-Type': undefined
    }
  }
};

utils$2.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {
  defaults.headers[method] = {};
});

var defaults$1 = defaults;

// RawAxiosHeaders whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
const ignoreDuplicateOf = utils$2.toObjectSet([
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
]);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} rawHeaders Headers needing to be parsed
 *
 * @returns {Object} Headers parsed into an object
 */
var parseHeaders = rawHeaders => {
  const parsed = {};
  let key;
  let val;
  let i;

  rawHeaders && rawHeaders.split('\n').forEach(function parser(line) {
    i = line.indexOf(':');
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();

    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {
      return;
    }

    if (key === 'set-cookie') {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
};

const $internals = Symbol('internals');

function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}

function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }

  return utils$2.isArray(value) ? value.map(normalizeValue) : String(value);
}

function parseTokens(str) {
  const tokens = Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;

  while ((match = tokensRE.exec(str))) {
    tokens[match[1]] = match[2];
  }

  return tokens;
}

const isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());

function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
  if (utils$2.isFunction(filter)) {
    return filter.call(this, value, header);
  }

  if (isHeaderNameFilter) {
    value = header;
  }

  if (!utils$2.isString(value)) return;

  if (utils$2.isString(filter)) {
    return value.indexOf(filter) !== -1;
  }

  if (utils$2.isRegExp(filter)) {
    return filter.test(value);
  }
}

function formatHeader(header) {
  return header.trim()
    .toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
      return char.toUpperCase() + str;
    });
}

function buildAccessors(obj, header) {
  const accessorName = utils$2.toCamelCase(' ' + header);

  ['get', 'set', 'has'].forEach(methodName => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}

class AxiosHeaders {
  constructor(headers) {
    headers && this.set(headers);
  }

  set(header, valueOrRewrite, rewrite) {
    const self = this;

    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);

      if (!lHeader) {
        throw new Error('header name must be a non-empty string');
      }

      const key = utils$2.findKey(self, lHeader);

      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {
        self[key || _header] = normalizeValue(_value);
      }
    }

    const setHeaders = (headers, _rewrite) =>
      utils$2.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));

    if (utils$2.isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite);
    } else if(utils$2.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders(parseHeaders(header), valueOrRewrite);
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }

    return this;
  }

  get(header, parser) {
    header = normalizeHeader(header);

    if (header) {
      const key = utils$2.findKey(this, header);

      if (key) {
        const value = this[key];

        if (!parser) {
          return value;
        }

        if (parser === true) {
          return parseTokens(value);
        }

        if (utils$2.isFunction(parser)) {
          return parser.call(this, value, key);
        }

        if (utils$2.isRegExp(parser)) {
          return parser.exec(value);
        }

        throw new TypeError('parser must be boolean|regexp|function');
      }
    }
  }

  has(header, matcher) {
    header = normalizeHeader(header);

    if (header) {
      const key = utils$2.findKey(this, header);

      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }

    return false;
  }

  delete(header, matcher) {
    const self = this;
    let deleted = false;

    function deleteHeader(_header) {
      _header = normalizeHeader(_header);

      if (_header) {
        const key = utils$2.findKey(self, _header);

        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {
          delete self[key];

          deleted = true;
        }
      }
    }

    if (utils$2.isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }

    return deleted;
  }

  clear(matcher) {
    const keys = Object.keys(this);
    let i = keys.length;
    let deleted = false;

    while (i--) {
      const key = keys[i];
      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }

    return deleted;
  }

  normalize(format) {
    const self = this;
    const headers = {};

    utils$2.forEach(this, (value, header) => {
      const key = utils$2.findKey(headers, header);

      if (key) {
        self[key] = normalizeValue(value);
        delete self[header];
        return;
      }

      const normalized = format ? formatHeader(header) : String(header).trim();

      if (normalized !== header) {
        delete self[header];
      }

      self[normalized] = normalizeValue(value);

      headers[normalized] = true;
    });

    return this;
  }

  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }

  toJSON(asStrings) {
    const obj = Object.create(null);

    utils$2.forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && utils$2.isArray(value) ? value.join(', ') : value);
    });

    return obj;
  }

  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }

  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\n');
  }

  get [Symbol.toStringTag]() {
    return 'AxiosHeaders';
  }

  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }

  static concat(first, ...targets) {
    const computed = new this(first);

    targets.forEach((target) => computed.set(target));

    return computed;
  }

  static accessor(header) {
    const internals = this[$internals] = (this[$internals] = {
      accessors: {}
    });

    const accessors = internals.accessors;
    const prototype = this.prototype;

    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);

      if (!accessors[lHeader]) {
        buildAccessors(prototype, _header);
        accessors[lHeader] = true;
      }
    }

    utils$2.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);

    return this;
  }
}

AxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);

// reserved names hotfix
utils$2.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  }
});

utils$2.freezeMethods(AxiosHeaders);

var AxiosHeaders$1 = AxiosHeaders;

/**
 * Transform the data for a request or a response
 *
 * @param {Array|Function} fns A single function or Array of functions
 * @param {?Object} response The response object
 *
 * @returns {*} The resulting transformed data
 */
function transformData(fns, response) {
  const config = this || defaults$1;
  const context = response || config;
  const headers = AxiosHeaders$1.from(context.headers);
  let data = context.data;

  utils$2.forEach(fns, function transform(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);
  });

  headers.normalize();

  return data;
}

function isCancel(value) {
  return !!(value && value.__CANCEL__);
}

/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */
function CanceledError(message, config, request) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);
  this.name = 'CanceledError';
}

utils$2.inherits(CanceledError, AxiosError, {
  __CANCEL__: true
});

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 *
 * @returns {object} The response.
 */
function settle(resolve, reject, response) {
  const validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError(
      'Request failed with status code ' + response.status,
      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}

var cookies$1 = platform.hasStandardBrowserEnv ?

  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path, domain, secure) {
      const cookie = [name + '=' + encodeURIComponent(value)];

      utils$2.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());

      utils$2.isString(path) && cookie.push('path=' + path);

      utils$2.isString(domain) && cookie.push('domain=' + domain);

      secure === true && cookie.push('secure');

      document.cookie = cookie.join('; ');
    },

    read(name) {
      const match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return (match ? decodeURIComponent(match[3]) : null);
    },

    remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  }

  :

  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {},
    read() {
      return null;
    },
    remove() {}
  };

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 *
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 *
 * @returns {string} The combined URL
 */
function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/?\/$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
}

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 *
 * @returns {string} The combined full path
 */
function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}

var isURLSameOrigin = platform.hasStandardBrowserEnv ?

// Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    const msie = /(msie|trident)/i.test(navigator.userAgent);
    const urlParsingNode = document.createElement('a');
    let originURL;

    /**
    * Parse a URL to discover its components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      let href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
          urlParsingNode.pathname :
          '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      const parsed = (utils$2.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
          parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })();

function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
}

/**
 * Calculate data maxRate
 * @param {Number} [samplesCount= 10]
 * @param {Number} [min= 1000]
 * @returns {Function}
 */
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;

  min = min !== undefined ? min : 1000;

  return function push(chunkLength) {
    const now = Date.now();

    const startedAt = timestamps[tail];

    if (!firstSampleTS) {
      firstSampleTS = now;
    }

    bytes[head] = chunkLength;
    timestamps[head] = now;

    let i = tail;
    let bytesCount = 0;

    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }

    head = (head + 1) % samplesCount;

    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }

    if (now - firstSampleTS < min) {
      return;
    }

    const passed = startedAt && now - startedAt;

    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;
  };
}

function progressEventReducer(listener, isDownloadStream) {
  let bytesNotified = 0;
  const _speedometer = speedometer(50, 250);

  return e => {
    const loaded = e.loaded;
    const total = e.lengthComputable ? e.total : undefined;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;

    bytesNotified = loaded;

    const data = {
      loaded,
      total,
      progress: total ? (loaded / total) : undefined,
      bytes: progressBytes,
      rate: rate ? rate : undefined,
      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,
      event: e
    };

    data[isDownloadStream ? 'download' : 'upload'] = true;

    listener(data);
  };
}

const isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';

var xhrAdapter = isXHRAdapterSupported && function (config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    let requestData = config.data;
    const requestHeaders = AxiosHeaders$1.from(config.headers).normalize();
    let {responseType, withXSRFToken} = config;
    let onCanceled;
    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    let contentType;

    if (utils$2.isFormData(requestData)) {
      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {
        requestHeaders.setContentType(false); // Let the browser set it
      } else if ((contentType = requestHeaders.getContentType()) !== false) {
        // fix semicolon duplication issue for ReactNative FormData implementation
        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];
        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));
      }
    }

    let request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      const username = config.auth.username || '';
      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));
    }

    const fullPath = buildFullPath(config.baseURL, config.url);

    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      const responseHeaders = AxiosHeaders$1.from(
        'getAllResponseHeaders' in request && request.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?
        request.responseText : request.response;
      const response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };

      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';
      const transitional = config.transitional || transitionalDefaults;
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(new AxiosError(
        timeoutErrorMessage,
        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,
        config,
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if(platform.hasStandardBrowserEnv) {
      withXSRFToken && utils$2.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));

      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {
        // Add xsrf header
        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies$1.read(config.xsrfCookieName);

        if (xsrfValue) {
          requestHeaders.set(config.xsrfHeaderName, xsrfValue);
        }
      }
    }

    // Remove Content-Type if data is undefined
    requestData === undefined && requestHeaders.setContentType(null);

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils$2.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }

    // Add withCredentials to request if needed
    if (!utils$2.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = cancel => {
        if (!request) {
          return;
        }
        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);
        request.abort();
        request = null;
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);
      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    }

    const protocol = parseProtocol(fullPath);

    if (protocol && platform.protocols.indexOf(protocol) === -1) {
      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));
      return;
    }


    // Send the request
    request.send(requestData || null);
  });
};

const knownAdapters = {
  http: httpAdapter,
  xhr: xhrAdapter
};

utils$2.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, 'name', {value});
    } catch (e) {
      // eslint-disable-next-line no-empty
    }
    Object.defineProperty(fn, 'adapterName', {value});
  }
});

const renderReason = (reason) => `- ${reason}`;

const isResolvedHandle = (adapter) => utils$2.isFunction(adapter) || adapter === null || adapter === false;

var adapters = {
  getAdapter: (adapters) => {
    adapters = utils$2.isArray(adapters) ? adapters : [adapters];

    const {length} = adapters;
    let nameOrAdapter;
    let adapter;

    const rejectedReasons = {};

    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters[i];
      let id;

      adapter = nameOrAdapter;

      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];

        if (adapter === undefined) {
          throw new AxiosError(`Unknown adapter '${id}'`);
        }
      }

      if (adapter) {
        break;
      }

      rejectedReasons[id || '#' + i] = adapter;
    }

    if (!adapter) {

      const reasons = Object.entries(rejectedReasons)
        .map(([id, state]) => `adapter ${id} ` +
          (state === false ? 'is not supported by the environment' : 'is not available in the build')
        );

      let s = length ?
        (reasons.length > 1 ? 'since :\n' + reasons.map(renderReason).join('\n') : ' ' + renderReason(reasons[0])) :
        'as no adapter specified';

      throw new AxiosError(
        `There is no suitable adapter to dispatch the request ` + s,
        'ERR_NOT_SUPPORT'
      );
    }

    return adapter;
  },
  adapters: knownAdapters
};

/**
 * Throws a `CanceledError` if cancellation has been requested.
 *
 * @param {Object} config The config that is to be used for the request
 *
 * @returns {void}
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new CanceledError(null, config);
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 *
 * @returns {Promise} The Promise to be fulfilled
 */
function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  config.headers = AxiosHeaders$1.from(config.headers);

  // Transform request data
  config.data = transformData.call(
    config,
    config.transformRequest
  );

  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {
    config.headers.setContentType('application/x-www-form-urlencoded', false);
  }

  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      config.transformResponse,
      response
    );

    response.headers = AxiosHeaders$1.from(response.headers);

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          config.transformResponse,
          reason.response
        );
        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);
      }
    }

    return Promise.reject(reason);
  });
}

const headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? thing.toJSON() : thing;

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 *
 * @returns {Object} New object resulting from merging config2 to config1
 */
function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  const config = {};

  function getMergedValue(target, source, caseless) {
    if (utils$2.isPlainObject(target) && utils$2.isPlainObject(source)) {
      return utils$2.merge.call({caseless}, target, source);
    } else if (utils$2.isPlainObject(source)) {
      return utils$2.merge({}, source);
    } else if (utils$2.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  // eslint-disable-next-line consistent-return
  function mergeDeepProperties(a, b, caseless) {
    if (!utils$2.isUndefined(b)) {
      return getMergedValue(a, b, caseless);
    } else if (!utils$2.isUndefined(a)) {
      return getMergedValue(undefined, a, caseless);
    }
  }

  // eslint-disable-next-line consistent-return
  function valueFromConfig2(a, b) {
    if (!utils$2.isUndefined(b)) {
      return getMergedValue(undefined, b);
    }
  }

  // eslint-disable-next-line consistent-return
  function defaultToConfig2(a, b) {
    if (!utils$2.isUndefined(b)) {
      return getMergedValue(undefined, b);
    } else if (!utils$2.isUndefined(a)) {
      return getMergedValue(undefined, a);
    }
  }

  // eslint-disable-next-line consistent-return
  function mergeDirectKeys(a, b, prop) {
    if (prop in config2) {
      return getMergedValue(a, b);
    } else if (prop in config1) {
      return getMergedValue(undefined, a);
    }
  }

  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)
  };

  utils$2.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
    const merge = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge(config1[prop], config2[prop], prop);
    (utils$2.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);
  });

  return config;
}

const VERSION = "1.6.5";

const validators$2 = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {
  validators$2[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

const deprecatedWarnings = {};

/**
 * Transitional option validator
 *
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 *
 * @returns {function}
 */
validators$2.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return (value, opt, opts) => {
    if (validator === false) {
      throw new AxiosError(
        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),
        AxiosError.ERR_DEPRECATED
      );
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 *
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 *
 * @returns {object}
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);
  }
  const keys = Object.keys(options);
  let i = keys.length;
  while (i-- > 0) {
    const opt = keys[i];
    const validator = schema[opt];
    if (validator) {
      const value = options[opt];
      const result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);
    }
  }
}

var validator = {
  assertOptions,
  validators: validators$2
};

const validators$1 = validator.validators;

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 *
 * @return {Axios} A new instance of Axios
 */
class Axios {
  constructor(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new InterceptorManager$1(),
      response: new InterceptorManager$1()
    };
  }

  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  request(configOrUrl, config) {
    /*eslint no-param-reassign:0*/
    // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof configOrUrl === 'string') {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }

    config = mergeConfig(this.defaults, config);

    const {transitional, paramsSerializer, headers} = config;

    if (transitional !== undefined) {
      validator.assertOptions(transitional, {
        silentJSONParsing: validators$1.transitional(validators$1.boolean),
        forcedJSONParsing: validators$1.transitional(validators$1.boolean),
        clarifyTimeoutError: validators$1.transitional(validators$1.boolean)
      }, false);
    }

    if (paramsSerializer != null) {
      if (utils$2.isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer
        };
      } else {
        validator.assertOptions(paramsSerializer, {
          encode: validators$1.function,
          serialize: validators$1.function
        }, true);
      }
    }

    // Set config.method
    config.method = (config.method || this.defaults.method || 'get').toLowerCase();

    // Flatten headers
    let contextHeaders = headers && utils$2.merge(
      headers.common,
      headers[config.method]
    );

    headers && utils$2.forEach(
      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
      (method) => {
        delete headers[method];
      }
    );

    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);

    // filter out skipped interceptors
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
        return;
      }

      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });

    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });

    let promise;
    let i = 0;
    let len;

    if (!synchronousRequestInterceptors) {
      const chain = [dispatchRequest.bind(this), undefined];
      chain.unshift.apply(chain, requestInterceptorChain);
      chain.push.apply(chain, responseInterceptorChain);
      len = chain.length;

      promise = Promise.resolve(config);

      while (i < len) {
        promise = promise.then(chain[i++], chain[i++]);
      }

      return promise;
    }

    len = requestInterceptorChain.length;

    let newConfig = config;

    i = 0;

    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }

    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }

    i = 0;
    len = responseInterceptorChain.length;

    while (i < len) {
      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
    }

    return promise;
  }

  getUri(config) {
    config = mergeConfig(this.defaults, config);
    const fullPath = buildFullPath(config.baseURL, config.url);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
}

// Provide aliases for supported request methods
utils$2.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method,
      url,
      data: (config || {}).data
    }));
  };
});

utils$2.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/

  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method,
        headers: isForm ? {
          'Content-Type': 'multipart/form-data'
        } : {},
        url,
        data
      }));
    };
  }

  Axios.prototype[method] = generateHTTPMethod();

  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});

var Axios$1 = Axios;

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @param {Function} executor The executor function.
 *
 * @returns {CancelToken}
 */
let CancelToken$1 = class CancelToken {
  constructor(executor) {
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.');
    }

    let resolvePromise;

    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });

    const token = this;

    // eslint-disable-next-line func-names
    this.promise.then(cancel => {
      if (!token._listeners) return;

      let i = token._listeners.length;

      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });

    // eslint-disable-next-line func-names
    this.promise.then = onfulfilled => {
      let _resolve;
      // eslint-disable-next-line func-names
      const promise = new Promise(resolve => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);

      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };

      return promise;
    };

    executor(function cancel(message, config, request) {
      if (token.reason) {
        // Cancellation has already been requested
        return;
      }

      token.reason = new CanceledError(message, config, request);
      resolvePromise(token.reason);
    });
  }

  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }

  /**
   * Subscribe to the cancel signal
   */

  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }

    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }

  /**
   * Unsubscribe from the cancel signal
   */

  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }

  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token,
      cancel
    };
  }
};

var CancelToken$2 = CancelToken$1;

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 *
 * @returns {Function}
 */
function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 *
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
function isAxiosError(payload) {
  return utils$2.isObject(payload) && (payload.isAxiosError === true);
}

const HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511,
};

Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});

var HttpStatusCode$1 = HttpStatusCode;

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 *
 * @returns {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  const context = new Axios$1(defaultConfig);
  const instance = bind(Axios$1.prototype.request, context);

  // Copy axios.prototype to instance
  utils$2.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});

  // Copy context to instance
  utils$2.extend(instance, context, null, {allOwnKeys: true});

  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };

  return instance;
}

// Create the default instance to be exported
const axios = createInstance(defaults$1);

// Expose Axios class to allow class inheritance
axios.Axios = Axios$1;

// Expose Cancel & CancelToken
axios.CanceledError = CanceledError;
axios.CancelToken = CancelToken$2;
axios.isCancel = isCancel;
axios.VERSION = VERSION;
axios.toFormData = toFormData;

// Expose AxiosError class
axios.AxiosError = AxiosError;

// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};

axios.spread = spread;

// Expose isAxiosError
axios.isAxiosError = isAxiosError;

// Expose mergeConfig
axios.mergeConfig = mergeConfig;

axios.AxiosHeaders = AxiosHeaders$1;

axios.formToJSON = thing => formDataToJSON(utils$2.isHTMLForm(thing) ? new FormData(thing) : thing);

axios.getAdapter = adapters.getAdapter;

axios.HttpStatusCode = HttpStatusCode$1;

axios.default = axios;

// this module should only have a default export
var axios$1 = axios;

var elementUi_common = {exports: {}};

var dateUtil = {};

var date$1 = {exports: {}};

var hasRequiredDate;

function requireDate () {
	if (hasRequiredDate) return date$1.exports;
	hasRequiredDate = 1;
	(function (module) {

		/* Modified from https://github.com/taylorhakes/fecha
		 *
		 * The MIT License (MIT)
		 *
		 * Copyright (c) 2015 Taylor Hakes
		 *
		 * Permission is hereby granted, free of charge, to any person obtaining a copy
		 * of this software and associated documentation files (the "Software"), to deal
		 * in the Software without restriction, including without limitation the rights
		 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		 * copies of the Software, and to permit persons to whom the Software is
		 * furnished to do so, subject to the following conditions:
		 *
		 *     The above copyright notice and this permission notice shall be included in all
		 * copies or substantial portions of the Software.
		 *
		 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		 *     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		 *     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
		 * SOFTWARE.
		 */

		/*eslint-disable*/
		// 把 YYYY-MM-DD 改成了 yyyy-MM-dd
		(function (main) {

		  /**
		   * Parse or format dates
		   * @class fecha
		   */

		  var fecha = {};
		  var token = /d{1,4}|M{1,4}|yy(?:yy)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g;
		  var twoDigits = '\\d\\d?';
		  var threeDigits = '\\d{3}';
		  var fourDigits = '\\d{4}';
		  var word = '[^\\s]+';
		  var literal = /\[([^]*?)\]/gm;
		  var noop = function noop() {};

		  function regexEscape(str) {
		    return str.replace(/[|\\{()[^$+*?.-]/g, '\\$&');
		  }

		  function shorten(arr, sLen) {
		    var newArr = [];
		    for (var i = 0, len = arr.length; i < len; i++) {
		      newArr.push(arr[i].substr(0, sLen));
		    }
		    return newArr;
		  }

		  function monthUpdate(arrName) {
		    return function (d, v, i18n) {
		      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());
		      if (~index) {
		        d.month = index;
		      }
		    };
		  }

		  function pad(val, len) {
		    val = String(val);
		    len = len || 2;
		    while (val.length < len) {
		      val = '0' + val;
		    }
		    return val;
		  }

		  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
		  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
		  var monthNamesShort = shorten(monthNames, 3);
		  var dayNamesShort = shorten(dayNames, 3);
		  fecha.i18n = {
		    dayNamesShort: dayNamesShort,
		    dayNames: dayNames,
		    monthNamesShort: monthNamesShort,
		    monthNames: monthNames,
		    amPm: ['am', 'pm'],
		    DoFn: function DoFn(D) {
		      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];
		    }
		  };

		  var formatFlags = {
		    D: function D(dateObj) {
		      return dateObj.getDay();
		    },
		    DD: function DD(dateObj) {
		      return pad(dateObj.getDay());
		    },
		    Do: function Do(dateObj, i18n) {
		      return i18n.DoFn(dateObj.getDate());
		    },
		    d: function d(dateObj) {
		      return dateObj.getDate();
		    },
		    dd: function dd(dateObj) {
		      return pad(dateObj.getDate());
		    },
		    ddd: function ddd(dateObj, i18n) {
		      return i18n.dayNamesShort[dateObj.getDay()];
		    },
		    dddd: function dddd(dateObj, i18n) {
		      return i18n.dayNames[dateObj.getDay()];
		    },
		    M: function M(dateObj) {
		      return dateObj.getMonth() + 1;
		    },
		    MM: function MM(dateObj) {
		      return pad(dateObj.getMonth() + 1);
		    },
		    MMM: function MMM(dateObj, i18n) {
		      return i18n.monthNamesShort[dateObj.getMonth()];
		    },
		    MMMM: function MMMM(dateObj, i18n) {
		      return i18n.monthNames[dateObj.getMonth()];
		    },
		    yy: function yy(dateObj) {
		      return pad(String(dateObj.getFullYear()), 4).substr(2);
		    },
		    yyyy: function yyyy(dateObj) {
		      return pad(dateObj.getFullYear(), 4);
		    },
		    h: function h(dateObj) {
		      return dateObj.getHours() % 12 || 12;
		    },
		    hh: function hh(dateObj) {
		      return pad(dateObj.getHours() % 12 || 12);
		    },
		    H: function H(dateObj) {
		      return dateObj.getHours();
		    },
		    HH: function HH(dateObj) {
		      return pad(dateObj.getHours());
		    },
		    m: function m(dateObj) {
		      return dateObj.getMinutes();
		    },
		    mm: function mm(dateObj) {
		      return pad(dateObj.getMinutes());
		    },
		    s: function s(dateObj) {
		      return dateObj.getSeconds();
		    },
		    ss: function ss(dateObj) {
		      return pad(dateObj.getSeconds());
		    },
		    S: function S(dateObj) {
		      return Math.round(dateObj.getMilliseconds() / 100);
		    },
		    SS: function SS(dateObj) {
		      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);
		    },
		    SSS: function SSS(dateObj) {
		      return pad(dateObj.getMilliseconds(), 3);
		    },
		    a: function a(dateObj, i18n) {
		      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];
		    },
		    A: function A(dateObj, i18n) {
		      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();
		    },
		    ZZ: function ZZ(dateObj) {
		      var o = dateObj.getTimezoneOffset();
		      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);
		    }
		  };

		  var parseFlags = {
		    d: [twoDigits, function (d, v) {
		      d.day = v;
		    }],
		    Do: [twoDigits + word, function (d, v) {
		      d.day = parseInt(v, 10);
		    }],
		    M: [twoDigits, function (d, v) {
		      d.month = v - 1;
		    }],
		    yy: [twoDigits, function (d, v) {
		      var da = new Date(),
		          cent = +('' + da.getFullYear()).substr(0, 2);
		      d.year = '' + (v > 68 ? cent - 1 : cent) + v;
		    }],
		    h: [twoDigits, function (d, v) {
		      d.hour = v;
		    }],
		    m: [twoDigits, function (d, v) {
		      d.minute = v;
		    }],
		    s: [twoDigits, function (d, v) {
		      d.second = v;
		    }],
		    yyyy: [fourDigits, function (d, v) {
		      d.year = v;
		    }],
		    S: ['\\d', function (d, v) {
		      d.millisecond = v * 100;
		    }],
		    SS: ['\\d{2}', function (d, v) {
		      d.millisecond = v * 10;
		    }],
		    SSS: [threeDigits, function (d, v) {
		      d.millisecond = v;
		    }],
		    D: [twoDigits, noop],
		    ddd: [word, noop],
		    MMM: [word, monthUpdate('monthNamesShort')],
		    MMMM: [word, monthUpdate('monthNames')],
		    a: [word, function (d, v, i18n) {
		      var val = v.toLowerCase();
		      if (val === i18n.amPm[0]) {
		        d.isPm = false;
		      } else if (val === i18n.amPm[1]) {
		        d.isPm = true;
		      }
		    }],
		    ZZ: ['[^\\s]*?[\\+\\-]\\d\\d:?\\d\\d|[^\\s]*?Z', function (d, v) {
		      var parts = (v + '').match(/([+-]|\d\d)/gi),
		          minutes;

		      if (parts) {
		        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);
		        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;
		      }
		    }]
		  };
		  parseFlags.dd = parseFlags.d;
		  parseFlags.dddd = parseFlags.ddd;
		  parseFlags.DD = parseFlags.D;
		  parseFlags.mm = parseFlags.m;
		  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;
		  parseFlags.MM = parseFlags.M;
		  parseFlags.ss = parseFlags.s;
		  parseFlags.A = parseFlags.a;

		  // Some common format strings
		  fecha.masks = {
		    default: 'ddd MMM dd yyyy HH:mm:ss',
		    shortDate: 'M/D/yy',
		    mediumDate: 'MMM d, yyyy',
		    longDate: 'MMMM d, yyyy',
		    fullDate: 'dddd, MMMM d, yyyy',
		    shortTime: 'HH:mm',
		    mediumTime: 'HH:mm:ss',
		    longTime: 'HH:mm:ss.SSS'
		  };

		  /***
		   * Format a date
		   * @method format
		   * @param {Date|number} dateObj
		   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'
		   */
		  fecha.format = function (dateObj, mask, i18nSettings) {
		    var i18n = i18nSettings || fecha.i18n;

		    if (typeof dateObj === 'number') {
		      dateObj = new Date(dateObj);
		    }

		    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {
		      throw new Error('Invalid Date in fecha.format');
		    }

		    mask = fecha.masks[mask] || mask || fecha.masks['default'];

		    var literals = [];

		    // Make literals inactive by replacing them with ??
		    mask = mask.replace(literal, function ($0, $1) {
		      literals.push($1);
		      return '@@@';
		    });
		    // Apply formatting rules
		    mask = mask.replace(token, function ($0) {
		      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);
		    });
		    // Inline literal values back into the formatted value
		    return mask.replace(/@@@/g, function () {
		      return literals.shift();
		    });
		  };

		  /**
		   * Parse a date string into an object, changes - into /
		   * @method parse
		   * @param {string} dateStr Date string
		   * @param {string} format Date parse format
		   * @returns {Date|boolean}
		   */
		  fecha.parse = function (dateStr, format, i18nSettings) {
		    var i18n = i18nSettings || fecha.i18n;

		    if (typeof format !== 'string') {
		      throw new Error('Invalid format in fecha.parse');
		    }

		    format = fecha.masks[format] || format;

		    // Avoid regular expression denial of service, fail early for really long strings
		    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS
		    if (dateStr.length > 1000) {
		      return null;
		    }

		    var dateInfo = {};
		    var parseInfo = [];
		    var literals = [];
		    format = format.replace(literal, function ($0, $1) {
		      literals.push($1);
		      return '@@@';
		    });
		    var newFormat = regexEscape(format).replace(token, function ($0) {
		      if (parseFlags[$0]) {
		        var info = parseFlags[$0];
		        parseInfo.push(info[1]);
		        return '(' + info[0] + ')';
		      }

		      return $0;
		    });
		    newFormat = newFormat.replace(/@@@/g, function () {
		      return literals.shift();
		    });
		    var matches = dateStr.match(new RegExp(newFormat, 'i'));
		    if (!matches) {
		      return null;
		    }

		    for (var i = 1; i < matches.length; i++) {
		      parseInfo[i - 1](dateInfo, matches[i], i18n);
		    }

		    var today = new Date();
		    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {
		      dateInfo.hour = +dateInfo.hour + 12;
		    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {
		      dateInfo.hour = 0;
		    }

		    var date;
		    if (dateInfo.timezoneOffset != null) {
		      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;
		      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));
		    } else {
		      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);
		    }
		    return date;
		  };

		  /* istanbul ignore next */
		  if (module.exports) {
		    module.exports = fecha;
		  } else {
		    main.fecha = fecha;
		  }
		})(undefined); 
	} (date$1));
	return date$1.exports;
}

var locale$1 = {};

var zhCN = {};

var hasRequiredZhCN;

function requireZhCN () {
	if (hasRequiredZhCN) return zhCN;
	hasRequiredZhCN = 1;

	zhCN.__esModule = true;
	zhCN.default = {
	  el: {
	    colorpicker: {
	      confirm: '确定',
	      clear: '清空'
	    },
	    datepicker: {
	      now: '此刻',
	      today: '今天',
	      cancel: '取消',
	      clear: '清空',
	      confirm: '确定',
	      selectDate: '选择日期',
	      selectTime: '选择时间',
	      startDate: '开始日期',
	      startTime: '开始时间',
	      endDate: '结束日期',
	      endTime: '结束时间',
	      prevYear: '前一年',
	      nextYear: '后一年',
	      prevMonth: '上个月',
	      nextMonth: '下个月',
	      year: '年',
	      month1: '1 月',
	      month2: '2 月',
	      month3: '3 月',
	      month4: '4 月',
	      month5: '5 月',
	      month6: '6 月',
	      month7: '7 月',
	      month8: '8 月',
	      month9: '9 月',
	      month10: '10 月',
	      month11: '11 月',
	      month12: '12 月',
	      // week: '周次',
	      weeks: {
	        sun: '日',
	        mon: '一',
	        tue: '二',
	        wed: '三',
	        thu: '四',
	        fri: '五',
	        sat: '六'
	      },
	      months: {
	        jan: '一月',
	        feb: '二月',
	        mar: '三月',
	        apr: '四月',
	        may: '五月',
	        jun: '六月',
	        jul: '七月',
	        aug: '八月',
	        sep: '九月',
	        oct: '十月',
	        nov: '十一月',
	        dec: '十二月'
	      }
	    },
	    select: {
	      loading: '加载中',
	      noMatch: '无匹配数据',
	      noData: '无数据',
	      placeholder: '请选择'
	    },
	    cascader: {
	      noMatch: '无匹配数据',
	      loading: '加载中',
	      placeholder: '请选择',
	      noData: '暂无数据'
	    },
	    pagination: {
	      goto: '前往',
	      pagesize: '条/页',
	      total: '共 {total} 条',
	      pageClassifier: '页'
	    },
	    messagebox: {
	      title: '提示',
	      confirm: '确定',
	      cancel: '取消',
	      error: '输入的数据不合法!'
	    },
	    upload: {
	      deleteTip: '按 delete 键可删除',
	      delete: '删除',
	      preview: '查看图片',
	      continue: '继续上传'
	    },
	    table: {
	      emptyText: '暂无数据',
	      confirmFilter: '筛选',
	      resetFilter: '重置',
	      clearFilter: '全部',
	      sumText: '合计'
	    },
	    tree: {
	      emptyText: '暂无数据'
	    },
	    transfer: {
	      noMatch: '无匹配数据',
	      noData: '无数据',
	      titles: ['列表 1', '列表 2'],
	      filterPlaceholder: '请输入搜索内容',
	      noCheckedFormat: '共 {total} 项',
	      hasCheckedFormat: '已选 {checked}/{total} 项'
	    },
	    image: {
	      error: '加载失败'
	    },
	    pageHeader: {
	      title: '返回'
	    },
	    popconfirm: {
	      confirmButtonText: '确定',
	      cancelButtonText: '取消'
	    },
	    empty: {
	      description: '暂无数据'
	    }
	  }
	};
	return zhCN;
}

var cjs;
var hasRequiredCjs;

function requireCjs () {
	if (hasRequiredCjs) return cjs;
	hasRequiredCjs = 1;

	var isMergeableObject = function isMergeableObject(value) {
		return isNonNullObject(value)
			&& !isSpecial(value)
	};

	function isNonNullObject(value) {
		return !!value && typeof value === 'object'
	}

	function isSpecial(value) {
		var stringValue = Object.prototype.toString.call(value);

		return stringValue === '[object RegExp]'
			|| stringValue === '[object Date]'
			|| isReactElement(value)
	}

	// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
	var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
	var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

	function isReactElement(value) {
		return value.$$typeof === REACT_ELEMENT_TYPE
	}

	function emptyTarget(val) {
	    return Array.isArray(val) ? [] : {}
	}

	function cloneIfNecessary(value, optionsArgument) {
	    var clone = optionsArgument && optionsArgument.clone === true;
	    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
	}

	function defaultArrayMerge(target, source, optionsArgument) {
	    var destination = target.slice();
	    source.forEach(function(e, i) {
	        if (typeof destination[i] === 'undefined') {
	            destination[i] = cloneIfNecessary(e, optionsArgument);
	        } else if (isMergeableObject(e)) {
	            destination[i] = deepmerge(target[i], e, optionsArgument);
	        } else if (target.indexOf(e) === -1) {
	            destination.push(cloneIfNecessary(e, optionsArgument));
	        }
	    });
	    return destination
	}

	function mergeObject(target, source, optionsArgument) {
	    var destination = {};
	    if (isMergeableObject(target)) {
	        Object.keys(target).forEach(function(key) {
	            destination[key] = cloneIfNecessary(target[key], optionsArgument);
	        });
	    }
	    Object.keys(source).forEach(function(key) {
	        if (!isMergeableObject(source[key]) || !target[key]) {
	            destination[key] = cloneIfNecessary(source[key], optionsArgument);
	        } else {
	            destination[key] = deepmerge(target[key], source[key], optionsArgument);
	        }
	    });
	    return destination
	}

	function deepmerge(target, source, optionsArgument) {
	    var sourceIsArray = Array.isArray(source);
	    var targetIsArray = Array.isArray(target);
	    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
	    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

	    if (!sourceAndTargetTypesMatch) {
	        return cloneIfNecessary(source, optionsArgument)
	    } else if (sourceIsArray) {
	        var arrayMerge = options.arrayMerge || defaultArrayMerge;
	        return arrayMerge(target, source, optionsArgument)
	    } else {
	        return mergeObject(target, source, optionsArgument)
	    }
	}

	deepmerge.all = function deepmergeAll(array, optionsArgument) {
	    if (!Array.isArray(array) || array.length < 2) {
	        throw new Error('first argument should be an array with at least two elements')
	    }

	    // we are sure there are at least 2 values, so it is safe to have no initial value
	    return array.reduce(function(prev, next) {
	        return deepmerge(prev, next, optionsArgument)
	    })
	};

	var deepmerge_1 = deepmerge;

	cjs = deepmerge_1;
	return cjs;
}

var format$1 = {};

var util = {};

var types$1 = {};

var hasRequiredTypes;

function requireTypes () {
	if (hasRequiredTypes) return types$1;
	hasRequiredTypes = 1;

	types$1.__esModule = true;
	types$1.isDefined = types$1.isUndefined = types$1.isFunction = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	types$1.isString = isString;
	types$1.isObject = isObject;
	types$1.isHtmlElement = isHtmlElement;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function isString(obj) {
	  return Object.prototype.toString.call(obj) === '[object String]';
	}

	function isObject(obj) {
	  return Object.prototype.toString.call(obj) === '[object Object]';
	}

	function isHtmlElement(node) {
	  return node && node.nodeType === Node.ELEMENT_NODE;
	}

	/**
	 *  - Inspired:
	 *    https://github.com/jashkenas/underscore/blob/master/modules/isFunction.js
	 */
	var isFunction = function isFunction(functionToCheck) {
	  var getType = {};
	  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
	};

	if (typeof /./ !== 'function' && (typeof Int8Array === 'undefined' ? 'undefined' : _typeof(Int8Array)) !== 'object' && (_vue2.default.prototype.$isServer || typeof document.childNodes !== 'function')) {
	  types$1.isFunction = isFunction = function isFunction(obj) {
	    return typeof obj === 'function' || false;
	  };
	}

	types$1.isFunction = isFunction;
	types$1.isUndefined = function isUndefined(val) {
	  return val === void 0;
	};

	types$1.isDefined = function isDefined(val) {
	  return val !== undefined && val !== null;
	};
	return types$1;
}

var hasRequiredUtil;

function requireUtil () {
	if (hasRequiredUtil) return util;
	hasRequiredUtil = 1;

	util.__esModule = true;
	util.isMac = util.isEmpty = util.isEqual = util.arrayEquals = util.looseEqual = util.capitalize = util.kebabCase = util.autoprefixer = util.isFirefox = util.isEdge = util.isIE = util.coerceTruthyValueToArray = util.arrayFind = util.arrayFindIndex = util.escapeRegexpString = util.valueEquals = util.generateId = util.getValueByPath = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	util.noop = noop;
	util.hasOwn = hasOwn;
	util.toObject = toObject;
	util.getPropByPath = getPropByPath;
	util.rafThrottle = rafThrottle;
	util.objToArray = objToArray;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	var _types = requireTypes();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	function noop() {}
	function hasOwn(obj, key) {
	  return hasOwnProperty.call(obj, key);
	}
	function extend(to, _from) {
	  for (var key in _from) {
	    to[key] = _from[key];
	  }
	  return to;
	}
	function toObject(arr) {
	  var res = {};
	  for (var i = 0; i < arr.length; i++) {
	    if (arr[i]) {
	      extend(res, arr[i]);
	    }
	  }
	  return res;
	}
	util.getValueByPath = function getValueByPath(object, prop) {
	  prop = prop || '';
	  var paths = prop.split('.');
	  var current = object;
	  var result = null;
	  for (var i = 0, j = paths.length; i < j; i++) {
	    var path = paths[i];
	    if (!current) break;

	    if (i === j - 1) {
	      result = current[path];
	      break;
	    }
	    current = current[path];
	  }
	  return result;
	};

	function getPropByPath(obj, path, strict) {
	  var tempObj = obj;
	  path = path.replace(/\[(\w+)\]/g, '.$1');
	  path = path.replace(/^\./, '');

	  var keyArr = path.split('.');
	  var i = 0;
	  for (var len = keyArr.length; i < len - 1; ++i) {
	    if (!tempObj && !strict) break;
	    var key = keyArr[i];
	    if (key in tempObj) {
	      tempObj = tempObj[key];
	    } else {
	      if (strict) {
	        throw new Error('please transfer a valid prop path to form item!');
	      }
	      break;
	    }
	  }
	  return {
	    o: tempObj,
	    k: keyArr[i],
	    v: tempObj ? tempObj[keyArr[i]] : null
	  };
	}
	util.generateId = function generateId() {
	  return Math.floor(Math.random() * 10000);
	};

	util.valueEquals = function valueEquals(a, b) {
	  // see: https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript
	  if (a === b) return true;
	  if (!(a instanceof Array)) return false;
	  if (!(b instanceof Array)) return false;
	  if (a.length !== b.length) return false;
	  for (var i = 0; i !== a.length; ++i) {
	    if (a[i] !== b[i]) return false;
	  }
	  return true;
	};

	util.escapeRegexpString = function escapeRegexpString() {
	  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	  return String(value).replace(/[|\\{}()[\]^$+*?.]/g, '\\$&');
	};

	// TODO: use native Array.find, Array.findIndex when IE support is dropped
	var arrayFindIndex = util.arrayFindIndex = function arrayFindIndex(arr, pred) {
	  for (var i = 0; i !== arr.length; ++i) {
	    if (pred(arr[i])) {
	      return i;
	    }
	  }
	  return -1;
	};

	util.arrayFind = function arrayFind(arr, pred) {
	  var idx = arrayFindIndex(arr, pred);
	  return idx !== -1 ? arr[idx] : undefined;
	};

	// coerce truthy value to array
	util.coerceTruthyValueToArray = function coerceTruthyValueToArray(val) {
	  if (Array.isArray(val)) {
	    return val;
	  } else if (val) {
	    return [val];
	  } else {
	    return [];
	  }
	};

	util.isIE = function isIE() {
	  return !_vue2.default.prototype.$isServer && !isNaN(Number(document.documentMode));
	};

	util.isEdge = function isEdge() {
	  return !_vue2.default.prototype.$isServer && navigator.userAgent.indexOf('Edge') > -1;
	};

	util.isFirefox = function isFirefox() {
	  return !_vue2.default.prototype.$isServer && !!window.navigator.userAgent.match(/firefox/i);
	};

	util.autoprefixer = function autoprefixer(style) {
	  if ((typeof style === 'undefined' ? 'undefined' : _typeof(style)) !== 'object') return style;
	  var rules = ['transform', 'transition', 'animation'];
	  var prefixes = ['ms-', 'webkit-'];
	  rules.forEach(function (rule) {
	    var value = style[rule];
	    if (rule && value) {
	      prefixes.forEach(function (prefix) {
	        style[prefix + rule] = value;
	      });
	    }
	  });
	  return style;
	};

	util.kebabCase = function kebabCase(str) {
	  var hyphenateRE = /([^-])([A-Z])/g;
	  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();
	};

	util.capitalize = function capitalize(str) {
	  if (!(0, _types.isString)(str)) return str;
	  return str.charAt(0).toUpperCase() + str.slice(1);
	};

	var looseEqual = util.looseEqual = function looseEqual(a, b) {
	  var isObjectA = (0, _types.isObject)(a);
	  var isObjectB = (0, _types.isObject)(b);
	  if (isObjectA && isObjectB) {
	    return JSON.stringify(a) === JSON.stringify(b);
	  } else if (!isObjectA && !isObjectB) {
	    return String(a) === String(b);
	  } else {
	    return false;
	  }
	};

	var arrayEquals = util.arrayEquals = function arrayEquals(arrayA, arrayB) {
	  arrayA = arrayA || [];
	  arrayB = arrayB || [];

	  if (arrayA.length !== arrayB.length) {
	    return false;
	  }

	  for (var i = 0; i < arrayA.length; i++) {
	    if (!looseEqual(arrayA[i], arrayB[i])) {
	      return false;
	    }
	  }

	  return true;
	};

	util.isEqual = function isEqual(value1, value2) {
	  if (Array.isArray(value1) && Array.isArray(value2)) {
	    return arrayEquals(value1, value2);
	  }
	  return looseEqual(value1, value2);
	};

	var isEmpty = util.isEmpty = function isEmpty(val) {
	  // null or undefined
	  if (val == null) return true;

	  if (typeof val === 'boolean') return false;

	  if (typeof val === 'number') return !val;

	  if (val instanceof Error) return val.message === '';

	  switch (Object.prototype.toString.call(val)) {
	    // String or Array
	    case '[object String]':
	    case '[object Array]':
	      return !val.length;

	    // Map or Set or File
	    case '[object File]':
	    case '[object Map]':
	    case '[object Set]':
	      {
	        return !val.size;
	      }
	    // Plain Object
	    case '[object Object]':
	      {
	        return !Object.keys(val).length;
	      }
	  }

	  return false;
	};

	function rafThrottle(fn) {
	  var locked = false;
	  return function () {
	    var _this = this;

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    if (locked) return;
	    locked = true;
	    window.requestAnimationFrame(function (_) {
	      fn.apply(_this, args);
	      locked = false;
	    });
	  };
	}

	function objToArray(obj) {
	  if (Array.isArray(obj)) {
	    return obj;
	  }
	  return isEmpty(obj) ? [] : [obj];
	}

	util.isMac = function isMac() {
	  return !_vue2.default.prototype.$isServer && /macintosh|mac os x/i.test(navigator.userAgent);
	};
	return util;
}

var hasRequiredFormat;

function requireFormat () {
	if (hasRequiredFormat) return format$1;
	hasRequiredFormat = 1;

	format$1.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	format$1.default = function (Vue) {

	  /**
	   * template
	   *
	   * @param {String} string
	   * @param {Array} ...args
	   * @return {String}
	   */

	  function template(string) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    if (args.length === 1 && _typeof(args[0]) === 'object') {
	      args = args[0];
	    }

	    if (!args || !args.hasOwnProperty) {
	      args = {};
	    }

	    return string.replace(RE_NARGS, function (match, prefix, i, index) {
	      var result = void 0;

	      if (string[index - 1] === '{' && string[index + match.length] === '}') {
	        return i;
	      } else {
	        result = (0, _util.hasOwn)(args, i) ? args[i] : null;
	        if (result === null || result === undefined) {
	          return '';
	        }

	        return result;
	      }
	    });
	  }

	  return template;
	};

	var _util = requireUtil();

	var RE_NARGS = /(%|)\{([0-9a-zA-Z_]+)\}/g;
	/**
	 *  String format template
	 *  - Inspired:
	 *    https://github.com/Matt-Esch/string-template/index.js
	 */
	return format$1;
}

var hasRequiredLocale$1;

function requireLocale$1 () {
	if (hasRequiredLocale$1) return locale$1;
	hasRequiredLocale$1 = 1;

	locale$1.__esModule = true;
	locale$1.i18n = locale$1.use = locale$1.t = undefined;

	var _zhCN = requireZhCN();

	var _zhCN2 = _interopRequireDefault(_zhCN);

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	var _deepmerge = requireCjs();

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	var _format = requireFormat();

	var _format2 = _interopRequireDefault(_format);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var format = (0, _format2.default)(_vue2.default);
	var lang = _zhCN2.default;
	var merged = false;
	var i18nHandler = function i18nHandler() {
	  var vuei18n = Object.getPrototypeOf(this || _vue2.default).$t;
	  if (typeof vuei18n === 'function' && !!_vue2.default.locale) {
	    if (!merged) {
	      merged = true;
	      _vue2.default.locale(_vue2.default.config.lang, (0, _deepmerge2.default)(lang, _vue2.default.locale(_vue2.default.config.lang) || {}, { clone: true }));
	    }
	    return vuei18n.apply(this, arguments);
	  }
	};

	var t = locale$1.t = function t(path, options) {
	  var value = i18nHandler.apply(this, arguments);
	  if (value !== null && value !== undefined) return value;

	  var array = path.split('.');
	  var current = lang;

	  for (var i = 0, j = array.length; i < j; i++) {
	    var property = array[i];
	    value = current[property];
	    if (i === j - 1) return format(value, options);
	    if (!value) return '';
	    current = value;
	  }
	  return '';
	};

	var use = locale$1.use = function use(l) {
	  lang = l || lang;
	};

	var i18n = locale$1.i18n = function i18n(fn) {
	  i18nHandler = fn || i18nHandler;
	};

	locale$1.default = { use: use, t: t, i18n: i18n };
	return locale$1;
}

var hasRequiredDateUtil;

function requireDateUtil () {
	if (hasRequiredDateUtil) return dateUtil;
	hasRequiredDateUtil = 1;

	dateUtil.__esModule = true;
	dateUtil.validateRangeInOneMonth = dateUtil.extractTimeFormat = dateUtil.extractDateFormat = dateUtil.nextYear = dateUtil.prevYear = dateUtil.nextMonth = dateUtil.prevMonth = dateUtil.changeYearMonthAndClampDate = dateUtil.timeWithinRange = dateUtil.limitTimeRange = dateUtil.clearMilliseconds = dateUtil.clearTime = dateUtil.modifyWithTimeString = dateUtil.modifyTime = dateUtil.modifyDate = dateUtil.range = dateUtil.getRangeMinutes = dateUtil.getMonthDays = dateUtil.getPrevMonthLastDays = dateUtil.getRangeHours = dateUtil.getWeekNumber = dateUtil.getStartDateOfMonth = dateUtil.nextDate = dateUtil.prevDate = dateUtil.getFirstDayOfMonth = dateUtil.getDayCountOfYear = dateUtil.getDayCountOfMonth = dateUtil.parseDate = dateUtil.formatDate = dateUtil.isDateObject = dateUtil.isDate = dateUtil.toDate = dateUtil.getI18nSettings = undefined;

	var _date = requireDate();

	var _date2 = _interopRequireDefault(_date);

	var _locale = requireLocale$1();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var weeks = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
	var months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];

	var newArray = function newArray(start, end) {
	  var result = [];
	  for (var i = start; i <= end; i++) {
	    result.push(i);
	  }
	  return result;
	};

	var getI18nSettings = dateUtil.getI18nSettings = function getI18nSettings() {
	  return {
	    dayNamesShort: weeks.map(function (week) {
	      return (0, _locale.t)('el.datepicker.weeks.' + week);
	    }),
	    dayNames: weeks.map(function (week) {
	      return (0, _locale.t)('el.datepicker.weeks.' + week);
	    }),
	    monthNamesShort: months.map(function (month) {
	      return (0, _locale.t)('el.datepicker.months.' + month);
	    }),
	    monthNames: months.map(function (month, index) {
	      return (0, _locale.t)('el.datepicker.month' + (index + 1));
	    }),
	    amPm: ['am', 'pm']
	  };
	};

	var toDate = dateUtil.toDate = function toDate(date) {
	  return isDate(date) ? new Date(date) : null;
	};

	var isDate = dateUtil.isDate = function isDate(date) {
	  if (date === null || date === undefined) return false;
	  if (isNaN(new Date(date).getTime())) return false;
	  if (Array.isArray(date)) return false; // deal with `new Date([ new Date() ]) -> new Date()`
	  return true;
	};

	dateUtil.isDateObject = function isDateObject(val) {
	  return val instanceof Date;
	};

	dateUtil.formatDate = function formatDate(date, format) {
	  date = toDate(date);
	  if (!date) return '';
	  return _date2.default.format(date, format || 'yyyy-MM-dd', getI18nSettings());
	};

	var parseDate = dateUtil.parseDate = function parseDate(string, format) {
	  return _date2.default.parse(string, format || 'yyyy-MM-dd', getI18nSettings());
	};

	var getDayCountOfMonth = dateUtil.getDayCountOfMonth = function getDayCountOfMonth(year, month) {
	  if (isNaN(+month)) return 31;

	  return new Date(year, +month + 1, 0).getDate();
	};

	dateUtil.getDayCountOfYear = function getDayCountOfYear(year) {
	  var isLeapYear = year % 400 === 0 || year % 100 !== 0 && year % 4 === 0;
	  return isLeapYear ? 366 : 365;
	};

	dateUtil.getFirstDayOfMonth = function getFirstDayOfMonth(date) {
	  var temp = new Date(date.getTime());
	  temp.setDate(1);
	  return temp.getDay();
	};

	// see: https://stackoverflow.com/questions/3674539/incrementing-a-date-in-javascript
	// {prev, next} Date should work for Daylight Saving Time
	// Adding 24 * 60 * 60 * 1000 does not work in the above scenario
	var prevDate = dateUtil.prevDate = function prevDate(date) {
	  var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

	  return new Date(date.getFullYear(), date.getMonth(), date.getDate() - amount);
	};

	dateUtil.nextDate = function nextDate(date) {
	  var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

	  return new Date(date.getFullYear(), date.getMonth(), date.getDate() + amount);
	};

	dateUtil.getStartDateOfMonth = function getStartDateOfMonth(year, month) {
	  var result = new Date(year, month, 1);
	  var day = result.getDay();

	  if (day === 0) {
	    return prevDate(result, 7);
	  } else {
	    return prevDate(result, day);
	  }
	};

	dateUtil.getWeekNumber = function getWeekNumber(src) {
	  if (!isDate(src)) return null;
	  var date = new Date(src.getTime());
	  date.setHours(0, 0, 0, 0);
	  // Thursday in current week decides the year.
	  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
	  // January 4 is always in week 1.
	  var week1 = new Date(date.getFullYear(), 0, 4);
	  // Adjust to Thursday in week 1 and count number of weeks from date to week 1.
	  // Rounding should be fine for Daylight Saving Time. Its shift should never be more than 12 hours.
	  return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);
	};

	dateUtil.getRangeHours = function getRangeHours(ranges) {
	  var hours = [];
	  var disabledHours = [];

	  (ranges || []).forEach(function (range) {
	    var value = range.map(function (date) {
	      return date.getHours();
	    });

	    disabledHours = disabledHours.concat(newArray(value[0], value[1]));
	  });

	  if (disabledHours.length) {
	    for (var i = 0; i < 24; i++) {
	      hours[i] = disabledHours.indexOf(i) === -1;
	    }
	  } else {
	    for (var _i = 0; _i < 24; _i++) {
	      hours[_i] = false;
	    }
	  }

	  return hours;
	};

	dateUtil.getPrevMonthLastDays = function getPrevMonthLastDays(date, amount) {
	  if (amount <= 0) return [];
	  var temp = new Date(date.getTime());
	  temp.setDate(0);
	  var lastDay = temp.getDate();
	  return range(amount).map(function (_, index) {
	    return lastDay - (amount - index - 1);
	  });
	};

	dateUtil.getMonthDays = function getMonthDays(date) {
	  var temp = new Date(date.getFullYear(), date.getMonth() + 1, 0);
	  var days = temp.getDate();
	  return range(days).map(function (_, index) {
	    return index + 1;
	  });
	};

	function setRangeData(arr, start, end, value) {
	  for (var i = start; i < end; i++) {
	    arr[i] = value;
	  }
	}

	dateUtil.getRangeMinutes = function getRangeMinutes(ranges, hour) {
	  var minutes = new Array(60);

	  if (ranges.length > 0) {
	    ranges.forEach(function (range) {
	      var start = range[0];
	      var end = range[1];
	      var startHour = start.getHours();
	      var startMinute = start.getMinutes();
	      var endHour = end.getHours();
	      var endMinute = end.getMinutes();
	      if (startHour === hour && endHour !== hour) {
	        setRangeData(minutes, startMinute, 60, true);
	      } else if (startHour === hour && endHour === hour) {
	        setRangeData(minutes, startMinute, endMinute + 1, true);
	      } else if (startHour !== hour && endHour === hour) {
	        setRangeData(minutes, 0, endMinute + 1, true);
	      } else if (startHour < hour && endHour > hour) {
	        setRangeData(minutes, 0, 60, true);
	      }
	    });
	  } else {
	    setRangeData(minutes, 0, 60, true);
	  }
	  return minutes;
	};

	var range = dateUtil.range = function range(n) {
	  // see https://stackoverflow.com/questions/3746725/create-a-javascript-array-containing-1-n
	  return Array.apply(null, { length: n }).map(function (_, n) {
	    return n;
	  });
	};

	var modifyDate = dateUtil.modifyDate = function modifyDate(date, y, m, d) {
	  return new Date(y, m, d, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());
	};

	var modifyTime = dateUtil.modifyTime = function modifyTime(date, h, m, s) {
	  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), h, m, s, date.getMilliseconds());
	};

	dateUtil.modifyWithTimeString = function modifyWithTimeString(date, time) {
	  if (date == null || !time) {
	    return date;
	  }
	  time = parseDate(time, 'HH:mm:ss');
	  return modifyTime(date, time.getHours(), time.getMinutes(), time.getSeconds());
	};

	dateUtil.clearTime = function clearTime(date) {
	  return new Date(date.getFullYear(), date.getMonth(), date.getDate());
	};

	dateUtil.clearMilliseconds = function clearMilliseconds(date) {
	  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), 0);
	};

	var limitTimeRange = dateUtil.limitTimeRange = function limitTimeRange(date, ranges) {
	  var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'HH:mm:ss';

	  // TODO: refactory a more elegant solution
	  if (ranges.length === 0) return date;
	  var normalizeDate = function normalizeDate(date) {
	    return _date2.default.parse(_date2.default.format(date, format), format);
	  };
	  var ndate = normalizeDate(date);
	  var nranges = ranges.map(function (range) {
	    return range.map(normalizeDate);
	  });
	  if (nranges.some(function (nrange) {
	    return ndate >= nrange[0] && ndate <= nrange[1];
	  })) return date;

	  var minDate = nranges[0][0];
	  var maxDate = nranges[0][0];

	  nranges.forEach(function (nrange) {
	    minDate = new Date(Math.min(nrange[0], minDate));
	    maxDate = new Date(Math.max(nrange[1], minDate));
	  });

	  var ret = ndate < minDate ? minDate : maxDate;
	  // preserve Year/Month/Date
	  return modifyDate(ret, date.getFullYear(), date.getMonth(), date.getDate());
	};

	dateUtil.timeWithinRange = function timeWithinRange(date, selectableRange, format) {
	  var limitedDate = limitTimeRange(date, selectableRange, format);
	  return limitedDate.getTime() === date.getTime();
	};

	var changeYearMonthAndClampDate = dateUtil.changeYearMonthAndClampDate = function changeYearMonthAndClampDate(date, year, month) {
	  // clamp date to the number of days in `year`, `month`
	  // eg: (2010-1-31, 2010, 2) => 2010-2-28
	  var monthDate = Math.min(date.getDate(), getDayCountOfMonth(year, month));
	  return modifyDate(date, year, month, monthDate);
	};

	dateUtil.prevMonth = function prevMonth(date) {
	  var year = date.getFullYear();
	  var month = date.getMonth();
	  return month === 0 ? changeYearMonthAndClampDate(date, year - 1, 11) : changeYearMonthAndClampDate(date, year, month - 1);
	};

	dateUtil.nextMonth = function nextMonth(date) {
	  var year = date.getFullYear();
	  var month = date.getMonth();
	  return month === 11 ? changeYearMonthAndClampDate(date, year + 1, 0) : changeYearMonthAndClampDate(date, year, month + 1);
	};

	dateUtil.prevYear = function prevYear(date) {
	  var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

	  var year = date.getFullYear();
	  var month = date.getMonth();
	  return changeYearMonthAndClampDate(date, year - amount, month);
	};

	dateUtil.nextYear = function nextYear(date) {
	  var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

	  var year = date.getFullYear();
	  var month = date.getMonth();
	  return changeYearMonthAndClampDate(date, year + amount, month);
	};

	dateUtil.extractDateFormat = function extractDateFormat(format) {
	  return format.replace(/\W?m{1,2}|\W?ZZ/g, '').replace(/\W?h{1,2}|\W?s{1,3}|\W?a/gi, '').trim();
	};

	dateUtil.extractTimeFormat = function extractTimeFormat(format) {
	  return format.replace(/\W?D{1,2}|\W?Do|\W?d{1,4}|\W?M{1,4}|\W?y{2,4}/g, '').trim();
	};

	dateUtil.validateRangeInOneMonth = function validateRangeInOneMonth(start, end) {
	  return start.getMonth() === end.getMonth() && start.getFullYear() === end.getFullYear();
	};
	return dateUtil;
}

var dom = {};

var hasRequiredDom;

function requireDom () {
	if (hasRequiredDom) return dom;
	hasRequiredDom = 1;

	dom.__esModule = true;
	dom.isInContainer = dom.getScrollContainer = dom.isScroll = dom.getStyle = dom.once = dom.off = dom.on = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /* istanbul ignore next */

	dom.hasClass = hasClass;
	dom.addClass = addClass;
	dom.removeClass = removeClass;
	dom.setStyle = setStyle;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var isServer = _vue2.default.prototype.$isServer;
	var SPECIAL_CHARS_REGEXP = /([\:\-\_]+(.))/g;
	var MOZ_HACK_REGEXP = /^moz([A-Z])/;
	var ieVersion = isServer ? 0 : Number(document.documentMode);

	/* istanbul ignore next */
	var trim = function trim(string) {
	  return (string || '').replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g, '');
	};
	/* istanbul ignore next */
	var camelCase = function camelCase(name) {
	  return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {
	    return offset ? letter.toUpperCase() : letter;
	  }).replace(MOZ_HACK_REGEXP, 'Moz$1');
	};

	/* istanbul ignore next */
	var on = dom.on = function () {
	  if (!isServer && document.addEventListener) {
	    return function (element, event, handler) {
	      if (element && event && handler) {
	        element.addEventListener(event, handler, false);
	      }
	    };
	  } else {
	    return function (element, event, handler) {
	      if (element && event && handler) {
	        element.attachEvent('on' + event, handler);
	      }
	    };
	  }
	}();

	/* istanbul ignore next */
	var off = dom.off = function () {
	  if (!isServer && document.removeEventListener) {
	    return function (element, event, handler) {
	      if (element && event) {
	        element.removeEventListener(event, handler, false);
	      }
	    };
	  } else {
	    return function (element, event, handler) {
	      if (element && event) {
	        element.detachEvent('on' + event, handler);
	      }
	    };
	  }
	}();

	/* istanbul ignore next */
	dom.once = function once(el, event, fn) {
	  var listener = function listener() {
	    if (fn) {
	      fn.apply(this, arguments);
	    }
	    off(el, event, listener);
	  };
	  on(el, event, listener);
	};

	/* istanbul ignore next */
	function hasClass(el, cls) {
	  if (!el || !cls) return false;
	  if (cls.indexOf(' ') !== -1) throw new Error('className should not contain space.');
	  if (el.classList) {
	    return el.classList.contains(cls);
	  } else {
	    return (' ' + el.className + ' ').indexOf(' ' + cls + ' ') > -1;
	  }
	}
	/* istanbul ignore next */
	function addClass(el, cls) {
	  if (!el) return;
	  var curClass = el.className;
	  var classes = (cls || '').split(' ');

	  for (var i = 0, j = classes.length; i < j; i++) {
	    var clsName = classes[i];
	    if (!clsName) continue;

	    if (el.classList) {
	      el.classList.add(clsName);
	    } else if (!hasClass(el, clsName)) {
	      curClass += ' ' + clsName;
	    }
	  }
	  if (!el.classList) {
	    el.setAttribute('class', curClass);
	  }
	}
	/* istanbul ignore next */
	function removeClass(el, cls) {
	  if (!el || !cls) return;
	  var classes = cls.split(' ');
	  var curClass = ' ' + el.className + ' ';

	  for (var i = 0, j = classes.length; i < j; i++) {
	    var clsName = classes[i];
	    if (!clsName) continue;

	    if (el.classList) {
	      el.classList.remove(clsName);
	    } else if (hasClass(el, clsName)) {
	      curClass = curClass.replace(' ' + clsName + ' ', ' ');
	    }
	  }
	  if (!el.classList) {
	    el.setAttribute('class', trim(curClass));
	  }
	}
	/* istanbul ignore next */
	var getStyle = dom.getStyle = ieVersion < 9 ? function (element, styleName) {
	  if (isServer) return;
	  if (!element || !styleName) return null;
	  styleName = camelCase(styleName);
	  if (styleName === 'float') {
	    styleName = 'styleFloat';
	  }
	  try {
	    switch (styleName) {
	      case 'opacity':
	        try {
	          return element.filters.item('alpha').opacity / 100;
	        } catch (e) {
	          return 1.0;
	        }
	      default:
	        return element.style[styleName] || element.currentStyle ? element.currentStyle[styleName] : null;
	    }
	  } catch (e) {
	    return element.style[styleName];
	  }
	} : function (element, styleName) {
	  if (isServer) return;
	  if (!element || !styleName) return null;
	  styleName = camelCase(styleName);
	  if (styleName === 'float') {
	    styleName = 'cssFloat';
	  }
	  try {
	    var computed = document.defaultView.getComputedStyle(element, '');
	    return element.style[styleName] || computed ? computed[styleName] : null;
	  } catch (e) {
	    return element.style[styleName];
	  }
	};

	/* istanbul ignore next */
	function setStyle(element, styleName, value) {
	  if (!element || !styleName) return;

	  if ((typeof styleName === 'undefined' ? 'undefined' : _typeof(styleName)) === 'object') {
	    for (var prop in styleName) {
	      if (styleName.hasOwnProperty(prop)) {
	        setStyle(element, prop, styleName[prop]);
	      }
	    }
	  } else {
	    styleName = camelCase(styleName);
	    if (styleName === 'opacity' && ieVersion < 9) {
	      element.style.filter = isNaN(value) ? '' : 'alpha(opacity=' + value * 100 + ')';
	    } else {
	      element.style[styleName] = value;
	    }
	  }
	}
	var isScroll = dom.isScroll = function isScroll(el, vertical) {
	  if (isServer) return;

	  var determinedDirection = vertical !== null && vertical !== undefined;
	  var overflow = determinedDirection ? vertical ? getStyle(el, 'overflow-y') : getStyle(el, 'overflow-x') : getStyle(el, 'overflow');

	  return overflow.match(/(scroll|auto|overlay)/);
	};

	dom.getScrollContainer = function getScrollContainer(el, vertical) {
	  if (isServer) return;

	  var parent = el;
	  while (parent) {
	    if ([window, document, document.documentElement].includes(parent)) {
	      return window;
	    }
	    if (isScroll(parent, vertical)) {
	      return parent;
	    }
	    parent = parent.parentNode;
	  }

	  return parent;
	};

	dom.isInContainer = function isInContainer(el, container) {
	  if (isServer || !el || !container) return false;

	  var elRect = el.getBoundingClientRect();
	  var containerRect = void 0;

	  if ([window, document, document.documentElement, null, undefined].includes(container)) {
	    containerRect = {
	      top: 0,
	      right: window.innerWidth,
	      bottom: window.innerHeight,
	      left: 0
	    };
	  } else {
	    containerRect = container.getBoundingClientRect();
	  }

	  return elRect.top < containerRect.bottom && elRect.bottom > containerRect.top && elRect.right > containerRect.left && elRect.left < containerRect.right;
	};
	return dom;
}

var emitter = {};

var hasRequiredEmitter;

function requireEmitter () {
	if (hasRequiredEmitter) return emitter;
	hasRequiredEmitter = 1;

	emitter.__esModule = true;
	function _broadcast(componentName, eventName, params) {
	  this.$children.forEach(function (child) {
	    var name = child.$options.componentName;

	    if (name === componentName) {
	      child.$emit.apply(child, [eventName].concat(params));
	    } else {
	      _broadcast.apply(child, [componentName, eventName].concat([params]));
	    }
	  });
	}
	emitter.default = {
	  methods: {
	    dispatch: function dispatch(componentName, eventName, params) {
	      var parent = this.$parent || this.$root;
	      var name = parent.$options.componentName;

	      while (parent && (!name || name !== componentName)) {
	        parent = parent.$parent;

	        if (parent) {
	          name = parent.$options.componentName;
	        }
	      }
	      if (parent) {
	        parent.$emit.apply(parent, [eventName].concat(params));
	      }
	    },
	    broadcast: function broadcast(componentName, eventName, params) {
	      _broadcast.call(this, componentName, eventName, params);
	    }
	  }
	};
	return emitter;
}

var locale = {};

var hasRequiredLocale;

function requireLocale () {
	if (hasRequiredLocale) return locale;
	hasRequiredLocale = 1;

	locale.__esModule = true;

	var _locale = requireLocale$1();

	locale.default = {
	  methods: {
	    t: function t() {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _locale.t.apply(this, args);
	    }
	  }
	};
	return locale;
}

var vuePopper = {};

var popup = {};

var merge = {};

var hasRequiredMerge;

function requireMerge () {
	if (hasRequiredMerge) return merge;
	hasRequiredMerge = 1;

	merge.__esModule = true;

	merge.default = function (target) {
	  for (var i = 1, j = arguments.length; i < j; i++) {
	    var source = arguments[i] || {};
	    for (var prop in source) {
	      if (source.hasOwnProperty(prop)) {
	        var value = source[prop];
	        if (value !== undefined) {
	          target[prop] = value;
	        }
	      }
	    }
	  }

	  return target;
	};
	return merge;
}

var popupManager = {};

var hasRequiredPopupManager;

function requirePopupManager () {
	if (hasRequiredPopupManager) return popupManager;
	hasRequiredPopupManager = 1;

	popupManager.__esModule = true;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	var _dom = requireDom();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var hasModal = false;
	var hasInitZIndex = false;
	var zIndex = void 0;

	var getModal = function getModal() {
	  if (_vue2.default.prototype.$isServer) return;
	  var modalDom = PopupManager.modalDom;
	  if (modalDom) {
	    hasModal = true;
	  } else {
	    hasModal = false;
	    modalDom = document.createElement('div');
	    PopupManager.modalDom = modalDom;

	    modalDom.addEventListener('touchmove', function (event) {
	      event.preventDefault();
	      event.stopPropagation();
	    });

	    modalDom.addEventListener('click', function () {
	      PopupManager.doOnModalClick && PopupManager.doOnModalClick();
	    });
	  }

	  return modalDom;
	};

	var instances = {};

	var PopupManager = {
	  modalFade: true,

	  getInstance: function getInstance(id) {
	    return instances[id];
	  },

	  register: function register(id, instance) {
	    if (id && instance) {
	      instances[id] = instance;
	    }
	  },

	  deregister: function deregister(id) {
	    if (id) {
	      instances[id] = null;
	      delete instances[id];
	    }
	  },

	  nextZIndex: function nextZIndex() {
	    return PopupManager.zIndex++;
	  },

	  modalStack: [],

	  doOnModalClick: function doOnModalClick() {
	    var topItem = PopupManager.modalStack[PopupManager.modalStack.length - 1];
	    if (!topItem) return;

	    var instance = PopupManager.getInstance(topItem.id);
	    if (instance && instance.closeOnClickModal) {
	      instance.close();
	    }
	  },

	  openModal: function openModal(id, zIndex, dom, modalClass, modalFade) {
	    if (_vue2.default.prototype.$isServer) return;
	    if (!id || zIndex === undefined) return;
	    this.modalFade = modalFade;

	    var modalStack = this.modalStack;

	    for (var i = 0, j = modalStack.length; i < j; i++) {
	      var item = modalStack[i];
	      if (item.id === id) {
	        return;
	      }
	    }

	    var modalDom = getModal();

	    (0, _dom.addClass)(modalDom, 'v-modal');
	    if (this.modalFade && !hasModal) {
	      (0, _dom.addClass)(modalDom, 'v-modal-enter');
	    }
	    if (modalClass) {
	      var classArr = modalClass.trim().split(/\s+/);
	      classArr.forEach(function (item) {
	        return (0, _dom.addClass)(modalDom, item);
	      });
	    }
	    setTimeout(function () {
	      (0, _dom.removeClass)(modalDom, 'v-modal-enter');
	    }, 200);

	    if (dom && dom.parentNode && dom.parentNode.nodeType !== 11) {
	      dom.parentNode.appendChild(modalDom);
	    } else {
	      document.body.appendChild(modalDom);
	    }

	    if (zIndex) {
	      modalDom.style.zIndex = zIndex;
	    }
	    modalDom.tabIndex = 0;
	    modalDom.style.display = '';

	    this.modalStack.push({ id: id, zIndex: zIndex, modalClass: modalClass });
	  },

	  closeModal: function closeModal(id) {
	    var modalStack = this.modalStack;
	    var modalDom = getModal();

	    if (modalStack.length > 0) {
	      var topItem = modalStack[modalStack.length - 1];
	      if (topItem.id === id) {
	        if (topItem.modalClass) {
	          var classArr = topItem.modalClass.trim().split(/\s+/);
	          classArr.forEach(function (item) {
	            return (0, _dom.removeClass)(modalDom, item);
	          });
	        }

	        modalStack.pop();
	        if (modalStack.length > 0) {
	          modalDom.style.zIndex = modalStack[modalStack.length - 1].zIndex;
	        }
	      } else {
	        for (var i = modalStack.length - 1; i >= 0; i--) {
	          if (modalStack[i].id === id) {
	            modalStack.splice(i, 1);
	            break;
	          }
	        }
	      }
	    }

	    if (modalStack.length === 0) {
	      if (this.modalFade) {
	        (0, _dom.addClass)(modalDom, 'v-modal-leave');
	      }
	      setTimeout(function () {
	        if (modalStack.length === 0) {
	          if (modalDom.parentNode) modalDom.parentNode.removeChild(modalDom);
	          modalDom.style.display = 'none';
	          PopupManager.modalDom = undefined;
	        }
	        (0, _dom.removeClass)(modalDom, 'v-modal-leave');
	      }, 200);
	    }
	  }
	};

	Object.defineProperty(PopupManager, 'zIndex', {
	  configurable: true,
	  get: function get() {
	    if (!hasInitZIndex) {
	      zIndex = zIndex || (_vue2.default.prototype.$ELEMENT || {}).zIndex || 2000;
	      hasInitZIndex = true;
	    }
	    return zIndex;
	  },
	  set: function set(value) {
	    zIndex = value;
	  }
	});

	var getTopPopup = function getTopPopup() {
	  if (_vue2.default.prototype.$isServer) return;
	  if (PopupManager.modalStack.length > 0) {
	    var topPopup = PopupManager.modalStack[PopupManager.modalStack.length - 1];
	    if (!topPopup) return;
	    var instance = PopupManager.getInstance(topPopup.id);

	    return instance;
	  }
	};

	if (!_vue2.default.prototype.$isServer) {
	  // handle `esc` key when the popup is shown
	  window.addEventListener('keydown', function (event) {
	    if (event.keyCode === 27) {
	      var topPopup = getTopPopup();

	      if (topPopup && topPopup.closeOnPressEscape) {
	        topPopup.handleClose ? topPopup.handleClose() : topPopup.handleAction ? topPopup.handleAction('cancel') : topPopup.close();
	      }
	    }
	  });
	}

	popupManager.default = PopupManager;
	return popupManager;
}

var scrollbarWidth = {};

var hasRequiredScrollbarWidth;

function requireScrollbarWidth () {
	if (hasRequiredScrollbarWidth) return scrollbarWidth;
	hasRequiredScrollbarWidth = 1;

	scrollbarWidth.__esModule = true;

	scrollbarWidth.default = function () {
	  if (_vue2.default.prototype.$isServer) return 0;
	  if (scrollBarWidth !== undefined) return scrollBarWidth;

	  var outer = document.createElement('div');
	  outer.className = 'el-scrollbar__wrap';
	  outer.style.visibility = 'hidden';
	  outer.style.width = '100px';
	  outer.style.position = 'absolute';
	  outer.style.top = '-9999px';
	  document.body.appendChild(outer);

	  var widthNoScroll = outer.offsetWidth;
	  outer.style.overflow = 'scroll';

	  var inner = document.createElement('div');
	  inner.style.width = '100%';
	  outer.appendChild(inner);

	  var widthWithScroll = inner.offsetWidth;
	  outer.parentNode.removeChild(outer);
	  scrollBarWidth = widthNoScroll - widthWithScroll;

	  return scrollBarWidth;
	};

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var scrollBarWidth = void 0;
	return scrollbarWidth;
}

var hasRequiredPopup;

function requirePopup () {
	if (hasRequiredPopup) return popup;
	hasRequiredPopup = 1;

	popup.__esModule = true;
	popup.PopupManager = undefined;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	var _merge = requireMerge();

	var _merge2 = _interopRequireDefault(_merge);

	var _popupManager = requirePopupManager();

	var _popupManager2 = _interopRequireDefault(_popupManager);

	var _scrollbarWidth = requireScrollbarWidth();

	var _scrollbarWidth2 = _interopRequireDefault(_scrollbarWidth);

	var _dom = requireDom();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var idSeed = 1;

	var scrollBarWidth = void 0;

	popup.default = {
	  props: {
	    visible: {
	      type: Boolean,
	      default: false
	    },
	    openDelay: {},
	    closeDelay: {},
	    zIndex: {},
	    modal: {
	      type: Boolean,
	      default: false
	    },
	    modalFade: {
	      type: Boolean,
	      default: true
	    },
	    modalClass: {},
	    modalAppendToBody: {
	      type: Boolean,
	      default: false
	    },
	    lockScroll: {
	      type: Boolean,
	      default: true
	    },
	    closeOnPressEscape: {
	      type: Boolean,
	      default: false
	    },
	    closeOnClickModal: {
	      type: Boolean,
	      default: false
	    }
	  },

	  beforeMount: function beforeMount() {
	    this._popupId = 'popup-' + idSeed++;
	    _popupManager2.default.register(this._popupId, this);
	  },
	  beforeDestroy: function beforeDestroy() {
	    _popupManager2.default.deregister(this._popupId);
	    _popupManager2.default.closeModal(this._popupId);

	    this.restoreBodyStyle();
	  },
	  data: function data() {
	    return {
	      opened: false,
	      bodyPaddingRight: null,
	      computedBodyPaddingRight: 0,
	      withoutHiddenClass: true,
	      rendered: false
	    };
	  },


	  watch: {
	    visible: function visible(val) {
	      var _this = this;

	      if (val) {
	        if (this._opening) return;
	        if (!this.rendered) {
	          this.rendered = true;
	          _vue2.default.nextTick(function () {
	            _this.open();
	          });
	        } else {
	          this.open();
	        }
	      } else {
	        this.close();
	      }
	    }
	  },

	  methods: {
	    open: function open(options) {
	      var _this2 = this;

	      if (!this.rendered) {
	        this.rendered = true;
	      }

	      var props = (0, _merge2.default)({}, this.$props || this, options);

	      if (this._closeTimer) {
	        clearTimeout(this._closeTimer);
	        this._closeTimer = null;
	      }
	      clearTimeout(this._openTimer);

	      var openDelay = Number(props.openDelay);
	      if (openDelay > 0) {
	        this._openTimer = setTimeout(function () {
	          _this2._openTimer = null;
	          _this2.doOpen(props);
	        }, openDelay);
	      } else {
	        this.doOpen(props);
	      }
	    },
	    doOpen: function doOpen(props) {
	      if (this.$isServer) return;
	      if (this.willOpen && !this.willOpen()) return;
	      if (this.opened) return;

	      this._opening = true;

	      var dom = this.$el;

	      var modal = props.modal;

	      var zIndex = props.zIndex;
	      if (zIndex) {
	        _popupManager2.default.zIndex = zIndex;
	      }

	      if (modal) {
	        if (this._closing) {
	          _popupManager2.default.closeModal(this._popupId);
	          this._closing = false;
	        }
	        _popupManager2.default.openModal(this._popupId, _popupManager2.default.nextZIndex(), this.modalAppendToBody ? undefined : dom, props.modalClass, props.modalFade);
	        if (props.lockScroll) {
	          this.withoutHiddenClass = !(0, _dom.hasClass)(document.body, 'el-popup-parent--hidden');
	          if (this.withoutHiddenClass) {
	            this.bodyPaddingRight = document.body.style.paddingRight;
	            this.computedBodyPaddingRight = parseInt((0, _dom.getStyle)(document.body, 'paddingRight'), 10);
	          }
	          scrollBarWidth = (0, _scrollbarWidth2.default)();
	          var bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;
	          var bodyOverflowY = (0, _dom.getStyle)(document.body, 'overflowY');
	          if (scrollBarWidth > 0 && (bodyHasOverflow || bodyOverflowY === 'scroll') && this.withoutHiddenClass) {
	            document.body.style.paddingRight = this.computedBodyPaddingRight + scrollBarWidth + 'px';
	          }
	          (0, _dom.addClass)(document.body, 'el-popup-parent--hidden');
	        }
	      }

	      if (getComputedStyle(dom).position === 'static') {
	        dom.style.position = 'absolute';
	      }

	      dom.style.zIndex = _popupManager2.default.nextZIndex();
	      this.opened = true;

	      this.onOpen && this.onOpen();

	      this.doAfterOpen();
	    },
	    doAfterOpen: function doAfterOpen() {
	      this._opening = false;
	    },
	    close: function close() {
	      var _this3 = this;

	      if (this.willClose && !this.willClose()) return;

	      if (this._openTimer !== null) {
	        clearTimeout(this._openTimer);
	        this._openTimer = null;
	      }
	      clearTimeout(this._closeTimer);

	      var closeDelay = Number(this.closeDelay);

	      if (closeDelay > 0) {
	        this._closeTimer = setTimeout(function () {
	          _this3._closeTimer = null;
	          _this3.doClose();
	        }, closeDelay);
	      } else {
	        this.doClose();
	      }
	    },
	    doClose: function doClose() {
	      this._closing = true;

	      this.onClose && this.onClose();

	      if (this.lockScroll) {
	        setTimeout(this.restoreBodyStyle, 200);
	      }

	      this.opened = false;

	      this.doAfterClose();
	    },
	    doAfterClose: function doAfterClose() {
	      _popupManager2.default.closeModal(this._popupId);
	      this._closing = false;
	    },
	    restoreBodyStyle: function restoreBodyStyle() {
	      if (this.modal && this.withoutHiddenClass) {
	        document.body.style.paddingRight = this.bodyPaddingRight;
	        (0, _dom.removeClass)(document.body, 'el-popup-parent--hidden');
	      }
	      this.withoutHiddenClass = true;
	    }
	  }
	};
	popup.PopupManager = _popupManager2.default;
	return popup;
}

var popper = {exports: {}};

popper.exports;

var hasRequiredPopper;

function requirePopper () {
	if (hasRequiredPopper) return popper.exports;
	hasRequiredPopper = 1;
	(function (module) {

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
(function (root, factory) {
		    if ((_typeof(module)) === 'object' && module.exports) {
		        // Node. Does not work with strict CommonJS, but
		        // only CommonJS-like environments that support module.exports,
		        // like Node.
		        module.exports = factory();
		    } else {
		        // Browser globals (root is window)
		        root.Popper = factory();
		    }
		})(undefined, function () {

		    var root = window;

		    // default options
		    var DEFAULTS = {
		        // placement of the popper
		        placement: 'bottom',

		        gpuAcceleration: true,

		        // shift popper from its origin by the given amount of pixels (can be negative)
		        offset: 0,

		        // the element which will act as boundary of the popper
		        boundariesElement: 'viewport',

		        // amount of pixel used to define a minimum distance between the boundaries and the popper
		        boundariesPadding: 5,

		        // popper will try to prevent overflow following this order,
		        // by default, then, it could overflow on the left and on top of the boundariesElement
		        preventOverflowOrder: ['left', 'right', 'top', 'bottom'],

		        // the behavior used by flip to change the placement of the popper
		        flipBehavior: 'flip',

		        arrowElement: '[x-arrow]',

		        arrowOffset: 0,

		        // list of functions used to modify the offsets before they are applied to the popper
		        modifiers: ['shift', 'offset', 'preventOverflow', 'keepTogether', 'arrow', 'flip', 'applyStyle'],

		        modifiersIgnored: [],

		        forceAbsolute: false
		    };

		    /**
		     * Create a new Popper.js instance
		     * @constructor Popper
		     * @param {HTMLElement} reference - The reference element used to position the popper
		     * @param {HTMLElement|Object} popper
		     *      The HTML element used as popper, or a configuration used to generate the popper.
		     * @param {String} [popper.tagName='div'] The tag name of the generated popper.
		     * @param {Array} [popper.classNames=['popper']] Array of classes to apply to the generated popper.
		     * @param {Array} [popper.attributes] Array of attributes to apply, specify `attr:value` to assign a value to it.
		     * @param {HTMLElement|String} [popper.parent=window.document.body] The parent element, given as HTMLElement or as query string.
		     * @param {String} [popper.content=''] The content of the popper, it can be text, html, or node; if it is not text, set `contentType` to `html` or `node`.
		     * @param {String} [popper.contentType='text'] If `html`, the `content` will be parsed as HTML. If `node`, it will be appended as-is.
		     * @param {String} [popper.arrowTagName='div'] Same as `popper.tagName` but for the arrow element.
		     * @param {Array} [popper.arrowClassNames='popper__arrow'] Same as `popper.classNames` but for the arrow element.
		     * @param {String} [popper.arrowAttributes=['x-arrow']] Same as `popper.attributes` but for the arrow element.
		     * @param {Object} options
		     * @param {String} [options.placement=bottom]
		     *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -right),
		     *      left(-start, -end)`
		     *
		     * @param {HTMLElement|String} [options.arrowElement='[x-arrow]']
		     *      The DOM Node used as arrow for the popper, or a CSS selector used to get the DOM node. It must be child of
		     *      its parent Popper. Popper.js will apply to the given element the style required to align the arrow with its
		     *      reference element.
		     *      By default, it will look for a child node of the popper with the `x-arrow` attribute.
		     *
		     * @param {Boolean} [options.gpuAcceleration=true]
		     *      When this property is set to true, the popper position will be applied using CSS3 translate3d, allowing the
		     *      browser to use the GPU to accelerate the rendering.
		     *      If set to false, the popper will be placed using `top` and `left` properties, not using the GPU.
		     *
		     * @param {Number} [options.offset=0]
		     *      Amount of pixels the popper will be shifted (can be negative).
		     *
		     * @param {String|Element} [options.boundariesElement='viewport']
		     *      The element which will define the boundaries of the popper position, the popper will never be placed outside
		     *      of the defined boundaries (except if `keepTogether` is enabled)
		     *
		     * @param {Number} [options.boundariesPadding=5]
		     *      Additional padding for the boundaries
		     *
		     * @param {Array} [options.preventOverflowOrder=['left', 'right', 'top', 'bottom']]
		     *      Order used when Popper.js tries to avoid overflows from the boundaries, they will be checked in order,
		     *      this means that the last ones will never overflow
		     *
		     * @param {String|Array} [options.flipBehavior='flip']
		     *      The behavior used by the `flip` modifier to change the placement of the popper when the latter is trying to
		     *      overlap its reference element. Defining `flip` as value, the placement will be flipped on
		     *      its axis (`right - left`, `top - bottom`).
		     *      You can even pass an array of placements (eg: `['right', 'left', 'top']` ) to manually specify
		     *      how alter the placement when a flip is needed. (eg. in the above example, it would first flip from right to left,
		     *      then, if even in its new placement, the popper is overlapping its reference element, it will be moved to top)
		     *
		     * @param {Array} [options.modifiers=[ 'shift', 'offset', 'preventOverflow', 'keepTogether', 'arrow', 'flip', 'applyStyle']]
		     *      List of functions used to modify the data before they are applied to the popper, add your custom functions
		     *      to this array to edit the offsets and placement.
		     *      The function should reflect the @params and @returns of preventOverflow
		     *
		     * @param {Array} [options.modifiersIgnored=[]]
		     *      Put here any built-in modifier name you want to exclude from the modifiers list
		     *      The function should reflect the @params and @returns of preventOverflow
		     *
		     * @param {Boolean} [options.removeOnDestroy=false]
		     *      Set to true if you want to automatically remove the popper when you call the `destroy` method.
		     */
		    function Popper(reference, popper, options) {
		        this._reference = reference.jquery ? reference[0] : reference;
		        this.state = {};

		        // if the popper variable is a configuration object, parse it to generate an HTMLElement
		        // generate a default popper if is not defined
		        var isNotDefined = typeof popper === 'undefined' || popper === null;
		        var isConfig = popper && Object.prototype.toString.call(popper) === '[object Object]';
		        if (isNotDefined || isConfig) {
		            this._popper = this.parse(isConfig ? popper : {});
		        }
		        // otherwise, use the given HTMLElement as popper
		        else {
		                this._popper = popper.jquery ? popper[0] : popper;
		            }

		        // with {} we create a new object with the options inside it
		        this._options = Object.assign({}, DEFAULTS, options);

		        // refactoring modifiers' list
		        this._options.modifiers = this._options.modifiers.map(function (modifier) {
		            // remove ignored modifiers
		            if (this._options.modifiersIgnored.indexOf(modifier) !== -1) return;

		            // set the x-placement attribute before everything else because it could be used to add margins to the popper
		            // margins needs to be calculated to get the correct popper offsets
		            if (modifier === 'applyStyle') {
		                this._popper.setAttribute('x-placement', this._options.placement);
		            }

		            // return predefined modifier identified by string or keep the custom one
		            return this.modifiers[modifier] || modifier;
		        }.bind(this));

		        // make sure to apply the popper position before any computation
		        this.state.position = this._getPosition(this._popper, this._reference);
		        setStyle(this._popper, { position: this.state.position, top: 0 });

		        // fire the first update to position the popper in the right place
		        this.update();

		        // setup event listeners, they will take care of update the position in specific situations
		        this._setupEventListeners();
		        return this;
		    }

		    //
		    // Methods
		    //
		    /**
		     * Destroy the popper
		     * @method
		     * @memberof Popper
		     */
		    Popper.prototype.destroy = function () {
		        this._popper.removeAttribute('x-placement');
		        this._popper.style.left = '';
		        this._popper.style.position = '';
		        this._popper.style.top = '';
		        this._popper.style[getSupportedPropertyName('transform')] = '';
		        this._removeEventListeners();

		        // remove the popper if user explicity asked for the deletion on destroy
		        if (this._options.removeOnDestroy) {
		            this._popper.remove();
		        }
		        return this;
		    };

		    /**
		     * Updates the position of the popper, computing the new offsets and applying the new style
		     * @method
		     * @memberof Popper
		     */
		    Popper.prototype.update = function () {
		        var data = { instance: this, styles: {} };

		        // store placement inside the data object, modifiers will be able to edit `placement` if needed
		        // and refer to _originalPlacement to know the original value
		        data.placement = this._options.placement;
		        data._originalPlacement = this._options.placement;

		        // compute the popper and reference offsets and put them inside data.offsets
		        data.offsets = this._getOffsets(this._popper, this._reference, data.placement);

		        // get boundaries
		        data.boundaries = this._getBoundaries(data, this._options.boundariesPadding, this._options.boundariesElement);

		        data = this.runModifiers(data, this._options.modifiers);

		        if (typeof this.state.updateCallback === 'function') {
		            this.state.updateCallback(data);
		        }
		    };

		    /**
		     * If a function is passed, it will be executed after the initialization of popper with as first argument the Popper instance.
		     * @method
		     * @memberof Popper
		     * @param {Function} callback
		     */
		    Popper.prototype.onCreate = function (callback) {
		        // the createCallbacks return as first argument the popper instance
		        callback(this);
		        return this;
		    };

		    /**
		     * If a function is passed, it will be executed after each update of popper with as first argument the set of coordinates and informations
		     * used to style popper and its arrow.
		     * NOTE: it doesn't get fired on the first call of the `Popper.update()` method inside the `Popper` constructor!
		     * @method
		     * @memberof Popper
		     * @param {Function} callback
		     */
		    Popper.prototype.onUpdate = function (callback) {
		        this.state.updateCallback = callback;
		        return this;
		    };

		    /**
		     * Helper used to generate poppers from a configuration file
		     * @method
		     * @memberof Popper
		     * @param config {Object} configuration
		     * @returns {HTMLElement} popper
		     */
		    Popper.prototype.parse = function (config) {
		        var defaultConfig = {
		            tagName: 'div',
		            classNames: ['popper'],
		            attributes: [],
		            parent: root.document.body,
		            content: '',
		            contentType: 'text',
		            arrowTagName: 'div',
		            arrowClassNames: ['popper__arrow'],
		            arrowAttributes: ['x-arrow']
		        };
		        config = Object.assign({}, defaultConfig, config);

		        var d = root.document;

		        var popper = d.createElement(config.tagName);
		        addClassNames(popper, config.classNames);
		        addAttributes(popper, config.attributes);
		        if (config.contentType === 'node') {
		            popper.appendChild(config.content.jquery ? config.content[0] : config.content);
		        } else if (config.contentType === 'html') {
		            popper.innerHTML = config.content;
		        } else {
		            popper.textContent = config.content;
		        }

		        if (config.arrowTagName) {
		            var arrow = d.createElement(config.arrowTagName);
		            addClassNames(arrow, config.arrowClassNames);
		            addAttributes(arrow, config.arrowAttributes);
		            popper.appendChild(arrow);
		        }

		        var parent = config.parent.jquery ? config.parent[0] : config.parent;

		        // if the given parent is a string, use it to match an element
		        // if more than one element is matched, the first one will be used as parent
		        // if no elements are matched, the script will throw an error
		        if (typeof parent === 'string') {
		            parent = d.querySelectorAll(config.parent);
		            if (parent.length > 1) {
		                console.warn('WARNING: the given `parent` query(' + config.parent + ') matched more than one element, the first one will be used');
		            }
		            if (parent.length === 0) {
		                throw 'ERROR: the given `parent` doesn\'t exists!';
		            }
		            parent = parent[0];
		        }
		        // if the given parent is a DOM nodes list or an array of nodes with more than one element,
		        // the first one will be used as parent
		        if (parent.length > 1 && parent instanceof Element === false) {
		            console.warn('WARNING: you have passed as parent a list of elements, the first one will be used');
		            parent = parent[0];
		        }

		        // append the generated popper to its parent
		        parent.appendChild(popper);

		        return popper;

		        /**
		         * Adds class names to the given element
		         * @function
		         * @ignore
		         * @param {HTMLElement} target
		         * @param {Array} classes
		         */
		        function addClassNames(element, classNames) {
		            classNames.forEach(function (className) {
		                element.classList.add(className);
		            });
		        }

		        /**
		         * Adds attributes to the given element
		         * @function
		         * @ignore
		         * @param {HTMLElement} target
		         * @param {Array} attributes
		         * @example
		         * addAttributes(element, [ 'data-info:foobar' ]);
		         */
		        function addAttributes(element, attributes) {
		            attributes.forEach(function (attribute) {
		                element.setAttribute(attribute.split(':')[0], attribute.split(':')[1] || '');
		            });
		        }
		    };

		    /**
		     * Helper used to get the position which will be applied to the popper
		     * @method
		     * @memberof Popper
		     * @param config {HTMLElement} popper element
		     * @param reference {HTMLElement} reference element
		     * @returns {String} position
		     */
		    Popper.prototype._getPosition = function (popper, reference) {
		        getOffsetParent(reference);

		        if (this._options.forceAbsolute) {
		            return 'absolute';
		        }

		        // Decide if the popper will be fixed
		        // If the reference element is inside a fixed context, the popper will be fixed as well to allow them to scroll together
		        var isParentFixed = isFixed(reference);
		        return isParentFixed ? 'fixed' : 'absolute';
		    };

		    /**
		     * Get offsets to the popper
		     * @method
		     * @memberof Popper
		     * @access private
		     * @param {Element} popper - the popper element
		     * @param {Element} reference - the reference element (the popper will be relative to this)
		     * @returns {Object} An object containing the offsets which will be applied to the popper
		     */
		    Popper.prototype._getOffsets = function (popper, reference, placement) {
		        placement = placement.split('-')[0];
		        var popperOffsets = {};

		        popperOffsets.position = this.state.position;
		        var isParentFixed = popperOffsets.position === 'fixed';

		        //
		        // Get reference element position
		        //
		        var referenceOffsets = getOffsetRectRelativeToCustomParent(reference, getOffsetParent(popper), isParentFixed);

		        //
		        // Get popper sizes
		        //
		        var popperRect = getOuterSizes(popper);

		        //
		        // Compute offsets of popper
		        //

		        // depending by the popper placement we have to compute its offsets slightly differently
		        if (['right', 'left'].indexOf(placement) !== -1) {
		            popperOffsets.top = referenceOffsets.top + referenceOffsets.height / 2 - popperRect.height / 2;
		            if (placement === 'left') {
		                popperOffsets.left = referenceOffsets.left - popperRect.width;
		            } else {
		                popperOffsets.left = referenceOffsets.right;
		            }
		        } else {
		            popperOffsets.left = referenceOffsets.left + referenceOffsets.width / 2 - popperRect.width / 2;
		            if (placement === 'top') {
		                popperOffsets.top = referenceOffsets.top - popperRect.height;
		            } else {
		                popperOffsets.top = referenceOffsets.bottom;
		            }
		        }

		        // Add width and height to our offsets object
		        popperOffsets.width = popperRect.width;
		        popperOffsets.height = popperRect.height;

		        return {
		            popper: popperOffsets,
		            reference: referenceOffsets
		        };
		    };

		    /**
		     * Setup needed event listeners used to update the popper position
		     * @method
		     * @memberof Popper
		     * @access private
		     */
		    Popper.prototype._setupEventListeners = function () {
		        // NOTE: 1 DOM access here
		        this.state.updateBound = this.update.bind(this);
		        root.addEventListener('resize', this.state.updateBound);
		        // if the boundariesElement is window we don't need to listen for the scroll event
		        if (this._options.boundariesElement !== 'window') {
		            var target = getScrollParent(this._reference);
		            // here it could be both `body` or `documentElement` thanks to Firefox, we then check both
		            if (target === root.document.body || target === root.document.documentElement) {
		                target = root;
		            }
		            target.addEventListener('scroll', this.state.updateBound);
		            this.state.scrollTarget = target;
		        }
		    };

		    /**
		     * Remove event listeners used to update the popper position
		     * @method
		     * @memberof Popper
		     * @access private
		     */
		    Popper.prototype._removeEventListeners = function () {
		        // NOTE: 1 DOM access here
		        root.removeEventListener('resize', this.state.updateBound);
		        if (this._options.boundariesElement !== 'window' && this.state.scrollTarget) {
		            this.state.scrollTarget.removeEventListener('scroll', this.state.updateBound);
		            this.state.scrollTarget = null;
		        }
		        this.state.updateBound = null;
		    };

		    /**
		     * Computed the boundaries limits and return them
		     * @method
		     * @memberof Popper
		     * @access private
		     * @param {Object} data - Object containing the property "offsets" generated by `_getOffsets`
		     * @param {Number} padding - Boundaries padding
		     * @param {Element} boundariesElement - Element used to define the boundaries
		     * @returns {Object} Coordinates of the boundaries
		     */
		    Popper.prototype._getBoundaries = function (data, padding, boundariesElement) {
		        // NOTE: 1 DOM access here
		        var boundaries = {};
		        var width, height;
		        if (boundariesElement === 'window') {
		            var body = root.document.body,
		                html = root.document.documentElement;

		            height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
		            width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);

		            boundaries = {
		                top: 0,
		                right: width,
		                bottom: height,
		                left: 0
		            };
		        } else if (boundariesElement === 'viewport') {
		            var offsetParent = getOffsetParent(this._popper);
		            var scrollParent = getScrollParent(this._popper);
		            var offsetParentRect = getOffsetRect(offsetParent);

		            // Thanks the fucking native API, `document.body.scrollTop` & `document.documentElement.scrollTop`
		            var getScrollTopValue = function getScrollTopValue(element) {
		                return element == document.body ? Math.max(document.documentElement.scrollTop, document.body.scrollTop) : element.scrollTop;
		            };
		            var getScrollLeftValue = function getScrollLeftValue(element) {
		                return element == document.body ? Math.max(document.documentElement.scrollLeft, document.body.scrollLeft) : element.scrollLeft;
		            };

		            // if the popper is fixed we don't have to substract scrolling from the boundaries
		            var scrollTop = data.offsets.popper.position === 'fixed' ? 0 : getScrollTopValue(scrollParent);
		            var scrollLeft = data.offsets.popper.position === 'fixed' ? 0 : getScrollLeftValue(scrollParent);

		            boundaries = {
		                top: 0 - (offsetParentRect.top - scrollTop),
		                right: root.document.documentElement.clientWidth - (offsetParentRect.left - scrollLeft),
		                bottom: root.document.documentElement.clientHeight - (offsetParentRect.top - scrollTop),
		                left: 0 - (offsetParentRect.left - scrollLeft)
		            };
		        } else {
		            if (getOffsetParent(this._popper) === boundariesElement) {
		                boundaries = {
		                    top: 0,
		                    left: 0,
		                    right: boundariesElement.clientWidth,
		                    bottom: boundariesElement.clientHeight
		                };
		            } else {
		                boundaries = getOffsetRect(boundariesElement);
		            }
		        }
		        boundaries.left += padding;
		        boundaries.right -= padding;
		        boundaries.top = boundaries.top + padding;
		        boundaries.bottom = boundaries.bottom - padding;
		        return boundaries;
		    };

		    /**
		     * Loop trough the list of modifiers and run them in order, each of them will then edit the data object
		     * @method
		     * @memberof Popper
		     * @access public
		     * @param {Object} data
		     * @param {Array} modifiers
		     * @param {Function} ends
		     */
		    Popper.prototype.runModifiers = function (data, modifiers, ends) {
		        var modifiersToRun = modifiers.slice();
		        if (ends !== undefined) {
		            modifiersToRun = this._options.modifiers.slice(0, getArrayKeyIndex(this._options.modifiers, ends));
		        }

		        modifiersToRun.forEach(function (modifier) {
		            if (isFunction(modifier)) {
		                data = modifier.call(this, data);
		            }
		        }.bind(this));

		        return data;
		    };

		    /**
		     * Helper used to know if the given modifier depends from another one.
		     * @method
		     * @memberof Popper
		     * @param {String} requesting - name of requesting modifier
		     * @param {String} requested - name of requested modifier
		     * @returns {Boolean}
		     */
		    Popper.prototype.isModifierRequired = function (requesting, requested) {
		        var index = getArrayKeyIndex(this._options.modifiers, requesting);
		        return !!this._options.modifiers.slice(0, index).filter(function (modifier) {
		            return modifier === requested;
		        }).length;
		    };

		    //
		    // Modifiers
		    //

		    /**
		     * Modifiers list
		     * @namespace Popper.modifiers
		     * @memberof Popper
		     * @type {Object}
		     */
		    Popper.prototype.modifiers = {};

		    /**
		     * Apply the computed styles to the popper element
		     * @method
		     * @memberof Popper.modifiers
		     * @argument {Object} data - The data object generated by `update` method
		     * @returns {Object} The same data object
		     */
		    Popper.prototype.modifiers.applyStyle = function (data) {
		        // apply the final offsets to the popper
		        // NOTE: 1 DOM access here
		        var styles = {
		            position: data.offsets.popper.position
		        };

		        // round top and left to avoid blurry text
		        var left = Math.round(data.offsets.popper.left);
		        var top = Math.round(data.offsets.popper.top);

		        // if gpuAcceleration is set to true and transform is supported, we use `translate3d` to apply the position to the popper
		        // we automatically use the supported prefixed version if needed
		        var prefixedProperty;
		        if (this._options.gpuAcceleration && (prefixedProperty = getSupportedPropertyName('transform'))) {
		            styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
		            styles.top = 0;
		            styles.left = 0;
		        }
		        // othwerise, we use the standard `left` and `top` properties
		        else {
		                styles.left = left;
		                styles.top = top;
		            }

		        // any property present in `data.styles` will be applied to the popper,
		        // in this way we can make the 3rd party modifiers add custom styles to it
		        // Be aware, modifiers could override the properties defined in the previous
		        // lines of this modifier!
		        Object.assign(styles, data.styles);

		        setStyle(this._popper, styles);

		        // set an attribute which will be useful to style the tooltip (use it to properly position its arrow)
		        // NOTE: 1 DOM access here
		        this._popper.setAttribute('x-placement', data.placement);

		        // if the arrow modifier is required and the arrow style has been computed, apply the arrow style
		        if (this.isModifierRequired(this.modifiers.applyStyle, this.modifiers.arrow) && data.offsets.arrow) {
		            setStyle(data.arrowElement, data.offsets.arrow);
		        }

		        return data;
		    };

		    /**
		     * Modifier used to shift the popper on the start or end of its reference element side
		     * @method
		     * @memberof Popper.modifiers
		     * @argument {Object} data - The data object generated by `update` method
		     * @returns {Object} The data object, properly modified
		     */
		    Popper.prototype.modifiers.shift = function (data) {
		        var placement = data.placement;
		        var basePlacement = placement.split('-')[0];
		        var shiftVariation = placement.split('-')[1];

		        // if shift shiftVariation is specified, run the modifier
		        if (shiftVariation) {
		            var reference = data.offsets.reference;
		            var popper = getPopperClientRect(data.offsets.popper);

		            var shiftOffsets = {
		                y: {
		                    start: { top: reference.top },
		                    end: { top: reference.top + reference.height - popper.height }
		                },
		                x: {
		                    start: { left: reference.left },
		                    end: { left: reference.left + reference.width - popper.width }
		                }
		            };

		            var axis = ['bottom', 'top'].indexOf(basePlacement) !== -1 ? 'x' : 'y';

		            data.offsets.popper = Object.assign(popper, shiftOffsets[axis][shiftVariation]);
		        }

		        return data;
		    };

		    /**
		     * Modifier used to make sure the popper does not overflows from it's boundaries
		     * @method
		     * @memberof Popper.modifiers
		     * @argument {Object} data - The data object generated by `update` method
		     * @returns {Object} The data object, properly modified
		     */
		    Popper.prototype.modifiers.preventOverflow = function (data) {
		        var order = this._options.preventOverflowOrder;
		        var popper = getPopperClientRect(data.offsets.popper);

		        var check = {
		            left: function left() {
		                var left = popper.left;
		                if (popper.left < data.boundaries.left) {
		                    left = Math.max(popper.left, data.boundaries.left);
		                }
		                return { left: left };
		            },
		            right: function right() {
		                var left = popper.left;
		                if (popper.right > data.boundaries.right) {
		                    left = Math.min(popper.left, data.boundaries.right - popper.width);
		                }
		                return { left: left };
		            },
		            top: function top() {
		                var top = popper.top;
		                if (popper.top < data.boundaries.top) {
		                    top = Math.max(popper.top, data.boundaries.top);
		                }
		                return { top: top };
		            },
		            bottom: function bottom() {
		                var top = popper.top;
		                if (popper.bottom > data.boundaries.bottom) {
		                    top = Math.min(popper.top, data.boundaries.bottom - popper.height);
		                }
		                return { top: top };
		            }
		        };

		        order.forEach(function (direction) {
		            data.offsets.popper = Object.assign(popper, check[direction]());
		        });

		        return data;
		    };

		    /**
		     * Modifier used to make sure the popper is always near its reference
		     * @method
		     * @memberof Popper.modifiers
		     * @argument {Object} data - The data object generated by _update method
		     * @returns {Object} The data object, properly modified
		     */
		    Popper.prototype.modifiers.keepTogether = function (data) {
		        var popper = getPopperClientRect(data.offsets.popper);
		        var reference = data.offsets.reference;
		        var f = Math.floor;

		        if (popper.right < f(reference.left)) {
		            data.offsets.popper.left = f(reference.left) - popper.width;
		        }
		        if (popper.left > f(reference.right)) {
		            data.offsets.popper.left = f(reference.right);
		        }
		        if (popper.bottom < f(reference.top)) {
		            data.offsets.popper.top = f(reference.top) - popper.height;
		        }
		        if (popper.top > f(reference.bottom)) {
		            data.offsets.popper.top = f(reference.bottom);
		        }

		        return data;
		    };

		    /**
		     * Modifier used to flip the placement of the popper when the latter is starting overlapping its reference element.
		     * Requires the `preventOverflow` modifier before it in order to work.
		     * **NOTE:** This modifier will run all its previous modifiers everytime it tries to flip the popper!
		     * @method
		     * @memberof Popper.modifiers
		     * @argument {Object} data - The data object generated by _update method
		     * @returns {Object} The data object, properly modified
		     */
		    Popper.prototype.modifiers.flip = function (data) {
		        // check if preventOverflow is in the list of modifiers before the flip modifier.
		        // otherwise flip would not work as expected.
		        if (!this.isModifierRequired(this.modifiers.flip, this.modifiers.preventOverflow)) {
		            console.warn('WARNING: preventOverflow modifier is required by flip modifier in order to work, be sure to include it before flip!');
		            return data;
		        }

		        if (data.flipped && data.placement === data._originalPlacement) {
		            // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
		            return data;
		        }

		        var placement = data.placement.split('-')[0];
		        var placementOpposite = getOppositePlacement(placement);
		        var variation = data.placement.split('-')[1] || '';

		        var flipOrder = [];
		        if (this._options.flipBehavior === 'flip') {
		            flipOrder = [placement, placementOpposite];
		        } else {
		            flipOrder = this._options.flipBehavior;
		        }

		        flipOrder.forEach(function (step, index) {
		            if (placement !== step || flipOrder.length === index + 1) {
		                return;
		            }

		            placement = data.placement.split('-')[0];
		            placementOpposite = getOppositePlacement(placement);

		            var popperOffsets = getPopperClientRect(data.offsets.popper);

		            // this boolean is used to distinguish right and bottom from top and left
		            // they need different computations to get flipped
		            var a = ['right', 'bottom'].indexOf(placement) !== -1;

		            // using Math.floor because the reference offsets may contain decimals we are not going to consider here
		            if (a && Math.floor(data.offsets.reference[placement]) > Math.floor(popperOffsets[placementOpposite]) || !a && Math.floor(data.offsets.reference[placement]) < Math.floor(popperOffsets[placementOpposite])) {
		                // we'll use this boolean to detect any flip loop
		                data.flipped = true;
		                data.placement = flipOrder[index + 1];
		                if (variation) {
		                    data.placement += '-' + variation;
		                }
		                data.offsets.popper = this._getOffsets(this._popper, this._reference, data.placement).popper;

		                data = this.runModifiers(data, this._options.modifiers, this._flip);
		            }
		        }.bind(this));
		        return data;
		    };

		    /**
		     * Modifier used to add an offset to the popper, useful if you more granularity positioning your popper.
		     * The offsets will shift the popper on the side of its reference element.
		     * @method
		     * @memberof Popper.modifiers
		     * @argument {Object} data - The data object generated by _update method
		     * @returns {Object} The data object, properly modified
		     */
		    Popper.prototype.modifiers.offset = function (data) {
		        var offset = this._options.offset;
		        var popper = data.offsets.popper;

		        if (data.placement.indexOf('left') !== -1) {
		            popper.top -= offset;
		        } else if (data.placement.indexOf('right') !== -1) {
		            popper.top += offset;
		        } else if (data.placement.indexOf('top') !== -1) {
		            popper.left -= offset;
		        } else if (data.placement.indexOf('bottom') !== -1) {
		            popper.left += offset;
		        }
		        return data;
		    };

		    /**
		     * Modifier used to move the arrows on the edge of the popper to make sure them are always between the popper and the reference element
		     * It will use the CSS outer size of the arrow element to know how many pixels of conjuction are needed
		     * @method
		     * @memberof Popper.modifiers
		     * @argument {Object} data - The data object generated by _update method
		     * @returns {Object} The data object, properly modified
		     */
		    Popper.prototype.modifiers.arrow = function (data) {
		        var arrow = this._options.arrowElement;
		        var arrowOffset = this._options.arrowOffset;

		        // if the arrowElement is a string, suppose it's a CSS selector
		        if (typeof arrow === 'string') {
		            arrow = this._popper.querySelector(arrow);
		        }

		        // if arrow element is not found, don't run the modifier
		        if (!arrow) {
		            return data;
		        }

		        // the arrow element must be child of its popper
		        if (!this._popper.contains(arrow)) {
		            console.warn('WARNING: `arrowElement` must be child of its popper element!');
		            return data;
		        }

		        // arrow depends on keepTogether in order to work
		        if (!this.isModifierRequired(this.modifiers.arrow, this.modifiers.keepTogether)) {
		            console.warn('WARNING: keepTogether modifier is required by arrow modifier in order to work, be sure to include it before arrow!');
		            return data;
		        }

		        var arrowStyle = {};
		        var placement = data.placement.split('-')[0];
		        var popper = getPopperClientRect(data.offsets.popper);
		        var reference = data.offsets.reference;
		        var isVertical = ['left', 'right'].indexOf(placement) !== -1;

		        var len = isVertical ? 'height' : 'width';
		        var side = isVertical ? 'top' : 'left';
		        var altSide = isVertical ? 'left' : 'top';
		        var opSide = isVertical ? 'bottom' : 'right';
		        var arrowSize = getOuterSizes(arrow)[len];

		        //
		        // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction
		        //

		        // top/left side
		        if (reference[opSide] - arrowSize < popper[side]) {
		            data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowSize);
		        }
		        // bottom/right side
		        if (reference[side] + arrowSize > popper[opSide]) {
		            data.offsets.popper[side] += reference[side] + arrowSize - popper[opSide];
		        }

		        // compute center of the popper
		        var center = reference[side] + (arrowOffset || reference[len] / 2 - arrowSize / 2);

		        var sideValue = center - popper[side];

		        // prevent arrow from being placed not contiguously to its popper
		        sideValue = Math.max(Math.min(popper[len] - arrowSize - 8, sideValue), 8);
		        arrowStyle[side] = sideValue;
		        arrowStyle[altSide] = ''; // make sure to remove any old style from the arrow

		        data.offsets.arrow = arrowStyle;
		        data.arrowElement = arrow;

		        return data;
		    };

		    //
		    // Helpers
		    //

		    /**
		     * Get the outer sizes of the given element (offset size + margins)
		     * @function
		     * @ignore
		     * @argument {Element} element
		     * @returns {Object} object containing width and height properties
		     */
		    function getOuterSizes(element) {
		        // NOTE: 1 DOM access here
		        var _display = element.style.display,
		            _visibility = element.style.visibility;
		        element.style.display = 'block';element.style.visibility = 'hidden';
		        element.offsetWidth;

		        // original method
		        var styles = root.getComputedStyle(element);
		        var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
		        var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
		        var result = { width: element.offsetWidth + y, height: element.offsetHeight + x };

		        // reset element styles
		        element.style.display = _display;element.style.visibility = _visibility;
		        return result;
		    }

		    /**
		     * Get the opposite placement of the given one/
		     * @function
		     * @ignore
		     * @argument {String} placement
		     * @returns {String} flipped placement
		     */
		    function getOppositePlacement(placement) {
		        var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
		        return placement.replace(/left|right|bottom|top/g, function (matched) {
		            return hash[matched];
		        });
		    }

		    /**
		     * Given the popper offsets, generate an output similar to getBoundingClientRect
		     * @function
		     * @ignore
		     * @argument {Object} popperOffsets
		     * @returns {Object} ClientRect like output
		     */
		    function getPopperClientRect(popperOffsets) {
		        var offsets = Object.assign({}, popperOffsets);
		        offsets.right = offsets.left + offsets.width;
		        offsets.bottom = offsets.top + offsets.height;
		        return offsets;
		    }

		    /**
		     * Given an array and the key to find, returns its index
		     * @function
		     * @ignore
		     * @argument {Array} arr
		     * @argument keyToFind
		     * @returns index or null
		     */
		    function getArrayKeyIndex(arr, keyToFind) {
		        var i = 0,
		            key;
		        for (key in arr) {
		            if (arr[key] === keyToFind) {
		                return i;
		            }
		            i++;
		        }
		        return null;
		    }

		    /**
		     * Get CSS computed property of the given element
		     * @function
		     * @ignore
		     * @argument {Eement} element
		     * @argument {String} property
		     */
		    function getStyleComputedProperty(element, property) {
		        // NOTE: 1 DOM access here
		        var css = root.getComputedStyle(element, null);
		        return css[property];
		    }

		    /**
		     * Returns the offset parent of the given element
		     * @function
		     * @ignore
		     * @argument {Element} element
		     * @returns {Element} offset parent
		     */
		    function getOffsetParent(element) {
		        // NOTE: 1 DOM access here
		        var offsetParent = element.offsetParent;
		        return offsetParent === root.document.body || !offsetParent ? root.document.documentElement : offsetParent;
		    }

		    /**
		     * Returns the scrolling parent of the given element
		     * @function
		     * @ignore
		     * @argument {Element} element
		     * @returns {Element} offset parent
		     */
		    function getScrollParent(element) {
		        var parent = element.parentNode;

		        if (!parent) {
		            return element;
		        }

		        if (parent === root.document) {
		            // Firefox puts the scrollTOp value on `documentElement` instead of `body`, we then check which of them is
		            // greater than 0 and return the proper element
		            if (root.document.body.scrollTop || root.document.body.scrollLeft) {
		                return root.document.body;
		            } else {
		                return root.document.documentElement;
		            }
		        }

		        // Firefox want us to check `-x` and `-y` variations as well
		        if (['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow')) !== -1 || ['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow-x')) !== -1 || ['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow-y')) !== -1) {
		            // If the detected scrollParent is body, we perform an additional check on its parentNode
		            // in this way we'll get body if the browser is Chrome-ish, or documentElement otherwise
		            // fixes issue #65
		            return parent;
		        }
		        return getScrollParent(element.parentNode);
		    }

		    /**
		     * Check if the given element is fixed or is inside a fixed parent
		     * @function
		     * @ignore
		     * @argument {Element} element
		     * @argument {Element} customContainer
		     * @returns {Boolean} answer to "isFixed?"
		     */
		    function isFixed(element) {
		        if (element === root.document.body) {
		            return false;
		        }
		        if (getStyleComputedProperty(element, 'position') === 'fixed') {
		            return true;
		        }
		        return element.parentNode ? isFixed(element.parentNode) : element;
		    }

		    /**
		     * Set the style to the given popper
		     * @function
		     * @ignore
		     * @argument {Element} element - Element to apply the style to
		     * @argument {Object} styles - Object with a list of properties and values which will be applied to the element
		     */
		    function setStyle(element, styles) {
		        function is_numeric(n) {
		            return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
		        }
		        Object.keys(styles).forEach(function (prop) {
		            var unit = '';
		            // add unit if the value is numeric and is one of the following
		            if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && is_numeric(styles[prop])) {
		                unit = 'px';
		            }
		            element.style[prop] = styles[prop] + unit;
		        });
		    }

		    /**
		     * Check if the given variable is a function
		     * @function
		     * @ignore
		     * @argument {*} functionToCheck - variable to check
		     * @returns {Boolean} answer to: is a function?
		     */
		    function isFunction(functionToCheck) {
		        var getType = {};
		        return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
		    }

		    /**
		     * Get the position of the given element, relative to its offset parent
		     * @function
		     * @ignore
		     * @param {Element} element
		     * @return {Object} position - Coordinates of the element and its `scrollTop`
		     */
		    function getOffsetRect(element) {
		        var elementRect = {
		            width: element.offsetWidth,
		            height: element.offsetHeight,
		            left: element.offsetLeft,
		            top: element.offsetTop
		        };

		        elementRect.right = elementRect.left + elementRect.width;
		        elementRect.bottom = elementRect.top + elementRect.height;

		        // position
		        return elementRect;
		    }

		    /**
		     * Get bounding client rect of given element
		     * @function
		     * @ignore
		     * @param {HTMLElement} element
		     * @return {Object} client rect
		     */
		    function getBoundingClientRect(element) {
		        var rect = element.getBoundingClientRect();

		        // whether the IE version is lower than 11
		        var isIE = navigator.userAgent.indexOf("MSIE") != -1;

		        // fix ie document bounding top always 0 bug
		        var rectTop = isIE && element.tagName === 'HTML' ? -element.scrollTop : rect.top;

		        return {
		            left: rect.left,
		            top: rectTop,
		            right: rect.right,
		            bottom: rect.bottom,
		            width: rect.right - rect.left,
		            height: rect.bottom - rectTop
		        };
		    }

		    /**
		     * Given an element and one of its parents, return the offset
		     * @function
		     * @ignore
		     * @param {HTMLElement} element
		     * @param {HTMLElement} parent
		     * @return {Object} rect
		     */
		    function getOffsetRectRelativeToCustomParent(element, parent, fixed) {
		        var elementRect = getBoundingClientRect(element);
		        var parentRect = getBoundingClientRect(parent);

		        if (fixed) {
		            var scrollParent = getScrollParent(parent);
		            parentRect.top += scrollParent.scrollTop;
		            parentRect.bottom += scrollParent.scrollTop;
		            parentRect.left += scrollParent.scrollLeft;
		            parentRect.right += scrollParent.scrollLeft;
		        }

		        var rect = {
		            top: elementRect.top - parentRect.top,
		            left: elementRect.left - parentRect.left,
		            bottom: elementRect.top - parentRect.top + elementRect.height,
		            right: elementRect.left - parentRect.left + elementRect.width,
		            width: elementRect.width,
		            height: elementRect.height
		        };
		        return rect;
		    }

		    /**
		     * Get the prefixed supported property name
		     * @function
		     * @ignore
		     * @argument {String} property (camelCase)
		     * @returns {String} prefixed property (camelCase)
		     */
		    function getSupportedPropertyName(property) {
		        var prefixes = ['', 'ms', 'webkit', 'moz', 'o'];

		        for (var i = 0; i < prefixes.length; i++) {
		            var toCheck = prefixes[i] ? prefixes[i] + property.charAt(0).toUpperCase() + property.slice(1) : property;
		            if (typeof root.document.body.style[toCheck] !== 'undefined') {
		                return toCheck;
		            }
		        }
		        return null;
		    }

		    /**
		     * The Object.assign() method is used to copy the values of all enumerable own properties from one or more source
		     * objects to a target object. It will return the target object.
		     * This polyfill doesn't support symbol properties, since ES5 doesn't have symbols anyway
		     * Source: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
		     * @function
		     * @ignore
		     */
		    if (!Object.assign) {
		        Object.defineProperty(Object, 'assign', {
		            enumerable: false,
		            configurable: true,
		            writable: true,
		            value: function value(target) {
		                if (target === undefined || target === null) {
		                    throw new TypeError('Cannot convert first argument to object');
		                }

		                var to = Object(target);
		                for (var i = 1; i < arguments.length; i++) {
		                    var nextSource = arguments[i];
		                    if (nextSource === undefined || nextSource === null) {
		                        continue;
		                    }
		                    nextSource = Object(nextSource);

		                    var keysArray = Object.keys(nextSource);
		                    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {
		                        var nextKey = keysArray[nextIndex];
		                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
		                        if (desc !== undefined && desc.enumerable) {
		                            to[nextKey] = nextSource[nextKey];
		                        }
		                    }
		                }
		                return to;
		            }
		        });
		    }

		    return Popper;
		}); 
	} (popper));
	return popper.exports;
}

var hasRequiredVuePopper;

function requireVuePopper () {
	if (hasRequiredVuePopper) return vuePopper;
	hasRequiredVuePopper = 1;

	vuePopper.__esModule = true;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	var _popup = requirePopup();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PopperJS = _vue2.default.prototype.$isServer ? function () {} : requirePopper();
	var stop = function stop(e) {
	  return e.stopPropagation();
	};

	/**
	 * @param {HTMLElement} [reference=$refs.reference] - The reference element used to position the popper.
	 * @param {HTMLElement} [popper=$refs.popper] - The HTML element used as popper, or a configuration used to generate the popper.
	 * @param {String} [placement=button] - Placement of the popper accepted values: top(-start, -end), right(-start, -end), bottom(-start, -end), left(-start, -end)
	 * @param {Number} [offset=0] - Amount of pixels the popper will be shifted (can be negative).
	 * @param {Boolean} [visible=false] Visibility of the popup element.
	 * @param {Boolean} [visible-arrow=false] Visibility of the arrow, no style.
	 */
	vuePopper.default = {
	  props: {
	    transformOrigin: {
	      type: [Boolean, String],
	      default: true
	    },
	    placement: {
	      type: String,
	      default: 'bottom'
	    },
	    boundariesPadding: {
	      type: Number,
	      default: 5
	    },
	    reference: {},
	    popper: {},
	    offset: {
	      default: 0
	    },
	    value: Boolean,
	    visibleArrow: Boolean,
	    arrowOffset: {
	      type: Number,
	      default: 35
	    },
	    appendToBody: {
	      type: Boolean,
	      default: true
	    },
	    popperOptions: {
	      type: Object,
	      default: function _default() {
	        return {
	          gpuAcceleration: false
	        };
	      }
	    }
	  },

	  data: function data() {
	    return {
	      showPopper: false,
	      currentPlacement: ''
	    };
	  },


	  watch: {
	    value: {
	      immediate: true,
	      handler: function handler(val) {
	        this.showPopper = val;
	        this.$emit('input', val);
	      }
	    },

	    showPopper: function showPopper(val) {
	      if (this.disabled) return;
	      val ? this.updatePopper() : this.destroyPopper();
	      this.$emit('input', val);
	    }
	  },

	  methods: {
	    createPopper: function createPopper() {
	      var _this = this;

	      if (this.$isServer) return;
	      this.currentPlacement = this.currentPlacement || this.placement;
	      if (!/^(top|bottom|left|right)(-start|-end)?$/g.test(this.currentPlacement)) {
	        return;
	      }

	      var options = this.popperOptions;
	      var popper = this.popperElm = this.popperElm || this.popper || this.$refs.popper;
	      var reference = this.referenceElm = this.referenceElm || this.reference || this.$refs.reference;

	      if (!reference && this.$slots.reference && this.$slots.reference[0]) {
	        reference = this.referenceElm = this.$slots.reference[0].elm;
	      }

	      if (!popper || !reference) return;
	      if (this.visibleArrow) this.appendArrow(popper);
	      if (this.appendToBody) document.body.appendChild(this.popperElm);
	      if (this.popperJS && this.popperJS.destroy) {
	        this.popperJS.destroy();
	      }

	      options.placement = this.currentPlacement;
	      options.offset = this.offset;
	      options.arrowOffset = this.arrowOffset;
	      this.popperJS = new PopperJS(reference, popper, options);
	      this.popperJS.onCreate(function (_) {
	        _this.$emit('created', _this);
	        _this.resetTransformOrigin();
	        _this.$nextTick(_this.updatePopper);
	      });
	      if (typeof options.onUpdate === 'function') {
	        this.popperJS.onUpdate(options.onUpdate);
	      }
	      this.popperJS._popper.style.zIndex = _popup.PopupManager.nextZIndex();
	      this.popperElm.addEventListener('click', stop);
	    },
	    updatePopper: function updatePopper() {
	      var popperJS = this.popperJS;
	      if (popperJS) {
	        popperJS.update();
	        if (popperJS._popper) {
	          popperJS._popper.style.zIndex = _popup.PopupManager.nextZIndex();
	        }
	      } else {
	        this.createPopper();
	      }
	    },
	    doDestroy: function doDestroy(forceDestroy) {
	      /* istanbul ignore if */
	      if (!this.popperJS || this.showPopper && !forceDestroy) return;
	      this.popperJS.destroy();
	      this.popperJS = null;
	    },
	    destroyPopper: function destroyPopper() {
	      if (this.popperJS) {
	        this.resetTransformOrigin();
	      }
	    },
	    resetTransformOrigin: function resetTransformOrigin() {
	      if (!this.transformOrigin) return;
	      var placementMap = {
	        top: 'bottom',
	        bottom: 'top',
	        left: 'right',
	        right: 'left'
	      };
	      var placement = this.popperJS._popper.getAttribute('x-placement').split('-')[0];
	      var origin = placementMap[placement];
	      this.popperJS._popper.style.transformOrigin = typeof this.transformOrigin === 'string' ? this.transformOrigin : ['top', 'bottom'].indexOf(placement) > -1 ? 'center ' + origin : origin + ' center';
	    },
	    appendArrow: function appendArrow(element) {
	      var hash = void 0;
	      if (this.appended) {
	        return;
	      }

	      this.appended = true;

	      for (var item in element.attributes) {
	        if (/^_v-/.test(element.attributes[item].name)) {
	          hash = element.attributes[item].name;
	          break;
	        }
	      }

	      var arrow = document.createElement('div');

	      if (hash) {
	        arrow.setAttribute(hash, '');
	      }
	      arrow.setAttribute('x-arrow', '');
	      arrow.className = 'popper__arrow';
	      element.appendChild(arrow);
	    }
	  },

	  beforeDestroy: function beforeDestroy() {
	    this.doDestroy(true);
	    if (this.popperElm && this.popperElm.parentNode === document.body) {
	      this.popperElm.removeEventListener('click', stop);
	      document.body.removeChild(this.popperElm);
	    }
	  },


	  // call destroy in keep-alive mode
	  deactivated: function deactivated() {
	    this.$options.beforeDestroy[0].call(this);
	  }
	};
	return vuePopper;
}

var input = {exports: {}};

var migrating = {};

var hasRequiredMigrating;

function requireMigrating () {
	if (hasRequiredMigrating) return migrating;
	hasRequiredMigrating = 1;

	migrating.__esModule = true;

	requireUtil();

	/**
	 * Show migrating guide in browser console.
	 *
	 * Usage:
	 * import Migrating from 'element-ui/src/mixins/migrating';
	 *
	 * mixins: [Migrating]
	 *
	 * add getMigratingConfig method for your component.
	 *  getMigratingConfig() {
	 *    return {
	 *      props: {
	 *        'allow-no-selection': 'allow-no-selection is removed.',
	 *        'selection-mode': 'selection-mode is removed.'
	 *      },
	 *      events: {
	 *        selectionchange: 'selectionchange is renamed to selection-change.'
	 *      }
	 *    };
	 *  },
	 */
	migrating.default = {
	  mounted: function mounted() {
	    return;
	  },

	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {},
	        events: {}
	      };
	    }
	  }
	};
	return migrating;
}

var shared$2 = {};

var hasRequiredShared;

function requireShared () {
	if (hasRequiredShared) return shared$2;
	hasRequiredShared = 1;

	shared$2.__esModule = true;
	shared$2.isDef = isDef;
	shared$2.isKorean = isKorean;
	function isDef(val) {
	  return val !== undefined && val !== null;
	}
	function isKorean(text) {
	  var reg = /([(\uAC00-\uD7AF)|(\u3130-\u318F)])+/gi;
	  return reg.test(text);
	}
	return shared$2;
}

var hasRequiredInput;

function requireInput () {
	if (hasRequiredInput) return input.exports;
	hasRequiredInput = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 75);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 11:
		/***/ (function(module, exports) {

		module.exports = requireMigrating();

		/***/ }),

		/***/ 21:
		/***/ (function(module, exports) {

		module.exports = requireShared();

		/***/ }),

		/***/ 4:
		/***/ (function(module, exports) {

		module.exports = requireEmitter();

		/***/ }),

		/***/ 75:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/input/src/input.vue?vue&type=template&id=343dd774&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "div",
		    {
		      class: [
		        _vm.type === "textarea" ? "el-textarea" : "el-input",
		        _vm.inputSize ? "el-input--" + _vm.inputSize : "",
		        {
		          "is-disabled": _vm.inputDisabled,
		          "is-exceed": _vm.inputExceed,
		          "el-input-group": _vm.$slots.prepend || _vm.$slots.append,
		          "el-input-group--append": _vm.$slots.append,
		          "el-input-group--prepend": _vm.$slots.prepend,
		          "el-input--prefix": _vm.$slots.prefix || _vm.prefixIcon,
		          "el-input--suffix":
		            _vm.$slots.suffix ||
		            _vm.suffixIcon ||
		            _vm.clearable ||
		            _vm.showPassword
		        }
		      ],
		      on: {
		        mouseenter: function($event) {
		          _vm.hovering = true;
		        },
		        mouseleave: function($event) {
		          _vm.hovering = false;
		        }
		      }
		    },
		    [
		      _vm.type !== "textarea"
		        ? [
		            _vm.$slots.prepend
		              ? _c(
		                  "div",
		                  { staticClass: "el-input-group__prepend" },
		                  [_vm._t("prepend")],
		                  2
		                )
		              : _vm._e(),
		            _vm.type !== "textarea"
		              ? _c(
		                  "input",
		                  _vm._b(
		                    {
		                      ref: "input",
		                      staticClass: "el-input__inner",
		                      attrs: {
		                        tabindex: _vm.tabindex,
		                        type: _vm.showPassword
		                          ? _vm.passwordVisible
		                            ? "text"
		                            : "password"
		                          : _vm.type,
		                        disabled: _vm.inputDisabled,
		                        readonly: _vm.readonly,
		                        autocomplete: _vm.autoComplete || _vm.autocomplete,
		                        "aria-label": _vm.label
		                      },
		                      on: {
		                        compositionstart: _vm.handleCompositionStart,
		                        compositionupdate: _vm.handleCompositionUpdate,
		                        compositionend: _vm.handleCompositionEnd,
		                        input: _vm.handleInput,
		                        focus: _vm.handleFocus,
		                        blur: _vm.handleBlur,
		                        change: _vm.handleChange
		                      }
		                    },
		                    "input",
		                    _vm.$attrs,
		                    false
		                  )
		                )
		              : _vm._e(),
		            _vm.$slots.prefix || _vm.prefixIcon
		              ? _c(
		                  "span",
		                  { staticClass: "el-input__prefix" },
		                  [
		                    _vm._t("prefix"),
		                    _vm.prefixIcon
		                      ? _c("i", {
		                          staticClass: "el-input__icon",
		                          class: _vm.prefixIcon
		                        })
		                      : _vm._e()
		                  ],
		                  2
		                )
		              : _vm._e(),
		            _vm.getSuffixVisible()
		              ? _c("span", { staticClass: "el-input__suffix" }, [
		                  _c(
		                    "span",
		                    { staticClass: "el-input__suffix-inner" },
		                    [
		                      !_vm.showClear ||
		                      !_vm.showPwdVisible ||
		                      !_vm.isWordLimitVisible
		                        ? [
		                            _vm._t("suffix"),
		                            _vm.suffixIcon
		                              ? _c("i", {
		                                  staticClass: "el-input__icon",
		                                  class: _vm.suffixIcon
		                                })
		                              : _vm._e()
		                          ]
		                        : _vm._e(),
		                      _vm.showClear
		                        ? _c("i", {
		                            staticClass:
		                              "el-input__icon el-icon-circle-close el-input__clear",
		                            on: {
		                              mousedown: function($event) {
		                                $event.preventDefault();
		                              },
		                              click: _vm.clear
		                            }
		                          })
		                        : _vm._e(),
		                      _vm.showPwdVisible
		                        ? _c("i", {
		                            staticClass:
		                              "el-input__icon el-icon-view el-input__clear",
		                            on: { click: _vm.handlePasswordVisible }
		                          })
		                        : _vm._e(),
		                      _vm.isWordLimitVisible
		                        ? _c("span", { staticClass: "el-input__count" }, [
		                            _c(
		                              "span",
		                              { staticClass: "el-input__count-inner" },
		                              [
		                                _vm._v(
		                                  "\n            " +
		                                    _vm._s(_vm.textLength) +
		                                    "/" +
		                                    _vm._s(_vm.upperLimit) +
		                                    "\n          "
		                                )
		                              ]
		                            )
		                          ])
		                        : _vm._e()
		                    ],
		                    2
		                  ),
		                  _vm.validateState
		                    ? _c("i", {
		                        staticClass: "el-input__icon",
		                        class: ["el-input__validateIcon", _vm.validateIcon]
		                      })
		                    : _vm._e()
		                ])
		              : _vm._e(),
		            _vm.$slots.append
		              ? _c(
		                  "div",
		                  { staticClass: "el-input-group__append" },
		                  [_vm._t("append")],
		                  2
		                )
		              : _vm._e()
		          ]
		        : _c(
		            "textarea",
		            _vm._b(
		              {
		                ref: "textarea",
		                staticClass: "el-textarea__inner",
		                style: _vm.textareaStyle,
		                attrs: {
		                  tabindex: _vm.tabindex,
		                  disabled: _vm.inputDisabled,
		                  readonly: _vm.readonly,
		                  autocomplete: _vm.autoComplete || _vm.autocomplete,
		                  "aria-label": _vm.label
		                },
		                on: {
		                  compositionstart: _vm.handleCompositionStart,
		                  compositionupdate: _vm.handleCompositionUpdate,
		                  compositionend: _vm.handleCompositionEnd,
		                  input: _vm.handleInput,
		                  focus: _vm.handleFocus,
		                  blur: _vm.handleBlur,
		                  change: _vm.handleChange
		                }
		              },
		              "textarea",
		              _vm.$attrs,
		              false
		            )
		          ),
		      _vm.isWordLimitVisible && _vm.type === "textarea"
		        ? _c("span", { staticClass: "el-input__count" }, [
		            _vm._v(_vm._s(_vm.textLength) + "/" + _vm._s(_vm.upperLimit))
		          ])
		        : _vm._e()
		    ],
		    2
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/input/src/input.vue?vue&type=template&id=343dd774&

		// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
		var emitter_ = __webpack_require__(4);
		var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

		// EXTERNAL MODULE: external "element-ui/lib/mixins/migrating"
		var migrating_ = __webpack_require__(11);
		var migrating_default = /*#__PURE__*/__webpack_require__.n(migrating_);

		// CONCATENATED MODULE: ./packages/input/src/calcTextareaHeight.js
		var hiddenTextarea = void 0;

		var HIDDEN_STYLE = '\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n';

		var CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];

		function calculateNodeStyling(targetElement) {
		  var style = window.getComputedStyle(targetElement);

		  var boxSizing = style.getPropertyValue('box-sizing');

		  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));

		  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));

		  var contextStyle = CONTEXT_STYLE.map(function (name) {
		    return name + ':' + style.getPropertyValue(name);
		  }).join(';');

		  return { contextStyle: contextStyle, paddingSize: paddingSize, borderSize: borderSize, boxSizing: boxSizing };
		}

		function calcTextareaHeight(targetElement) {
		  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
		  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

		  if (!hiddenTextarea) {
		    hiddenTextarea = document.createElement('textarea');
		    document.body.appendChild(hiddenTextarea);
		  }

		  var _calculateNodeStyling = calculateNodeStyling(targetElement),
		      paddingSize = _calculateNodeStyling.paddingSize,
		      borderSize = _calculateNodeStyling.borderSize,
		      boxSizing = _calculateNodeStyling.boxSizing,
		      contextStyle = _calculateNodeStyling.contextStyle;

		  hiddenTextarea.setAttribute('style', contextStyle + ';' + HIDDEN_STYLE);
		  hiddenTextarea.value = targetElement.value || targetElement.placeholder || '';

		  var height = hiddenTextarea.scrollHeight;
		  var result = {};

		  if (boxSizing === 'border-box') {
		    height = height + borderSize;
		  } else if (boxSizing === 'content-box') {
		    height = height - paddingSize;
		  }

		  hiddenTextarea.value = '';
		  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;

		  if (minRows !== null) {
		    var minHeight = singleRowHeight * minRows;
		    if (boxSizing === 'border-box') {
		      minHeight = minHeight + paddingSize + borderSize;
		    }
		    height = Math.max(minHeight, height);
		    result.minHeight = minHeight + 'px';
		  }
		  if (maxRows !== null) {
		    var maxHeight = singleRowHeight * maxRows;
		    if (boxSizing === 'border-box') {
		      maxHeight = maxHeight + paddingSize + borderSize;
		    }
		    height = Math.min(maxHeight, height);
		  }
		  result.height = height + 'px';
		  hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);
		  hiddenTextarea = null;
		  return result;
		}		// EXTERNAL MODULE: external "element-ui/lib/utils/merge"
		var merge_ = __webpack_require__(9);
		var merge_default = /*#__PURE__*/__webpack_require__.n(merge_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/shared"
		var shared_ = __webpack_require__(21);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/input/src/input.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//







		/* harmony default export */ var inputvue_type_script_lang_js_ = ({
		  name: 'ElInput',

		  componentName: 'ElInput',

		  mixins: [emitter_default.a, migrating_default.a],

		  inheritAttrs: false,

		  inject: {
		    elForm: {
		      default: ''
		    },
		    elFormItem: {
		      default: ''
		    }
		  },

		  data: function data() {
		    return {
		      textareaCalcStyle: {},
		      hovering: false,
		      focused: false,
		      isComposing: false,
		      passwordVisible: false
		    };
		  },


		  props: {
		    value: [String, Number],
		    size: String,
		    resize: String,
		    form: String,
		    disabled: Boolean,
		    readonly: Boolean,
		    type: {
		      type: String,
		      default: 'text'
		    },
		    autosize: {
		      type: [Boolean, Object],
		      default: false
		    },
		    autocomplete: {
		      type: String,
		      default: 'off'
		    },
		    /** @Deprecated in next major version */
		    autoComplete: {
		      type: String,
		      validator: function validator(val) {
		        return true;
		      }
		    },
		    validateEvent: {
		      type: Boolean,
		      default: true
		    },
		    suffixIcon: String,
		    prefixIcon: String,
		    label: String,
		    clearable: {
		      type: Boolean,
		      default: false
		    },
		    showPassword: {
		      type: Boolean,
		      default: false
		    },
		    showWordLimit: {
		      type: Boolean,
		      default: false
		    },
		    tabindex: String
		  },

		  computed: {
		    _elFormItemSize: function _elFormItemSize() {
		      return (this.elFormItem || {}).elFormItemSize;
		    },
		    validateState: function validateState() {
		      return this.elFormItem ? this.elFormItem.validateState : '';
		    },
		    needStatusIcon: function needStatusIcon() {
		      return this.elForm ? this.elForm.statusIcon : false;
		    },
		    validateIcon: function validateIcon() {
		      return {
		        validating: 'el-icon-loading',
		        success: 'el-icon-circle-check',
		        error: 'el-icon-circle-close'
		      }[this.validateState];
		    },
		    textareaStyle: function textareaStyle() {
		      return merge_default()({}, this.textareaCalcStyle, { resize: this.resize });
		    },
		    inputSize: function inputSize() {
		      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
		    },
		    inputDisabled: function inputDisabled() {
		      return this.disabled || (this.elForm || {}).disabled;
		    },
		    nativeInputValue: function nativeInputValue() {
		      return this.value === null || this.value === undefined ? '' : String(this.value);
		    },
		    showClear: function showClear() {
		      return this.clearable && !this.inputDisabled && !this.readonly && this.nativeInputValue && (this.focused || this.hovering);
		    },
		    showPwdVisible: function showPwdVisible() {
		      return this.showPassword && !this.inputDisabled && !this.readonly && (!!this.nativeInputValue || this.focused);
		    },
		    isWordLimitVisible: function isWordLimitVisible() {
		      return this.showWordLimit && this.$attrs.maxlength && (this.type === 'text' || this.type === 'textarea') && !this.inputDisabled && !this.readonly && !this.showPassword;
		    },
		    upperLimit: function upperLimit() {
		      return this.$attrs.maxlength;
		    },
		    textLength: function textLength() {
		      if (typeof this.value === 'number') {
		        return String(this.value).length;
		      }

		      return (this.value || '').length;
		    },
		    inputExceed: function inputExceed() {
		      // show exceed style if length of initial value greater then maxlength
		      return this.isWordLimitVisible && this.textLength > this.upperLimit;
		    }
		  },

		  watch: {
		    value: function value(val) {
		      this.$nextTick(this.resizeTextarea);
		      if (this.validateEvent) {
		        this.dispatch('ElFormItem', 'el.form.change', [val]);
		      }
		    },

		    // native input value is set explicitly
		    // do not use v-model / :value in template
		    // see: https://github.com/ElemeFE/element/issues/14521
		    nativeInputValue: function nativeInputValue() {
		      this.setNativeInputValue();
		    },

		    // when change between <input> and <textarea>,
		    // update DOM dependent value and styles
		    // https://github.com/ElemeFE/element/issues/14857
		    type: function type() {
		      var _this = this;

		      this.$nextTick(function () {
		        _this.setNativeInputValue();
		        _this.resizeTextarea();
		        _this.updateIconOffset();
		      });
		    }
		  },

		  methods: {
		    focus: function focus() {
		      this.getInput().focus();
		    },
		    blur: function blur() {
		      this.getInput().blur();
		    },
		    getMigratingConfig: function getMigratingConfig() {
		      return {
		        props: {
		          'icon': 'icon is removed, use suffix-icon / prefix-icon instead.',
		          'on-icon-click': 'on-icon-click is removed.'
		        },
		        events: {
		          'click': 'click is removed.'
		        }
		      };
		    },
		    handleBlur: function handleBlur(event) {
		      this.focused = false;
		      this.$emit('blur', event);
		      if (this.validateEvent) {
		        this.dispatch('ElFormItem', 'el.form.blur', [this.value]);
		      }
		    },
		    select: function select() {
		      this.getInput().select();
		    },
		    resizeTextarea: function resizeTextarea() {
		      if (this.$isServer) return;
		      var autosize = this.autosize,
		          type = this.type;

		      if (type !== 'textarea') return;
		      if (!autosize) {
		        this.textareaCalcStyle = {
		          minHeight: calcTextareaHeight(this.$refs.textarea).minHeight
		        };
		        return;
		      }
		      var minRows = autosize.minRows;
		      var maxRows = autosize.maxRows;

		      this.textareaCalcStyle = calcTextareaHeight(this.$refs.textarea, minRows, maxRows);
		    },
		    setNativeInputValue: function setNativeInputValue() {
		      var input = this.getInput();
		      if (!input) return;
		      if (input.value === this.nativeInputValue) return;
		      input.value = this.nativeInputValue;
		    },
		    handleFocus: function handleFocus(event) {
		      this.focused = true;
		      this.$emit('focus', event);
		    },
		    handleCompositionStart: function handleCompositionStart(event) {
		      this.$emit('compositionstart', event);
		      this.isComposing = true;
		    },
		    handleCompositionUpdate: function handleCompositionUpdate(event) {
		      this.$emit('compositionupdate', event);
		      var text = event.target.value;
		      var lastCharacter = text[text.length - 1] || '';
		      this.isComposing = !Object(shared_["isKorean"])(lastCharacter);
		    },
		    handleCompositionEnd: function handleCompositionEnd(event) {
		      this.$emit('compositionend', event);
		      if (this.isComposing) {
		        this.isComposing = false;
		        this.handleInput(event);
		      }
		    },
		    handleInput: function handleInput(event) {
		      // should not emit input during composition
		      // see: https://github.com/ElemeFE/element/issues/10516
		      if (this.isComposing) return;

		      // hack for https://github.com/ElemeFE/element/issues/8548
		      // should remove the following line when we don't support IE
		      if (event.target.value === this.nativeInputValue) return;

		      this.$emit('input', event.target.value);

		      // ensure native input value is controlled
		      // see: https://github.com/ElemeFE/element/issues/12850
		      this.$nextTick(this.setNativeInputValue);
		    },
		    handleChange: function handleChange(event) {
		      this.$emit('change', event.target.value);
		    },
		    calcIconOffset: function calcIconOffset(place) {
		      var elList = [].slice.call(this.$el.querySelectorAll('.el-input__' + place) || []);
		      if (!elList.length) return;
		      var el = null;
		      for (var i = 0; i < elList.length; i++) {
		        if (elList[i].parentNode === this.$el) {
		          el = elList[i];
		          break;
		        }
		      }
		      if (!el) return;
		      var pendantMap = {
		        suffix: 'append',
		        prefix: 'prepend'
		      };

		      var pendant = pendantMap[place];
		      if (this.$slots[pendant]) {
		        el.style.transform = 'translateX(' + (place === 'suffix' ? '-' : '') + this.$el.querySelector('.el-input-group__' + pendant).offsetWidth + 'px)';
		      } else {
		        el.removeAttribute('style');
		      }
		    },
		    updateIconOffset: function updateIconOffset() {
		      this.calcIconOffset('prefix');
		      this.calcIconOffset('suffix');
		    },
		    clear: function clear() {
		      this.$emit('input', '');
		      this.$emit('change', '');
		      this.$emit('clear');
		    },
		    handlePasswordVisible: function handlePasswordVisible() {
		      var _this2 = this;

		      this.passwordVisible = !this.passwordVisible;
		      this.$nextTick(function () {
		        _this2.focus();
		      });
		    },
		    getInput: function getInput() {
		      return this.$refs.input || this.$refs.textarea;
		    },
		    getSuffixVisible: function getSuffixVisible() {
		      return this.$slots.suffix || this.suffixIcon || this.showClear || this.showPassword || this.isWordLimitVisible || this.validateState && this.needStatusIcon;
		    }
		  },

		  created: function created() {
		    this.$on('inputSelect', this.select);
		  },
		  mounted: function mounted() {
		    this.setNativeInputValue();
		    this.resizeTextarea();
		    this.updateIconOffset();
		  },
		  updated: function updated() {
		    this.$nextTick(this.updateIconOffset);
		  }
		});
		// CONCATENATED MODULE: ./packages/input/src/input.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_inputvue_type_script_lang_js_ = (inputvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/input/src/input.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_inputvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/input/src/input.vue";
		/* harmony default export */ var input = (component.exports);
		// CONCATENATED MODULE: ./packages/input/index.js


		/* istanbul ignore next */
		input.install = function (Vue) {
		  Vue.component(input.name, input);
		};

		/* harmony default export */ __webpack_exports__["default"] = (input);

		/***/ }),

		/***/ 9:
		/***/ (function(module, exports) {

		module.exports = requireMerge();

		/***/ })

		/******/ }); 
	} (input));
	return input.exports;
}

var clickoutside = {};

var hasRequiredClickoutside;

function requireClickoutside () {
	if (hasRequiredClickoutside) return clickoutside;
	hasRequiredClickoutside = 1;

	clickoutside.__esModule = true;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	var _dom = requireDom();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var nodeList = [];
	var ctx = '@@clickoutsideContext';

	var startClick = void 0;
	var seed = 0;

	!_vue2.default.prototype.$isServer && (0, _dom.on)(document, 'mousedown', function (e) {
	  return startClick = e;
	});

	!_vue2.default.prototype.$isServer && (0, _dom.on)(document, 'mouseup', function (e) {
	  nodeList.forEach(function (node) {
	    return node[ctx].documentHandler(e, startClick);
	  });
	});

	function createDocumentHandler(el, binding, vnode) {
	  return function () {
	    var mouseup = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var mousedown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	    if (!vnode || !vnode.context || !mouseup.target || !mousedown.target || el.contains(mouseup.target) || el.contains(mousedown.target) || el === mouseup.target || vnode.context.popperElm && (vnode.context.popperElm.contains(mouseup.target) || vnode.context.popperElm.contains(mousedown.target))) return;

	    if (binding.expression && el[ctx].methodName && vnode.context[el[ctx].methodName]) {
	      vnode.context[el[ctx].methodName]();
	    } else {
	      el[ctx].bindingFn && el[ctx].bindingFn();
	    }
	  };
	}

	/**
	 * v-clickoutside
	 * @desc 点击元素外面才会触发的事件
	 * @example
	 * ```vue
	 * <div v-element-clickoutside="handleClose">
	 * ```
	 */
	clickoutside.default = {
	  bind: function bind(el, binding, vnode) {
	    nodeList.push(el);
	    var id = seed++;
	    el[ctx] = {
	      id: id,
	      documentHandler: createDocumentHandler(el, binding, vnode),
	      methodName: binding.expression,
	      bindingFn: binding.value
	    };
	  },
	  update: function update(el, binding, vnode) {
	    el[ctx].documentHandler = createDocumentHandler(el, binding, vnode);
	    el[ctx].methodName = binding.expression;
	    el[ctx].bindingFn = binding.value;
	  },
	  unbind: function unbind(el) {
	    var len = nodeList.length;

	    for (var i = 0; i < len; i++) {
	      if (nodeList[i][ctx].id === el[ctx].id) {
	        nodeList.splice(i, 1);
	        break;
	      }
	    }
	    delete el[ctx];
	  }
	};
	return clickoutside;
}

var button = {exports: {}};

var hasRequiredButton;

function requireButton () {
	if (hasRequiredButton) return button.exports;
	hasRequiredButton = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 96);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 96:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button.vue?vue&type=template&id=ca859fb4&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "button",
		    {
		      staticClass: "el-button",
		      class: [
		        _vm.type ? "el-button--" + _vm.type : "",
		        _vm.buttonSize ? "el-button--" + _vm.buttonSize : "",
		        {
		          "is-disabled": _vm.buttonDisabled,
		          "is-loading": _vm.loading,
		          "is-plain": _vm.plain,
		          "is-round": _vm.round,
		          "is-circle": _vm.circle
		        }
		      ],
		      attrs: {
		        disabled: _vm.buttonDisabled || _vm.loading,
		        autofocus: _vm.autofocus,
		        type: _vm.nativeType
		      },
		      on: { click: _vm.handleClick }
		    },
		    [
		      _vm.loading ? _c("i", { staticClass: "el-icon-loading" }) : _vm._e(),
		      _vm.icon && !_vm.loading ? _c("i", { class: _vm.icon }) : _vm._e(),
		      _vm.$slots.default ? _c("span", [_vm._t("default")], 2) : _vm._e()
		    ]
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/button/src/button.vue?vue&type=template&id=ca859fb4&

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//

		/* harmony default export */ var buttonvue_type_script_lang_js_ = ({
		  name: 'ElButton',

		  inject: {
		    elForm: {
		      default: ''
		    },
		    elFormItem: {
		      default: ''
		    }
		  },

		  props: {
		    type: {
		      type: String,
		      default: 'default'
		    },
		    size: String,
		    icon: {
		      type: String,
		      default: ''
		    },
		    nativeType: {
		      type: String,
		      default: 'button'
		    },
		    loading: Boolean,
		    disabled: Boolean,
		    plain: Boolean,
		    autofocus: Boolean,
		    round: Boolean,
		    circle: Boolean
		  },

		  computed: {
		    _elFormItemSize: function _elFormItemSize() {
		      return (this.elFormItem || {}).elFormItemSize;
		    },
		    buttonSize: function buttonSize() {
		      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
		    },
		    buttonDisabled: function buttonDisabled() {
		      return this.$options.propsData.hasOwnProperty('disabled') ? this.disabled : (this.elForm || {}).disabled;
		    }
		  },

		  methods: {
		    handleClick: function handleClick(evt) {
		      this.$emit('click', evt);
		    }
		  }
		});
		// CONCATENATED MODULE: ./packages/button/src/button.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_buttonvue_type_script_lang_js_ = (buttonvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/button/src/button.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_buttonvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/button/src/button.vue";
		/* harmony default export */ var src_button = (component.exports);
		// CONCATENATED MODULE: ./packages/button/index.js


		/* istanbul ignore next */
		src_button.install = function (Vue) {
		  Vue.component(src_button.name, src_button);
		};

		/* harmony default export */ __webpack_exports__["default"] = (src_button);

		/***/ })

		/******/ }); 
	} (button));
	return button.exports;
}

var checkbox = {exports: {}};

var hasRequiredCheckbox;

function requireCheckbox () {
	if (hasRequiredCheckbox) return checkbox.exports;
	hasRequiredCheckbox = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 91);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 4:
		/***/ (function(module, exports) {

		module.exports = requireEmitter();

		/***/ }),

		/***/ 91:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox.vue?vue&type=template&id=d0387074&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "label",
		    {
		      staticClass: "el-checkbox",
		      class: [
		        _vm.border && _vm.checkboxSize
		          ? "el-checkbox--" + _vm.checkboxSize
		          : "",
		        { "is-disabled": _vm.isDisabled },
		        { "is-bordered": _vm.border },
		        { "is-checked": _vm.isChecked }
		      ],
		      attrs: { id: _vm.id }
		    },
		    [
		      _c(
		        "span",
		        {
		          staticClass: "el-checkbox__input",
		          class: {
		            "is-disabled": _vm.isDisabled,
		            "is-checked": _vm.isChecked,
		            "is-indeterminate": _vm.indeterminate,
		            "is-focus": _vm.focus
		          },
		          attrs: {
		            tabindex: _vm.indeterminate ? 0 : false,
		            role: _vm.indeterminate ? "checkbox" : false,
		            "aria-checked": _vm.indeterminate ? "mixed" : false
		          }
		        },
		        [
		          _c("span", { staticClass: "el-checkbox__inner" }),
		          _vm.trueLabel || _vm.falseLabel
		            ? _c("input", {
		                directives: [
		                  {
		                    name: "model",
		                    rawName: "v-model",
		                    value: _vm.model,
		                    expression: "model"
		                  }
		                ],
		                staticClass: "el-checkbox__original",
		                attrs: {
		                  type: "checkbox",
		                  "aria-hidden": _vm.indeterminate ? "true" : "false",
		                  name: _vm.name,
		                  disabled: _vm.isDisabled,
		                  "true-value": _vm.trueLabel,
		                  "false-value": _vm.falseLabel
		                },
		                domProps: {
		                  checked: Array.isArray(_vm.model)
		                    ? _vm._i(_vm.model, null) > -1
		                    : _vm._q(_vm.model, _vm.trueLabel)
		                },
		                on: {
		                  change: [
		                    function($event) {
		                      var $$a = _vm.model,
		                        $$el = $event.target,
		                        $$c = $$el.checked ? _vm.trueLabel : _vm.falseLabel;
		                      if (Array.isArray($$a)) {
		                        var $$v = null,
		                          $$i = _vm._i($$a, $$v);
		                        if ($$el.checked) {
		                          $$i < 0 && (_vm.model = $$a.concat([$$v]));
		                        } else {
		                          $$i > -1 &&
		                            (_vm.model = $$a
		                              .slice(0, $$i)
		                              .concat($$a.slice($$i + 1)));
		                        }
		                      } else {
		                        _vm.model = $$c;
		                      }
		                    },
		                    _vm.handleChange
		                  ],
		                  focus: function($event) {
		                    _vm.focus = true;
		                  },
		                  blur: function($event) {
		                    _vm.focus = false;
		                  }
		                }
		              })
		            : _c("input", {
		                directives: [
		                  {
		                    name: "model",
		                    rawName: "v-model",
		                    value: _vm.model,
		                    expression: "model"
		                  }
		                ],
		                staticClass: "el-checkbox__original",
		                attrs: {
		                  type: "checkbox",
		                  "aria-hidden": _vm.indeterminate ? "true" : "false",
		                  disabled: _vm.isDisabled,
		                  name: _vm.name
		                },
		                domProps: {
		                  value: _vm.label,
		                  checked: Array.isArray(_vm.model)
		                    ? _vm._i(_vm.model, _vm.label) > -1
		                    : _vm.model
		                },
		                on: {
		                  change: [
		                    function($event) {
		                      var $$a = _vm.model,
		                        $$el = $event.target,
		                        $$c = $$el.checked ? true : false;
		                      if (Array.isArray($$a)) {
		                        var $$v = _vm.label,
		                          $$i = _vm._i($$a, $$v);
		                        if ($$el.checked) {
		                          $$i < 0 && (_vm.model = $$a.concat([$$v]));
		                        } else {
		                          $$i > -1 &&
		                            (_vm.model = $$a
		                              .slice(0, $$i)
		                              .concat($$a.slice($$i + 1)));
		                        }
		                      } else {
		                        _vm.model = $$c;
		                      }
		                    },
		                    _vm.handleChange
		                  ],
		                  focus: function($event) {
		                    _vm.focus = true;
		                  },
		                  blur: function($event) {
		                    _vm.focus = false;
		                  }
		                }
		              })
		        ]
		      ),
		      _vm.$slots.default || _vm.label
		        ? _c(
		            "span",
		            { staticClass: "el-checkbox__label" },
		            [
		              _vm._t("default"),
		              !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e()
		            ],
		            2
		          )
		        : _vm._e()
		    ]
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue?vue&type=template&id=d0387074&

		// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
		var emitter_ = __webpack_require__(4);
		var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//



		/* harmony default export */ var checkboxvue_type_script_lang_js_ = ({
		  name: 'ElCheckbox',

		  mixins: [emitter_default.a],

		  inject: {
		    elForm: {
		      default: ''
		    },
		    elFormItem: {
		      default: ''
		    }
		  },

		  componentName: 'ElCheckbox',

		  data: function data() {
		    return {
		      selfModel: false,
		      focus: false,
		      isLimitExceeded: false
		    };
		  },


		  computed: {
		    model: {
		      get: function get() {
		        return this.isGroup ? this.store : this.value !== undefined ? this.value : this.selfModel;
		      },
		      set: function set(val) {
		        if (this.isGroup) {
		          this.isLimitExceeded = false;
		          this._checkboxGroup.min !== undefined && val.length < this._checkboxGroup.min && (this.isLimitExceeded = true);

		          this._checkboxGroup.max !== undefined && val.length > this._checkboxGroup.max && (this.isLimitExceeded = true);

		          this.isLimitExceeded === false && this.dispatch('ElCheckboxGroup', 'input', [val]);
		        } else {
		          this.$emit('input', val);
		          this.selfModel = val;
		        }
		      }
		    },

		    isChecked: function isChecked() {
		      if ({}.toString.call(this.model) === '[object Boolean]') {
		        return this.model;
		      } else if (Array.isArray(this.model)) {
		        return this.model.indexOf(this.label) > -1;
		      } else if (this.model !== null && this.model !== undefined) {
		        return this.model === this.trueLabel;
		      }
		    },
		    isGroup: function isGroup() {
		      var parent = this.$parent;
		      while (parent) {
		        if (parent.$options.componentName !== 'ElCheckboxGroup') {
		          parent = parent.$parent;
		        } else {
		          this._checkboxGroup = parent;
		          return true;
		        }
		      }
		      return false;
		    },
		    store: function store() {
		      return this._checkboxGroup ? this._checkboxGroup.value : this.value;
		    },


		    /* used to make the isDisabled judgment under max/min props */
		    isLimitDisabled: function isLimitDisabled() {
		      var _checkboxGroup = this._checkboxGroup,
		          max = _checkboxGroup.max,
		          min = _checkboxGroup.min;

		      return !!(max || min) && this.model.length >= max && !this.isChecked || this.model.length <= min && this.isChecked;
		    },
		    isDisabled: function isDisabled() {
		      return this.isGroup ? this._checkboxGroup.disabled || this.disabled || (this.elForm || {}).disabled || this.isLimitDisabled : this.disabled || (this.elForm || {}).disabled;
		    },
		    _elFormItemSize: function _elFormItemSize() {
		      return (this.elFormItem || {}).elFormItemSize;
		    },
		    checkboxSize: function checkboxSize() {
		      var temCheckboxSize = this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
		      return this.isGroup ? this._checkboxGroup.checkboxGroupSize || temCheckboxSize : temCheckboxSize;
		    }
		  },

		  props: {
		    value: {},
		    label: {},
		    indeterminate: Boolean,
		    disabled: Boolean,
		    checked: Boolean,
		    name: String,
		    trueLabel: [String, Number],
		    falseLabel: [String, Number],
		    id: String, /* 当indeterminate为真时，为controls提供相关连的checkbox的id，表明元素间的控制关系*/
		    controls: String, /* 当indeterminate为真时，为controls提供相关连的checkbox的id，表明元素间的控制关系*/
		    border: Boolean,
		    size: String
		  },

		  methods: {
		    addToStore: function addToStore() {
		      if (Array.isArray(this.model) && this.model.indexOf(this.label) === -1) {
		        this.model.push(this.label);
		      } else {
		        this.model = this.trueLabel || true;
		      }
		    },
		    handleChange: function handleChange(ev) {
		      var _this = this;

		      if (this.isLimitExceeded) return;
		      var value = void 0;
		      if (ev.target.checked) {
		        value = this.trueLabel === undefined ? true : this.trueLabel;
		      } else {
		        value = this.falseLabel === undefined ? false : this.falseLabel;
		      }
		      this.$emit('change', value, ev);
		      this.$nextTick(function () {
		        if (_this.isGroup) {
		          _this.dispatch('ElCheckboxGroup', 'change', [_this._checkboxGroup.value]);
		        }
		      });
		    }
		  },

		  created: function created() {
		    this.checked && this.addToStore();
		  },
		  mounted: function mounted() {
		    // 为indeterminate元素 添加aria-controls 属性
		    if (this.indeterminate) {
		      this.$el.setAttribute('aria-controls', this.controls);
		    }
		  },


		  watch: {
		    value: function value(_value) {
		      this.dispatch('ElFormItem', 'el.form.change', _value);
		    }
		  }
		});
		// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_checkboxvue_type_script_lang_js_ = (checkboxvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_checkboxvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/checkbox/src/checkbox.vue";
		/* harmony default export */ var src_checkbox = (component.exports);
		// CONCATENATED MODULE: ./packages/checkbox/index.js


		/* istanbul ignore next */
		src_checkbox.install = function (Vue) {
		  Vue.component(src_checkbox.name, src_checkbox);
		};

		/* harmony default export */ __webpack_exports__["default"] = (src_checkbox);

		/***/ })

		/******/ }); 
	} (checkbox));
	return checkbox.exports;
}

var resizeEvent = {};

/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1$1 = (function () {
    if (typeof global$7 !== 'undefined' && global$7.Math === Math) {
        return global$7;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle$1 (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle$1(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index$2 = (function () {
    // Export existing implementation if available.
    if (typeof global$1$1.ResizeObserver !== 'undefined') {
        return global$1$1.ResizeObserver;
    }
    return ResizeObserver;
})();

var ResizeObserver_es = /*#__PURE__*/Object.freeze({
  __proto__: null,
  default: index$2
});

var require$$0$1 = /*@__PURE__*/getAugmentedNamespace(ResizeObserver_es);

/* eslint-disable no-undefined,no-param-reassign,no-shadow */

var throttle;
var hasRequiredThrottle;

function requireThrottle () {
	if (hasRequiredThrottle) return throttle;
	hasRequiredThrottle = 1;
	/**
	 * Throttle execution of a function. Especially useful for rate limiting
	 * execution of handlers on events like resize and scroll.
	 *
	 * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
	 * @param  {Boolean}   [noTrailing]   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the
	 *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time
	 *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,
	 *                                    the internal counter is reset)
	 * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
	 *                                    to `callback` when the throttled-function is executed.
	 * @param  {Boolean}   [debounceMode] If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),
	 *                                    schedule `callback` to execute after `delay` ms.
	 *
	 * @return {Function}  A new, throttled, function.
	 */
	throttle = function ( delay, noTrailing, callback, debounceMode ) {

		// After wrapper has stopped being called, this timeout ensures that
		// `callback` is executed at the proper times in `throttle` and `end`
		// debounce modes.
		var timeoutID;

		// Keep track of the last time `callback` was executed.
		var lastExec = 0;

		// `noTrailing` defaults to falsy.
		if ( typeof noTrailing !== 'boolean' ) {
			debounceMode = callback;
			callback = noTrailing;
			noTrailing = undefined;
		}

		// The `wrapper` function encapsulates all of the throttling / debouncing
		// functionality and when executed will limit the rate at which `callback`
		// is executed.
		function wrapper () {

			var self = this;
			var elapsed = Number(new Date()) - lastExec;
			var args = arguments;

			// Execute `callback` and update the `lastExec` timestamp.
			function exec () {
				lastExec = Number(new Date());
				callback.apply(self, args);
			}

			// If `debounceMode` is true (at begin) this is used to clear the flag
			// to allow future `callback` executions.
			function clear () {
				timeoutID = undefined;
			}

			if ( debounceMode && !timeoutID ) {
				// Since `wrapper` is being called for the first time and
				// `debounceMode` is true (at begin), execute `callback`.
				exec();
			}

			// Clear any existing timeout.
			if ( timeoutID ) {
				clearTimeout(timeoutID);
			}

			if ( debounceMode === undefined && elapsed > delay ) {
				// In throttle mode, if `delay` time has been exceeded, execute
				// `callback`.
				exec();

			} else if ( noTrailing !== true ) {
				// In trailing throttle mode, since `delay` time has not been
				// exceeded, schedule `callback` to execute `delay` ms after most
				// recent execution.
				//
				// If `debounceMode` is true (at begin), schedule `clear` to execute
				// after `delay` ms.
				//
				// If `debounceMode` is false (at end), schedule `callback` to
				// execute after `delay` ms.
				timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);
			}

		}

		// Return the wrapper function.
		return wrapper;

	};
	return throttle;
}

/* eslint-disable no-undefined */

var debounce;
var hasRequiredDebounce$1;

function requireDebounce$1 () {
	if (hasRequiredDebounce$1) return debounce;
	hasRequiredDebounce$1 = 1;
	var throttle = requireThrottle();

	/**
	 * Debounce execution of a function. Debouncing, unlike throttling,
	 * guarantees that a function is only executed a single time, either at the
	 * very beginning of a series of calls, or at the very end.
	 *
	 * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
	 * @param  {Boolean}  [atBegin]     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds
	 *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.
	 *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).
	 * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
	 *                                  to `callback` when the debounced-function is executed.
	 *
	 * @return {Function} A new, debounced function.
	 */
	debounce = function ( delay, atBegin, callback ) {
		return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);
	};
	return debounce;
}

var throttleDebounce;
var hasRequiredThrottleDebounce;

function requireThrottleDebounce () {
	if (hasRequiredThrottleDebounce) return throttleDebounce;
	hasRequiredThrottleDebounce = 1;
	var throttle = requireThrottle();
	var debounce = requireDebounce$1();

	throttleDebounce = {
		throttle: throttle,
		debounce: debounce
	};
	return throttleDebounce;
}

var hasRequiredResizeEvent;

function requireResizeEvent () {
	if (hasRequiredResizeEvent) return resizeEvent;
	hasRequiredResizeEvent = 1;

	resizeEvent.__esModule = true;
	resizeEvent.removeResizeListener = resizeEvent.addResizeListener = undefined;

	var _resizeObserverPolyfill = require$$0$1;

	var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);

	var _throttleDebounce = requireThrottleDebounce();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var isServer = typeof window === 'undefined';

	/* istanbul ignore next */
	var resizeHandler = function resizeHandler(entries) {
	  for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
	    var _ref;

	    if (_isArray) {
	      if (_i >= _iterator.length) break;
	      _ref = _iterator[_i++];
	    } else {
	      _i = _iterator.next();
	      if (_i.done) break;
	      _ref = _i.value;
	    }

	    var entry = _ref;

	    var listeners = entry.target.__resizeListeners__ || [];
	    if (listeners.length) {
	      listeners.forEach(function (fn) {
	        fn();
	      });
	    }
	  }
	};

	/* istanbul ignore next */
	resizeEvent.addResizeListener = function addResizeListener(element, fn) {
	  if (isServer) return;
	  if (!element.__resizeListeners__) {
	    element.__resizeListeners__ = [];
	    element.__ro__ = new _resizeObserverPolyfill2.default((0, _throttleDebounce.debounce)(16, resizeHandler));
	    element.__ro__.observe(element);
	  }
	  element.__resizeListeners__.push(fn);
	};

	/* istanbul ignore next */
	resizeEvent.removeResizeListener = function removeResizeListener(element, fn) {
	  if (!element || !element.__resizeListeners__) return;
	  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);
	  if (!element.__resizeListeners__.length) {
	    element.__ro__.disconnect();
	  }
	};
	return resizeEvent;
}

var scrollbar = {exports: {}};

var hasRequiredScrollbar;

function requireScrollbar () {
	if (hasRequiredScrollbar) return scrollbar.exports;
	hasRequiredScrollbar = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 133);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 133:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// EXTERNAL MODULE: external "element-ui/lib/utils/resize-event"
		var resize_event_ = __webpack_require__(16);

		// EXTERNAL MODULE: external "element-ui/lib/utils/scrollbar-width"
		var scrollbar_width_ = __webpack_require__(39);
		var scrollbar_width_default = /*#__PURE__*/__webpack_require__.n(scrollbar_width_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/util"
		var util_ = __webpack_require__(3);

		// EXTERNAL MODULE: external "element-ui/lib/utils/dom"
		var dom_ = __webpack_require__(2);

		// CONCATENATED MODULE: ./packages/scrollbar/src/util.js
		var BAR_MAP = {
		  vertical: {
		    offset: 'offsetHeight',
		    scroll: 'scrollTop',
		    scrollSize: 'scrollHeight',
		    size: 'height',
		    key: 'vertical',
		    axis: 'Y',
		    client: 'clientY',
		    direction: 'top'
		  },
		  horizontal: {
		    offset: 'offsetWidth',
		    scroll: 'scrollLeft',
		    scrollSize: 'scrollWidth',
		    size: 'width',
		    key: 'horizontal',
		    axis: 'X',
		    client: 'clientX',
		    direction: 'left'
		  }
		};

		function renderThumbStyle(_ref) {
		  var move = _ref.move,
		      size = _ref.size,
		      bar = _ref.bar;

		  var style = {};
		  var translate = 'translate' + bar.axis + '(' + move + '%)';

		  style[bar.size] = size;
		  style.transform = translate;
		  style.msTransform = translate;
		  style.webkitTransform = translate;

		  return style;
		}		// CONCATENATED MODULE: ./packages/scrollbar/src/bar.js



		/* istanbul ignore next */
		/* harmony default export */ var src_bar = ({
		  name: 'Bar',

		  props: {
		    vertical: Boolean,
		    size: String,
		    move: Number
		  },

		  computed: {
		    bar: function bar() {
		      return BAR_MAP[this.vertical ? 'vertical' : 'horizontal'];
		    },
		    wrap: function wrap() {
		      return this.$parent.wrap;
		    }
		  },

		  render: function render(h) {
		    var size = this.size,
		        move = this.move,
		        bar = this.bar;


		    return h(
		      'div',
		      {
		        'class': ['el-scrollbar__bar', 'is-' + bar.key],
		        on: {
		          'mousedown': this.clickTrackHandler
		        }
		      },
		      [h('div', {
		        ref: 'thumb',
		        'class': 'el-scrollbar__thumb',
		        on: {
		          'mousedown': this.clickThumbHandler
		        },

		        style: renderThumbStyle({ size: size, move: move, bar: bar }) })]
		    );
		  },


		  methods: {
		    clickThumbHandler: function clickThumbHandler(e) {
		      // prevent click event of right button
		      if (e.ctrlKey || e.button === 2) {
		        return;
		      }
		      this.startDrag(e);
		      this[this.bar.axis] = e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[this.bar.direction]);
		    },
		    clickTrackHandler: function clickTrackHandler(e) {
		      var offset = Math.abs(e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]);
		      var thumbHalf = this.$refs.thumb[this.bar.offset] / 2;
		      var thumbPositionPercentage = (offset - thumbHalf) * 100 / this.$el[this.bar.offset];

		      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
		    },
		    startDrag: function startDrag(e) {
		      e.stopImmediatePropagation();
		      this.cursorDown = true;

		      Object(dom_["on"])(document, 'mousemove', this.mouseMoveDocumentHandler);
		      Object(dom_["on"])(document, 'mouseup', this.mouseUpDocumentHandler);
		      document.onselectstart = function () {
		        return false;
		      };
		    },
		    mouseMoveDocumentHandler: function mouseMoveDocumentHandler(e) {
		      if (this.cursorDown === false) return;
		      var prevPage = this[this.bar.axis];

		      if (!prevPage) return;

		      var offset = (this.$el.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]) * -1;
		      var thumbClickPosition = this.$refs.thumb[this.bar.offset] - prevPage;
		      var thumbPositionPercentage = (offset - thumbClickPosition) * 100 / this.$el[this.bar.offset];

		      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
		    },
		    mouseUpDocumentHandler: function mouseUpDocumentHandler(e) {
		      this.cursorDown = false;
		      this[this.bar.axis] = 0;
		      Object(dom_["off"])(document, 'mousemove', this.mouseMoveDocumentHandler);
		      document.onselectstart = null;
		    }
		  },

		  destroyed: function destroyed() {
		    Object(dom_["off"])(document, 'mouseup', this.mouseUpDocumentHandler);
		  }
		});
		// CONCATENATED MODULE: ./packages/scrollbar/src/main.js
		// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js






		/* istanbul ignore next */
		/* harmony default export */ var main = ({
		  name: 'ElScrollbar',

		  components: { Bar: src_bar },

		  props: {
		    native: Boolean,
		    wrapStyle: {},
		    wrapClass: {},
		    viewClass: {},
		    viewStyle: {},
		    noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能
		    tag: {
		      type: String,
		      default: 'div'
		    }
		  },

		  data: function data() {
		    return {
		      sizeWidth: '0',
		      sizeHeight: '0',
		      moveX: 0,
		      moveY: 0
		    };
		  },


		  computed: {
		    wrap: function wrap() {
		      return this.$refs.wrap;
		    }
		  },

		  render: function render(h) {
		    var gutter = scrollbar_width_default()();
		    var style = this.wrapStyle;

		    if (gutter) {
		      var gutterWith = '-' + gutter + 'px';
		      var gutterStyle = 'margin-bottom: ' + gutterWith + '; margin-right: ' + gutterWith + ';';

		      if (Array.isArray(this.wrapStyle)) {
		        style = Object(util_["toObject"])(this.wrapStyle);
		        style.marginRight = style.marginBottom = gutterWith;
		      } else if (typeof this.wrapStyle === 'string') {
		        style += gutterStyle;
		      } else {
		        style = gutterStyle;
		      }
		    }
		    var view = h(this.tag, {
		      class: ['el-scrollbar__view', this.viewClass],
		      style: this.viewStyle,
		      ref: 'resize'
		    }, this.$slots.default);
		    var wrap = h(
		      'div',
		      {
		        ref: 'wrap',
		        style: style,
		        on: {
		          'scroll': this.handleScroll
		        },

		        'class': [this.wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default'] },
		      [[view]]
		    );
		    var nodes = void 0;

		    if (!this.native) {
		      nodes = [wrap, h(src_bar, {
		        attrs: {
		          move: this.moveX,
		          size: this.sizeWidth }
		      }), h(src_bar, {
		        attrs: {
		          vertical: true,
		          move: this.moveY,
		          size: this.sizeHeight }
		      })];
		    } else {
		      nodes = [h(
		        'div',
		        {
		          ref: 'wrap',
		          'class': [this.wrapClass, 'el-scrollbar__wrap'],
		          style: style },
		        [[view]]
		      )];
		    }
		    return h('div', { class: 'el-scrollbar' }, nodes);
		  },


		  methods: {
		    handleScroll: function handleScroll() {
		      var wrap = this.wrap;

		      this.moveY = wrap.scrollTop * 100 / wrap.clientHeight;
		      this.moveX = wrap.scrollLeft * 100 / wrap.clientWidth;
		    },
		    update: function update() {
		      var heightPercentage = void 0,
		          widthPercentage = void 0;
		      var wrap = this.wrap;
		      if (!wrap) return;

		      heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;
		      widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;

		      this.sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : '';
		      this.sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : '';
		    }
		  },

		  mounted: function mounted() {
		    if (this.native) return;
		    this.$nextTick(this.update);
		    !this.noresize && Object(resize_event_["addResizeListener"])(this.$refs.resize, this.update);
		  },
		  beforeDestroy: function beforeDestroy() {
		    if (this.native) return;
		    !this.noresize && Object(resize_event_["removeResizeListener"])(this.$refs.resize, this.update);
		  }
		});
		// CONCATENATED MODULE: ./packages/scrollbar/index.js


		/* istanbul ignore next */
		main.install = function (Vue) {
		  Vue.component(main.name, main);
		};

		/* harmony default export */ __webpack_exports__["default"] = (main);

		/***/ }),

		/***/ 16:
		/***/ (function(module, exports) {

		module.exports = requireResizeEvent();

		/***/ }),

		/***/ 2:
		/***/ (function(module, exports) {

		module.exports = requireDom();

		/***/ }),

		/***/ 3:
		/***/ (function(module, exports) {

		module.exports = requireUtil();

		/***/ }),

		/***/ 39:
		/***/ (function(module, exports) {

		module.exports = requireScrollbarWidth();

		/***/ })

		/******/ }); 
	} (scrollbar));
	return scrollbar.exports;
}

var collapseTransition = {};

var hasRequiredCollapseTransition;

function requireCollapseTransition () {
	if (hasRequiredCollapseTransition) return collapseTransition;
	hasRequiredCollapseTransition = 1;

	collapseTransition.__esModule = true;

	var _dom = requireDom();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Transition = function () {
	  function Transition() {
	    _classCallCheck(this, Transition);
	  }

	  Transition.prototype.beforeEnter = function beforeEnter(el) {
	    (0, _dom.addClass)(el, 'collapse-transition');
	    if (!el.dataset) el.dataset = {};

	    el.dataset.oldPaddingTop = el.style.paddingTop;
	    el.dataset.oldPaddingBottom = el.style.paddingBottom;

	    el.style.height = '0';
	    el.style.paddingTop = 0;
	    el.style.paddingBottom = 0;
	  };

	  Transition.prototype.enter = function enter(el) {
	    el.dataset.oldOverflow = el.style.overflow;
	    if (el.scrollHeight !== 0) {
	      el.style.height = el.scrollHeight + 'px';
	      el.style.paddingTop = el.dataset.oldPaddingTop;
	      el.style.paddingBottom = el.dataset.oldPaddingBottom;
	    } else {
	      el.style.height = '';
	      el.style.paddingTop = el.dataset.oldPaddingTop;
	      el.style.paddingBottom = el.dataset.oldPaddingBottom;
	    }

	    el.style.overflow = 'hidden';
	  };

	  Transition.prototype.afterEnter = function afterEnter(el) {
	    // for safari: remove class then reset height is necessary
	    (0, _dom.removeClass)(el, 'collapse-transition');
	    el.style.height = '';
	    el.style.overflow = el.dataset.oldOverflow;
	  };

	  Transition.prototype.beforeLeave = function beforeLeave(el) {
	    if (!el.dataset) el.dataset = {};
	    el.dataset.oldPaddingTop = el.style.paddingTop;
	    el.dataset.oldPaddingBottom = el.style.paddingBottom;
	    el.dataset.oldOverflow = el.style.overflow;

	    el.style.height = el.scrollHeight + 'px';
	    el.style.overflow = 'hidden';
	  };

	  Transition.prototype.leave = function leave(el) {
	    if (el.scrollHeight !== 0) {
	      // for safari: add class after set height, or it will jump to zero height suddenly, weired
	      (0, _dom.addClass)(el, 'collapse-transition');
	      el.style.height = 0;
	      el.style.paddingTop = 0;
	      el.style.paddingBottom = 0;
	    }
	  };

	  Transition.prototype.afterLeave = function afterLeave(el) {
	    (0, _dom.removeClass)(el, 'collapse-transition');
	    el.style.height = '';
	    el.style.overflow = el.dataset.oldOverflow;
	    el.style.paddingTop = el.dataset.oldPaddingTop;
	    el.style.paddingBottom = el.dataset.oldPaddingBottom;
	  };

	  return Transition;
	}();

	collapseTransition.default = {
	  name: 'ElCollapseTransition',
	  functional: true,
	  render: function render(h, _ref) {
	    var children = _ref.children;

	    var data = {
	      on: new Transition()
	    };

	    return h('transition', data, children);
	  }
	};
	return collapseTransition;
}

var vdom = {};

var hasRequiredVdom;

function requireVdom () {
	if (hasRequiredVdom) return vdom;
	hasRequiredVdom = 1;

	vdom.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	vdom.isVNode = isVNode;

	var _util = requireUtil();

	function isVNode(node) {
	  return node !== null && (typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object' && (0, _util.hasOwn)(node, 'componentOptions');
	}	return vdom;
}

var focus = {};

var hasRequiredFocus;

function requireFocus () {
	if (hasRequiredFocus) return focus;
	hasRequiredFocus = 1;

	focus.__esModule = true;

	focus.default = function (ref) {
	  return {
	    methods: {
	      focus: function focus() {
	        this.$refs[ref].focus();
	      }
	    }
	  };
	};
	return focus;
}

var babelHelperVueJsxMergeProps;
var hasRequiredBabelHelperVueJsxMergeProps;

function requireBabelHelperVueJsxMergeProps () {
	if (hasRequiredBabelHelperVueJsxMergeProps) return babelHelperVueJsxMergeProps;
	hasRequiredBabelHelperVueJsxMergeProps = 1;
	var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/;

	babelHelperVueJsxMergeProps = function mergeJSXProps (objs) {
	  return objs.reduce(function (a, b) {
	    var aa, bb, key, nestedKey, temp;
	    for (key in b) {
	      aa = a[key];
	      bb = b[key];
	      if (aa && nestRE.test(key)) {
	        // normalize class
	        if (key === 'class') {
	          if (typeof aa === 'string') {
	            temp = aa;
	            a[key] = aa = {};
	            aa[temp] = true;
	          }
	          if (typeof bb === 'string') {
	            temp = bb;
	            b[key] = bb = {};
	            bb[temp] = true;
	          }
	        }
	        if (key === 'on' || key === 'nativeOn' || key === 'hook') {
	          // merge functions
	          for (nestedKey in bb) {
	            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey]);
	          }
	        } else if (Array.isArray(aa)) {
	          a[key] = aa.concat(bb);
	        } else if (Array.isArray(bb)) {
	          a[key] = [aa].concat(bb);
	        } else {
	          for (nestedKey in bb) {
	            aa[nestedKey] = bb[nestedKey];
	          }
	        }
	      } else {
	        a[key] = b[key];
	      }
	    }
	    return a
	  }, {})
	};

	function mergeFn (a, b) {
	  return function () {
	    a && a.apply(this, arguments);
	    b && b.apply(this, arguments);
	  }
	}
	return babelHelperVueJsxMergeProps;
}

var tooltip = {exports: {}};

var hasRequiredTooltip;

function requireTooltip () {
	if (hasRequiredTooltip) return tooltip.exports;
	hasRequiredTooltip = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 138);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 138:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// EXTERNAL MODULE: external "element-ui/lib/utils/vue-popper"
		var vue_popper_ = __webpack_require__(5);
		var vue_popper_default = /*#__PURE__*/__webpack_require__.n(vue_popper_);

		// EXTERNAL MODULE: external "throttle-debounce/debounce"
		var debounce_ = __webpack_require__(19);
		var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/dom"
		var dom_ = __webpack_require__(2);

		// EXTERNAL MODULE: external "element-ui/lib/utils/util"
		var util_ = __webpack_require__(3);

		// EXTERNAL MODULE: external "vue"
		var external_vue_ = __webpack_require__(7);
		var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

		// CONCATENATED MODULE: ./packages/tooltip/src/main.js






		/* harmony default export */ var main = ({
		  name: 'ElTooltip',

		  mixins: [vue_popper_default.a],

		  props: {
		    openDelay: {
		      type: Number,
		      default: 0
		    },
		    disabled: Boolean,
		    manual: Boolean,
		    effect: {
		      type: String,
		      default: 'dark'
		    },
		    arrowOffset: {
		      type: Number,
		      default: 0
		    },
		    popperClass: String,
		    content: String,
		    visibleArrow: {
		      default: true
		    },
		    transition: {
		      type: String,
		      default: 'el-fade-in-linear'
		    },
		    popperOptions: {
		      default: function _default() {
		        return {
		          boundariesPadding: 10,
		          gpuAcceleration: false
		        };
		      }
		    },
		    enterable: {
		      type: Boolean,
		      default: true
		    },
		    hideAfter: {
		      type: Number,
		      default: 0
		    },
		    tabindex: {
		      type: Number,
		      default: 0
		    }
		  },

		  data: function data() {
		    return {
		      tooltipId: 'el-tooltip-' + Object(util_["generateId"])(),
		      timeoutPending: null,
		      focusing: false
		    };
		  },
		  beforeCreate: function beforeCreate() {
		    var _this = this;

		    if (this.$isServer) return;

		    this.popperVM = new external_vue_default.a({
		      data: { node: '' },
		      render: function render(h) {
		        return this.node;
		      }
		    }).$mount();

		    this.debounceClose = debounce_default()(200, function () {
		      return _this.handleClosePopper();
		    });
		  },
		  render: function render(h) {
		    var _this2 = this;

		    if (this.popperVM) {
		      this.popperVM.node = h(
		        'transition',
		        {
		          attrs: {
		            name: this.transition
		          },
		          on: {
		            'afterLeave': this.doDestroy
		          }
		        },
		        [h(
		          'div',
		          {
		            on: {
		              'mouseleave': function mouseleave() {
		                _this2.setExpectedState(false);_this2.debounceClose();
		              },
		              'mouseenter': function mouseenter() {
		                _this2.setExpectedState(true);
		              }
		            },

		            ref: 'popper',
		            attrs: { role: 'tooltip',
		              id: this.tooltipId,
		              'aria-hidden': this.disabled || !this.showPopper ? 'true' : 'false'
		            },
		            directives: [{
		              name: 'show',
		              value: !this.disabled && this.showPopper
		            }],

		            'class': ['el-tooltip__popper', 'is-' + this.effect, this.popperClass] },
		          [this.$slots.content || this.content]
		        )]
		      );
		    }

		    var firstElement = this.getFirstElement();
		    if (!firstElement) return null;

		    var data = firstElement.data = firstElement.data || {};
		    data.staticClass = this.addTooltipClass(data.staticClass);

		    return firstElement;
		  },
		  mounted: function mounted() {
		    var _this3 = this;

		    this.referenceElm = this.$el;
		    if (this.$el.nodeType === 1) {
		      this.$el.setAttribute('aria-describedby', this.tooltipId);
		      this.$el.setAttribute('tabindex', this.tabindex);
		      Object(dom_["on"])(this.referenceElm, 'mouseenter', this.show);
		      Object(dom_["on"])(this.referenceElm, 'mouseleave', this.hide);
		      Object(dom_["on"])(this.referenceElm, 'focus', function () {
		        if (!_this3.$slots.default || !_this3.$slots.default.length) {
		          _this3.handleFocus();
		          return;
		        }
		        var instance = _this3.$slots.default[0].componentInstance;
		        if (instance && instance.focus) {
		          instance.focus();
		        } else {
		          _this3.handleFocus();
		        }
		      });
		      Object(dom_["on"])(this.referenceElm, 'blur', this.handleBlur);
		      Object(dom_["on"])(this.referenceElm, 'click', this.removeFocusing);
		    }
		    // fix issue https://github.com/ElemeFE/element/issues/14424
		    if (this.value && this.popperVM) {
		      this.popperVM.$nextTick(function () {
		        if (_this3.value) {
		          _this3.updatePopper();
		        }
		      });
		    }
		  },

		  watch: {
		    focusing: function focusing(val) {
		      if (val) {
		        Object(dom_["addClass"])(this.referenceElm, 'focusing');
		      } else {
		        Object(dom_["removeClass"])(this.referenceElm, 'focusing');
		      }
		    }
		  },
		  methods: {
		    show: function show() {
		      this.setExpectedState(true);
		      this.handleShowPopper();
		    },
		    hide: function hide() {
		      this.setExpectedState(false);
		      this.debounceClose();
		    },
		    handleFocus: function handleFocus() {
		      this.focusing = true;
		      this.show();
		    },
		    handleBlur: function handleBlur() {
		      this.focusing = false;
		      this.hide();
		    },
		    removeFocusing: function removeFocusing() {
		      this.focusing = false;
		    },
		    addTooltipClass: function addTooltipClass(prev) {
		      if (!prev) {
		        return 'el-tooltip';
		      } else {
		        return 'el-tooltip ' + prev.replace('el-tooltip', '');
		      }
		    },
		    handleShowPopper: function handleShowPopper() {
		      var _this4 = this;

		      if (!this.expectedState || this.manual) return;
		      clearTimeout(this.timeout);
		      this.timeout = setTimeout(function () {
		        _this4.showPopper = true;
		      }, this.openDelay);

		      if (this.hideAfter > 0) {
		        this.timeoutPending = setTimeout(function () {
		          _this4.showPopper = false;
		        }, this.hideAfter);
		      }
		    },
		    handleClosePopper: function handleClosePopper() {
		      if (this.enterable && this.expectedState || this.manual) return;
		      clearTimeout(this.timeout);

		      if (this.timeoutPending) {
		        clearTimeout(this.timeoutPending);
		      }
		      this.showPopper = false;

		      if (this.disabled) {
		        this.doDestroy();
		      }
		    },
		    setExpectedState: function setExpectedState(expectedState) {
		      if (expectedState === false) {
		        clearTimeout(this.timeoutPending);
		      }
		      this.expectedState = expectedState;
		    },
		    getFirstElement: function getFirstElement() {
		      var slots = this.$slots.default;
		      if (!Array.isArray(slots)) return null;
		      var element = null;
		      for (var index = 0; index < slots.length; index++) {
		        if (slots[index] && slots[index].tag) {
		          element = slots[index];
		          break;
		        }		      }
		      return element;
		    }
		  },

		  beforeDestroy: function beforeDestroy() {
		    this.popperVM && this.popperVM.$destroy();
		  },
		  destroyed: function destroyed() {
		    var reference = this.referenceElm;
		    if (reference.nodeType === 1) {
		      Object(dom_["off"])(reference, 'mouseenter', this.show);
		      Object(dom_["off"])(reference, 'mouseleave', this.hide);
		      Object(dom_["off"])(reference, 'focus', this.handleFocus);
		      Object(dom_["off"])(reference, 'blur', this.handleBlur);
		      Object(dom_["off"])(reference, 'click', this.removeFocusing);
		    }
		  }
		});
		// CONCATENATED MODULE: ./packages/tooltip/index.js


		/* istanbul ignore next */
		main.install = function (Vue) {
		  Vue.component(main.name, main);
		};

		/* harmony default export */ __webpack_exports__["default"] = (main);

		/***/ }),

		/***/ 19:
		/***/ (function(module, exports) {

		module.exports = requireDebounce$1();

		/***/ }),

		/***/ 2:
		/***/ (function(module, exports) {

		module.exports = requireDom();

		/***/ }),

		/***/ 3:
		/***/ (function(module, exports) {

		module.exports = requireUtil();

		/***/ }),

		/***/ 5:
		/***/ (function(module, exports) {

		module.exports = requireVuePopper();

		/***/ }),

		/***/ 7:
		/***/ (function(module, exports) {

		module.exports = Vue;

		/***/ })

		/******/ }); 
	} (tooltip));
	return tooltip.exports;
}

var scrollIntoView = {};

var hasRequiredScrollIntoView;

function requireScrollIntoView () {
	if (hasRequiredScrollIntoView) return scrollIntoView;
	hasRequiredScrollIntoView = 1;

	scrollIntoView.__esModule = true;
	scrollIntoView.default = scrollIntoView$1;

	var _vue = Vue;

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function scrollIntoView$1(container, selected) {
	  if (_vue2.default.prototype.$isServer) return;

	  if (!selected) {
	    container.scrollTop = 0;
	    return;
	  }

	  var offsetParents = [];
	  var pointer = selected.offsetParent;
	  while (pointer && container !== pointer && container.contains(pointer)) {
	    offsetParents.push(pointer);
	    pointer = pointer.offsetParent;
	  }
	  var top = selected.offsetTop + offsetParents.reduce(function (prev, curr) {
	    return prev + curr.offsetTop;
	  }, 0);
	  var bottom = top + selected.offsetHeight;
	  var viewRectTop = container.scrollTop;
	  var viewRectBottom = viewRectTop + container.clientHeight;

	  if (top < viewRectTop) {
	    container.scrollTop = top;
	  } else if (bottom > viewRectBottom) {
	    container.scrollTop = bottom - container.clientHeight;
	  }
	}
	return scrollIntoView;
}

var lodash = {exports: {}};

lodash.exports;

var hasRequiredLodash;

function requireLodash () {
	if (hasRequiredLodash) return lodash.exports;
	hasRequiredLodash = 1;
	(function (module, exports) {
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/**
		 * @license
		 * Lodash <https://lodash.com/>
		 * Copyright JS Foundation and other contributors <https://js.foundation/>
		 * Released under MIT license <https://lodash.com/license>
		 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
		 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		 *//*eslint-disable*/(function(){/** Used as a safe reference for `undefined` in pre-ES5 environments. */var undefined$1;/** Used as the semantic version number. */var VERSION='4.17.10';/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/** Error message constants. */var CORE_ERROR_TEXT='Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',FUNC_ERROR_TEXT='Expected a function';/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used as the maximum memoize cache size. */var MAX_MEMOIZE_SIZE=500;/** Used as the internal argument placeholder. */var PLACEHOLDER='__lodash_placeholder__';/** Used to compose bitmasks for cloning. */var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for function metadata. */var WRAP_BIND_FLAG=1,WRAP_BIND_KEY_FLAG=2,WRAP_CURRY_BOUND_FLAG=4,WRAP_CURRY_FLAG=8,WRAP_CURRY_RIGHT_FLAG=16,WRAP_PARTIAL_FLAG=32,WRAP_PARTIAL_RIGHT_FLAG=64,WRAP_ARY_FLAG=128,WRAP_REARG_FLAG=256,WRAP_FLIP_FLAG=512;/** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=800,HOT_SPAN=16;/** Used to indicate the type of lazy iteratees. */var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3;/** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e308,NAN=0/0;/** Used as references for the maximum length and index of an array. */var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;/** Used to associate wrap methods with their bit flags. */var wrapFlags=[['ary',WRAP_ARY_FLAG],['bind',WRAP_BIND_FLAG],['bindKey',WRAP_BIND_KEY_FLAG],['curry',WRAP_CURRY_FLAG],['curryRight',WRAP_CURRY_RIGHT_FLAG],['flip',WRAP_FLIP_FLAG],['partial',WRAP_PARTIAL_FLAG],['partialRight',WRAP_PARTIAL_RIGHT_FLAG],['rearg',WRAP_REARG_FLAG]];/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',asyncTag='[object AsyncFunction]',boolTag='[object Boolean]',dateTag='[object Date]',domExcTag='[object DOMException]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',nullTag='[object Null]',objectTag='[object Object]',promiseTag='[object Promise]',proxyTag='[object Proxy]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',undefinedTag='[object Undefined]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to match empty string literals in compiled template source. */var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;/** Used to match HTML entities and HTML characters. */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g,reUnescapedHtml=/[&<>"']/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source);/** Used to match template delimiters. */var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g;/** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;/**
		     * Used to match `RegExp`
		     * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
		     */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source);/** Used to match leading and trailing whitespace. */var reTrim=/^\s+|\s+$/g,reTrimStart=/^\s+/,reTrimEnd=/\s+$/;/** Used to match wrap detail comments. */var reWrapComment=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,reWrapDetails=/\{\n\/\* \[wrapped with (.+)\] \*/,reSplitDetails=/,? & /;/** Used to match words composed of alphanumeric characters. */var reAsciiWord=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;/** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g;/**
		     * Used to match
		     * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
		     */var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;/** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/;/** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/;/** Used to match Latin Unicode letters (excluding mathematical operators). */var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;/** Used to ensure capturing order of template delimiters. */var reNoMatch=/($^)/;/** Used to match unescaped characters in compiled string literals. */var reUnescapedString=/['\n\r\u2028\u2029\\]/g;/** Used to compose unicode character classes. */var rsAstralRange='\\ud800-\\udfff',rsComboMarksRange='\\u0300-\\u036f',reComboHalfMarksRange='\\ufe20-\\ufe2f',rsComboSymbolsRange='\\u20d0-\\u20ff',rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsDingbatRange='\\u2700-\\u27bf',rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange='\\u2000-\\u206f',rsSpaceRange=' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange='\\ufe0e\\ufe0f',rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange;/** Used to compose unicode capture groups. */var rsApos='[\'\u2019]',rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz='\\ud83c[\\udffb-\\udfff]',rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional='(?:\\ud83c[\\udde6-\\uddff]){2}',rsSurrPair='[\\ud800-\\udbff][\\udc00-\\udfff]',rsUpper='['+rsUpperRange+']',rsZWJ='\\u200d';/** Used to compose unicode regexes. */var rsMiscLower='(?:'+rsLower+'|'+rsMisc+')',rsMiscUpper='(?:'+rsUpper+'|'+rsMisc+')',rsOptContrLower='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptContrUpper='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsOrdLower='\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',rsOrdUpper='\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';/** Used to match apostrophes. */var reApos=RegExp(rsApos,'g');/**
		     * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
		     * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
		     */var reComboMark=RegExp(rsCombo,'g');/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');/** Used to match complex or compound words. */var reUnicodeWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptContrLower+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsMiscUpper+'+'+rsOptContrUpper+'(?='+[rsBreak,rsUpper+rsMiscLower,'$'].join('|')+')',rsUpper+'?'+rsMiscLower+'+'+rsOptContrLower,rsUpper+'+'+rsOptContrUpper,rsOrdUpper,rsOrdLower,rsDigits,rsEmoji].join('|'),'g');/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasUnicode=RegExp('['+rsZWJ+rsAstralRange+rsComboRange+rsVarRange+']');/** Used to detect strings that need a more robust regexp to match words. */var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;/** Used to assign default `context` object properties. */var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout'];/** Used to make template sourceURLs easier to identify. */var templateCounter=-1;/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/** Used to identify `toStringTag` values supported by `_.clone`. */var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;/** Used to map Latin Unicode letters to basic Latin letters. */var deburredLetters={// Latin-1 Supplement block.
		À:'A',Á:'A',Â:'A',Ã:'A',Ä:'A',Å:'A',à:'a',á:'a',â:'a',ã:'a',ä:'a',å:'a',Ç:'C',ç:'c',Ð:'D',ð:'d',È:'E',É:'E',Ê:'E',Ë:'E',è:'e',é:'e',ê:'e',ë:'e',Ì:'I',Í:'I',Î:'I',Ï:'I',ì:'i',í:'i',î:'i',ï:'i',Ñ:'N',ñ:'n',Ò:'O',Ó:'O',Ô:'O',Õ:'O',Ö:'O',Ø:'O',ò:'o',ó:'o',ô:'o',õ:'o',ö:'o',ø:'o',Ù:'U',Ú:'U',Û:'U',Ü:'U',ù:'u',ú:'u',û:'u',ü:'u',Ý:'Y',ý:'y',ÿ:'y',Æ:'Ae',æ:'ae',Þ:'Th',þ:'th',ß:'ss',// Latin Extended-A block.
		Ā:'A',Ă:'A',Ą:'A',ā:'a',ă:'a',ą:'a',Ć:'C',Ĉ:'C',Ċ:'C',Č:'C',ć:'c',ĉ:'c',ċ:'c',č:'c',Ď:'D',Đ:'D',ď:'d',đ:'d',Ē:'E',Ĕ:'E',Ė:'E',Ę:'E',Ě:'E',ē:'e',ĕ:'e',ė:'e',ę:'e',ě:'e',Ĝ:'G',Ğ:'G',Ġ:'G',Ģ:'G',ĝ:'g',ğ:'g',ġ:'g',ģ:'g',Ĥ:'H',Ħ:'H',ĥ:'h',ħ:'h',Ĩ:'I',Ī:'I',Ĭ:'I',Į:'I',İ:'I',ĩ:'i',ī:'i',ĭ:'i',į:'i',ı:'i',Ĵ:'J',ĵ:'j',Ķ:'K',ķ:'k',ĸ:'k',Ĺ:'L',Ļ:'L',Ľ:'L',Ŀ:'L',Ł:'L',ĺ:'l',ļ:'l',ľ:'l',ŀ:'l',ł:'l',Ń:'N',Ņ:'N',Ň:'N',Ŋ:'N',ń:'n',ņ:'n',ň:'n',ŋ:'n',Ō:'O',Ŏ:'O',Ő:'O',ō:'o',ŏ:'o',ő:'o',Ŕ:'R',Ŗ:'R',Ř:'R',ŕ:'r',ŗ:'r',ř:'r',Ś:'S',Ŝ:'S',Ş:'S',Š:'S',ś:'s',ŝ:'s',ş:'s',š:'s',Ţ:'T',Ť:'T',Ŧ:'T',ţ:'t',ť:'t',ŧ:'t',Ũ:'U',Ū:'U',Ŭ:'U',Ů:'U',Ű:'U',Ų:'U',ũ:'u',ū:'u',ŭ:'u',ů:'u',ű:'u',ų:'u',Ŵ:'W',ŵ:'w',Ŷ:'Y',ŷ:'y',Ÿ:'Y',Ź:'Z',Ż:'Z',Ž:'Z',ź:'z',ż:'z',ž:'z',Ĳ:'IJ',ĳ:'ij',Œ:'Oe',œ:'oe',ŉ:"'n",ſ:'s'};/** Used to map characters to HTML entities. */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'};/** Used to map HTML entities to characters. */var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'"};/** Used to escape characters for inclusion in compiled string literals. */var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r','\u2028':'u2028','\u2029':'u2029'};/** Built-in method references without a dependency on `root`. */var freeParseFloat=parseFloat,freeParseInt=parseInt;/** Detect free variable `global` from Node.js. */var freeGlobal=(typeof commonjsGlobal==='undefined'?'undefined':_typeof(commonjsGlobal))==='object'&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal;/** Detect free variable `self`. */var freeSelf=(typeof self==='undefined'?'undefined':_typeof(self))==='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/** Detect free variable `exports`. */var freeExports=(_typeof(exports))==='object'&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&(_typeof(module))==='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
		var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}// Legacy `process.binding('util')` for Node.js < 10.
		return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();/* Node.js helper references. */var nodeIsArrayBuffer=nodeUtil&&nodeUtil.isArrayBuffer,nodeIsDate=nodeUtil&&nodeUtil.isDate,nodeIsMap=nodeUtil&&nodeUtil.isMap,nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp,nodeIsSet=nodeUtil&&nodeUtil.isSet,nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/* --------------------------------------------------------------------------*//**
		     * A faster alternative to `Function#apply`, this function invokes `func`
		     * with the `this` binding of `thisArg` and the arguments of `args`.
		     *
		     * @private
		     * @param {Function} func The function to invoke.
		     * @param {*} thisArg The `this` binding of `func`.
		     * @param {Array} args The arguments to invoke `func` with.
		     * @returns {*} Returns the result of `func`.
		     */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}/**
		     * A specialized version of `baseAggregator` for arrays.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} setter The function to set `accumulator` values.
		     * @param {Function} iteratee The iteratee to transform keys.
		     * @param {Object} accumulator The initial aggregated object.
		     * @returns {Function} Returns `accumulator`.
		     */function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array==null?0:array.length;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;}/**
		     * A specialized version of `_.forEach` for arrays without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array} Returns `array`.
		     */function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}/**
		     * A specialized version of `_.forEachRight` for arrays without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array} Returns `array`.
		     */function arrayEachRight(array,iteratee){var length=array==null?0:array.length;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;}/**
		     * A specialized version of `_.every` for arrays without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {boolean} Returns `true` if all elements pass the predicate check,
		     *  else `false`.
		     */function arrayEvery(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;}/**
		     * A specialized version of `_.filter` for arrays without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {Array} Returns the new filtered array.
		     */function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}/**
		     * A specialized version of `_.includes` for arrays without support for
		     * specifying an index to search from.
		     *
		     * @private
		     * @param {Array} [array] The array to inspect.
		     * @param {*} target The value to search for.
		     * @returns {boolean} Returns `true` if `target` is found, else `false`.
		     */function arrayIncludes(array,value){var length=array==null?0:array.length;return !!length&&baseIndexOf(array,value,0)>-1;}/**
		     * This function is like `arrayIncludes` except that it accepts a comparator.
		     *
		     * @private
		     * @param {Array} [array] The array to inspect.
		     * @param {*} target The value to search for.
		     * @param {Function} comparator The comparator invoked per element.
		     * @returns {boolean} Returns `true` if `target` is found, else `false`.
		     */function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length){if(comparator(value,array[index])){return true;}}return false;}/**
		     * A specialized version of `_.map` for arrays without support for iteratee
		     * shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array} Returns the new mapped array.
		     */function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}/**
		     * Appends the elements of `values` to `array`.
		     *
		     * @private
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to append.
		     * @returns {Array} Returns `array`.
		     */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}/**
		     * A specialized version of `_.reduce` for arrays without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @param {*} [accumulator] The initial value.
		     * @param {boolean} [initAccum] Specify using the first element of `array` as
		     *  the initial value.
		     * @returns {*} Returns the accumulated value.
		     */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array==null?0:array.length;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;}/**
		     * A specialized version of `_.reduceRight` for arrays without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @param {*} [accumulator] The initial value.
		     * @param {boolean} [initAccum] Specify using the last element of `array` as
		     *  the initial value.
		     * @returns {*} Returns the accumulated value.
		     */function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array==null?0:array.length;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;}/**
		     * A specialized version of `_.some` for arrays without support for iteratee
		     * shorthands.
		     *
		     * @private
		     * @param {Array} [array] The array to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {boolean} Returns `true` if any element passes the predicate check,
		     *  else `false`.
		     */function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}/**
		     * Gets the size of an ASCII `string`.
		     *
		     * @private
		     * @param {string} string The string inspect.
		     * @returns {number} Returns the string size.
		     */var asciiSize=baseProperty('length');/**
		     * Converts an ASCII `string` to an array.
		     *
		     * @private
		     * @param {string} string The string to convert.
		     * @returns {Array} Returns the converted array.
		     */function asciiToArray(string){return string.split('');}/**
		     * Splits an ASCII `string` into an array of its words.
		     *
		     * @private
		     * @param {string} The string to inspect.
		     * @returns {Array} Returns the words of `string`.
		     */function asciiWords(string){return string.match(reAsciiWord)||[];}/**
		     * The base implementation of methods like `_.findKey` and `_.findLastKey`,
		     * without support for iteratee shorthands, which iterates over `collection`
		     * using `eachFunc`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to inspect.
		     * @param {Function} predicate The function invoked per iteration.
		     * @param {Function} eachFunc The function to iterate over `collection`.
		     * @returns {*} Returns the found element or its key, else `undefined`.
		     */function baseFindKey(collection,predicate,eachFunc){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=key;return false;}});return result;}/**
		     * The base implementation of `_.findIndex` and `_.findLastIndex` without
		     * support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {Function} predicate The function invoked per iteration.
		     * @param {number} fromIndex The index to search from.
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return -1;}/**
		     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} fromIndex The index to search from.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}/**
		     * This function is like `baseIndexOf` except that it accepts a comparator.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} fromIndex The index to search from.
		     * @param {Function} comparator The comparator invoked per element.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     */function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return -1;}/**
		     * The base implementation of `_.isNaN` without support for number objects.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
		     */function baseIsNaN(value){return value!==value;}/**
		     * The base implementation of `_.mean` and `_.meanBy` without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {number} Returns the mean.
		     */function baseMean(array,iteratee){var length=array==null?0:array.length;return length?baseSum(array,iteratee)/length:NAN;}/**
		     * The base implementation of `_.property` without support for deep paths.
		     *
		     * @private
		     * @param {string} key The key of the property to get.
		     * @returns {Function} Returns the new accessor function.
		     */function baseProperty(key){return function(object){return object==null?undefined$1:object[key];};}/**
		     * The base implementation of `_.propertyOf` without support for deep paths.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Function} Returns the new accessor function.
		     */function basePropertyOf(object){return function(key){return object==null?undefined$1:object[key];};}/**
		     * The base implementation of `_.reduce` and `_.reduceRight`, without support
		     * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @param {*} accumulator The initial value.
		     * @param {boolean} initAccum Specify using the first or last element of
		     *  `collection` as the initial value.
		     * @param {Function} eachFunc The function to iterate over `collection`.
		     * @returns {*} Returns the accumulated value.
		     */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;}/**
		     * The base implementation of `_.sortBy` which uses `comparer` to define the
		     * sort order of `array` and replaces criteria objects with their corresponding
		     * values.
		     *
		     * @private
		     * @param {Array} array The array to sort.
		     * @param {Function} comparer The function to define sort order.
		     * @returns {Array} Returns `array`.
		     */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}/**
		     * The base implementation of `_.sum` and `_.sumBy` without support for
		     * iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {number} Returns the sum.
		     */function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined$1){result=result===undefined$1?current:result+current;}}return result;}/**
		     * The base implementation of `_.times` without support for iteratee shorthands
		     * or max array length checks.
		     *
		     * @private
		     * @param {number} n The number of times to invoke `iteratee`.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array} Returns the array of results.
		     */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}/**
		     * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
		     * of key-value pairs for `object` corresponding to the property names of `props`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array} props The property names to get values for.
		     * @returns {Object} Returns the key-value pairs.
		     */function baseToPairs(object,props){return arrayMap(props,function(key){return [key,object[key]];});}/**
		     * The base implementation of `_.unary` without support for storing metadata.
		     *
		     * @private
		     * @param {Function} func The function to cap arguments for.
		     * @returns {Function} Returns the new capped function.
		     */function baseUnary(func){return function(value){return func(value);};}/**
		     * The base implementation of `_.values` and `_.valuesIn` which creates an
		     * array of `object` property values corresponding to the property names
		     * of `props`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array} props The property names to get values for.
		     * @returns {Object} Returns the array of property values.
		     */function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}/**
		     * Checks if a `cache` value for `key` exists.
		     *
		     * @private
		     * @param {Object} cache The cache to query.
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */function cacheHas(cache,key){return cache.has(key);}/**
		     * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
		     * that is not found in the character symbols.
		     *
		     * @private
		     * @param {Array} strSymbols The string symbols to inspect.
		     * @param {Array} chrSymbols The character symbols to find.
		     * @returns {number} Returns the index of the first unmatched string symbol.
		     */function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
		     * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
		     * that is not found in the character symbols.
		     *
		     * @private
		     * @param {Array} strSymbols The string symbols to inspect.
		     * @param {Array} chrSymbols The character symbols to find.
		     * @returns {number} Returns the index of the last unmatched string symbol.
		     */function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
		     * Gets the number of `placeholder` occurrences in `array`.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {*} placeholder The placeholder to search for.
		     * @returns {number} Returns the placeholder count.
		     */function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){++result;}}return result;}/**
		     * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
		     * letters to basic Latin letters.
		     *
		     * @private
		     * @param {string} letter The matched letter to deburr.
		     * @returns {string} Returns the deburred letter.
		     */var deburrLetter=basePropertyOf(deburredLetters);/**
		     * Used by `_.escape` to convert characters to HTML entities.
		     *
		     * @private
		     * @param {string} chr The matched character to escape.
		     * @returns {string} Returns the escaped character.
		     */var escapeHtmlChar=basePropertyOf(htmlEscapes);/**
		     * Used by `_.template` to escape characters for inclusion in compiled string literals.
		     *
		     * @private
		     * @param {string} chr The matched character to escape.
		     * @returns {string} Returns the escaped character.
		     */function escapeStringChar(chr){return '\\'+stringEscapes[chr];}/**
		     * Gets the value at `key` of `object`.
		     *
		     * @private
		     * @param {Object} [object] The object to query.
		     * @param {string} key The key of the property to get.
		     * @returns {*} Returns the property value.
		     */function getValue(object,key){return object==null?undefined$1:object[key];}/**
		     * Checks if `string` contains Unicode symbols.
		     *
		     * @private
		     * @param {string} string The string to inspect.
		     * @returns {boolean} Returns `true` if a symbol is found, else `false`.
		     */function hasUnicode(string){return reHasUnicode.test(string);}/**
		     * Checks if `string` contains a word composed of Unicode symbols.
		     *
		     * @private
		     * @param {string} string The string to inspect.
		     * @returns {boolean} Returns `true` if a word is found, else `false`.
		     */function hasUnicodeWord(string){return reHasUnicodeWord.test(string);}/**
		     * Converts `iterator` to an array.
		     *
		     * @private
		     * @param {Object} iterator The iterator to convert.
		     * @returns {Array} Returns the converted array.
		     */function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;}/**
		     * Converts `map` to its key-value pairs.
		     *
		     * @private
		     * @param {Object} map The map to convert.
		     * @returns {Array} Returns the key-value pairs.
		     */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}/**
		     * Creates a unary function that invokes `func` with its argument transformed.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {Function} transform The argument transform.
		     * @returns {Function} Returns the new function.
		     */function overArg(func,transform){return function(arg){return func(transform(arg));};}/**
		     * Replaces all `placeholder` elements in `array` with an internal placeholder
		     * and returns an array of their indexes.
		     *
		     * @private
		     * @param {Array} array The array to modify.
		     * @param {*} placeholder The placeholder to replace.
		     * @returns {Array} Returns the new array of placeholder indexes.
		     */function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;}/**
		     * Gets the value at `key`, unless `key` is "__proto__".
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {string} key The key of the property to get.
		     * @returns {*} Returns the property value.
		     */function safeGet(object,key){return key=='__proto__'?undefined$1:object[key];}/**
		     * Converts `set` to an array of its values.
		     *
		     * @private
		     * @param {Object} set The set to convert.
		     * @returns {Array} Returns the values.
		     */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}/**
		     * Converts `set` to its value-value pairs.
		     *
		     * @private
		     * @param {Object} set The set to convert.
		     * @returns {Array} Returns the value-value pairs.
		     */function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;}/**
		     * A specialized version of `_.indexOf` which performs strict equality
		     * comparisons of values, i.e. `===`.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} fromIndex The index to search from.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return -1;}/**
		     * A specialized version of `_.lastIndexOf` which performs strict equality
		     * comparisons of values, i.e. `===`.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} fromIndex The index to search from.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     */function strictLastIndexOf(array,value,fromIndex){var index=fromIndex+1;while(index--){if(array[index]===value){return index;}}return index;}/**
		     * Gets the number of symbols in `string`.
		     *
		     * @private
		     * @param {string} string The string to inspect.
		     * @returns {number} Returns the string size.
		     */function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}/**
		     * Converts `string` to an array.
		     *
		     * @private
		     * @param {string} string The string to convert.
		     * @returns {Array} Returns the converted array.
		     */function stringToArray(string){return hasUnicode(string)?unicodeToArray(string):asciiToArray(string);}/**
		     * Used by `_.unescape` to convert HTML entities to characters.
		     *
		     * @private
		     * @param {string} chr The matched character to unescape.
		     * @returns {string} Returns the unescaped character.
		     */var unescapeHtmlChar=basePropertyOf(htmlUnescapes);/**
		     * Gets the size of a Unicode `string`.
		     *
		     * @private
		     * @param {string} string The string inspect.
		     * @returns {number} Returns the string size.
		     */function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}return result;}/**
		     * Converts a Unicode `string` to an array.
		     *
		     * @private
		     * @param {string} string The string to convert.
		     * @returns {Array} Returns the converted array.
		     */function unicodeToArray(string){return string.match(reUnicode)||[];}/**
		     * Splits a Unicode `string` into an array of its words.
		     *
		     * @private
		     * @param {string} The string to inspect.
		     * @returns {Array} Returns the words of `string`.
		     */function unicodeWords(string){return string.match(reUnicodeWord)||[];}/* --------------------------------------------------------------------------*//**
		     * Create a new pristine `lodash` function using the `context` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.1.0
		     * @category Util
		     * @param {Object} [context=root] The context object.
		     * @returns {Function} Returns a new `lodash` function.
		     * @example
		     *
		     * _.mixin({ 'foo': _.constant('foo') });
		     *
		     * var lodash = _.runInContext();
		     * lodash.mixin({ 'bar': lodash.constant('bar') });
		     *
		     * _.isFunction(_.foo);
		     * // => true
		     * _.isFunction(_.bar);
		     * // => false
		     *
		     * lodash.isFunction(lodash.foo);
		     * // => false
		     * lodash.isFunction(lodash.bar);
		     * // => true
		     *
		     * // Create a suped-up `defer` in Node.js.
		     * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
		     */var runInContext=function runInContext(context){context=context==null?root:_.defaults(root.Object(),context,_.pick(root,contextProps));/** Built-in constructor references. */var Array=context.Array,Date=context.Date,Error=context.Error,Function=context.Function,Math=context.Math,Object=context.Object,RegExp=context.RegExp,String=context.String,TypeError=context.TypeError;/** Used for built-in method references. */var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;/** Used to detect overreaching core-js shims. */var coreJsData=context['__core-js_shared__'];/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to generate unique IDs. */var idCounter=0;/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/**
		       * Used to resolve the
		       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
		       * of values.
		       */var nativeObjectToString=objectProto.toString;/** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object);/** Used to restore the original `_` reference in `_.noConflict`. */var oldDash=root._;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');/** Built-in value references. */var Buffer=moduleExports?context.Buffer:undefined$1,_Symbol=context.Symbol,Uint8Array=context.Uint8Array,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined$1,getPrototype=overArg(Object.getPrototypeOf,Object),objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,spreadableSymbol=_Symbol?_Symbol.isConcatSpreadable:undefined$1,symIterator=_Symbol?_Symbol.iterator:undefined$1,symToStringTag=_Symbol?_Symbol.toStringTag:undefined$1;var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();/** Mocked built-ins. */var ctxClearTimeout=context.clearTimeout!==root.clearTimeout&&context.clearTimeout,ctxNow=Date&&Date.now!==root.Date.now&&Date.now,ctxSetTimeout=context.setTimeout!==root.setTimeout&&context.setTimeout;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:undefined$1,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=overArg(Object.keys,Object),nativeMax=Math.max,nativeMin=Math.min,nativeNow=Date.now,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReverse=arrayProto.reverse;/* Built-in method references that are verified to be native. */var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create');/** Used to store function metadata. */var metaMap=WeakMap&&new WeakMap();/** Used to lookup unminified function names. */var realNames={};/** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);/** Used to convert symbols to primitives and strings. */var symbolProto=_Symbol?_Symbol.prototype:undefined$1,symbolValueOf=symbolProto?symbolProto.valueOf:undefined$1,symbolToString=symbolProto?symbolProto.toString:undefined$1;/* ------------------------------------------------------------------------*//**
		       * Creates a `lodash` object which wraps `value` to enable implicit method
		       * chain sequences. Methods that operate on and return arrays, collections,
		       * and functions can be chained together. Methods that retrieve a single value
		       * or may return a primitive value will automatically end the chain sequence
		       * and return the unwrapped value. Otherwise, the value must be unwrapped
		       * with `_#value`.
		       *
		       * Explicit chain sequences, which must be unwrapped with `_#value`, may be
		       * enabled using `_.chain`.
		       *
		       * The execution of chained methods is lazy, that is, it's deferred until
		       * `_#value` is implicitly or explicitly called.
		       *
		       * Lazy evaluation allows several methods to support shortcut fusion.
		       * Shortcut fusion is an optimization to merge iteratee calls; this avoids
		       * the creation of intermediate arrays and can greatly reduce the number of
		       * iteratee executions. Sections of a chain sequence qualify for shortcut
		       * fusion if the section is applied to an array and iteratees accept only
		       * one argument. The heuristic for whether a section qualifies for shortcut
		       * fusion is subject to change.
		       *
		       * Chaining is supported in custom builds as long as the `_#value` method is
		       * directly or indirectly included in the build.
		       *
		       * In addition to lodash methods, wrappers have `Array` and `String` methods.
		       *
		       * The wrapper `Array` methods are:
		       * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
		       *
		       * The wrapper `String` methods are:
		       * `replace` and `split`
		       *
		       * The wrapper methods that support shortcut fusion are:
		       * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
		       * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
		       * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
		       *
		       * The chainable wrapper methods are:
		       * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
		       * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
		       * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
		       * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
		       * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
		       * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
		       * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
		       * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
		       * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
		       * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
		       * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
		       * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
		       * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
		       * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
		       * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
		       * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
		       * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
		       * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
		       * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
		       * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
		       * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
		       * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
		       * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
		       * `zipObject`, `zipObjectDeep`, and `zipWith`
		       *
		       * The wrapper methods that are **not** chainable by default are:
		       * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
		       * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
		       * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
		       * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
		       * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
		       * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
		       * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
		       * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
		       * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
		       * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
		       * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
		       * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
		       * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
		       * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
		       * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
		       * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
		       * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
		       * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
		       * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
		       * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
		       * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
		       * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
		       * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
		       * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
		       * `upperFirst`, `value`, and `words`
		       *
		       * @name _
		       * @constructor
		       * @category Seq
		       * @param {*} value The value to wrap in a `lodash` instance.
		       * @returns {Object} Returns the new `lodash` wrapper instance.
		       * @example
		       *
		       * function square(n) {
		       *   return n * n;
		       * }
		       *
		       * var wrapped = _([1, 2, 3]);
		       *
		       * // Returns an unwrapped value.
		       * wrapped.reduce(_.add);
		       * // => 6
		       *
		       * // Returns a wrapped value.
		       * var squares = wrapped.map(square);
		       *
		       * _.isArray(squares);
		       * // => false
		       *
		       * _.isArray(squares.value());
		       * // => true
		       */function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);}/**
		         * The base implementation of `_.create` without support for assigning
		         * properties to the created object.
		         *
		         * @private
		         * @param {Object} proto The object to inherit from.
		         * @returns {Object} Returns the new object.
		         */var baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return {};}if(objectCreate){return objectCreate(proto);}object.prototype=proto;var result=new object();object.prototype=undefined$1;return result;};}();/**
		       * The function whose prototype chain sequence wrappers inherit from.
		       *
		       * @private
		       */function baseLodash(){}// No operation performed.
		/**
		         * The base constructor for creating `lodash` wrapper objects.
		         *
		         * @private
		         * @param {*} value The value to wrap.
		         * @param {boolean} [chainAll] Enable explicit method chain sequences.
		         */function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined$1;}/**
		         * By default, the template delimiters used by lodash are like those in
		         * embedded Ruby (ERB) as well as ES2015 template strings. Change the
		         * following template settings to use alternative delimiters.
		         *
		         * @static
		         * @memberOf _
		         * @type {Object}
		         */lodash.templateSettings={/**
		             * Used to detect `data` property values to be HTML-escaped.
		             *
		             * @memberOf _.templateSettings
		             * @type {RegExp}
		             */escape:reEscape,/**
		             * Used to detect code to be evaluated.
		             *
		             * @memberOf _.templateSettings
		             * @type {RegExp}
		             */evaluate:reEvaluate,/**
		             * Used to detect `data` property values to inject.
		             *
		             * @memberOf _.templateSettings
		             * @type {RegExp}
		             */interpolate:reInterpolate,/**
		             * Used to reference the data object in the template text.
		             *
		             * @memberOf _.templateSettings
		             * @type {string}
		             */variable:'',/**
		             * Used to import variables into the compiled template.
		             *
		             * @memberOf _.templateSettings
		             * @type {Object}
		             */imports:{/**
		                 * A reference to the `lodash` function.
		                 *
		                 * @memberOf _.templateSettings.imports
		                 * @type {Function}
		                 */_:lodash}};// Ensure wrappers are instances of `baseLodash`.
		lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper;/* ------------------------------------------------------------------------*//**
		         * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
		         *
		         * @private
		         * @constructor
		         * @param {*} value The value to wrap.
		         */function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];}/**
		         * Creates a clone of the lazy wrapper object.
		         *
		         * @private
		         * @name clone
		         * @memberOf LazyWrapper
		         * @returns {Object} Returns the cloned `LazyWrapper` object.
		         */function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;}/**
		         * Reverses the direction of lazy iteration.
		         *
		         * @private
		         * @name reverse
		         * @memberOf LazyWrapper
		         * @returns {Object} Returns the new reversed `LazyWrapper` object.
		         */function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else {result=this.clone();result.__dir__*=-1;}return result;}/**
		         * Extracts the unwrapped value from its lazy wrapper.
		         *
		         * @private
		         * @name value
		         * @memberOf LazyWrapper
		         * @returns {*} Returns the unwrapped value.
		         */function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||!isRight&&arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer:while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else {break outer;}}}result[resIndex++]=value;}return result;}// Ensure `LazyWrapper` is an instance of `baseLodash`.
		LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper;/* ------------------------------------------------------------------------*//**
		         * Creates a hash object.
		         *
		         * @private
		         * @constructor
		         * @param {Array} [entries] The key-value pairs to cache.
		         */function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
		         * Removes all key-value entries from the hash.
		         *
		         * @private
		         * @name clear
		         * @memberOf Hash
		         */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}/**
		         * Removes `key` and its value from the hash.
		         *
		         * @private
		         * @name delete
		         * @memberOf Hash
		         * @param {Object} hash The hash to modify.
		         * @param {string} key The key of the value to remove.
		         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		         */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}/**
		         * Gets the hash value for `key`.
		         *
		         * @private
		         * @name get
		         * @memberOf Hash
		         * @param {string} key The key of the value to get.
		         * @returns {*} Returns the entry value.
		         */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined$1:result;}return hasOwnProperty.call(data,key)?data[key]:undefined$1;}/**
		         * Checks if a hash value for `key` exists.
		         *
		         * @private
		         * @name has
		         * @memberOf Hash
		         * @param {string} key The key of the entry to check.
		         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		         */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined$1:hasOwnProperty.call(data,key);}/**
		         * Sets the hash `key` to `value`.
		         *
		         * @private
		         * @name set
		         * @memberOf Hash
		         * @param {string} key The key of the value to set.
		         * @param {*} value The value to set.
		         * @returns {Object} Returns the hash instance.
		         */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined$1?HASH_UNDEFINED:value;return this;}// Add methods to `Hash`.
		Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;/* ------------------------------------------------------------------------*//**
		         * Creates an list cache object.
		         *
		         * @private
		         * @constructor
		         * @param {Array} [entries] The key-value pairs to cache.
		         */function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
		         * Removes all key-value entries from the list cache.
		         *
		         * @private
		         * @name clear
		         * @memberOf ListCache
		         */function listCacheClear(){this.__data__=[];this.size=0;}/**
		         * Removes `key` and its value from the list cache.
		         *
		         * @private
		         * @name delete
		         * @memberOf ListCache
		         * @param {string} key The key of the value to remove.
		         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		         */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else {splice.call(data,index,1);}--this.size;return true;}/**
		         * Gets the list cache value for `key`.
		         *
		         * @private
		         * @name get
		         * @memberOf ListCache
		         * @param {string} key The key of the value to get.
		         * @returns {*} Returns the entry value.
		         */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined$1:data[index][1];}/**
		         * Checks if a list cache value for `key` exists.
		         *
		         * @private
		         * @name has
		         * @memberOf ListCache
		         * @param {string} key The key of the entry to check.
		         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		         */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}/**
		         * Sets the list cache `key` to `value`.
		         *
		         * @private
		         * @name set
		         * @memberOf ListCache
		         * @param {string} key The key of the value to set.
		         * @param {*} value The value to set.
		         * @returns {Object} Returns the list cache instance.
		         */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else {data[index][1]=value;}return this;}// Add methods to `ListCache`.
		ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;/* ------------------------------------------------------------------------*//**
		         * Creates a map cache object to store key-value pairs.
		         *
		         * @private
		         * @constructor
		         * @param {Array} [entries] The key-value pairs to cache.
		         */function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
		         * Removes all key-value entries from the map.
		         *
		         * @private
		         * @name clear
		         * @memberOf MapCache
		         */function mapCacheClear(){this.size=0;this.__data__={hash:new Hash(),map:new(Map||ListCache)(),string:new Hash()};}/**
		         * Removes `key` and its value from the map.
		         *
		         * @private
		         * @name delete
		         * @memberOf MapCache
		         * @param {string} key The key of the value to remove.
		         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		         */function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}/**
		         * Gets the map value for `key`.
		         *
		         * @private
		         * @name get
		         * @memberOf MapCache
		         * @param {string} key The key of the value to get.
		         * @returns {*} Returns the entry value.
		         */function mapCacheGet(key){return getMapData(this,key).get(key);}/**
		         * Checks if a map value for `key` exists.
		         *
		         * @private
		         * @name has
		         * @memberOf MapCache
		         * @param {string} key The key of the entry to check.
		         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		         */function mapCacheHas(key){return getMapData(this,key).has(key);}/**
		         * Sets the map `key` to `value`.
		         *
		         * @private
		         * @name set
		         * @memberOf MapCache
		         * @param {string} key The key of the value to set.
		         * @param {*} value The value to set.
		         * @returns {Object} Returns the map cache instance.
		         */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}// Add methods to `MapCache`.
		MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;/* ------------------------------------------------------------------------*//**
		         *
		         * Creates an array cache object to store unique values.
		         *
		         * @private
		         * @constructor
		         * @param {Array} [values] The values to cache.
		         */function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}/**
		         * Adds `value` to the array cache.
		         *
		         * @private
		         * @name add
		         * @memberOf SetCache
		         * @alias push
		         * @param {*} value The value to cache.
		         * @returns {Object} Returns the cache instance.
		         */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}/**
		         * Checks if `value` is in the array cache.
		         *
		         * @private
		         * @name has
		         * @memberOf SetCache
		         * @param {*} value The value to search for.
		         * @returns {number} Returns `true` if `value` is found, else `false`.
		         */function setCacheHas(value){return this.__data__.has(value);}// Add methods to `SetCache`.
		SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;/* ------------------------------------------------------------------------*//**
		         * Creates a stack cache object to store key-value pairs.
		         *
		         * @private
		         * @constructor
		         * @param {Array} [entries] The key-value pairs to cache.
		         */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}/**
		         * Removes all key-value entries from the stack.
		         *
		         * @private
		         * @name clear
		         * @memberOf Stack
		         */function stackClear(){this.__data__=new ListCache();this.size=0;}/**
		         * Removes `key` and its value from the stack.
		         *
		         * @private
		         * @name delete
		         * @memberOf Stack
		         * @param {string} key The key of the value to remove.
		         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		         */function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}/**
		         * Gets the stack value for `key`.
		         *
		         * @private
		         * @name get
		         * @memberOf Stack
		         * @param {string} key The key of the value to get.
		         * @returns {*} Returns the entry value.
		         */function stackGet(key){return this.__data__.get(key);}/**
		         * Checks if a stack value for `key` exists.
		         *
		         * @private
		         * @name has
		         * @memberOf Stack
		         * @param {string} key The key of the entry to check.
		         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		         */function stackHas(key){return this.__data__.has(key);}/**
		         * Sets the stack `key` to `value`.
		         *
		         * @private
		         * @name set
		         * @memberOf Stack
		         * @param {string} key The key of the value to set.
		         * @param {*} value The value to set.
		         * @returns {Object} Returns the stack cache instance.
		         */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}// Add methods to `Stack`.
		Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;/* ------------------------------------------------------------------------*//**
		         * Creates an array of the enumerable property names of the array-like `value`.
		         *
		         * @private
		         * @param {*} value The value to query.
		         * @param {boolean} inherited Specify returning inherited property names.
		         * @returns {Array} Returns the array of property names.
		         */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.
		key=='length'||// Node.js 0.10 has enumerable non-index properties on buffers.
		isBuff&&(key=='offset'||key=='parent')||// PhantomJS 2 has enumerable non-index properties on typed arrays.
		isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||// Skip index properties.
		isIndex(key,length)))){result.push(key);}}return result;}/**
		         * A specialized version of `_.sample` for arrays.
		         *
		         * @private
		         * @param {Array} array The array to sample.
		         * @returns {*} Returns the random element.
		         */function arraySample(array){var length=array.length;return length?array[baseRandom(0,length-1)]:undefined$1;}/**
		         * A specialized version of `_.sampleSize` for arrays.
		         *
		         * @private
		         * @param {Array} array The array to sample.
		         * @param {number} n The number of elements to sample.
		         * @returns {Array} Returns the random elements.
		         */function arraySampleSize(array,n){return shuffleSelf(copyArray(array),baseClamp(n,0,array.length));}/**
		         * A specialized version of `_.shuffle` for arrays.
		         *
		         * @private
		         * @param {Array} array The array to shuffle.
		         * @returns {Array} Returns the new shuffled array.
		         */function arrayShuffle(array){return shuffleSelf(copyArray(array));}/**
		         * This function is like `assignValue` except that it doesn't assign
		         * `undefined` values.
		         *
		         * @private
		         * @param {Object} object The object to modify.
		         * @param {string} key The key of the property to assign.
		         * @param {*} value The value to assign.
		         */function assignMergeValue(object,key,value){if(value!==undefined$1&&!eq(object[key],value)||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}/**
		         * Assigns `value` to `key` of `object` if the existing value is not equivalent
		         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * for equality comparisons.
		         *
		         * @private
		         * @param {Object} object The object to modify.
		         * @param {string} key The key of the property to assign.
		         * @param {*} value The value to assign.
		         */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}/**
		         * Gets the index at which the `key` is found in `array` of key-value pairs.
		         *
		         * @private
		         * @param {Array} array The array to inspect.
		         * @param {*} key The key to search for.
		         * @returns {number} Returns the index of the matched value, else `-1`.
		         */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return -1;}/**
		         * Aggregates elements of `collection` on `accumulator` with keys transformed
		         * by `iteratee` and values set by `setter`.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} setter The function to set `accumulator` values.
		         * @param {Function} iteratee The iteratee to transform keys.
		         * @param {Object} accumulator The initial aggregated object.
		         * @returns {Function} Returns `accumulator`.
		         */function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;}/**
		         * The base implementation of `_.assign` without support for multiple sources
		         * or `customizer` functions.
		         *
		         * @private
		         * @param {Object} object The destination object.
		         * @param {Object} source The source object.
		         * @returns {Object} Returns `object`.
		         */function baseAssign(object,source){return object&&copyObject(source,keys(source),object);}/**
		         * The base implementation of `_.assignIn` without support for multiple sources
		         * or `customizer` functions.
		         *
		         * @private
		         * @param {Object} object The destination object.
		         * @param {Object} source The source object.
		         * @returns {Object} Returns `object`.
		         */function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object);}/**
		         * The base implementation of `assignValue` and `assignMergeValue` without
		         * value checks.
		         *
		         * @private
		         * @param {Object} object The object to modify.
		         * @param {string} key The key of the property to assign.
		         * @param {*} value The value to assign.
		         */function baseAssignValue(object,key,value){if(key=='__proto__'&&defineProperty){defineProperty(object,key,{configurable:true,enumerable:true,value:value,writable:true});}else {object[key]=value;}}/**
		         * The base implementation of `_.at` without support for individual paths.
		         *
		         * @private
		         * @param {Object} object The object to iterate over.
		         * @param {string[]} paths The property paths to pick.
		         * @returns {Array} Returns the picked elements.
		         */function baseAt(object,paths){var index=-1,length=paths.length,result=Array(length),skip=object==null;while(++index<length){result[index]=skip?undefined$1:get(object,paths[index]);}return result;}/**
		         * The base implementation of `_.clamp` which doesn't coerce arguments.
		         *
		         * @private
		         * @param {number} number The number to clamp.
		         * @param {number} [lower] The lower bound.
		         * @param {number} upper The upper bound.
		         * @returns {number} Returns the clamped number.
		         */function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined$1){number=number<=upper?number:upper;}if(lower!==undefined$1){number=number>=lower?number:lower;}}return number;}/**
		         * The base implementation of `_.clone` and `_.cloneDeep` which tracks
		         * traversed objects.
		         *
		         * @private
		         * @param {*} value The value to clone.
		         * @param {boolean} bitmask The bitmask flags.
		         *  1 - Deep clone
		         *  2 - Flatten inherited properties
		         *  4 - Clone symbols
		         * @param {Function} [customizer] The function to customize cloning.
		         * @param {string} [key] The key of `value`.
		         * @param {Object} [object] The parent object of `value`.
		         * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
		         * @returns {*} Returns the cloned value.
		         */function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined$1){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else {var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value));}}else {if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,isDeep);}}// Check for circular references and return its corresponding clone.
		stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack));});return result;}if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack));});return result;}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=isArr?undefined$1:keysFunc(value);arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}// Recursively populate clone (susceptible to call stack limits).
		assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack));});return result;}/**
		         * The base implementation of `_.conforms` which doesn't clone `source`.
		         *
		         * @private
		         * @param {Object} source The object of property predicates to conform to.
		         * @returns {Function} Returns the new spec function.
		         */function baseConforms(source){var props=keys(source);return function(object){return baseConformsTo(object,source,props);};}/**
		         * The base implementation of `_.conformsTo` which accepts `props` to check.
		         *
		         * @private
		         * @param {Object} object The object to inspect.
		         * @param {Object} source The object of property predicates to conform to.
		         * @returns {boolean} Returns `true` if `object` conforms, else `false`.
		         */function baseConformsTo(object,source,props){var length=props.length;if(object==null){return !length;}object=Object(object);while(length--){var key=props[length],predicate=source[key],value=object[key];if(value===undefined$1&&!(key in object)||!predicate(value)){return false;}}return true;}/**
		         * The base implementation of `_.delay` and `_.defer` which accepts `args`
		         * to provide to `func`.
		         *
		         * @private
		         * @param {Function} func The function to delay.
		         * @param {number} wait The number of milliseconds to delay invocation.
		         * @param {Array} args The arguments to provide to `func`.
		         * @returns {number|Object} Returns the timer id or timeout object.
		         */function baseDelay(func,wait,args){if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined$1,args);},wait);}/**
		         * The base implementation of methods like `_.difference` without support
		         * for excluding multiple arrays or iteratee shorthands.
		         *
		         * @private
		         * @param {Array} array The array to inspect.
		         * @param {Array} values The values to exclude.
		         * @param {Function} [iteratee] The iteratee invoked per element.
		         * @param {Function} [comparator] The comparator invoked per element.
		         * @returns {Array} Returns the new array of filtered values.
		         */function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer:while(++index<length){var value=array[index],computed=iteratee==null?value:iteratee(value);value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;}/**
		         * The base implementation of `_.forEach` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} iteratee The function invoked per iteration.
		         * @returns {Array|Object} Returns `collection`.
		         */var baseEach=createBaseEach(baseForOwn);/**
		         * The base implementation of `_.forEachRight` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} iteratee The function invoked per iteration.
		         * @returns {Array|Object} Returns `collection`.
		         */var baseEachRight=createBaseEach(baseForOwnRight,true);/**
		         * The base implementation of `_.every` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} predicate The function invoked per iteration.
		         * @returns {boolean} Returns `true` if all elements pass the predicate check,
		         *  else `false`
		         */function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;}/**
		         * The base implementation of methods like `_.max` and `_.min` which accepts a
		         * `comparator` to determine the extremum value.
		         *
		         * @private
		         * @param {Array} array The array to iterate over.
		         * @param {Function} iteratee The iteratee invoked per iteration.
		         * @param {Function} comparator The comparator used to compare values.
		         * @returns {*} Returns the extremum value.
		         */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined$1?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;}/**
		         * The base implementation of `_.fill` without an iteratee call guard.
		         *
		         * @private
		         * @param {Array} array The array to fill.
		         * @param {*} value The value to fill `array` with.
		         * @param {number} [start=0] The start position.
		         * @param {number} [end=array.length] The end position.
		         * @returns {Array} Returns `array`.
		         */function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined$1||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;}/**
		         * The base implementation of `_.filter` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} predicate The function invoked per iteration.
		         * @returns {Array} Returns the new filtered array.
		         */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;}/**
		         * The base implementation of `_.flatten` with support for restricting flattening.
		         *
		         * @private
		         * @param {Array} array The array to flatten.
		         * @param {number} depth The maximum recursion depth.
		         * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
		         * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
		         * @param {Array} [result=[]] The initial result value.
		         * @returns {Array} Returns the new flattened array.
		         */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).
		baseFlatten(value,depth-1,predicate,isStrict,result);}else {arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}/**
		         * The base implementation of `baseForOwn` which iterates over `object`
		         * properties returned by `keysFunc` and invokes `iteratee` for each property.
		         * Iteratee functions may exit iteration early by explicitly returning `false`.
		         *
		         * @private
		         * @param {Object} object The object to iterate over.
		         * @param {Function} iteratee The function invoked per iteration.
		         * @param {Function} keysFunc The function to get the keys of `object`.
		         * @returns {Object} Returns `object`.
		         */var baseFor=createBaseFor();/**
		         * This function is like `baseFor` except that it iterates over properties
		         * in the opposite order.
		         *
		         * @private
		         * @param {Object} object The object to iterate over.
		         * @param {Function} iteratee The function invoked per iteration.
		         * @param {Function} keysFunc The function to get the keys of `object`.
		         * @returns {Object} Returns `object`.
		         */var baseForRight=createBaseFor(true);/**
		         * The base implementation of `_.forOwn` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Object} object The object to iterate over.
		         * @param {Function} iteratee The function invoked per iteration.
		         * @returns {Object} Returns `object`.
		         */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}/**
		         * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Object} object The object to iterate over.
		         * @param {Function} iteratee The function invoked per iteration.
		         * @returns {Object} Returns `object`.
		         */function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);}/**
		         * The base implementation of `_.functions` which creates an array of
		         * `object` function property names filtered from `props`.
		         *
		         * @private
		         * @param {Object} object The object to inspect.
		         * @param {Array} props The property names to filter.
		         * @returns {Array} Returns the function names.
		         */function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});}/**
		         * The base implementation of `_.get` without support for default values.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @param {Array|string} path The path of the property to get.
		         * @returns {*} Returns the resolved value.
		         */function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined$1;}/**
		         * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
		         * `keysFunc` and `symbolsFunc` to get the enumerable property names and
		         * symbols of `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @param {Function} keysFunc The function to get the keys of `object`.
		         * @param {Function} symbolsFunc The function to get the symbols of `object`.
		         * @returns {Array} Returns the array of property names and symbols.
		         */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}/**
		         * The base implementation of `getTag` without fallbacks for buggy environments.
		         *
		         * @private
		         * @param {*} value The value to query.
		         * @returns {string} Returns the `toStringTag`.
		         */function baseGetTag(value){if(value==null){return value===undefined$1?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}/**
		         * The base implementation of `_.gt` which doesn't coerce arguments.
		         *
		         * @private
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if `value` is greater than `other`,
		         *  else `false`.
		         */function baseGt(value,other){return value>other;}/**
		         * The base implementation of `_.has` without support for deep paths.
		         *
		         * @private
		         * @param {Object} [object] The object to query.
		         * @param {Array|string} key The key to check.
		         * @returns {boolean} Returns `true` if `key` exists, else `false`.
		         */function baseHas(object,key){return object!=null&&hasOwnProperty.call(object,key);}/**
		         * The base implementation of `_.hasIn` without support for deep paths.
		         *
		         * @private
		         * @param {Object} [object] The object to query.
		         * @param {Array|string} key The key to check.
		         * @returns {boolean} Returns `true` if `key` exists, else `false`.
		         */function baseHasIn(object,key){return object!=null&&key in Object(object);}/**
		         * The base implementation of `_.inRange` which doesn't coerce arguments.
		         *
		         * @private
		         * @param {number} number The number to check.
		         * @param {number} start The start of the range.
		         * @param {number} end The end of the range.
		         * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
		         */function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);}/**
		         * The base implementation of methods like `_.intersection`, without support
		         * for iteratee shorthands, that accepts an array of arrays to inspect.
		         *
		         * @private
		         * @param {Array} arrays The arrays to inspect.
		         * @param {Function} [iteratee] The iteratee invoked per element.
		         * @param {Function} [comparator] The comparator invoked per element.
		         * @returns {Array} Returns the new array of shared values.
		         */function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined$1;}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;}/**
		         * The base implementation of `_.invert` and `_.invertBy` which inverts
		         * `object` with values transformed by `iteratee` and set by `setter`.
		         *
		         * @private
		         * @param {Object} object The object to iterate over.
		         * @param {Function} setter The function to set `accumulator` values.
		         * @param {Function} iteratee The iteratee to transform values.
		         * @param {Object} accumulator The initial inverted object.
		         * @returns {Function} Returns `accumulator`.
		         */function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;}/**
		         * The base implementation of `_.invoke` without support for individual
		         * method arguments.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @param {Array|string} path The path of the method to invoke.
		         * @param {Array} args The arguments to invoke the method with.
		         * @returns {*} Returns the result of the invoked method.
		         */function baseInvoke(object,path,args){path=castPath(path,object);object=parent(object,path);var func=object==null?object:object[toKey(last(path))];return func==null?undefined$1:apply(func,object,args);}/**
		         * The base implementation of `_.isArguments`.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		         */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}/**
		         * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
		         */function baseIsArrayBuffer(value){return isObjectLike(value)&&baseGetTag(value)==arrayBufferTag;}/**
		         * The base implementation of `_.isDate` without Node.js optimizations.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
		         */function baseIsDate(value){return isObjectLike(value)&&baseGetTag(value)==dateTag;}/**
		         * The base implementation of `_.isEqual` which supports partial comparisons
		         * and tracks traversed objects.
		         *
		         * @private
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @param {boolean} bitmask The bitmask flags.
		         *  1 - Unordered comparison
		         *  2 - Partial comparison
		         * @param {Function} [customizer] The function to customize comparisons.
		         * @param {Object} [stack] Tracks traversed `value` and `other` objects.
		         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		         */function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}/**
		         * A specialized version of `baseIsEqual` for arrays and objects which performs
		         * deep comparisons and tracks traversed objects enabling objects with circular
		         * references to be compared.
		         *
		         * @private
		         * @param {Object} object The object to compare.
		         * @param {Object} other The other object to compare.
		         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		         * @param {Function} customizer The function to customize comparisons.
		         * @param {Function} equalFunc The function to determine equivalents of values.
		         * @param {Object} [stack] Tracks traversed `object` and `other` objects.
		         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		         */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}/**
		         * The base implementation of `_.isMap` without Node.js optimizations.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a map, else `false`.
		         */function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag;}/**
		         * The base implementation of `_.isMatch` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Object} object The object to inspect.
		         * @param {Object} source The object of property values to match.
		         * @param {Array} matchData The property names, values, and compare flags to match.
		         * @param {Function} [customizer] The function to customize comparisons.
		         * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		         */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return !length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined$1&&!(key in object)){return false;}}else {var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined$1?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}/**
		         * The base implementation of `_.isNative` without bad shim checks.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a native function,
		         *  else `false`.
		         */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}/**
		         * The base implementation of `_.isRegExp` without Node.js optimizations.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
		         */function baseIsRegExp(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag;}/**
		         * The base implementation of `_.isSet` without Node.js optimizations.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a set, else `false`.
		         */function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag;}/**
		         * The base implementation of `_.isTypedArray` without Node.js optimizations.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		         */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}/**
		         * The base implementation of `_.iteratee`.
		         *
		         * @private
		         * @param {*} [value=_.identity] The value to convert to an iteratee.
		         * @returns {Function} Returns the iteratee.
		         */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
		// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
		if(typeof value==='function'){return value;}if(value==null){return identity;}if((typeof value==='undefined'?'undefined':_typeof(value))==='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}/**
		         * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property names.
		         */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}/**
		         * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property names.
		         */function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object);}var isProto=isPrototype(object),result=[];for(var key in object){if(!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;}/**
		         * The base implementation of `_.lt` which doesn't coerce arguments.
		         *
		         * @private
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if `value` is less than `other`,
		         *  else `false`.
		         */function baseLt(value,other){return value<other;}/**
		         * The base implementation of `_.map` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} iteratee The function invoked per iteration.
		         * @returns {Array} Returns the new mapped array.
		         */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}/**
		         * The base implementation of `_.matches` which doesn't clone `source`.
		         *
		         * @private
		         * @param {Object} source The object of property values to match.
		         * @returns {Function} Returns the new spec function.
		         */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}/**
		         * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
		         *
		         * @private
		         * @param {string} path The path of the property to get.
		         * @param {*} srcValue The value to match.
		         * @returns {Function} Returns the new spec function.
		         */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined$1&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}/**
		         * The base implementation of `_.merge` without support for multiple sources.
		         *
		         * @private
		         * @param {Object} object The destination object.
		         * @param {Object} source The source object.
		         * @param {number} srcIndex The index of `source`.
		         * @param {Function} [customizer] The function to customize merged values.
		         * @param {Object} [stack] Tracks traversed source values and their merged
		         *  counterparts.
		         */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}baseFor(source,function(srcValue,key){if(isObject(srcValue)){stack||(stack=new Stack());baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else {var newValue=customizer?customizer(safeGet(object,key),srcValue,key+'',object,source,stack):undefined$1;if(newValue===undefined$1){newValue=srcValue;}assignMergeValue(object,key,newValue);}},keysIn);}/**
		         * A specialized version of `baseMerge` for arrays and objects which performs
		         * deep merges and tracks traversed objects enabling objects with circular
		         * references to be merged.
		         *
		         * @private
		         * @param {Object} object The destination object.
		         * @param {Object} source The source object.
		         * @param {string} key The key of the value to merge.
		         * @param {number} srcIndex The index of `source`.
		         * @param {Function} mergeFunc The function to merge values.
		         * @param {Function} [customizer] The function to customize assigned values.
		         * @param {Object} [stack] Tracks traversed source values and their merged
		         *  counterparts.
		         */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined$1;var isCommon=newValue===undefined$1;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||isTyped){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else if(isBuff){isCommon=false;newValue=cloneBuffer(srcValue,true);}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true);}else {newValue=[];}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||srcIndex&&isFunction(objValue)){newValue=initCloneObject(srcValue);}}else {isCommon=false;}}if(isCommon){// Recursively merge objects and arrays (susceptible to call stack limits).
		stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack['delete'](srcValue);}assignMergeValue(object,key,newValue);}/**
		         * The base implementation of `_.nth` which doesn't coerce arguments.
		         *
		         * @private
		         * @param {Array} array The array to query.
		         * @param {number} n The index of the element to return.
		         * @returns {*} Returns the nth element of `array`.
		         */function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined$1;}/**
		         * The base implementation of `_.orderBy` without param guards.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
		         * @param {string[]} orders The sort orders of `iteratees`.
		         * @returns {Array} Returns the new sorted array.
		         */function baseOrderBy(collection,iteratees,orders){var index=-1;iteratees=arrayMap(iteratees.length?iteratees:[identity],baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return {criteria:criteria,index:++index,value:value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}/**
		         * The base implementation of `_.pick` without support for individual
		         * property identifiers.
		         *
		         * @private
		         * @param {Object} object The source object.
		         * @param {string[]} paths The property paths to pick.
		         * @returns {Object} Returns the new object.
		         */function basePick(object,paths){return basePickBy(object,paths,function(value,path){return hasIn(object,path);});}/**
		         * The base implementation of  `_.pickBy` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Object} object The source object.
		         * @param {string[]} paths The property paths to pick.
		         * @param {Function} predicate The function invoked per property.
		         * @returns {Object} Returns the new object.
		         */function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value);}}return result;}/**
		         * A specialized version of `baseProperty` which supports deep paths.
		         *
		         * @private
		         * @param {Array|string} path The path of the property to get.
		         * @returns {Function} Returns the new accessor function.
		         */function basePropertyDeep(path){return function(object){return baseGet(object,path);};}/**
		         * The base implementation of `_.pullAllBy` without support for iteratee
		         * shorthands.
		         *
		         * @private
		         * @param {Array} array The array to modify.
		         * @param {Array} values The values to remove.
		         * @param {Function} [iteratee] The iteratee invoked per element.
		         * @param {Function} [comparator] The comparator invoked per element.
		         * @returns {Array} Returns `array`.
		         */function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(array===values){values=copyArray(values);}if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;}/**
		         * The base implementation of `_.pullAt` without support for individual
		         * indexes or capturing the removed elements.
		         *
		         * @private
		         * @param {Array} array The array to modify.
		         * @param {number[]} indexes The indexes of elements to remove.
		         * @returns {Array} Returns `array`.
		         */function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else {baseUnset(array,index);}}}return array;}/**
		         * The base implementation of `_.random` without support for returning
		         * floating-point numbers.
		         *
		         * @private
		         * @param {number} lower The lower bound.
		         * @param {number} upper The upper bound.
		         * @returns {number} Returns the random number.
		         */function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));}/**
		         * The base implementation of `_.range` and `_.rangeRight` which doesn't
		         * coerce arguments.
		         *
		         * @private
		         * @param {number} start The start of the range.
		         * @param {number} end The end of the range.
		         * @param {number} step The value to increment or decrement by.
		         * @param {boolean} [fromRight] Specify iterating from right to left.
		         * @returns {Array} Returns the range of numbers.
		         */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;}/**
		         * The base implementation of `_.repeat` which doesn't coerce arguments.
		         *
		         * @private
		         * @param {string} string The string to repeat.
		         * @param {number} n The number of times to repeat the string.
		         * @returns {string} Returns the repeated string.
		         */function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;}// Leverage the exponentiation by squaring algorithm for a faster repeat.
		// See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
		do{if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;}/**
		         * The base implementation of `_.rest` which doesn't validate or coerce arguments.
		         *
		         * @private
		         * @param {Function} func The function to apply a rest parameter to.
		         * @param {number} [start=func.length-1] The start position of the rest parameter.
		         * @returns {Function} Returns the new function.
		         */function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}/**
		         * The base implementation of `_.sample`.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to sample.
		         * @returns {*} Returns the random element.
		         */function baseSample(collection){return arraySample(values(collection));}/**
		         * The base implementation of `_.sampleSize` without param guards.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to sample.
		         * @param {number} n The number of elements to sample.
		         * @returns {Array} Returns the random elements.
		         */function baseSampleSize(collection,n){var array=values(collection);return shuffleSelf(array,baseClamp(n,0,array.length));}/**
		         * The base implementation of `_.set`.
		         *
		         * @private
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The path of the property to set.
		         * @param {*} value The value to set.
		         * @param {Function} [customizer] The function to customize path creation.
		         * @returns {Object} Returns `object`.
		         */function baseSet(object,path,value,customizer){if(!isObject(object)){return object;}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined$1;if(newValue===undefined$1){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{};}}assignValue(nested,key,newValue);nested=nested[key];}return object;}/**
		         * The base implementation of `setData` without support for hot loop shorting.
		         *
		         * @private
		         * @param {Function} func The function to associate metadata with.
		         * @param {*} data The metadata.
		         * @returns {Function} Returns `func`.
		         */var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;};/**
		       * The base implementation of `setToString` without support for hot loop shorting.
		       *
		       * @private
		       * @param {Function} func The function to modify.
		       * @param {Function} string The `toString` result.
		       * @returns {Function} Returns `func`.
		       */var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{configurable:true,enumerable:false,value:constant(string),writable:true});};/**
		       * The base implementation of `_.shuffle`.
		       *
		       * @private
		       * @param {Array|Object} collection The collection to shuffle.
		       * @returns {Array} Returns the new shuffled array.
		       */function baseShuffle(collection){return shuffleSelf(values(collection));}/**
		         * The base implementation of `_.slice` without an iteratee call guard.
		         *
		         * @private
		         * @param {Array} array The array to slice.
		         * @param {number} [start=0] The start position.
		         * @param {number} [end=array.length] The end position.
		         * @returns {Array} Returns the slice of `array`.
		         */function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}/**
		         * The base implementation of `_.some` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} predicate The function invoked per iteration.
		         * @returns {boolean} Returns `true` if any element passes the predicate check,
		         *  else `false`.
		         */function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return !result;});return !!result;}/**
		         * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
		         * performs a binary search of `array` to determine the index at which `value`
		         * should be inserted into `array` in order to maintain its sort order.
		         *
		         * @private
		         * @param {Array} array The sorted array to inspect.
		         * @param {*} value The value to evaluate.
		         * @param {boolean} [retHighest] Specify returning the highest qualified index.
		         * @returns {number} Returns the index at which `value` should be inserted
		         *  into `array`.
		         */function baseSortedIndex(array,value,retHighest){var low=0,high=array==null?low:array.length;if(typeof value==='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else {high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);}/**
		         * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
		         * which invokes `iteratee` for `value` and each element of `array` to compute
		         * their sort ranking. The iteratee is invoked with one argument; (value).
		         *
		         * @private
		         * @param {Array} array The sorted array to inspect.
		         * @param {*} value The value to evaluate.
		         * @param {Function} iteratee The iteratee invoked per element.
		         * @param {boolean} [retHighest] Specify returning the highest qualified index.
		         * @returns {number} Returns the index at which `value` should be inserted
		         *  into `array`.
		         */function baseSortedIndexBy(array,value,iteratee,retHighest){value=iteratee(value);var low=0,high=array==null?0:array.length,valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined$1;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined$1,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else {setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else {high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);}/**
		         * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
		         * support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array} array The array to inspect.
		         * @param {Function} [iteratee] The iteratee invoked per element.
		         * @returns {Array} Returns the new duplicate free array.
		         */function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;}/**
		         * The base implementation of `_.toNumber` which doesn't ensure correct
		         * conversions of binary, hexadecimal, or octal string values.
		         *
		         * @private
		         * @param {*} value The value to process.
		         * @returns {number} Returns the number.
		         */function baseToNumber(value){if(typeof value==='number'){return value;}if(isSymbol(value)){return NAN;}return +value;}/**
		         * The base implementation of `_.toString` which doesn't convert nullish
		         * values to empty strings.
		         *
		         * @private
		         * @param {*} value The value to process.
		         * @returns {string} Returns the string.
		         */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
		if(typeof value==='string'){return value;}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
		return arrayMap(value,baseToString)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
		         * The base implementation of `_.uniqBy` without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array} array The array to inspect.
		         * @param {Function} [iteratee] The iteratee invoked per element.
		         * @param {Function} [comparator] The comparator invoked per element.
		         * @returns {Array} Returns the new duplicate free array.
		         */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else {seen=iteratee?[]:result;}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;}/**
		         * The base implementation of `_.unset`.
		         *
		         * @private
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The property path to unset.
		         * @returns {boolean} Returns `true` if the property is deleted, else `false`.
		         */function baseUnset(object,path){path=castPath(path,object);object=parent(object,path);return object==null||delete object[toKey(last(path))];}/**
		         * The base implementation of `_.update`.
		         *
		         * @private
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The path of the property to update.
		         * @param {Function} updater The function to produce the updated value.
		         * @param {Function} [customizer] The function to customize path creation.
		         * @returns {Object} Returns `object`.
		         */function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);}/**
		         * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
		         * without support for iteratee shorthands.
		         *
		         * @private
		         * @param {Array} array The array to query.
		         * @param {Function} predicate The function invoked per iteration.
		         * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
		         * @param {boolean} [fromRight] Specify iterating from right to left.
		         * @returns {Array} Returns the slice of `array`.
		         */function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);}/**
		         * The base implementation of `wrapperValue` which returns the result of
		         * performing a sequence of actions on the unwrapped `value`, where each
		         * successive action is supplied the return value of the previous.
		         *
		         * @private
		         * @param {*} value The unwrapped value.
		         * @param {Array} actions Actions to perform to resolve the unwrapped value.
		         * @returns {*} Returns the resolved value.
		         */function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);}/**
		         * The base implementation of methods like `_.xor`, without support for
		         * iteratee shorthands, that accepts an array of arrays to inspect.
		         *
		         * @private
		         * @param {Array} arrays The arrays to inspect.
		         * @param {Function} [iteratee] The iteratee invoked per element.
		         * @param {Function} [comparator] The comparator invoked per element.
		         * @returns {Array} Returns the new array of values.
		         */function baseXor(arrays,iteratee,comparator){var length=arrays.length;if(length<2){return length?baseUniq(arrays[0]):[];}var index=-1,result=Array(length);while(++index<length){var array=arrays[index],othIndex=-1;while(++othIndex<length){if(othIndex!=index){result[index]=baseDifference(result[index]||array,arrays[othIndex],iteratee,comparator);}}}return baseUniq(baseFlatten(result,1),iteratee,comparator);}/**
		         * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
		         *
		         * @private
		         * @param {Array} props The property identifiers.
		         * @param {Array} values The property values.
		         * @param {Function} assignFunc The function to assign values.
		         * @returns {Object} Returns the new object.
		         */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined$1;assignFunc(result,props[index],value);}return result;}/**
		         * Casts `value` to an empty array if it's not an array like object.
		         *
		         * @private
		         * @param {*} value The value to inspect.
		         * @returns {Array|Object} Returns the cast array-like object.
		         */function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];}/**
		         * Casts `value` to `identity` if it's not a function.
		         *
		         * @private
		         * @param {*} value The value to inspect.
		         * @returns {Function} Returns cast function.
		         */function castFunction(value){return typeof value==='function'?value:identity;}/**
		         * Casts `value` to a path array if it's not one.
		         *
		         * @private
		         * @param {*} value The value to inspect.
		         * @param {Object} [object] The object to query keys on.
		         * @returns {Array} Returns the cast property path array.
		         */function castPath(value,object){if(isArray(value)){return value;}return isKey(value,object)?[value]:stringToPath(toString(value));}/**
		         * A `baseRest` alias which can be replaced with `identity` by module
		         * replacement plugins.
		         *
		         * @private
		         * @type {Function}
		         * @param {Function} func The function to apply a rest parameter to.
		         * @returns {Function} Returns the new function.
		         */var castRest=baseRest;/**
		         * Casts `array` to a slice if it's needed.
		         *
		         * @private
		         * @param {Array} array The array to inspect.
		         * @param {number} start The start position.
		         * @param {number} [end=array.length] The end position.
		         * @returns {Array} Returns the cast slice.
		         */function castSlice(array,start,end){var length=array.length;end=end===undefined$1?length:end;return !start&&end>=length?array:baseSlice(array,start,end);}/**
		         * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
		         *
		         * @private
		         * @param {number|Object} id The timer id or timeout object of the timer to clear.
		         */var clearTimeout=ctxClearTimeout||function(id){return root.clearTimeout(id);};/**
		       * Creates a clone of  `buffer`.
		       *
		       * @private
		       * @param {Buffer} buffer The buffer to clone.
		       * @param {boolean} [isDeep] Specify a deep clone.
		       * @returns {Buffer} Returns the cloned buffer.
		       */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result;}/**
		         * Creates a clone of `arrayBuffer`.
		         *
		         * @private
		         * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
		         * @returns {ArrayBuffer} Returns the cloned array buffer.
		         */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;}/**
		         * Creates a clone of `dataView`.
		         *
		         * @private
		         * @param {Object} dataView The data view to clone.
		         * @param {boolean} [isDeep] Specify a deep clone.
		         * @returns {Object} Returns the cloned data view.
		         */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}/**
		         * Creates a clone of `regexp`.
		         *
		         * @private
		         * @param {Object} regexp The regexp to clone.
		         * @returns {Object} Returns the cloned regexp.
		         */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}/**
		         * Creates a clone of the `symbol` object.
		         *
		         * @private
		         * @param {Object} symbol The symbol object to clone.
		         * @returns {Object} Returns the cloned symbol object.
		         */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};}/**
		         * Creates a clone of `typedArray`.
		         *
		         * @private
		         * @param {Object} typedArray The typed array to clone.
		         * @param {boolean} [isDeep] Specify a deep clone.
		         * @returns {Object} Returns the cloned typed array.
		         */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}/**
		         * Compares values to sort them in ascending order.
		         *
		         * @private
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {number} Returns the sort order indicator for `value`.
		         */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined$1,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined$1,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return -1;}}return 0;}/**
		         * Used by `_.orderBy` to compare multiple properties of a value to another
		         * and stable sort them.
		         *
		         * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
		         * specify an order of "desc" for descending or "asc" for ascending sort order
		         * of corresponding values.
		         *
		         * @private
		         * @param {Object} object The object to compare.
		         * @param {Object} other The other object to compare.
		         * @param {boolean[]|string[]} orders The order to sort by for each property.
		         * @returns {number} Returns the sort order indicator for `object`.
		         */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
		// that causes it, under certain circumstances, to provide the same value for
		// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
		// for more details.
		//
		// This also ensures a stable sort in V8 and other engines.
		// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
		return object.index-other.index;}/**
		         * Creates an array that is the composition of partially applied arguments,
		         * placeholders, and provided arguments into a single array of arguments.
		         *
		         * @private
		         * @param {Array} args The provided arguments.
		         * @param {Array} partials The arguments to prepend to those provided.
		         * @param {Array} holders The `partials` placeholder indexes.
		         * @params {boolean} [isCurried] Specify composing for a curried function.
		         * @returns {Array} Returns the new array of composed arguments.
		         */function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;}/**
		         * This function is like `composeArgs` except that the arguments composition
		         * is tailored for `_.partialRight`.
		         *
		         * @private
		         * @param {Array} args The provided arguments.
		         * @param {Array} partials The arguments to append to those provided.
		         * @param {Array} holders The `partials` placeholder indexes.
		         * @params {boolean} [isCurried] Specify composing for a curried function.
		         * @returns {Array} Returns the new array of composed arguments.
		         */function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;}/**
		         * Copies the values of `source` to `array`.
		         *
		         * @private
		         * @param {Array} source The array to copy values from.
		         * @param {Array} [array=[]] The array to copy values to.
		         * @returns {Array} Returns `array`.
		         */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;}/**
		         * Copies properties of `source` to `object`.
		         *
		         * @private
		         * @param {Object} source The object to copy properties from.
		         * @param {Array} props The property identifiers to copy.
		         * @param {Object} [object={}] The object to copy properties to.
		         * @param {Function} [customizer] The function to customize copied values.
		         * @returns {Object} Returns `object`.
		         */function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined$1;if(newValue===undefined$1){newValue=source[key];}if(isNew){baseAssignValue(object,key,newValue);}else {assignValue(object,key,newValue);}}return object;}/**
		         * Copies own symbols of `source` to `object`.
		         *
		         * @private
		         * @param {Object} source The object to copy symbols from.
		         * @param {Object} [object={}] The object to copy symbols to.
		         * @returns {Object} Returns `object`.
		         */function copySymbols(source,object){return copyObject(source,getSymbols(source),object);}/**
		         * Copies own and inherited symbols of `source` to `object`.
		         *
		         * @private
		         * @param {Object} source The object to copy symbols from.
		         * @param {Object} [object={}] The object to copy symbols to.
		         * @returns {Object} Returns `object`.
		         */function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object);}/**
		         * Creates a function like `_.groupBy`.
		         *
		         * @private
		         * @param {Function} setter The function to set accumulator values.
		         * @param {Function} [initializer] The accumulator object initializer.
		         * @returns {Function} Returns the new aggregator function.
		         */function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee,2),accumulator);};}/**
		         * Creates a function like `_.assign`.
		         *
		         * @private
		         * @param {Function} assigner The function to assign values.
		         * @returns {Function} Returns the new assigner function.
		         */function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined$1,guard=length>2?sources[2]:undefined$1;customizer=assigner.length>3&&typeof customizer==='function'?(length--,customizer):undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined$1:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});}/**
		         * Creates a `baseEach` or `baseEachRight` function.
		         *
		         * @private
		         * @param {Function} eachFunc The function to iterate over a collection.
		         * @param {boolean} [fromRight] Specify iterating from right to left.
		         * @returns {Function} Returns the new base function.
		         */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}/**
		         * Creates a base function for methods like `_.forIn` and `_.forOwn`.
		         *
		         * @private
		         * @param {boolean} [fromRight] Specify iterating from right to left.
		         * @returns {Function} Returns the new base function.
		         */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}/**
		         * Creates a function that wraps `func` to invoke it with the optional `this`
		         * binding of `thisArg`.
		         *
		         * @private
		         * @param {Function} func The function to wrap.
		         * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		         * @param {*} [thisArg] The `this` binding of `func`.
		         * @returns {Function} Returns the new wrapped function.
		         */function createBind(func,bitmask,thisArg){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;}/**
		         * Creates a function like `_.lowerFirst`.
		         *
		         * @private
		         * @param {string} methodName The name of the `String` case method to use.
		         * @returns {Function} Returns the new case function.
		         */function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):undefined$1;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};}/**
		         * Creates a function like `_.camelCase`.
		         *
		         * @private
		         * @param {Function} callback The function to combine each word.
		         * @returns {Function} Returns the new compounder function.
		         */function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};}/**
		         * Creates a function that produces an instance of `Ctor` regardless of
		         * whether it was invoked as part of a `new` expression or by `call` or `apply`.
		         *
		         * @private
		         * @param {Function} Ctor The constructor to wrap.
		         * @returns {Function} Returns the new wrapped function.
		         */function createCtor(Ctor){return function(){// Use a `switch` statement to work with class constructors. See
		// http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
		// for more details.
		var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args);// Mimic the constructor's `return` behavior.
		// See https://es5.github.io/#x13.2.2 for more details.
		return isObject(result)?result:thisBinding;};}/**
		         * Creates a function that wraps `func` to enable currying.
		         *
		         * @private
		         * @param {Function} func The function to wrap.
		         * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		         * @param {number} arity The arity of `func`.
		         * @returns {Function} Returns the new wrapped function.
		         */function createCurry(func,bitmask,arity){var Ctor=createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,undefined$1,args,holders,undefined$1,undefined$1,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;}/**
		         * Creates a `_.find` or `_.findLast` function.
		         *
		         * @private
		         * @param {Function} findIndexFunc The function to find the collection index.
		         * @returns {Function} Returns the new find function.
		         */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=getIteratee(predicate,3);collection=keys(collection);predicate=function predicate(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined$1;};}/**
		         * Creates a `_.flow` or `_.flowRight` function.
		         *
		         * @private
		         * @param {boolean} [fromRight] Specify iterating from right to left.
		         * @returns {Function} Returns the new flow function.
		         */function createFlow(fromRight){return flatRest(function(funcs){var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined$1;if(data&&isLaziable(data[0])&&data[1]==(WRAP_ARY_FLAG|WRAP_CURRY_FLAG|WRAP_PARTIAL_FLAG|WRAP_REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else {wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});}/**
		         * Creates a function that wraps `func` to invoke it with optional `this`
		         * binding of `thisArg`, partial application, and currying.
		         *
		         * @private
		         * @param {Function|string} func The function or method name to wrap.
		         * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		         * @param {*} [thisArg] The `this` binding of `func`.
		         * @param {Array} [partials] The arguments to prepend to those provided to
		         *  the new function.
		         * @param {Array} [holders] The `partials` placeholder indexes.
		         * @param {Array} [partialsRight] The arguments to append to those provided
		         *  to the new function.
		         * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
		         * @param {Array} [argPos] The argument positions of the new function.
		         * @param {number} [ary] The arity cap of `func`.
		         * @param {number} [arity] The arity of `func`.
		         * @returns {Function} Returns the new wrapped function.
		         */function createHybrid(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&WRAP_ARY_FLAG,isBind=bitmask&WRAP_BIND_FLAG,isBindKey=bitmask&WRAP_BIND_KEY_FLAG,isCurried=bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG),isFlip=bitmask&WRAP_FLIP_FLAG,Ctor=isBindKey?undefined$1:createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtor(fn);}return fn.apply(thisBinding,args);}return wrapper;}/**
		         * Creates a function like `_.invertBy`.
		         *
		         * @private
		         * @param {Function} setter The function to set accumulator values.
		         * @param {Function} toIteratee The function to resolve iteratees.
		         * @returns {Function} Returns the new inverter function.
		         */function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};}/**
		         * Creates a function that performs a mathematical operation on two values.
		         *
		         * @private
		         * @param {Function} operator The function to perform the operation.
		         * @param {number} [defaultValue] The value used for `undefined` arguments.
		         * @returns {Function} Returns the new mathematical operation function.
		         */function createMathOperation(operator,defaultValue){return function(value,other){var result;if(value===undefined$1&&other===undefined$1){return defaultValue;}if(value!==undefined$1){result=value;}if(other!==undefined$1){if(result===undefined$1){return other;}if(typeof value==='string'||typeof other==='string'){value=baseToString(value);other=baseToString(other);}else {value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};}/**
		         * Creates a function like `_.over`.
		         *
		         * @private
		         * @param {Function} arrayFunc The function to iterate over iteratees.
		         * @returns {Function} Returns the new over function.
		         */function createOver(arrayFunc){return flatRest(function(iteratees){iteratees=arrayMap(iteratees,baseUnary(getIteratee()));return baseRest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});}/**
		         * Creates the padding for `string` based on `length`. The `chars` string
		         * is truncated if the number of characters exceeds `length`.
		         *
		         * @private
		         * @param {number} length The padding length.
		         * @param {string} [chars=' '] The string used as padding.
		         * @returns {string} Returns the padding for `string`.
		         */function createPadding(length,chars){chars=chars===undefined$1?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return hasUnicode(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);}/**
		         * Creates a function that wraps `func` to invoke it with the `this` binding
		         * of `thisArg` and `partials` prepended to the arguments it receives.
		         *
		         * @private
		         * @param {Function} func The function to wrap.
		         * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		         * @param {*} thisArg The `this` binding of `func`.
		         * @param {Array} partials The arguments to prepend to those provided to
		         *  the new function.
		         * @returns {Function} Returns the new wrapped function.
		         */function createPartial(func,bitmask,thisArg,partials){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;}/**
		         * Creates a `_.range` or `_.rangeRight` function.
		         *
		         * @private
		         * @param {boolean} [fromRight] Specify iterating from right to left.
		         * @returns {Function} Returns the new range function.
		         */function createRange(fromRight){return function(start,end,step){if(step&&typeof step!=='number'&&isIterateeCall(start,end,step)){end=step=undefined$1;}// Ensure the sign of `-0` is preserved.
		start=toFinite(start);if(end===undefined$1){end=start;start=0;}else {end=toFinite(end);}step=step===undefined$1?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}/**
		         * Creates a function that performs a relational operation on two values.
		         *
		         * @private
		         * @param {Function} operator The function to perform the operation.
		         * @returns {Function} Returns the new relational operation function.
		         */function createRelationalOperation(operator){return function(value,other){if(!(typeof value==='string'&&typeof other==='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};}/**
		         * Creates a function that wraps `func` to continue currying.
		         *
		         * @private
		         * @param {Function} func The function to wrap.
		         * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		         * @param {Function} wrapFunc The function to create the `func` wrapper.
		         * @param {*} placeholder The placeholder value.
		         * @param {*} [thisArg] The `this` binding of `func`.
		         * @param {Array} [partials] The arguments to prepend to those provided to
		         *  the new function.
		         * @param {Array} [holders] The `partials` placeholder indexes.
		         * @param {Array} [argPos] The argument positions of the new function.
		         * @param {number} [ary] The arity cap of `func`.
		         * @param {number} [arity] The arity of `func`.
		         * @returns {Function} Returns the new wrapped function.
		         */function createRecurry(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&WRAP_CURRY_FLAG,newHolders=isCurry?holders:undefined$1,newHoldersRight=isCurry?undefined$1:holders,newPartials=isCurry?partials:undefined$1,newPartialsRight=isCurry?undefined$1:partials;bitmask|=isCurry?WRAP_PARTIAL_FLAG:WRAP_PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?WRAP_PARTIAL_RIGHT_FLAG:WRAP_PARTIAL_FLAG);if(!(bitmask&WRAP_CURRY_BOUND_FLAG)){bitmask&=~(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined$1,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return setWrapToString(result,func,bitmask);}/**
		         * Creates a function like `_.round`.
		         *
		         * @private
		         * @param {string} methodName The name of the `Math` method to use when rounding.
		         * @returns {Function} Returns the new round function.
		         */function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=precision==null?0:nativeMin(toInteger(precision),292);if(precision){// Shift with exponential notation to avoid floating-point issues.
		// See [MDN](https://mdn.io/round#Examples) for more details.
		var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+(+pair[1]+precision));pair=(toString(value)+'e').split('e');return +(pair[0]+'e'+(+pair[1]-precision));}return func(number);};}/**
		         * Creates a set object of `values`.
		         *
		         * @private
		         * @param {Array} values The values to add to the set.
		         * @returns {Object} Returns the new set.
		         */var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);};/**
		       * Creates a `_.toPairs` or `_.toPairsIn` function.
		       *
		       * @private
		       * @param {Function} keysFunc The function to get the keys of a given object.
		       * @returns {Function} Returns the new pairs function.
		       */function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};}/**
		         * Creates a function that either curries or invokes `func` with optional
		         * `this` binding and partially applied arguments.
		         *
		         * @private
		         * @param {Function|string} func The function or method name to wrap.
		         * @param {number} bitmask The bitmask flags.
		         *    1 - `_.bind`
		         *    2 - `_.bindKey`
		         *    4 - `_.curry` or `_.curryRight` of a bound function
		         *    8 - `_.curry`
		         *   16 - `_.curryRight`
		         *   32 - `_.partial`
		         *   64 - `_.partialRight`
		         *  128 - `_.rearg`
		         *  256 - `_.ary`
		         *  512 - `_.flip`
		         * @param {*} [thisArg] The `this` binding of `func`.
		         * @param {Array} [partials] The arguments to be partially applied.
		         * @param {Array} [holders] The `partials` placeholder indexes.
		         * @param {Array} [argPos] The argument positions of the new function.
		         * @param {number} [ary] The arity cap of `func`.
		         * @param {number} [arity] The arity of `func`.
		         * @returns {Function} Returns the new wrapped function.
		         */function createWrap(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&WRAP_BIND_KEY_FLAG;if(!isBindKey&&typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(WRAP_PARTIAL_FLAG|WRAP_PARTIAL_RIGHT_FLAG);partials=holders=undefined$1;}ary=ary===undefined$1?ary:nativeMax(toInteger(ary),0);arity=arity===undefined$1?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&WRAP_PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined$1;}var data=isBindKey?undefined$1:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]===undefined$1?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG)){bitmask&=~(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==WRAP_BIND_FLAG){var result=createBind(func,bitmask,thisArg);}else if(bitmask==WRAP_CURRY_FLAG||bitmask==WRAP_CURRY_RIGHT_FLAG){result=createCurry(func,bitmask,arity);}else if((bitmask==WRAP_PARTIAL_FLAG||bitmask==(WRAP_BIND_FLAG|WRAP_PARTIAL_FLAG))&&!holders.length){result=createPartial(func,bitmask,thisArg,partials);}else {result=createHybrid.apply(undefined$1,newData);}var setter=data?baseSetData:setData;return setWrapToString(setter(result,newData),func,bitmask);}/**
		         * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
		         * of source objects to the destination object for all destination properties
		         * that resolve to `undefined`.
		         *
		         * @private
		         * @param {*} objValue The destination value.
		         * @param {*} srcValue The source value.
		         * @param {string} key The key of the property to assign.
		         * @param {Object} object The parent object of `objValue`.
		         * @returns {*} Returns the value to assign.
		         */function customDefaultsAssignIn(objValue,srcValue,key,object){if(objValue===undefined$1||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;}/**
		         * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
		         * objects into destination objects that are passed thru.
		         *
		         * @private
		         * @param {*} objValue The destination value.
		         * @param {*} srcValue The source value.
		         * @param {string} key The key of the property to merge.
		         * @param {Object} object The parent object of `objValue`.
		         * @param {Object} source The parent object of `srcValue`.
		         * @param {Object} [stack] Tracks traversed source values and their merged
		         *  counterparts.
		         * @returns {*} Returns the value to assign.
		         */function customDefaultsMerge(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){// Recursively merge objects and arrays (susceptible to call stack limits).
		stack.set(srcValue,objValue);baseMerge(objValue,srcValue,undefined$1,customDefaultsMerge,stack);stack['delete'](srcValue);}return objValue;}/**
		         * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
		         * objects.
		         *
		         * @private
		         * @param {*} value The value to inspect.
		         * @param {string} key The key of the property to inspect.
		         * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
		         */function customOmitClone(value){return isPlainObject(value)?undefined$1:value;}/**
		         * A specialized version of `baseIsEqualDeep` for arrays with support for
		         * partial deep comparisons.
		         *
		         * @private
		         * @param {Array} array The array to compare.
		         * @param {Array} other The other array to compare.
		         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		         * @param {Function} customizer The function to customize comparisons.
		         * @param {Function} equalFunc The function to determine equivalents of values.
		         * @param {Object} stack Tracks traversed `array` and `other` objects.
		         * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
		         */function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}// Assume cyclic values are equal.
		var stacked=stack.get(array);if(stacked&&stack.get(other)){return stacked==other;}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined$1;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
		while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined$1){if(compared){continue;}result=false;break;}// Recursively compare arrays (susceptible to call stack limits).
		if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}/**
		         * A specialized version of `baseIsEqualDeep` for comparing objects of
		         * the same `toStringTag`.
		         *
		         * **Note:** This function only supports comparing values with tags of
		         * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		         *
		         * @private
		         * @param {Object} object The object to compare.
		         * @param {Object} other The other object to compare.
		         * @param {string} tag The `toStringTag` of the objects to compare.
		         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		         * @param {Function} customizer The function to customize comparisons.
		         * @param {Function} equalFunc The function to determine equivalents of values.
		         * @param {Object} stack Tracks traversed `object` and `other` objects.
		         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		         */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
		// Invalid dates are coerced to `NaN`.
		return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
		// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
		// for more details.
		return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.
		var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).
		stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}/**
		         * A specialized version of `baseIsEqualDeep` for objects with support for
		         * partial deep comparisons.
		         *
		         * @private
		         * @param {Object} object The object to compare.
		         * @param {Object} other The other object to compare.
		         * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		         * @param {Function} customizer The function to customize comparisons.
		         * @param {Function} equalFunc The function to determine equivalents of values.
		         * @param {Object} stack Tracks traversed `object` and `other` objects.
		         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		         */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}// Assume cyclic values are equal.
		var stacked=stack.get(object);if(stacked&&stack.get(other)){return stacked==other;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}// Recursively compare objects (susceptible to call stack limits).
		if(!(compared===undefined$1?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
		if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor==='function'&&objCtor instanceof objCtor&&typeof othCtor==='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}/**
		         * A specialized version of `baseRest` which flattens the rest array.
		         *
		         * @private
		         * @param {Function} func The function to apply a rest parameter to.
		         * @returns {Function} Returns the new function.
		         */function flatRest(func){return setToString(overRest(func,undefined$1,flatten),func+'');}/**
		         * Creates an array of own enumerable property names and symbols of `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property names and symbols.
		         */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}/**
		         * Creates an array of own and inherited enumerable property names and
		         * symbols of `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property names and symbols.
		         */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);}/**
		         * Gets metadata for `func`.
		         *
		         * @private
		         * @param {Function} func The function to query.
		         * @returns {*} Returns the metadata for `func`.
		         */var getData=!metaMap?noop:function(func){return metaMap.get(func);};/**
		       * Gets the name of `func`.
		       *
		       * @private
		       * @param {Function} func The function to query.
		       * @returns {string} Returns the function name.
		       */function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;}/**
		         * Gets the argument placeholder value for `func`.
		         *
		         * @private
		         * @param {Function} func The function to inspect.
		         * @returns {*} Returns the placeholder value.
		         */function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;}/**
		         * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
		         * this function returns the custom method, otherwise it returns `baseIteratee`.
		         * If arguments are provided, the chosen function is invoked with them and
		         * its result is returned.
		         *
		         * @private
		         * @param {*} [value] The value to convert to an iteratee.
		         * @param {number} [arity] The arity of the created iteratee.
		         * @returns {Function} Returns the chosen function or its result.
		         */function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;}/**
		         * Gets the data for `map`.
		         *
		         * @private
		         * @param {Object} map The map to query.
		         * @param {string} key The reference key.
		         * @returns {*} Returns the map data.
		         */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key==='string'?'string':'hash']:data.map;}/**
		         * Gets the property names, values, and compare flags of `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the match data of `object`.
		         */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}/**
		         * Gets the native function at `key` of `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @param {string} key The key of the method to get.
		         * @returns {*} Returns the function if it's native, else `undefined`.
		         */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined$1;}/**
		         * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
		         *
		         * @private
		         * @param {*} value The value to query.
		         * @returns {string} Returns the raw `toStringTag`.
		         */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined$1;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else {delete value[symToStringTag];}}return result;}/**
		         * Creates an array of the own enumerable symbols of `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of symbols.
		         */var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return [];}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};/**
		       * Creates an array of the own and inherited enumerable symbols of `object`.
		       *
		       * @private
		       * @param {Object} object The object to query.
		       * @returns {Array} Returns the array of symbols.
		       */var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;};/**
		       * Gets the `toStringTag` of `value`.
		       *
		       * @private
		       * @param {*} value The value to query.
		       * @returns {string} Returns the `toStringTag`.
		       */var getTag=baseGetTag;// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
		if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function getTag(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined$1,ctorString=Ctor?toSource(Ctor):'';if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}/**
		         * Gets the view, applying any `transforms` to the `start` and `end` positions.
		         *
		         * @private
		         * @param {number} start The start of the view.
		         * @param {number} end The end of the view.
		         * @param {Array} transforms The transformations to apply to the view.
		         * @returns {Object} Returns an object containing the `start` and `end`
		         *  positions of the view.
		         */function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case'drop':start+=size;break;case'dropRight':end-=size;break;case'take':end=nativeMin(end,start+size);break;case'takeRight':start=nativeMax(start,end-size);break;}}return {start:start,end:end};}/**
		         * Extracts wrapper details from the `source` body comment.
		         *
		         * @private
		         * @param {string} source The source to inspect.
		         * @returns {Array} Returns the wrapper details.
		         */function getWrapDetails(source){var match=source.match(reWrapDetails);return match?match[1].split(reSplitDetails):[];}/**
		         * Checks if `path` exists on `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @param {Array|string} path The path to check.
		         * @param {Function} hasFunc The function to check properties.
		         * @returns {boolean} Returns `true` if `path` exists, else `false`.
		         */function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object==null?0:object.length;return !!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}/**
		         * Initializes an array clone.
		         *
		         * @private
		         * @param {Array} array The array to clone.
		         * @returns {Array} Returns the initialized clone.
		         */function initCloneArray(array){var length=array.length,result=new array.constructor(length);// Add properties assigned by `RegExp#exec`.
		if(length&&typeof array[0]==='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;}/**
		         * Initializes an object clone.
		         *
		         * @private
		         * @param {Object} object The object to clone.
		         * @returns {Object} Returns the initialized clone.
		         */function initCloneObject(object){return typeof object.constructor==='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};}/**
		         * Initializes an object clone based on its `toStringTag`.
		         *
		         * **Note:** This function only supports cloning values with tags of
		         * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
		         *
		         * @private
		         * @param {Object} object The object to clone.
		         * @param {string} tag The `toStringTag` of the object to clone.
		         * @param {boolean} [isDeep] Specify a deep clone.
		         * @returns {Object} Returns the initialized clone.
		         */function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor();case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor();case symbolTag:return cloneSymbol(object);}}/**
		         * Inserts wrapper `details` in a comment at the top of the `source` body.
		         *
		         * @private
		         * @param {string} source The source to modify.
		         * @returns {Array} details The details to insert.
		         * @returns {string} Returns the modified source.
		         */function insertWrapDetails(source,details){var length=details.length;if(!length){return source;}var lastIndex=length-1;details[lastIndex]=(length>1?'& ':'')+details[lastIndex];details=details.join(length>2?', ':' ');return source.replace(reWrapComment,'{\n/* [wrapped with '+details+'] */\n');}/**
		         * Checks if `value` is a flattenable `arguments` object or array.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
		         */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}/**
		         * Checks if `value` is a valid array-like index.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		         * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		         */function isIndex(value,length){var type=typeof value==='undefined'?'undefined':_typeof(value);length=length==null?MAX_SAFE_INTEGER:length;return !!length&&(type=='number'||type!='symbol'&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}/**
		         * Checks if the given arguments are from an iteratee call.
		         *
		         * @private
		         * @param {*} value The potential iteratee value argument.
		         * @param {*} index The potential iteratee index or key argument.
		         * @param {*} object The potential iteratee object argument.
		         * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
		         *  else `false`.
		         */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index==='undefined'?'undefined':_typeof(index);if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}/**
		         * Checks if `value` is a property name and not a property path.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @param {Object} [object] The object to query keys on.
		         * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
		         */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value==='undefined'?'undefined':_typeof(value);if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}/**
		         * Checks if `value` is suitable for use as unique object key.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
		         */function isKeyable(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}/**
		         * Checks if `func` has a lazy counterpart.
		         *
		         * @private
		         * @param {Function} func The function to check.
		         * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
		         *  else `false`.
		         */function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!=='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return !!data&&func===data[0];}/**
		         * Checks if `func` has its source masked.
		         *
		         * @private
		         * @param {Function} func The function to check.
		         * @returns {boolean} Returns `true` if `func` is masked, else `false`.
		         */function isMasked(func){return !!maskSrcKey&&maskSrcKey in func;}/**
		         * Checks if `func` is capable of being masked.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
		         */var isMaskable=coreJsData?isFunction:stubFalse;/**
		         * Checks if `value` is likely a prototype object.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
		         */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor==='function'&&Ctor.prototype||objectProto;return value===proto;}/**
		         * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
		         *
		         * @private
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` if suitable for strict
		         *  equality comparisons, else `false`.
		         */function isStrictComparable(value){return value===value&&!isObject(value);}/**
		         * A specialized version of `matchesProperty` for source values suitable
		         * for strict equality comparisons, i.e. `===`.
		         *
		         * @private
		         * @param {string} key The key of the property to get.
		         * @param {*} srcValue The value to match.
		         * @returns {Function} Returns the new spec function.
		         */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined$1||key in Object(object));};}/**
		         * A specialized version of `_.memoize` which clears the memoized function's
		         * cache when it exceeds `MAX_MEMOIZE_SIZE`.
		         *
		         * @private
		         * @param {Function} func The function to have its output memoized.
		         * @returns {Function} Returns the new memoized function.
		         */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}/**
		         * Merges the function metadata of `source` into `data`.
		         *
		         * Merging metadata reduces the number of wrappers used to invoke a function.
		         * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
		         * may be applied regardless of execution order. Methods like `_.ary` and
		         * `_.rearg` modify function arguments, making the order in which they are
		         * executed important, preventing the merging of metadata. However, we make
		         * an exception for a safe combined case where curried functions have `_.ary`
		         * and or `_.rearg` applied.
		         *
		         * @private
		         * @param {Array} data The destination metadata.
		         * @param {Array} source The source metadata.
		         * @returns {Array} Returns `data`.
		         */function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG|WRAP_ARY_FLAG);var isCombo=srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_CURRY_FLAG||srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(WRAP_ARY_FLAG|WRAP_REARG_FLAG)&&source[7].length<=source[8]&&bitmask==WRAP_CURRY_FLAG;// Exit early if metadata can't be merged.
		if(!(isCommon||isCombo)){return data;}// Use source `thisArg` if available.
		if(srcBitmask&WRAP_BIND_FLAG){data[2]=source[2];// Set when currying a bound function.
		newBitmask|=bitmask&WRAP_BIND_FLAG?0:WRAP_CURRY_BOUND_FLAG;}// Compose partial arguments.
		var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];}// Compose partial right arguments.
		value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];}// Use source `argPos` if available.
		value=source[7];if(value){data[7]=value;}// Use source `ary` if it's smaller.
		if(srcBitmask&WRAP_ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);}// Use source `arity` if one is not provided.
		if(data[9]==null){data[9]=source[9];}// Use source `func` and merge bitmasks.
		data[0]=source[0];data[1]=newBitmask;return data;}/**
		         * This function is like
		         * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
		         * except that it includes inherited enumerable properties.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property names.
		         */function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}return result;}/**
		         * Converts `value` to a string using `Object.prototype.toString`.
		         *
		         * @private
		         * @param {*} value The value to convert.
		         * @returns {string} Returns the converted string.
		         */function objectToString(value){return nativeObjectToString.call(value);}/**
		         * A specialized version of `baseRest` which transforms the rest array.
		         *
		         * @private
		         * @param {Function} func The function to apply a rest parameter to.
		         * @param {number} [start=func.length-1] The start position of the rest parameter.
		         * @param {Function} transform The rest array transform.
		         * @returns {Function} Returns the new function.
		         */function overRest(func,start,transform){start=nativeMax(start===undefined$1?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}/**
		         * Gets the parent value at `path` of `object`.
		         *
		         * @private
		         * @param {Object} object The object to query.
		         * @param {Array} path The path to get the parent value of.
		         * @returns {*} Returns the parent value.
		         */function parent(object,path){return path.length<2?object:baseGet(object,baseSlice(path,0,-1));}/**
		         * Reorder `array` according to the specified indexes where the element at
		         * the first index is assigned as the first element, the element at
		         * the second index is assigned as the second element, and so on.
		         *
		         * @private
		         * @param {Array} array The array to reorder.
		         * @param {Array} indexes The arranged array indexes.
		         * @returns {Array} Returns `array`.
		         */function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined$1;}return array;}/**
		         * Sets metadata for `func`.
		         *
		         * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
		         * period of time, it will trip its breaker and transition to an identity
		         * function to avoid garbage collection pauses in V8. See
		         * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
		         * for more details.
		         *
		         * @private
		         * @param {Function} func The function to associate metadata with.
		         * @param {*} data The metadata.
		         * @returns {Function} Returns `func`.
		         */var setData=shortOut(baseSetData);/**
		         * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
		         *
		         * @private
		         * @param {Function} func The function to delay.
		         * @param {number} wait The number of milliseconds to delay invocation.
		         * @returns {number|Object} Returns the timer id or timeout object.
		         */var setTimeout=ctxSetTimeout||function(func,wait){return root.setTimeout(func,wait);};/**
		       * Sets the `toString` method of `func` to return `string`.
		       *
		       * @private
		       * @param {Function} func The function to modify.
		       * @param {Function} string The `toString` result.
		       * @returns {Function} Returns `func`.
		       */var setToString=shortOut(baseSetToString);/**
		         * Sets the `toString` method of `wrapper` to mimic the source of `reference`
		         * with wrapper details in a comment at the top of the source body.
		         *
		         * @private
		         * @param {Function} wrapper The function to modify.
		         * @param {Function} reference The reference function.
		         * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		         * @returns {Function} Returns `wrapper`.
		         */function setWrapToString(wrapper,reference,bitmask){var source=reference+'';return setToString(wrapper,insertWrapDetails(source,updateWrapDetails(getWrapDetails(source),bitmask)));}/**
		         * Creates a function that'll short out and invoke `identity` instead
		         * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
		         * milliseconds.
		         *
		         * @private
		         * @param {Function} func The function to restrict.
		         * @returns {Function} Returns the new shortable function.
		         */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else {count=0;}return func.apply(undefined$1,arguments);};}/**
		         * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
		         *
		         * @private
		         * @param {Array} array The array to shuffle.
		         * @param {number} [size=array.length] The size of `array`.
		         * @returns {Array} Returns `array`.
		         */function shuffleSelf(array,size){var index=-1,length=array.length,lastIndex=length-1;size=size===undefined$1?length:size;while(++index<size){var rand=baseRandom(index,lastIndex),value=array[rand];array[rand]=array[index];array[index]=value;}array.length=size;return array;}/**
		         * Converts `string` to a property path array.
		         *
		         * @private
		         * @param {string} string The string to convert.
		         * @returns {Array} Returns the property path array.
		         */var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46/* . */){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});/**
		       * Converts `value` to a string key if it's not a string or symbol.
		       *
		       * @private
		       * @param {*} value The value to inspect.
		       * @returns {string|symbol} Returns the key.
		       */function toKey(value){if(typeof value==='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
		         * Converts `func` to its source code.
		         *
		         * @private
		         * @param {Function} func The function to convert.
		         * @returns {string} Returns the source code.
		         */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return '';}/**
		         * Updates wrapper `details` based on `bitmask` flags.
		         *
		         * @private
		         * @returns {Array} details The details to modify.
		         * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		         * @returns {Array} Returns `details`.
		         */function updateWrapDetails(details,bitmask){arrayEach(wrapFlags,function(pair){var value='_.'+pair[0];if(bitmask&pair[1]&&!arrayIncludes(details,value)){details.push(value);}});return details.sort();}/**
		         * Creates a clone of `wrapper`.
		         *
		         * @private
		         * @param {Object} wrapper The wrapper to clone.
		         * @returns {Object} Returns the cloned wrapper.
		         */function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;}/* ------------------------------------------------------------------------*//**
		         * Creates an array of elements split into groups the length of `size`.
		         * If `array` can't be split evenly, the final chunk will be the remaining
		         * elements.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to process.
		         * @param {number} [size=1] The length of each chunk
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Array} Returns the new array of chunks.
		         * @example
		         *
		         * _.chunk(['a', 'b', 'c', 'd'], 2);
		         * // => [['a', 'b'], ['c', 'd']]
		         *
		         * _.chunk(['a', 'b', 'c', 'd'], 3);
		         * // => [['a', 'b', 'c'], ['d']]
		         */function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined$1){size=1;}else {size=nativeMax(toInteger(size),0);}var length=array==null?0:array.length;if(!length||size<1){return [];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;}/**
		         * Creates an array with all falsey values removed. The values `false`, `null`,
		         * `0`, `""`, `undefined`, and `NaN` are falsey.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to compact.
		         * @returns {Array} Returns the new array of filtered values.
		         * @example
		         *
		         * _.compact([0, 1, false, 2, '', 3]);
		         * // => [1, 2, 3]
		         */function compact(array){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;}/**
		         * Creates a new array concatenating `array` with any additional arrays
		         * and/or values.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to concatenate.
		         * @param {...*} [values] The values to concatenate.
		         * @returns {Array} Returns the new concatenated array.
		         * @example
		         *
		         * var array = [1];
		         * var other = _.concat(array, 2, [3], [[4]]);
		         *
		         * console.log(other);
		         * // => [1, 2, 3, [4]]
		         *
		         * console.log(array);
		         * // => [1]
		         */function concat(){var length=arguments.length;if(!length){return [];}var args=Array(length-1),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1));}/**
		         * Creates an array of `array` values not included in the other given arrays
		         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * for equality comparisons. The order and references of result values are
		         * determined by the first array.
		         *
		         * **Note:** Unlike `_.pullAll`, this method returns a new array.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {...Array} [values] The values to exclude.
		         * @returns {Array} Returns the new array of filtered values.
		         * @see _.without, _.xor
		         * @example
		         *
		         * _.difference([2, 1], [2, 3]);
		         * // => [1]
		         */var difference=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];});/**
		       * This method is like `_.difference` except that it accepts `iteratee` which
		       * is invoked for each element of `array` and `values` to generate the criterion
		       * by which they're compared. The order and references of result values are
		       * determined by the first array. The iteratee is invoked with one argument:
		       * (value).
		       *
		       * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {Array} array The array to inspect.
		       * @param {...Array} [values] The values to exclude.
		       * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		       * @returns {Array} Returns the new array of filtered values.
		       * @example
		       *
		       * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		       * // => [1.2]
		       *
		       * // The `_.property` iteratee shorthand.
		       * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
		       * // => [{ 'x': 2 }]
		       */var differenceBy=baseRest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee,2)):[];});/**
		       * This method is like `_.difference` except that it accepts `comparator`
		       * which is invoked to compare elements of `array` to `values`. The order and
		       * references of result values are determined by the first array. The comparator
		       * is invoked with two arguments: (arrVal, othVal).
		       *
		       * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {Array} array The array to inspect.
		       * @param {...Array} [values] The values to exclude.
		       * @param {Function} [comparator] The comparator invoked per element.
		       * @returns {Array} Returns the new array of filtered values.
		       * @example
		       *
		       * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		       *
		       * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
		       * // => [{ 'x': 2, 'y': 1 }]
		       */var differenceWith=baseRest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined$1,comparator):[];});/**
		       * Creates a slice of `array` with `n` elements dropped from the beginning.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.5.0
		       * @category Array
		       * @param {Array} array The array to query.
		       * @param {number} [n=1] The number of elements to drop.
		       * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		       * @returns {Array} Returns the slice of `array`.
		       * @example
		       *
		       * _.drop([1, 2, 3]);
		       * // => [2, 3]
		       *
		       * _.drop([1, 2, 3], 2);
		       * // => [3]
		       *
		       * _.drop([1, 2, 3], 5);
		       * // => []
		       *
		       * _.drop([1, 2, 3], 0);
		       * // => [1, 2, 3]
		       */function drop(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,n<0?0:n,length);}/**
		         * Creates a slice of `array` with `n` elements dropped from the end.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {number} [n=1] The number of elements to drop.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * _.dropRight([1, 2, 3]);
		         * // => [1, 2]
		         *
		         * _.dropRight([1, 2, 3], 2);
		         * // => [1]
		         *
		         * _.dropRight([1, 2, 3], 5);
		         * // => []
		         *
		         * _.dropRight([1, 2, 3], 0);
		         * // => [1, 2, 3]
		         */function dropRight(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);}/**
		         * Creates a slice of `array` excluding elements dropped from the end.
		         * Elements are dropped until `predicate` returns falsey. The predicate is
		         * invoked with three arguments: (value, index, array).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'active': true },
		         *   { 'user': 'fred',    'active': false },
		         *   { 'user': 'pebbles', 'active': false }
		         * ];
		         *
		         * _.dropRightWhile(users, function(o) { return !o.active; });
		         * // => objects for ['barney']
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
		         * // => objects for ['barney', 'fred']
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.dropRightWhile(users, ['active', false]);
		         * // => objects for ['barney']
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.dropRightWhile(users, 'active');
		         * // => objects for ['barney', 'fred', 'pebbles']
		         */function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];}/**
		         * Creates a slice of `array` excluding elements dropped from the beginning.
		         * Elements are dropped until `predicate` returns falsey. The predicate is
		         * invoked with three arguments: (value, index, array).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'active': false },
		         *   { 'user': 'fred',    'active': false },
		         *   { 'user': 'pebbles', 'active': true }
		         * ];
		         *
		         * _.dropWhile(users, function(o) { return !o.active; });
		         * // => objects for ['pebbles']
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.dropWhile(users, { 'user': 'barney', 'active': false });
		         * // => objects for ['fred', 'pebbles']
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.dropWhile(users, ['active', false]);
		         * // => objects for ['pebbles']
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.dropWhile(users, 'active');
		         * // => objects for ['barney', 'fred', 'pebbles']
		         */function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];}/**
		         * Fills elements of `array` with `value` from `start` up to, but not
		         * including, `end`.
		         *
		         * **Note:** This method mutates `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.2.0
		         * @category Array
		         * @param {Array} array The array to fill.
		         * @param {*} value The value to fill `array` with.
		         * @param {number} [start=0] The start position.
		         * @param {number} [end=array.length] The end position.
		         * @returns {Array} Returns `array`.
		         * @example
		         *
		         * var array = [1, 2, 3];
		         *
		         * _.fill(array, 'a');
		         * console.log(array);
		         * // => ['a', 'a', 'a']
		         *
		         * _.fill(Array(3), 2);
		         * // => [2, 2, 2]
		         *
		         * _.fill([4, 6, 8, 10], '*', 1, 3);
		         * // => [4, '*', '*', 10]
		         */function fill(array,value,start,end){var length=array==null?0:array.length;if(!length){return [];}if(start&&typeof start!=='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);}/**
		         * This method is like `_.find` except that it returns the index of the first
		         * element `predicate` returns truthy for instead of the element itself.
		         *
		         * @static
		         * @memberOf _
		         * @since 1.1.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @param {number} [fromIndex=0] The index to search from.
		         * @returns {number} Returns the index of the found element, else `-1`.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'active': false },
		         *   { 'user': 'fred',    'active': false },
		         *   { 'user': 'pebbles', 'active': true }
		         * ];
		         *
		         * _.findIndex(users, function(o) { return o.user == 'barney'; });
		         * // => 0
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.findIndex(users, { 'user': 'fred', 'active': false });
		         * // => 1
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.findIndex(users, ['active', false]);
		         * // => 0
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.findIndex(users, 'active');
		         * // => 2
		         */function findIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseFindIndex(array,getIteratee(predicate,3),index);}/**
		         * This method is like `_.findIndex` except that it iterates over elements
		         * of `collection` from right to left.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @param {number} [fromIndex=array.length-1] The index to search from.
		         * @returns {number} Returns the index of the found element, else `-1`.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'active': true },
		         *   { 'user': 'fred',    'active': false },
		         *   { 'user': 'pebbles', 'active': false }
		         * ];
		         *
		         * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
		         * // => 2
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.findLastIndex(users, { 'user': 'barney', 'active': true });
		         * // => 0
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.findLastIndex(users, ['active', false]);
		         * // => 2
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.findLastIndex(users, 'active');
		         * // => 0
		         */function findLastIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=length-1;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=fromIndex<0?nativeMax(length+index,0):nativeMin(index,length-1);}return baseFindIndex(array,getIteratee(predicate,3),index,true);}/**
		         * Flattens `array` a single level deep.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to flatten.
		         * @returns {Array} Returns the new flattened array.
		         * @example
		         *
		         * _.flatten([1, [2, [3, [4]], 5]]);
		         * // => [1, 2, [3, [4]], 5]
		         */function flatten(array){var length=array==null?0:array.length;return length?baseFlatten(array,1):[];}/**
		         * Recursively flattens `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to flatten.
		         * @returns {Array} Returns the new flattened array.
		         * @example
		         *
		         * _.flattenDeep([1, [2, [3, [4]], 5]]);
		         * // => [1, 2, 3, 4, 5]
		         */function flattenDeep(array){var length=array==null?0:array.length;return length?baseFlatten(array,INFINITY):[];}/**
		         * Recursively flatten `array` up to `depth` times.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.4.0
		         * @category Array
		         * @param {Array} array The array to flatten.
		         * @param {number} [depth=1] The maximum recursion depth.
		         * @returns {Array} Returns the new flattened array.
		         * @example
		         *
		         * var array = [1, [2, [3, [4]], 5]];
		         *
		         * _.flattenDepth(array, 1);
		         * // => [1, 2, [3, [4]], 5]
		         *
		         * _.flattenDepth(array, 2);
		         * // => [1, 2, 3, [4], 5]
		         */function flattenDepth(array,depth){var length=array==null?0:array.length;if(!length){return [];}depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(array,depth);}/**
		         * The inverse of `_.toPairs`; this method returns an object composed
		         * from key-value `pairs`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} pairs The key-value pairs.
		         * @returns {Object} Returns the new object.
		         * @example
		         *
		         * _.fromPairs([['a', 1], ['b', 2]]);
		         * // => { 'a': 1, 'b': 2 }
		         */function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}/**
		         * Gets the first element of `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @alias first
		         * @category Array
		         * @param {Array} array The array to query.
		         * @returns {*} Returns the first element of `array`.
		         * @example
		         *
		         * _.head([1, 2, 3]);
		         * // => 1
		         *
		         * _.head([]);
		         * // => undefined
		         */function head(array){return array&&array.length?array[0]:undefined$1;}/**
		         * Gets the index at which the first occurrence of `value` is found in `array`
		         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * for equality comparisons. If `fromIndex` is negative, it's used as the
		         * offset from the end of `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {*} value The value to search for.
		         * @param {number} [fromIndex=0] The index to search from.
		         * @returns {number} Returns the index of the matched value, else `-1`.
		         * @example
		         *
		         * _.indexOf([1, 2, 1, 2], 2);
		         * // => 1
		         *
		         * // Search from the `fromIndex`.
		         * _.indexOf([1, 2, 1, 2], 2, 2);
		         * // => 3
		         */function indexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseIndexOf(array,value,index);}/**
		         * Gets all but the last element of `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * _.initial([1, 2, 3]);
		         * // => [1, 2]
		         */function initial(array){var length=array==null?0:array.length;return length?baseSlice(array,0,-1):[];}/**
		         * Creates an array of unique values that are included in all given arrays
		         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * for equality comparisons. The order and references of result values are
		         * determined by the first array.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {...Array} [arrays] The arrays to inspect.
		         * @returns {Array} Returns the new array of intersecting values.
		         * @example
		         *
		         * _.intersection([2, 1], [2, 3]);
		         * // => [2]
		         */var intersection=baseRest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];});/**
		       * This method is like `_.intersection` except that it accepts `iteratee`
		       * which is invoked for each element of each `arrays` to generate the criterion
		       * by which they're compared. The order and references of result values are
		       * determined by the first array. The iteratee is invoked with one argument:
		       * (value).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to inspect.
		       * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		       * @returns {Array} Returns the new array of intersecting values.
		       * @example
		       *
		       * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		       * // => [2.1]
		       *
		       * // The `_.property` iteratee shorthand.
		       * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		       * // => [{ 'x': 1 }]
		       */var intersectionBy=baseRest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined$1;}else {mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee,2)):[];});/**
		       * This method is like `_.intersection` except that it accepts `comparator`
		       * which is invoked to compare elements of `arrays`. The order and references
		       * of result values are determined by the first array. The comparator is
		       * invoked with two arguments: (arrVal, othVal).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to inspect.
		       * @param {Function} [comparator] The comparator invoked per element.
		       * @returns {Array} Returns the new array of intersecting values.
		       * @example
		       *
		       * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		       * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		       *
		       * _.intersectionWith(objects, others, _.isEqual);
		       * // => [{ 'x': 1, 'y': 2 }]
		       */var intersectionWith=baseRest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);comparator=typeof comparator==='function'?comparator:undefined$1;if(comparator){mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined$1,comparator):[];});/**
		       * Converts all elements in `array` into a string separated by `separator`.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {Array} array The array to convert.
		       * @param {string} [separator=','] The element separator.
		       * @returns {string} Returns the joined string.
		       * @example
		       *
		       * _.join(['a', 'b', 'c'], '~');
		       * // => 'a~b~c'
		       */function join(array,separator){return array==null?'':nativeJoin.call(array,separator);}/**
		         * Gets the last element of `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @returns {*} Returns the last element of `array`.
		         * @example
		         *
		         * _.last([1, 2, 3]);
		         * // => 3
		         */function last(array){var length=array==null?0:array.length;return length?array[length-1]:undefined$1;}/**
		         * This method is like `_.indexOf` except that it iterates over elements of
		         * `array` from right to left.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {*} value The value to search for.
		         * @param {number} [fromIndex=array.length-1] The index to search from.
		         * @returns {number} Returns the index of the matched value, else `-1`.
		         * @example
		         *
		         * _.lastIndexOf([1, 2, 1, 2], 2);
		         * // => 3
		         *
		         * // Search from the `fromIndex`.
		         * _.lastIndexOf([1, 2, 1, 2], 2, 2);
		         * // => 1
		         */function lastIndexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=length;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=index<0?nativeMax(length+index,0):nativeMin(index,length-1);}return value===value?strictLastIndexOf(array,value,index):baseFindIndex(array,baseIsNaN,index,true);}/**
		         * Gets the element at index `n` of `array`. If `n` is negative, the nth
		         * element from the end is returned.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.11.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {number} [n=0] The index of the element to return.
		         * @returns {*} Returns the nth element of `array`.
		         * @example
		         *
		         * var array = ['a', 'b', 'c', 'd'];
		         *
		         * _.nth(array, 1);
		         * // => 'b'
		         *
		         * _.nth(array, -2);
		         * // => 'c';
		         */function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined$1;}/**
		         * Removes all given values from `array` using
		         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * for equality comparisons.
		         *
		         * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
		         * to remove elements from an array by predicate.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @category Array
		         * @param {Array} array The array to modify.
		         * @param {...*} [values] The values to remove.
		         * @returns {Array} Returns `array`.
		         * @example
		         *
		         * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
		         *
		         * _.pull(array, 'a', 'c');
		         * console.log(array);
		         * // => ['b', 'b']
		         */var pull=baseRest(pullAll);/**
		         * This method is like `_.pull` except that it accepts an array of values to remove.
		         *
		         * **Note:** Unlike `_.difference`, this method mutates `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to modify.
		         * @param {Array} values The values to remove.
		         * @returns {Array} Returns `array`.
		         * @example
		         *
		         * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
		         *
		         * _.pullAll(array, ['a', 'c']);
		         * console.log(array);
		         * // => ['b', 'b']
		         */function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;}/**
		         * This method is like `_.pullAll` except that it accepts `iteratee` which is
		         * invoked for each element of `array` and `values` to generate the criterion
		         * by which they're compared. The iteratee is invoked with one argument: (value).
		         *
		         * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to modify.
		         * @param {Array} values The values to remove.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {Array} Returns `array`.
		         * @example
		         *
		         * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
		         *
		         * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
		         * console.log(array);
		         * // => [{ 'x': 2 }]
		         */function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee,2)):array;}/**
		         * This method is like `_.pullAll` except that it accepts `comparator` which
		         * is invoked to compare elements of `array` to `values`. The comparator is
		         * invoked with two arguments: (arrVal, othVal).
		         *
		         * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.6.0
		         * @category Array
		         * @param {Array} array The array to modify.
		         * @param {Array} values The values to remove.
		         * @param {Function} [comparator] The comparator invoked per element.
		         * @returns {Array} Returns `array`.
		         * @example
		         *
		         * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
		         *
		         * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
		         * console.log(array);
		         * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
		         */function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined$1,comparator):array;}/**
		         * Removes elements from `array` corresponding to `indexes` and returns an
		         * array of removed elements.
		         *
		         * **Note:** Unlike `_.at`, this method mutates `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to modify.
		         * @param {...(number|number[])} [indexes] The indexes of elements to remove.
		         * @returns {Array} Returns the new array of removed elements.
		         * @example
		         *
		         * var array = ['a', 'b', 'c', 'd'];
		         * var pulled = _.pullAt(array, [1, 3]);
		         *
		         * console.log(array);
		         * // => ['a', 'c']
		         *
		         * console.log(pulled);
		         * // => ['b', 'd']
		         */var pullAt=flatRest(function(array,indexes){var length=array==null?0:array.length,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;});/**
		       * Removes all elements from `array` that `predicate` returns truthy for
		       * and returns an array of the removed elements. The predicate is invoked
		       * with three arguments: (value, index, array).
		       *
		       * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
		       * to pull elements from an array by value.
		       *
		       * @static
		       * @memberOf _
		       * @since 2.0.0
		       * @category Array
		       * @param {Array} array The array to modify.
		       * @param {Function} [predicate=_.identity] The function invoked per iteration.
		       * @returns {Array} Returns the new array of removed elements.
		       * @example
		       *
		       * var array = [1, 2, 3, 4];
		       * var evens = _.remove(array, function(n) {
		       *   return n % 2 == 0;
		       * });
		       *
		       * console.log(array);
		       * // => [1, 3]
		       *
		       * console.log(evens);
		       * // => [2, 4]
		       */function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;}/**
		         * Reverses `array` so that the first element becomes the last, the second
		         * element becomes the second to last, and so on.
		         *
		         * **Note:** This method mutates `array` and is based on
		         * [`Array#reverse`](https://mdn.io/Array/reverse).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to modify.
		         * @returns {Array} Returns `array`.
		         * @example
		         *
		         * var array = [1, 2, 3];
		         *
		         * _.reverse(array);
		         * // => [3, 2, 1]
		         *
		         * console.log(array);
		         * // => [3, 2, 1]
		         */function reverse(array){return array==null?array:nativeReverse.call(array);}/**
		         * Creates a slice of `array` from `start` up to, but not including, `end`.
		         *
		         * **Note:** This method is used instead of
		         * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
		         * returned.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to slice.
		         * @param {number} [start=0] The start position.
		         * @param {number} [end=array.length] The end position.
		         * @returns {Array} Returns the slice of `array`.
		         */function slice(array,start,end){var length=array==null?0:array.length;if(!length){return [];}if(end&&typeof end!=='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else {start=start==null?0:toInteger(start);end=end===undefined$1?length:toInteger(end);}return baseSlice(array,start,end);}/**
		         * Uses a binary search to determine the lowest index at which `value`
		         * should be inserted into `array` in order to maintain its sort order.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The sorted array to inspect.
		         * @param {*} value The value to evaluate.
		         * @returns {number} Returns the index at which `value` should be inserted
		         *  into `array`.
		         * @example
		         *
		         * _.sortedIndex([30, 50], 40);
		         * // => 1
		         */function sortedIndex(array,value){return baseSortedIndex(array,value);}/**
		         * This method is like `_.sortedIndex` except that it accepts `iteratee`
		         * which is invoked for `value` and each element of `array` to compute their
		         * sort ranking. The iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The sorted array to inspect.
		         * @param {*} value The value to evaluate.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {number} Returns the index at which `value` should be inserted
		         *  into `array`.
		         * @example
		         *
		         * var objects = [{ 'x': 4 }, { 'x': 5 }];
		         *
		         * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
		         * // => 0
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
		         * // => 0
		         */function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2));}/**
		         * This method is like `_.indexOf` except that it performs a binary
		         * search on a sorted `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {*} value The value to search for.
		         * @returns {number} Returns the index of the matched value, else `-1`.
		         * @example
		         *
		         * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
		         * // => 1
		         */function sortedIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return -1;}/**
		         * This method is like `_.sortedIndex` except that it returns the highest
		         * index at which `value` should be inserted into `array` in order to
		         * maintain its sort order.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The sorted array to inspect.
		         * @param {*} value The value to evaluate.
		         * @returns {number} Returns the index at which `value` should be inserted
		         *  into `array`.
		         * @example
		         *
		         * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
		         * // => 4
		         */function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);}/**
		         * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
		         * which is invoked for `value` and each element of `array` to compute their
		         * sort ranking. The iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The sorted array to inspect.
		         * @param {*} value The value to evaluate.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {number} Returns the index at which `value` should be inserted
		         *  into `array`.
		         * @example
		         *
		         * var objects = [{ 'x': 4 }, { 'x': 5 }];
		         *
		         * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
		         * // => 1
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
		         * // => 1
		         */function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2),true);}/**
		         * This method is like `_.lastIndexOf` except that it performs a binary
		         * search on a sorted `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {*} value The value to search for.
		         * @returns {number} Returns the index of the matched value, else `-1`.
		         * @example
		         *
		         * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
		         * // => 3
		         */function sortedLastIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return -1;}/**
		         * This method is like `_.uniq` except that it's designed and optimized
		         * for sorted arrays.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @returns {Array} Returns the new duplicate free array.
		         * @example
		         *
		         * _.sortedUniq([1, 1, 2]);
		         * // => [1, 2]
		         */function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];}/**
		         * This method is like `_.uniqBy` except that it's designed and optimized
		         * for sorted arrays.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {Function} [iteratee] The iteratee invoked per element.
		         * @returns {Array} Returns the new duplicate free array.
		         * @example
		         *
		         * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
		         * // => [1.1, 2.3]
		         */function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee,2)):[];}/**
		         * Gets all but the first element of `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * _.tail([1, 2, 3]);
		         * // => [2, 3]
		         */function tail(array){var length=array==null?0:array.length;return length?baseSlice(array,1,length):[];}/**
		         * Creates a slice of `array` with `n` elements taken from the beginning.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {number} [n=1] The number of elements to take.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * _.take([1, 2, 3]);
		         * // => [1]
		         *
		         * _.take([1, 2, 3], 2);
		         * // => [1, 2]
		         *
		         * _.take([1, 2, 3], 5);
		         * // => [1, 2, 3]
		         *
		         * _.take([1, 2, 3], 0);
		         * // => []
		         */function take(array,n,guard){if(!(array&&array.length)){return [];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,0,n<0?0:n);}/**
		         * Creates a slice of `array` with `n` elements taken from the end.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {number} [n=1] The number of elements to take.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * _.takeRight([1, 2, 3]);
		         * // => [3]
		         *
		         * _.takeRight([1, 2, 3], 2);
		         * // => [2, 3]
		         *
		         * _.takeRight([1, 2, 3], 5);
		         * // => [1, 2, 3]
		         *
		         * _.takeRight([1, 2, 3], 0);
		         * // => []
		         */function takeRight(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);}/**
		         * Creates a slice of `array` with elements taken from the end. Elements are
		         * taken until `predicate` returns falsey. The predicate is invoked with
		         * three arguments: (value, index, array).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'active': true },
		         *   { 'user': 'fred',    'active': false },
		         *   { 'user': 'pebbles', 'active': false }
		         * ];
		         *
		         * _.takeRightWhile(users, function(o) { return !o.active; });
		         * // => objects for ['fred', 'pebbles']
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
		         * // => objects for ['pebbles']
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.takeRightWhile(users, ['active', false]);
		         * // => objects for ['fred', 'pebbles']
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.takeRightWhile(users, 'active');
		         * // => []
		         */function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];}/**
		         * Creates a slice of `array` with elements taken from the beginning. Elements
		         * are taken until `predicate` returns falsey. The predicate is invoked with
		         * three arguments: (value, index, array).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Array
		         * @param {Array} array The array to query.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the slice of `array`.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'active': false },
		         *   { 'user': 'fred',    'active': false },
		         *   { 'user': 'pebbles', 'active': true }
		         * ];
		         *
		         * _.takeWhile(users, function(o) { return !o.active; });
		         * // => objects for ['barney', 'fred']
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.takeWhile(users, { 'user': 'barney', 'active': false });
		         * // => objects for ['barney']
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.takeWhile(users, ['active', false]);
		         * // => objects for ['barney', 'fred']
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.takeWhile(users, 'active');
		         * // => []
		         */function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];}/**
		         * Creates an array of unique values, in order, from all given arrays using
		         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * for equality comparisons.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {...Array} [arrays] The arrays to inspect.
		         * @returns {Array} Returns the new array of combined values.
		         * @example
		         *
		         * _.union([2], [1, 2]);
		         * // => [2, 1]
		         */var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});/**
		       * This method is like `_.union` except that it accepts `iteratee` which is
		       * invoked for each element of each `arrays` to generate the criterion by
		       * which uniqueness is computed. Result values are chosen from the first
		       * array in which the value occurs. The iteratee is invoked with one argument:
		       * (value).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to inspect.
		       * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		       * @returns {Array} Returns the new array of combined values.
		       * @example
		       *
		       * _.unionBy([2.1], [1.2, 2.3], Math.floor);
		       * // => [2.1, 1.2]
		       *
		       * // The `_.property` iteratee shorthand.
		       * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		       * // => [{ 'x': 1 }, { 'x': 2 }]
		       */var unionBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee,2));});/**
		       * This method is like `_.union` except that it accepts `comparator` which
		       * is invoked to compare elements of `arrays`. Result values are chosen from
		       * the first array in which the value occurs. The comparator is invoked
		       * with two arguments: (arrVal, othVal).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to inspect.
		       * @param {Function} [comparator] The comparator invoked per element.
		       * @returns {Array} Returns the new array of combined values.
		       * @example
		       *
		       * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		       * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		       *
		       * _.unionWith(objects, others, _.isEqual);
		       * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
		       */var unionWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator==='function'?comparator:undefined$1;return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined$1,comparator);});/**
		       * Creates a duplicate-free version of an array, using
		       * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		       * for equality comparisons, in which only the first occurrence of each element
		       * is kept. The order of result values is determined by the order they occur
		       * in the array.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Array
		       * @param {Array} array The array to inspect.
		       * @returns {Array} Returns the new duplicate free array.
		       * @example
		       *
		       * _.uniq([2, 1, 2]);
		       * // => [2, 1]
		       */function uniq(array){return array&&array.length?baseUniq(array):[];}/**
		         * This method is like `_.uniq` except that it accepts `iteratee` which is
		         * invoked for each element in `array` to generate the criterion by which
		         * uniqueness is computed. The order of result values is determined by the
		         * order they occur in the array. The iteratee is invoked with one argument:
		         * (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {Array} Returns the new duplicate free array.
		         * @example
		         *
		         * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
		         * // => [2.1, 1.2]
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
		         * // => [{ 'x': 1 }, { 'x': 2 }]
		         */function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee,2)):[];}/**
		         * This method is like `_.uniq` except that it accepts `comparator` which
		         * is invoked to compare elements of `array`. The order of result values is
		         * determined by the order they occur in the array.The comparator is invoked
		         * with two arguments: (arrVal, othVal).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {Function} [comparator] The comparator invoked per element.
		         * @returns {Array} Returns the new duplicate free array.
		         * @example
		         *
		         * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
		         *
		         * _.uniqWith(objects, _.isEqual);
		         * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
		         */function uniqWith(array,comparator){comparator=typeof comparator==='function'?comparator:undefined$1;return array&&array.length?baseUniq(array,undefined$1,comparator):[];}/**
		         * This method is like `_.zip` except that it accepts an array of grouped
		         * elements and creates an array regrouping the elements to their pre-zip
		         * configuration.
		         *
		         * @static
		         * @memberOf _
		         * @since 1.2.0
		         * @category Array
		         * @param {Array} array The array of grouped elements to process.
		         * @returns {Array} Returns the new array of regrouped elements.
		         * @example
		         *
		         * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
		         * // => [['a', 1, true], ['b', 2, false]]
		         *
		         * _.unzip(zipped);
		         * // => [['a', 'b'], [1, 2], [true, false]]
		         */function unzip(array){if(!(array&&array.length)){return [];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});}/**
		         * This method is like `_.unzip` except that it accepts `iteratee` to specify
		         * how regrouped values should be combined. The iteratee is invoked with the
		         * elements of each group: (...group).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.8.0
		         * @category Array
		         * @param {Array} array The array of grouped elements to process.
		         * @param {Function} [iteratee=_.identity] The function to combine
		         *  regrouped values.
		         * @returns {Array} Returns the new array of regrouped elements.
		         * @example
		         *
		         * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
		         * // => [[1, 10, 100], [2, 20, 200]]
		         *
		         * _.unzipWith(zipped, _.add);
		         * // => [3, 30, 300]
		         */function unzipWith(array,iteratee){if(!(array&&array.length)){return [];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined$1,group);});}/**
		         * Creates an array excluding all given values using
		         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * for equality comparisons.
		         *
		         * **Note:** Unlike `_.pull`, this method returns a new array.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Array
		         * @param {Array} array The array to inspect.
		         * @param {...*} [values] The values to exclude.
		         * @returns {Array} Returns the new array of filtered values.
		         * @see _.difference, _.xor
		         * @example
		         *
		         * _.without([2, 1, 2, 3], 1, 2);
		         * // => [3]
		         */var without=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];});/**
		       * Creates an array of unique values that is the
		       * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
		       * of the given arrays. The order of result values is determined by the order
		       * they occur in the arrays.
		       *
		       * @static
		       * @memberOf _
		       * @since 2.4.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to inspect.
		       * @returns {Array} Returns the new array of filtered values.
		       * @see _.difference, _.without
		       * @example
		       *
		       * _.xor([2, 1], [2, 3]);
		       * // => [1, 3]
		       */var xor=baseRest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));});/**
		       * This method is like `_.xor` except that it accepts `iteratee` which is
		       * invoked for each element of each `arrays` to generate the criterion by
		       * which by which they're compared. The order of result values is determined
		       * by the order they occur in the arrays. The iteratee is invoked with one
		       * argument: (value).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to inspect.
		       * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		       * @returns {Array} Returns the new array of filtered values.
		       * @example
		       *
		       * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		       * // => [1.2, 3.4]
		       *
		       * // The `_.property` iteratee shorthand.
		       * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		       * // => [{ 'x': 2 }]
		       */var xorBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee,2));});/**
		       * This method is like `_.xor` except that it accepts `comparator` which is
		       * invoked to compare elements of `arrays`. The order of result values is
		       * determined by the order they occur in the arrays. The comparator is invoked
		       * with two arguments: (arrVal, othVal).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to inspect.
		       * @param {Function} [comparator] The comparator invoked per element.
		       * @returns {Array} Returns the new array of filtered values.
		       * @example
		       *
		       * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		       * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		       *
		       * _.xorWith(objects, others, _.isEqual);
		       * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
		       */var xorWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator==='function'?comparator:undefined$1;return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined$1,comparator);});/**
		       * Creates an array of grouped elements, the first of which contains the
		       * first elements of the given arrays, the second of which contains the
		       * second elements of the given arrays, and so on.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Array
		       * @param {...Array} [arrays] The arrays to process.
		       * @returns {Array} Returns the new array of grouped elements.
		       * @example
		       *
		       * _.zip(['a', 'b'], [1, 2], [true, false]);
		       * // => [['a', 1, true], ['b', 2, false]]
		       */var zip=baseRest(unzip);/**
		         * This method is like `_.fromPairs` except that it accepts two arrays,
		         * one of property identifiers and one of corresponding values.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.4.0
		         * @category Array
		         * @param {Array} [props=[]] The property identifiers.
		         * @param {Array} [values=[]] The property values.
		         * @returns {Object} Returns the new object.
		         * @example
		         *
		         * _.zipObject(['a', 'b'], [1, 2]);
		         * // => { 'a': 1, 'b': 2 }
		         */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);}/**
		         * This method is like `_.zipObject` except that it supports property paths.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.1.0
		         * @category Array
		         * @param {Array} [props=[]] The property identifiers.
		         * @param {Array} [values=[]] The property values.
		         * @returns {Object} Returns the new object.
		         * @example
		         *
		         * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
		         * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
		         */function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);}/**
		         * This method is like `_.zip` except that it accepts `iteratee` to specify
		         * how grouped values should be combined. The iteratee is invoked with the
		         * elements of each group: (...group).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.8.0
		         * @category Array
		         * @param {...Array} [arrays] The arrays to process.
		         * @param {Function} [iteratee=_.identity] The function to combine
		         *  grouped values.
		         * @returns {Array} Returns the new array of grouped elements.
		         * @example
		         *
		         * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
		         *   return a + b + c;
		         * });
		         * // => [111, 222]
		         */var zipWith=baseRest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined$1;iteratee=typeof iteratee==='function'?(arrays.pop(),iteratee):undefined$1;return unzipWith(arrays,iteratee);});/* ------------------------------------------------------------------------*//**
		       * Creates a `lodash` wrapper instance that wraps `value` with explicit method
		       * chain sequences enabled. The result of such sequences must be unwrapped
		       * with `_#value`.
		       *
		       * @static
		       * @memberOf _
		       * @since 1.3.0
		       * @category Seq
		       * @param {*} value The value to wrap.
		       * @returns {Object} Returns the new `lodash` wrapper instance.
		       * @example
		       *
		       * var users = [
		       *   { 'user': 'barney',  'age': 36 },
		       *   { 'user': 'fred',    'age': 40 },
		       *   { 'user': 'pebbles', 'age': 1 }
		       * ];
		       *
		       * var youngest = _
		       *   .chain(users)
		       *   .sortBy('age')
		       *   .map(function(o) {
		       *     return o.user + ' is ' + o.age;
		       *   })
		       *   .head()
		       *   .value();
		       * // => 'pebbles is 1'
		       */function chain(value){var result=lodash(value);result.__chain__=true;return result;}/**
		         * This method invokes `interceptor` and returns `value`. The interceptor
		         * is invoked with one argument; (value). The purpose of this method is to
		         * "tap into" a method chain sequence in order to modify intermediate results.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Seq
		         * @param {*} value The value to provide to `interceptor`.
		         * @param {Function} interceptor The function to invoke.
		         * @returns {*} Returns `value`.
		         * @example
		         *
		         * _([1, 2, 3])
		         *  .tap(function(array) {
		         *    // Mutate input array.
		         *    array.pop();
		         *  })
		         *  .reverse()
		         *  .value();
		         * // => [2, 1]
		         */function tap(value,interceptor){interceptor(value);return value;}/**
		         * This method is like `_.tap` except that it returns the result of `interceptor`.
		         * The purpose of this method is to "pass thru" values replacing intermediate
		         * results in a method chain sequence.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Seq
		         * @param {*} value The value to provide to `interceptor`.
		         * @param {Function} interceptor The function to invoke.
		         * @returns {*} Returns the result of `interceptor`.
		         * @example
		         *
		         * _('  abc  ')
		         *  .chain()
		         *  .trim()
		         *  .thru(function(value) {
		         *    return [value];
		         *  })
		         *  .value();
		         * // => ['abc']
		         */function thru(value,interceptor){return interceptor(value);}/**
		         * This method is the wrapper version of `_.at`.
		         *
		         * @name at
		         * @memberOf _
		         * @since 1.0.0
		         * @category Seq
		         * @param {...(string|string[])} [paths] The property paths to pick.
		         * @returns {Object} Returns the new `lodash` wrapper instance.
		         * @example
		         *
		         * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
		         *
		         * _(object).at(['a[0].b.c', 'a[1]']).value();
		         * // => [3, 4]
		         */var wrapperAt=flatRest(function(paths){var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function interceptor(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({func:thru,args:[interceptor],thisArg:undefined$1});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined$1);}return array;});});/**
		       * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
		       *
		       * @name chain
		       * @memberOf _
		       * @since 0.1.0
		       * @category Seq
		       * @returns {Object} Returns the new `lodash` wrapper instance.
		       * @example
		       *
		       * var users = [
		       *   { 'user': 'barney', 'age': 36 },
		       *   { 'user': 'fred',   'age': 40 }
		       * ];
		       *
		       * // A sequence without explicit chaining.
		       * _(users).head();
		       * // => { 'user': 'barney', 'age': 36 }
		       *
		       * // A sequence with explicit chaining.
		       * _(users)
		       *   .chain()
		       *   .head()
		       *   .pick('user')
		       *   .value();
		       * // => { 'user': 'barney' }
		       */function wrapperChain(){return chain(this);}/**
		         * Executes the chain sequence and returns the wrapped result.
		         *
		         * @name commit
		         * @memberOf _
		         * @since 3.2.0
		         * @category Seq
		         * @returns {Object} Returns the new `lodash` wrapper instance.
		         * @example
		         *
		         * var array = [1, 2];
		         * var wrapped = _(array).push(3);
		         *
		         * console.log(array);
		         * // => [1, 2]
		         *
		         * wrapped = wrapped.commit();
		         * console.log(array);
		         * // => [1, 2, 3]
		         *
		         * wrapped.last();
		         * // => 3
		         *
		         * console.log(array);
		         * // => [1, 2, 3]
		         */function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);}/**
		         * Gets the next value on a wrapped object following the
		         * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
		         *
		         * @name next
		         * @memberOf _
		         * @since 4.0.0
		         * @category Seq
		         * @returns {Object} Returns the next iterator value.
		         * @example
		         *
		         * var wrapped = _([1, 2]);
		         *
		         * wrapped.next();
		         * // => { 'done': false, 'value': 1 }
		         *
		         * wrapped.next();
		         * // => { 'done': false, 'value': 2 }
		         *
		         * wrapped.next();
		         * // => { 'done': true, 'value': undefined }
		         */function wrapperNext(){if(this.__values__===undefined$1){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined$1:this.__values__[this.__index__++];return {done:done,value:value};}/**
		         * Enables the wrapper to be iterable.
		         *
		         * @name Symbol.iterator
		         * @memberOf _
		         * @since 4.0.0
		         * @category Seq
		         * @returns {Object} Returns the wrapper object.
		         * @example
		         *
		         * var wrapped = _([1, 2]);
		         *
		         * wrapped[Symbol.iterator]() === wrapped;
		         * // => true
		         *
		         * Array.from(wrapped);
		         * // => [1, 2]
		         */function wrapperToIterator(){return this;}/**
		         * Creates a clone of the chain sequence planting `value` as the wrapped value.
		         *
		         * @name plant
		         * @memberOf _
		         * @since 3.2.0
		         * @category Seq
		         * @param {*} value The value to plant.
		         * @returns {Object} Returns the new `lodash` wrapper instance.
		         * @example
		         *
		         * function square(n) {
		         *   return n * n;
		         * }
		         *
		         * var wrapped = _([1, 2]).map(square);
		         * var other = wrapped.plant([3, 4]);
		         *
		         * other.value();
		         * // => [9, 16]
		         *
		         * wrapped.value();
		         * // => [1, 4]
		         */function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined$1;if(result){previous.__wrapped__=clone;}else {result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;}/**
		         * This method is the wrapper version of `_.reverse`.
		         *
		         * **Note:** This method mutates the wrapped array.
		         *
		         * @name reverse
		         * @memberOf _
		         * @since 0.1.0
		         * @category Seq
		         * @returns {Object} Returns the new `lodash` wrapper instance.
		         * @example
		         *
		         * var array = [1, 2, 3];
		         *
		         * _(array).reverse().value()
		         * // => [3, 2, 1]
		         *
		         * console.log(array);
		         * // => [3, 2, 1]
		         */function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({func:thru,args:[reverse],thisArg:undefined$1});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);}/**
		         * Executes the chain sequence to resolve the unwrapped value.
		         *
		         * @name value
		         * @memberOf _
		         * @since 0.1.0
		         * @alias toJSON, valueOf
		         * @category Seq
		         * @returns {*} Returns the resolved unwrapped value.
		         * @example
		         *
		         * _([1, 2, 3]).value();
		         * // => [1, 2, 3]
		         */function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);}/* ------------------------------------------------------------------------*//**
		         * Creates an object composed of keys generated from the results of running
		         * each element of `collection` thru `iteratee`. The corresponding value of
		         * each key is the number of times the key was returned by `iteratee`. The
		         * iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.5.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		         * @returns {Object} Returns the composed aggregate object.
		         * @example
		         *
		         * _.countBy([6.1, 4.2, 6.3], Math.floor);
		         * // => { '4': 1, '6': 2 }
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.countBy(['one', 'two', 'three'], 'length');
		         * // => { '3': 2, '5': 1 }
		         */var countBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){++result[key];}else {baseAssignValue(result,key,1);}});/**
		       * Checks if `predicate` returns truthy for **all** elements of `collection`.
		       * Iteration is stopped once `predicate` returns falsey. The predicate is
		       * invoked with three arguments: (value, index|key, collection).
		       *
		       * **Note:** This method returns `true` for
		       * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
		       * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
		       * elements of empty collections.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Collection
		       * @param {Array|Object} collection The collection to iterate over.
		       * @param {Function} [predicate=_.identity] The function invoked per iteration.
		       * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		       * @returns {boolean} Returns `true` if all elements pass the predicate check,
		       *  else `false`.
		       * @example
		       *
		       * _.every([true, 1, null, 'yes'], Boolean);
		       * // => false
		       *
		       * var users = [
		       *   { 'user': 'barney', 'age': 36, 'active': false },
		       *   { 'user': 'fred',   'age': 40, 'active': false }
		       * ];
		       *
		       * // The `_.matches` iteratee shorthand.
		       * _.every(users, { 'user': 'barney', 'active': false });
		       * // => false
		       *
		       * // The `_.matchesProperty` iteratee shorthand.
		       * _.every(users, ['active', false]);
		       * // => true
		       *
		       * // The `_.property` iteratee shorthand.
		       * _.every(users, 'active');
		       * // => false
		       */function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}/**
		         * Iterates over elements of `collection`, returning an array of all elements
		         * `predicate` returns truthy for. The predicate is invoked with three
		         * arguments: (value, index|key, collection).
		         *
		         * **Note:** Unlike `_.remove`, this method returns a new array.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the new filtered array.
		         * @see _.reject
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney', 'age': 36, 'active': true },
		         *   { 'user': 'fred',   'age': 40, 'active': false }
		         * ];
		         *
		         * _.filter(users, function(o) { return !o.active; });
		         * // => objects for ['fred']
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.filter(users, { 'age': 36, 'active': true });
		         * // => objects for ['barney']
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.filter(users, ['active', false]);
		         * // => objects for ['fred']
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.filter(users, 'active');
		         * // => objects for ['barney']
		         */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));}/**
		         * Iterates over elements of `collection`, returning the first element
		         * `predicate` returns truthy for. The predicate is invoked with three
		         * arguments: (value, index|key, collection).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to inspect.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @param {number} [fromIndex=0] The index to search from.
		         * @returns {*} Returns the matched element, else `undefined`.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'age': 36, 'active': true },
		         *   { 'user': 'fred',    'age': 40, 'active': false },
		         *   { 'user': 'pebbles', 'age': 1,  'active': true }
		         * ];
		         *
		         * _.find(users, function(o) { return o.age < 40; });
		         * // => object for 'barney'
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.find(users, { 'age': 1, 'active': true });
		         * // => object for 'pebbles'
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.find(users, ['active', false]);
		         * // => object for 'fred'
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.find(users, 'active');
		         * // => object for 'barney'
		         */var find=createFind(findIndex);/**
		         * This method is like `_.find` except that it iterates over elements of
		         * `collection` from right to left.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to inspect.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @param {number} [fromIndex=collection.length-1] The index to search from.
		         * @returns {*} Returns the matched element, else `undefined`.
		         * @example
		         *
		         * _.findLast([1, 2, 3, 4], function(n) {
		         *   return n % 2 == 1;
		         * });
		         * // => 3
		         */var findLast=createFind(findLastIndex);/**
		         * Creates a flattened array of values by running each element in `collection`
		         * thru `iteratee` and flattening the mapped results. The iteratee is invoked
		         * with three arguments: (value, index|key, collection).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the new flattened array.
		         * @example
		         *
		         * function duplicate(n) {
		         *   return [n, n];
		         * }
		         *
		         * _.flatMap([1, 2], duplicate);
		         * // => [1, 1, 2, 2]
		         */function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);}/**
		         * This method is like `_.flatMap` except that it recursively flattens the
		         * mapped results.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.7.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the new flattened array.
		         * @example
		         *
		         * function duplicate(n) {
		         *   return [[[n, n]]];
		         * }
		         *
		         * _.flatMapDeep([1, 2], duplicate);
		         * // => [1, 1, 2, 2]
		         */function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);}/**
		         * This method is like `_.flatMap` except that it recursively flattens the
		         * mapped results up to `depth` times.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.7.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @param {number} [depth=1] The maximum recursion depth.
		         * @returns {Array} Returns the new flattened array.
		         * @example
		         *
		         * function duplicate(n) {
		         *   return [[[n, n]]];
		         * }
		         *
		         * _.flatMapDepth([1, 2], duplicate, 2);
		         * // => [[1, 1], [2, 2]]
		         */function flatMapDepth(collection,iteratee,depth){depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);}/**
		         * Iterates over elements of `collection` and invokes `iteratee` for each element.
		         * The iteratee is invoked with three arguments: (value, index|key, collection).
		         * Iteratee functions may exit iteration early by explicitly returning `false`.
		         *
		         * **Note:** As with other "Collections" methods, objects with a "length"
		         * property are iterated like arrays. To avoid this behavior use `_.forIn`
		         * or `_.forOwn` for object iteration.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @alias each
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Array|Object} Returns `collection`.
		         * @see _.forEachRight
		         * @example
		         *
		         * _.forEach([1, 2], function(value) {
		         *   console.log(value);
		         * });
		         * // => Logs `1` then `2`.
		         *
		         * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
		         *   console.log(key);
		         * });
		         * // => Logs 'a' then 'b' (iteration order is not guaranteed).
		         */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));}/**
		         * This method is like `_.forEach` except that it iterates over elements of
		         * `collection` from right to left.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @alias eachRight
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Array|Object} Returns `collection`.
		         * @see _.forEach
		         * @example
		         *
		         * _.forEachRight([1, 2], function(value) {
		         *   console.log(value);
		         * });
		         * // => Logs `2` then `1`.
		         */function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));}/**
		         * Creates an object composed of keys generated from the results of running
		         * each element of `collection` thru `iteratee`. The order of grouped values
		         * is determined by the order they occur in `collection`. The corresponding
		         * value of each key is an array of elements responsible for generating the
		         * key. The iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		         * @returns {Object} Returns the composed aggregate object.
		         * @example
		         *
		         * _.groupBy([6.1, 4.2, 6.3], Math.floor);
		         * // => { '4': [4.2], '6': [6.1, 6.3] }
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.groupBy(['one', 'two', 'three'], 'length');
		         * // => { '3': ['one', 'two'], '5': ['three'] }
		         */var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else {baseAssignValue(result,key,[value]);}});/**
		       * Checks if `value` is in `collection`. If `collection` is a string, it's
		       * checked for a substring of `value`, otherwise
		       * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		       * is used for equality comparisons. If `fromIndex` is negative, it's used as
		       * the offset from the end of `collection`.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Collection
		       * @param {Array|Object|string} collection The collection to inspect.
		       * @param {*} value The value to search for.
		       * @param {number} [fromIndex=0] The index to search from.
		       * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
		       * @returns {boolean} Returns `true` if `value` is found, else `false`.
		       * @example
		       *
		       * _.includes([1, 2, 3], 1);
		       * // => true
		       *
		       * _.includes([1, 2, 3], 1, 2);
		       * // => false
		       *
		       * _.includes({ 'a': 1, 'b': 2 }, 1);
		       * // => true
		       *
		       * _.includes('abcd', 'bc');
		       * // => true
		       */function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;}/**
		         * Invokes the method at `path` of each element in `collection`, returning
		         * an array of the results of each invoked method. Any additional arguments
		         * are provided to each invoked method. If `path` is a function, it's invoked
		         * for, and `this` bound to, each element in `collection`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Array|Function|string} path The path of the method to invoke or
		         *  the function invoked per iteration.
		         * @param {...*} [args] The arguments to invoke each method with.
		         * @returns {Array} Returns the array of results.
		         * @example
		         *
		         * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
		         * // => [[1, 5, 7], [1, 2, 3]]
		         *
		         * _.invokeMap([123, 456], String.prototype.split, '');
		         * // => [['1', '2', '3'], ['4', '5', '6']]
		         */var invokeMap=baseRest(function(collection,path,args){var index=-1,isFunc=typeof path==='function',result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){result[++index]=isFunc?apply(path,value,args):baseInvoke(value,path,args);});return result;});/**
		       * Creates an object composed of keys generated from the results of running
		       * each element of `collection` thru `iteratee`. The corresponding value of
		       * each key is the last element responsible for generating the key. The
		       * iteratee is invoked with one argument: (value).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Collection
		       * @param {Array|Object} collection The collection to iterate over.
		       * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		       * @returns {Object} Returns the composed aggregate object.
		       * @example
		       *
		       * var array = [
		       *   { 'dir': 'left', 'code': 97 },
		       *   { 'dir': 'right', 'code': 100 }
		       * ];
		       *
		       * _.keyBy(array, function(o) {
		       *   return String.fromCharCode(o.code);
		       * });
		       * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
		       *
		       * _.keyBy(array, 'dir');
		       * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
		       */var keyBy=createAggregator(function(result,value,key){baseAssignValue(result,key,value);});/**
		       * Creates an array of values by running each element in `collection` thru
		       * `iteratee`. The iteratee is invoked with three arguments:
		       * (value, index|key, collection).
		       *
		       * Many lodash methods are guarded to work as iteratees for methods like
		       * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
		       *
		       * The guarded methods are:
		       * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
		       * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
		       * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
		       * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Collection
		       * @param {Array|Object} collection The collection to iterate over.
		       * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		       * @returns {Array} Returns the new mapped array.
		       * @example
		       *
		       * function square(n) {
		       *   return n * n;
		       * }
		       *
		       * _.map([4, 8], square);
		       * // => [16, 64]
		       *
		       * _.map({ 'a': 4, 'b': 8 }, square);
		       * // => [16, 64] (iteration order is not guaranteed)
		       *
		       * var users = [
		       *   { 'user': 'barney' },
		       *   { 'user': 'fred' }
		       * ];
		       *
		       * // The `_.property` iteratee shorthand.
		       * _.map(users, 'user');
		       * // => ['barney', 'fred']
		       */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));}/**
		         * This method is like `_.sortBy` except that it allows specifying the sort
		         * orders of the iteratees to sort by. If `orders` is unspecified, all values
		         * are sorted in ascending order. Otherwise, specify an order of "desc" for
		         * descending or "asc" for ascending sort order of corresponding values.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
		         *  The iteratees to sort by.
		         * @param {string[]} [orders] The sort orders of `iteratees`.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
		         * @returns {Array} Returns the new sorted array.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'fred',   'age': 48 },
		         *   { 'user': 'barney', 'age': 34 },
		         *   { 'user': 'fred',   'age': 40 },
		         *   { 'user': 'barney', 'age': 36 }
		         * ];
		         *
		         * // Sort by `user` in ascending order and by `age` in descending order.
		         * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
		         * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
		         */function orderBy(collection,iteratees,orders,guard){if(collection==null){return [];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined$1:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);}/**
		         * Creates an array of elements split into two groups, the first of which
		         * contains elements `predicate` returns truthy for, the second of which
		         * contains elements `predicate` returns falsey for. The predicate is
		         * invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the array of grouped elements.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney',  'age': 36, 'active': false },
		         *   { 'user': 'fred',    'age': 40, 'active': true },
		         *   { 'user': 'pebbles', 'age': 1,  'active': false }
		         * ];
		         *
		         * _.partition(users, function(o) { return o.active; });
		         * // => objects for [['fred'], ['barney', 'pebbles']]
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.partition(users, { 'age': 1, 'active': false });
		         * // => objects for [['pebbles'], ['barney', 'fred']]
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.partition(users, ['active', false]);
		         * // => objects for [['barney', 'pebbles'], ['fred']]
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.partition(users, 'active');
		         * // => objects for [['fred'], ['barney', 'pebbles']]
		         */var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return [[],[]];});/**
		       * Reduces `collection` to a value which is the accumulated result of running
		       * each element in `collection` thru `iteratee`, where each successive
		       * invocation is supplied the return value of the previous. If `accumulator`
		       * is not given, the first element of `collection` is used as the initial
		       * value. The iteratee is invoked with four arguments:
		       * (accumulator, value, index|key, collection).
		       *
		       * Many lodash methods are guarded to work as iteratees for methods like
		       * `_.reduce`, `_.reduceRight`, and `_.transform`.
		       *
		       * The guarded methods are:
		       * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
		       * and `sortBy`
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Collection
		       * @param {Array|Object} collection The collection to iterate over.
		       * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		       * @param {*} [accumulator] The initial value.
		       * @returns {*} Returns the accumulated value.
		       * @see _.reduceRight
		       * @example
		       *
		       * _.reduce([1, 2], function(sum, n) {
		       *   return sum + n;
		       * }, 0);
		       * // => 3
		       *
		       * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
		       *   (result[value] || (result[value] = [])).push(key);
		       *   return result;
		       * }, {});
		       * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
		       */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);}/**
		         * This method is like `_.reduce` except that it iterates over elements of
		         * `collection` from right to left.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @param {*} [accumulator] The initial value.
		         * @returns {*} Returns the accumulated value.
		         * @see _.reduce
		         * @example
		         *
		         * var array = [[0, 1], [2, 3], [4, 5]];
		         *
		         * _.reduceRight(array, function(flattened, other) {
		         *   return flattened.concat(other);
		         * }, []);
		         * // => [4, 5, 2, 3, 0, 1]
		         */function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);}/**
		         * The opposite of `_.filter`; this method returns the elements of `collection`
		         * that `predicate` does **not** return truthy for.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the new filtered array.
		         * @see _.filter
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney', 'age': 36, 'active': false },
		         *   { 'user': 'fred',   'age': 40, 'active': true }
		         * ];
		         *
		         * _.reject(users, function(o) { return !o.active; });
		         * // => objects for ['fred']
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.reject(users, { 'age': 40, 'active': true });
		         * // => objects for ['barney']
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.reject(users, ['active', false]);
		         * // => objects for ['fred']
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.reject(users, 'active');
		         * // => objects for ['barney']
		         */function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,negate(getIteratee(predicate,3)));}/**
		         * Gets a random element from `collection`.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to sample.
		         * @returns {*} Returns the random element.
		         * @example
		         *
		         * _.sample([1, 2, 3, 4]);
		         * // => 2
		         */function sample(collection){var func=isArray(collection)?arraySample:baseSample;return func(collection);}/**
		         * Gets `n` random elements at unique keys from `collection` up to the
		         * size of `collection`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to sample.
		         * @param {number} [n=1] The number of elements to sample.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Array} Returns the random elements.
		         * @example
		         *
		         * _.sampleSize([1, 2, 3], 2);
		         * // => [3, 1]
		         *
		         * _.sampleSize([1, 2, 3], 4);
		         * // => [2, 3, 1]
		         */function sampleSize(collection,n,guard){if(guard?isIterateeCall(collection,n,guard):n===undefined$1){n=1;}else {n=toInteger(n);}var func=isArray(collection)?arraySampleSize:baseSampleSize;return func(collection,n);}/**
		         * Creates an array of shuffled values, using a version of the
		         * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to shuffle.
		         * @returns {Array} Returns the new shuffled array.
		         * @example
		         *
		         * _.shuffle([1, 2, 3, 4]);
		         * // => [4, 1, 3, 2]
		         */function shuffle(collection){var func=isArray(collection)?arrayShuffle:baseShuffle;return func(collection);}/**
		         * Gets the size of `collection` by returning its length for array-like
		         * values or the number of own enumerable string keyed properties for objects.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object|string} collection The collection to inspect.
		         * @returns {number} Returns the collection size.
		         * @example
		         *
		         * _.size([1, 2, 3]);
		         * // => 3
		         *
		         * _.size({ 'a': 1, 'b': 2 });
		         * // => 2
		         *
		         * _.size('pebbles');
		         * // => 7
		         */function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}return baseKeys(collection).length;}/**
		         * Checks if `predicate` returns truthy for **any** element of `collection`.
		         * Iteration is stopped once `predicate` returns truthy. The predicate is
		         * invoked with three arguments: (value, index|key, collection).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {boolean} Returns `true` if any element passes the predicate check,
		         *  else `false`.
		         * @example
		         *
		         * _.some([null, 0, 'yes', false], Boolean);
		         * // => true
		         *
		         * var users = [
		         *   { 'user': 'barney', 'active': true },
		         *   { 'user': 'fred',   'active': false }
		         * ];
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.some(users, { 'user': 'barney', 'active': false });
		         * // => false
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.some(users, ['active', false]);
		         * // => true
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.some(users, 'active');
		         * // => true
		         */function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}/**
		         * Creates an array of elements, sorted in ascending order by the results of
		         * running each element in a collection thru each iteratee. This method
		         * performs a stable sort, that is, it preserves the original sort order of
		         * equal elements. The iteratees are invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Collection
		         * @param {Array|Object} collection The collection to iterate over.
		         * @param {...(Function|Function[])} [iteratees=[_.identity]]
		         *  The iteratees to sort by.
		         * @returns {Array} Returns the new sorted array.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'fred',   'age': 48 },
		         *   { 'user': 'barney', 'age': 36 },
		         *   { 'user': 'fred',   'age': 40 },
		         *   { 'user': 'barney', 'age': 34 }
		         * ];
		         *
		         * _.sortBy(users, [function(o) { return o.user; }]);
		         * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
		         *
		         * _.sortBy(users, ['user', 'age']);
		         * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
		         */var sortBy=baseRest(function(collection,iteratees){if(collection==null){return [];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});/* ------------------------------------------------------------------------*//**
		       * Gets the timestamp of the number of milliseconds that have elapsed since
		       * the Unix epoch (1 January 1970 00:00:00 UTC).
		       *
		       * @static
		       * @memberOf _
		       * @since 2.4.0
		       * @category Date
		       * @returns {number} Returns the timestamp.
		       * @example
		       *
		       * _.defer(function(stamp) {
		       *   console.log(_.now() - stamp);
		       * }, _.now());
		       * // => Logs the number of milliseconds it took for the deferred invocation.
		       */var now=ctxNow||function(){return root.Date.now();};/* ------------------------------------------------------------------------*//**
		       * The opposite of `_.before`; this method creates a function that invokes
		       * `func` once it's called `n` or more times.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Function
		       * @param {number} n The number of calls before `func` is invoked.
		       * @param {Function} func The function to restrict.
		       * @returns {Function} Returns the new restricted function.
		       * @example
		       *
		       * var saves = ['profile', 'settings'];
		       *
		       * var done = _.after(saves.length, function() {
		       *   console.log('done saving!');
		       * });
		       *
		       * _.forEach(saves, function(type) {
		       *   asyncSave({ 'type': type, 'complete': done });
		       * });
		       * // => Logs 'done saving!' after the two async saves have completed.
		       */function after(n,func){if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};}/**
		         * Creates a function that invokes `func`, with up to `n` arguments,
		         * ignoring any additional arguments.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Function
		         * @param {Function} func The function to cap arguments for.
		         * @param {number} [n=func.length] The arity cap.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Function} Returns the new capped function.
		         * @example
		         *
		         * _.map(['6', '8', '10'], _.ary(parseInt, 1));
		         * // => [6, 8, 10]
		         */function ary(func,n,guard){n=guard?undefined$1:n;n=func&&n==null?func.length:n;return createWrap(func,WRAP_ARY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,n);}/**
		         * Creates a function that invokes `func`, with the `this` binding and arguments
		         * of the created function, while it's called less than `n` times. Subsequent
		         * calls to the created function return the result of the last `func` invocation.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Function
		         * @param {number} n The number of calls at which `func` is no longer invoked.
		         * @param {Function} func The function to restrict.
		         * @returns {Function} Returns the new restricted function.
		         * @example
		         *
		         * jQuery(element).on('click', _.before(5, addContactToList));
		         * // => Allows adding up to 4 contacts to the list.
		         */function before(n,func){var result;if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined$1;}return result;};}/**
		         * Creates a function that invokes `func` with the `this` binding of `thisArg`
		         * and `partials` prepended to the arguments it receives.
		         *
		         * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
		         * may be used as a placeholder for partially applied arguments.
		         *
		         * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
		         * property of bound functions.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Function
		         * @param {Function} func The function to bind.
		         * @param {*} thisArg The `this` binding of `func`.
		         * @param {...*} [partials] The arguments to be partially applied.
		         * @returns {Function} Returns the new bound function.
		         * @example
		         *
		         * function greet(greeting, punctuation) {
		         *   return greeting + ' ' + this.user + punctuation;
		         * }
		         *
		         * var object = { 'user': 'fred' };
		         *
		         * var bound = _.bind(greet, object, 'hi');
		         * bound('!');
		         * // => 'hi fred!'
		         *
		         * // Bound with placeholders.
		         * var bound = _.bind(greet, object, _, '!');
		         * bound('hi');
		         * // => 'hi fred!'
		         */var bind=baseRest(function(func,thisArg,partials){var bitmask=WRAP_BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(func,bitmask,thisArg,partials,holders);});/**
		       * Creates a function that invokes the method at `object[key]` with `partials`
		       * prepended to the arguments it receives.
		       *
		       * This method differs from `_.bind` by allowing bound functions to reference
		       * methods that may be redefined or don't yet exist. See
		       * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
		       * for more details.
		       *
		       * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
		       * builds, may be used as a placeholder for partially applied arguments.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.10.0
		       * @category Function
		       * @param {Object} object The object to invoke the method on.
		       * @param {string} key The key of the method.
		       * @param {...*} [partials] The arguments to be partially applied.
		       * @returns {Function} Returns the new bound function.
		       * @example
		       *
		       * var object = {
		       *   'user': 'fred',
		       *   'greet': function(greeting, punctuation) {
		       *     return greeting + ' ' + this.user + punctuation;
		       *   }
		       * };
		       *
		       * var bound = _.bindKey(object, 'greet', 'hi');
		       * bound('!');
		       * // => 'hi fred!'
		       *
		       * object.greet = function(greeting, punctuation) {
		       *   return greeting + 'ya ' + this.user + punctuation;
		       * };
		       *
		       * bound('!');
		       * // => 'hiya fred!'
		       *
		       * // Bound with placeholders.
		       * var bound = _.bindKey(object, 'greet', _, '!');
		       * bound('hi');
		       * // => 'hiya fred!'
		       */var bindKey=baseRest(function(object,key,partials){var bitmask=WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(key,bitmask,object,partials,holders);});/**
		       * Creates a function that accepts arguments of `func` and either invokes
		       * `func` returning its result, if at least `arity` number of arguments have
		       * been provided, or returns a function that accepts the remaining `func`
		       * arguments, and so on. The arity of `func` may be specified if `func.length`
		       * is not sufficient.
		       *
		       * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
		       * may be used as a placeholder for provided arguments.
		       *
		       * **Note:** This method doesn't set the "length" property of curried functions.
		       *
		       * @static
		       * @memberOf _
		       * @since 2.0.0
		       * @category Function
		       * @param {Function} func The function to curry.
		       * @param {number} [arity=func.length] The arity of `func`.
		       * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		       * @returns {Function} Returns the new curried function.
		       * @example
		       *
		       * var abc = function(a, b, c) {
		       *   return [a, b, c];
		       * };
		       *
		       * var curried = _.curry(abc);
		       *
		       * curried(1)(2)(3);
		       * // => [1, 2, 3]
		       *
		       * curried(1, 2)(3);
		       * // => [1, 2, 3]
		       *
		       * curried(1, 2, 3);
		       * // => [1, 2, 3]
		       *
		       * // Curried with placeholders.
		       * curried(1)(_, 3)(2);
		       * // => [1, 2, 3]
		       */function curry(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curry.placeholder;return result;}/**
		         * This method is like `_.curry` except that arguments are applied to `func`
		         * in the manner of `_.partialRight` instead of `_.partial`.
		         *
		         * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
		         * builds, may be used as a placeholder for provided arguments.
		         *
		         * **Note:** This method doesn't set the "length" property of curried functions.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Function
		         * @param {Function} func The function to curry.
		         * @param {number} [arity=func.length] The arity of `func`.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Function} Returns the new curried function.
		         * @example
		         *
		         * var abc = function(a, b, c) {
		         *   return [a, b, c];
		         * };
		         *
		         * var curried = _.curryRight(abc);
		         *
		         * curried(3)(2)(1);
		         * // => [1, 2, 3]
		         *
		         * curried(2, 3)(1);
		         * // => [1, 2, 3]
		         *
		         * curried(1, 2, 3);
		         * // => [1, 2, 3]
		         *
		         * // Curried with placeholders.
		         * curried(3)(1, _)(2);
		         * // => [1, 2, 3]
		         */function curryRight(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_RIGHT_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curryRight.placeholder;return result;}/**
		         * Creates a debounced function that delays invoking `func` until after `wait`
		         * milliseconds have elapsed since the last time the debounced function was
		         * invoked. The debounced function comes with a `cancel` method to cancel
		         * delayed `func` invocations and a `flush` method to immediately invoke them.
		         * Provide `options` to indicate whether `func` should be invoked on the
		         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
		         * with the last arguments provided to the debounced function. Subsequent
		         * calls to the debounced function return the result of the last `func`
		         * invocation.
		         *
		         * **Note:** If `leading` and `trailing` options are `true`, `func` is
		         * invoked on the trailing edge of the timeout only if the debounced function
		         * is invoked more than once during the `wait` timeout.
		         *
		         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		         *
		         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		         * for details over the differences between `_.debounce` and `_.throttle`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Function
		         * @param {Function} func The function to debounce.
		         * @param {number} [wait=0] The number of milliseconds to delay.
		         * @param {Object} [options={}] The options object.
		         * @param {boolean} [options.leading=false]
		         *  Specify invoking on the leading edge of the timeout.
		         * @param {number} [options.maxWait]
		         *  The maximum time `func` is allowed to be delayed before it's invoked.
		         * @param {boolean} [options.trailing=true]
		         *  Specify invoking on the trailing edge of the timeout.
		         * @returns {Function} Returns the new debounced function.
		         * @example
		         *
		         * // Avoid costly calculations while the window size is in flux.
		         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
		         *
		         * // Invoke `sendMail` when clicked, debouncing subsequent calls.
		         * jQuery(element).on('click', _.debounce(sendMail, 300, {
		         *   'leading': true,
		         *   'trailing': false
		         * }));
		         *
		         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
		         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
		         * var source = new EventSource('/stream');
		         * jQuery(source).on('message', debounced);
		         *
		         * // Cancel the trailing debounced invocation.
		         * jQuery(window).on('popstate', debounced.cancel);
		         */function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait'in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing'in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined$1;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){// Reset any `maxWait` timer.
		lastInvokeTime=time;// Start the timer for the trailing edge.
		timerId=setTimeout(timerExpired,wait);// Invoke the leading edge.
		return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;// Either this is the first call, activity has stopped and we're at the
		// trailing edge, the system time has gone backwards and we're treating
		// it as the trailing edge, or we've hit the `maxWait` limit.
		return lastCallTime===undefined$1||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);}// Restart the timer.
		timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){timerId=undefined$1;// Only invoke if we have `lastArgs` which means `func` has been
		// debounced at least once.
		if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined$1;return result;}function cancel(){if(timerId!==undefined$1){clearTimeout(timerId);}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined$1;}function flush(){return timerId===undefined$1?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined$1){return leadingEdge(lastCallTime);}if(maxing){// Handle invocations in a tight loop.
		timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined$1){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;}/**
		         * Defers invoking the `func` until the current call stack has cleared. Any
		         * additional arguments are provided to `func` when it's invoked.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Function
		         * @param {Function} func The function to defer.
		         * @param {...*} [args] The arguments to invoke `func` with.
		         * @returns {number} Returns the timer id.
		         * @example
		         *
		         * _.defer(function(text) {
		         *   console.log(text);
		         * }, 'deferred');
		         * // => Logs 'deferred' after one millisecond.
		         */var defer=baseRest(function(func,args){return baseDelay(func,1,args);});/**
		       * Invokes `func` after `wait` milliseconds. Any additional arguments are
		       * provided to `func` when it's invoked.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Function
		       * @param {Function} func The function to delay.
		       * @param {number} wait The number of milliseconds to delay invocation.
		       * @param {...*} [args] The arguments to invoke `func` with.
		       * @returns {number} Returns the timer id.
		       * @example
		       *
		       * _.delay(function(text) {
		       *   console.log(text);
		       * }, 1000, 'later');
		       * // => Logs 'later' after one second.
		       */var delay=baseRest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);});/**
		       * Creates a function that invokes `func` with arguments reversed.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Function
		       * @param {Function} func The function to flip arguments for.
		       * @returns {Function} Returns the new flipped function.
		       * @example
		       *
		       * var flipped = _.flip(function() {
		       *   return _.toArray(arguments);
		       * });
		       *
		       * flipped('a', 'b', 'c', 'd');
		       * // => ['d', 'c', 'b', 'a']
		       */function flip(func){return createWrap(func,WRAP_FLIP_FLAG);}/**
		         * Creates a function that memoizes the result of `func`. If `resolver` is
		         * provided, it determines the cache key for storing the result based on the
		         * arguments provided to the memoized function. By default, the first argument
		         * provided to the memoized function is used as the map cache key. The `func`
		         * is invoked with the `this` binding of the memoized function.
		         *
		         * **Note:** The cache is exposed as the `cache` property on the memoized
		         * function. Its creation may be customized by replacing the `_.memoize.Cache`
		         * constructor with one whose instances implement the
		         * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
		         * method interface of `clear`, `delete`, `get`, `has`, and `set`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Function
		         * @param {Function} func The function to have its output memoized.
		         * @param {Function} [resolver] The function to resolve the cache key.
		         * @returns {Function} Returns the new memoized function.
		         * @example
		         *
		         * var object = { 'a': 1, 'b': 2 };
		         * var other = { 'c': 3, 'd': 4 };
		         *
		         * var values = _.memoize(_.values);
		         * values(object);
		         * // => [1, 2]
		         *
		         * values(other);
		         * // => [3, 4]
		         *
		         * object.a = 2;
		         * values(object);
		         * // => [1, 2]
		         *
		         * // Modify the result cache.
		         * values.cache.set(object, ['a', 'b']);
		         * values(object);
		         * // => ['a', 'b']
		         *
		         * // Replace `_.memoize.Cache`.
		         * _.memoize.Cache = WeakMap;
		         */function memoize(func,resolver){if(typeof func!=='function'||resolver!=null&&typeof resolver!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Expose `MapCache`.
		memoize.Cache=MapCache;/**
		         * Creates a function that negates the result of the predicate `func`. The
		         * `func` predicate is invoked with the `this` binding and arguments of the
		         * created function.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Function
		         * @param {Function} predicate The predicate to negate.
		         * @returns {Function} Returns the new negated function.
		         * @example
		         *
		         * function isEven(n) {
		         *   return n % 2 == 0;
		         * }
		         *
		         * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
		         * // => [1, 3, 5]
		         */function negate(predicate){if(typeof predicate!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){var args=arguments;switch(args.length){case 0:return !predicate.call(this);case 1:return !predicate.call(this,args[0]);case 2:return !predicate.call(this,args[0],args[1]);case 3:return !predicate.call(this,args[0],args[1],args[2]);}return !predicate.apply(this,args);};}/**
		         * Creates a function that is restricted to invoking `func` once. Repeat calls
		         * to the function return the value of the first invocation. The `func` is
		         * invoked with the `this` binding and arguments of the created function.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Function
		         * @param {Function} func The function to restrict.
		         * @returns {Function} Returns the new restricted function.
		         * @example
		         *
		         * var initialize = _.once(createApplication);
		         * initialize();
		         * initialize();
		         * // => `createApplication` is invoked once
		         */function once(func){return before(2,func);}/**
		         * Creates a function that invokes `func` with its arguments transformed.
		         *
		         * @static
		         * @since 4.0.0
		         * @memberOf _
		         * @category Function
		         * @param {Function} func The function to wrap.
		         * @param {...(Function|Function[])} [transforms=[_.identity]]
		         *  The argument transforms.
		         * @returns {Function} Returns the new function.
		         * @example
		         *
		         * function doubled(n) {
		         *   return n * 2;
		         * }
		         *
		         * function square(n) {
		         *   return n * n;
		         * }
		         *
		         * var func = _.overArgs(function(x, y) {
		         *   return [x, y];
		         * }, [square, doubled]);
		         *
		         * func(9, 3);
		         * // => [81, 6]
		         *
		         * func(10, 5);
		         * // => [100, 10]
		         */var overArgs=castRest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1),baseUnary(getIteratee()));var funcsLength=transforms.length;return baseRest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});});/**
		       * Creates a function that invokes `func` with `partials` prepended to the
		       * arguments it receives. This method is like `_.bind` except it does **not**
		       * alter the `this` binding.
		       *
		       * The `_.partial.placeholder` value, which defaults to `_` in monolithic
		       * builds, may be used as a placeholder for partially applied arguments.
		       *
		       * **Note:** This method doesn't set the "length" property of partially
		       * applied functions.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.2.0
		       * @category Function
		       * @param {Function} func The function to partially apply arguments to.
		       * @param {...*} [partials] The arguments to be partially applied.
		       * @returns {Function} Returns the new partially applied function.
		       * @example
		       *
		       * function greet(greeting, name) {
		       *   return greeting + ' ' + name;
		       * }
		       *
		       * var sayHelloTo = _.partial(greet, 'hello');
		       * sayHelloTo('fred');
		       * // => 'hello fred'
		       *
		       * // Partially applied with placeholders.
		       * var greetFred = _.partial(greet, _, 'fred');
		       * greetFred('hi');
		       * // => 'hi fred'
		       */var partial=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrap(func,WRAP_PARTIAL_FLAG,undefined$1,partials,holders);});/**
		       * This method is like `_.partial` except that partially applied arguments
		       * are appended to the arguments it receives.
		       *
		       * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
		       * builds, may be used as a placeholder for partially applied arguments.
		       *
		       * **Note:** This method doesn't set the "length" property of partially
		       * applied functions.
		       *
		       * @static
		       * @memberOf _
		       * @since 1.0.0
		       * @category Function
		       * @param {Function} func The function to partially apply arguments to.
		       * @param {...*} [partials] The arguments to be partially applied.
		       * @returns {Function} Returns the new partially applied function.
		       * @example
		       *
		       * function greet(greeting, name) {
		       *   return greeting + ' ' + name;
		       * }
		       *
		       * var greetFred = _.partialRight(greet, 'fred');
		       * greetFred('hi');
		       * // => 'hi fred'
		       *
		       * // Partially applied with placeholders.
		       * var sayHelloTo = _.partialRight(greet, 'hello', _);
		       * sayHelloTo('fred');
		       * // => 'hello fred'
		       */var partialRight=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrap(func,WRAP_PARTIAL_RIGHT_FLAG,undefined$1,partials,holders);});/**
		       * Creates a function that invokes `func` with arguments arranged according
		       * to the specified `indexes` where the argument value at the first index is
		       * provided as the first argument, the argument value at the second index is
		       * provided as the second argument, and so on.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.0.0
		       * @category Function
		       * @param {Function} func The function to rearrange arguments for.
		       * @param {...(number|number[])} indexes The arranged argument indexes.
		       * @returns {Function} Returns the new function.
		       * @example
		       *
		       * var rearged = _.rearg(function(a, b, c) {
		       *   return [a, b, c];
		       * }, [2, 0, 1]);
		       *
		       * rearged('b', 'c', 'a')
		       * // => ['a', 'b', 'c']
		       */var rearg=flatRest(function(func,indexes){return createWrap(func,WRAP_REARG_FLAG,undefined$1,undefined$1,undefined$1,indexes);});/**
		       * Creates a function that invokes `func` with the `this` binding of the
		       * created function and arguments from `start` and beyond provided as
		       * an array.
		       *
		       * **Note:** This method is based on the
		       * [rest parameter](https://mdn.io/rest_parameters).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Function
		       * @param {Function} func The function to apply a rest parameter to.
		       * @param {number} [start=func.length-1] The start position of the rest parameter.
		       * @returns {Function} Returns the new function.
		       * @example
		       *
		       * var say = _.rest(function(what, names) {
		       *   return what + ' ' + _.initial(names).join(', ') +
		       *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
		       * });
		       *
		       * say('hello', 'fred', 'barney', 'pebbles');
		       * // => 'hello fred, barney, & pebbles'
		       */function rest(func,start){if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined$1?start:toInteger(start);return baseRest(func,start);}/**
		         * Creates a function that invokes `func` with the `this` binding of the
		         * create function and an array of arguments much like
		         * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
		         *
		         * **Note:** This method is based on the
		         * [spread operator](https://mdn.io/spread_operator).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.2.0
		         * @category Function
		         * @param {Function} func The function to spread arguments over.
		         * @param {number} [start=0] The start position of the spread.
		         * @returns {Function} Returns the new function.
		         * @example
		         *
		         * var say = _.spread(function(who, what) {
		         *   return who + ' says ' + what;
		         * });
		         *
		         * say(['fred', 'hello']);
		         * // => 'fred says hello'
		         *
		         * var numbers = Promise.all([
		         *   Promise.resolve(40),
		         *   Promise.resolve(36)
		         * ]);
		         *
		         * numbers.then(_.spread(function(x, y) {
		         *   return x + y;
		         * }));
		         * // => a Promise of 76
		         */function spread(func,start){if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start==null?0:nativeMax(toInteger(start),0);return baseRest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});}/**
		         * Creates a throttled function that only invokes `func` at most once per
		         * every `wait` milliseconds. The throttled function comes with a `cancel`
		         * method to cancel delayed `func` invocations and a `flush` method to
		         * immediately invoke them. Provide `options` to indicate whether `func`
		         * should be invoked on the leading and/or trailing edge of the `wait`
		         * timeout. The `func` is invoked with the last arguments provided to the
		         * throttled function. Subsequent calls to the throttled function return the
		         * result of the last `func` invocation.
		         *
		         * **Note:** If `leading` and `trailing` options are `true`, `func` is
		         * invoked on the trailing edge of the timeout only if the throttled function
		         * is invoked more than once during the `wait` timeout.
		         *
		         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		         *
		         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		         * for details over the differences between `_.throttle` and `_.debounce`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Function
		         * @param {Function} func The function to throttle.
		         * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
		         * @param {Object} [options={}] The options object.
		         * @param {boolean} [options.leading=true]
		         *  Specify invoking on the leading edge of the timeout.
		         * @param {boolean} [options.trailing=true]
		         *  Specify invoking on the trailing edge of the timeout.
		         * @returns {Function} Returns the new throttled function.
		         * @example
		         *
		         * // Avoid excessively updating the position while scrolling.
		         * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
		         *
		         * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
		         * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
		         * jQuery(element).on('click', throttled);
		         *
		         * // Cancel the trailing throttled invocation.
		         * jQuery(window).on('popstate', throttled.cancel);
		         */function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading'in options?!!options.leading:leading;trailing='trailing'in options?!!options.trailing:trailing;}return debounce(func,wait,{leading:leading,maxWait:wait,trailing:trailing});}/**
		         * Creates a function that accepts up to one argument, ignoring any
		         * additional arguments.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Function
		         * @param {Function} func The function to cap arguments for.
		         * @returns {Function} Returns the new capped function.
		         * @example
		         *
		         * _.map(['6', '8', '10'], _.unary(parseInt));
		         * // => [6, 8, 10]
		         */function unary(func){return ary(func,1);}/**
		         * Creates a function that provides `value` to `wrapper` as its first
		         * argument. Any additional arguments provided to the function are appended
		         * to those provided to the `wrapper`. The wrapper is invoked with the `this`
		         * binding of the created function.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Function
		         * @param {*} value The value to wrap.
		         * @param {Function} [wrapper=identity] The wrapper function.
		         * @returns {Function} Returns the new function.
		         * @example
		         *
		         * var p = _.wrap(_.escape, function(func, text) {
		         *   return '<p>' + func(text) + '</p>';
		         * });
		         *
		         * p('fred, barney, & pebbles');
		         * // => '<p>fred, barney, &amp; pebbles</p>'
		         */function wrap(value,wrapper){return partial(castFunction(wrapper),value);}/* ------------------------------------------------------------------------*//**
		         * Casts `value` as an array if it's not one.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.4.0
		         * @category Lang
		         * @param {*} value The value to inspect.
		         * @returns {Array} Returns the cast array.
		         * @example
		         *
		         * _.castArray(1);
		         * // => [1]
		         *
		         * _.castArray({ 'a': 1 });
		         * // => [{ 'a': 1 }]
		         *
		         * _.castArray('abc');
		         * // => ['abc']
		         *
		         * _.castArray(null);
		         * // => [null]
		         *
		         * _.castArray(undefined);
		         * // => [undefined]
		         *
		         * _.castArray();
		         * // => []
		         *
		         * var array = [1, 2, 3];
		         * console.log(_.castArray(array) === array);
		         * // => true
		         */function castArray(){if(!arguments.length){return [];}var value=arguments[0];return isArray(value)?value:[value];}/**
		         * Creates a shallow clone of `value`.
		         *
		         * **Note:** This method is loosely based on the
		         * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
		         * and supports cloning arrays, array buffers, booleans, date objects, maps,
		         * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
		         * arrays. The own enumerable properties of `arguments` objects are cloned
		         * as plain objects. An empty object is returned for uncloneable values such
		         * as error objects, functions, DOM nodes, and WeakMaps.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to clone.
		         * @returns {*} Returns the cloned value.
		         * @see _.cloneDeep
		         * @example
		         *
		         * var objects = [{ 'a': 1 }, { 'b': 2 }];
		         *
		         * var shallow = _.clone(objects);
		         * console.log(shallow[0] === objects[0]);
		         * // => true
		         */function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG);}/**
		         * This method is like `_.clone` except that it accepts `customizer` which
		         * is invoked to produce the cloned value. If `customizer` returns `undefined`,
		         * cloning is handled by the method instead. The `customizer` is invoked with
		         * up to four arguments; (value [, index|key, object, stack]).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to clone.
		         * @param {Function} [customizer] The function to customize cloning.
		         * @returns {*} Returns the cloned value.
		         * @see _.cloneDeepWith
		         * @example
		         *
		         * function customizer(value) {
		         *   if (_.isElement(value)) {
		         *     return value.cloneNode(false);
		         *   }
		         * }
		         *
		         * var el = _.cloneWith(document.body, customizer);
		         *
		         * console.log(el === document.body);
		         * // => false
		         * console.log(el.nodeName);
		         * // => 'BODY'
		         * console.log(el.childNodes.length);
		         * // => 0
		         */function cloneWith(value,customizer){customizer=typeof customizer==='function'?customizer:undefined$1;return baseClone(value,CLONE_SYMBOLS_FLAG,customizer);}/**
		         * This method is like `_.clone` except that it recursively clones `value`.
		         *
		         * @static
		         * @memberOf _
		         * @since 1.0.0
		         * @category Lang
		         * @param {*} value The value to recursively clone.
		         * @returns {*} Returns the deep cloned value.
		         * @see _.clone
		         * @example
		         *
		         * var objects = [{ 'a': 1 }, { 'b': 2 }];
		         *
		         * var deep = _.cloneDeep(objects);
		         * console.log(deep[0] === objects[0]);
		         * // => false
		         */function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG);}/**
		         * This method is like `_.cloneWith` except that it recursively clones `value`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to recursively clone.
		         * @param {Function} [customizer] The function to customize cloning.
		         * @returns {*} Returns the deep cloned value.
		         * @see _.cloneWith
		         * @example
		         *
		         * function customizer(value) {
		         *   if (_.isElement(value)) {
		         *     return value.cloneNode(true);
		         *   }
		         * }
		         *
		         * var el = _.cloneDeepWith(document.body, customizer);
		         *
		         * console.log(el === document.body);
		         * // => false
		         * console.log(el.nodeName);
		         * // => 'BODY'
		         * console.log(el.childNodes.length);
		         * // => 20
		         */function cloneDeepWith(value,customizer){customizer=typeof customizer==='function'?customizer:undefined$1;return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG,customizer);}/**
		         * Checks if `object` conforms to `source` by invoking the predicate
		         * properties of `source` with the corresponding property values of `object`.
		         *
		         * **Note:** This method is equivalent to `_.conforms` when `source` is
		         * partially applied.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.14.0
		         * @category Lang
		         * @param {Object} object The object to inspect.
		         * @param {Object} source The object of property predicates to conform to.
		         * @returns {boolean} Returns `true` if `object` conforms, else `false`.
		         * @example
		         *
		         * var object = { 'a': 1, 'b': 2 };
		         *
		         * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
		         * // => true
		         *
		         * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
		         * // => false
		         */function conformsTo(object,source){return source==null||baseConformsTo(object,source,keys(source));}/**
		         * Performs a
		         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		         * comparison between two values to determine if they are equivalent.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		         * @example
		         *
		         * var object = { 'a': 1 };
		         * var other = { 'a': 1 };
		         *
		         * _.eq(object, object);
		         * // => true
		         *
		         * _.eq(object, other);
		         * // => false
		         *
		         * _.eq('a', 'a');
		         * // => true
		         *
		         * _.eq('a', Object('a'));
		         * // => false
		         *
		         * _.eq(NaN, NaN);
		         * // => true
		         */function eq(value,other){return value===other||value!==value&&other!==other;}/**
		         * Checks if `value` is greater than `other`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.9.0
		         * @category Lang
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if `value` is greater than `other`,
		         *  else `false`.
		         * @see _.lt
		         * @example
		         *
		         * _.gt(3, 1);
		         * // => true
		         *
		         * _.gt(3, 3);
		         * // => false
		         *
		         * _.gt(1, 3);
		         * // => false
		         */var gt=createRelationalOperation(baseGt);/**
		         * Checks if `value` is greater than or equal to `other`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.9.0
		         * @category Lang
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if `value` is greater than or equal to
		         *  `other`, else `false`.
		         * @see _.lte
		         * @example
		         *
		         * _.gte(3, 1);
		         * // => true
		         *
		         * _.gte(3, 3);
		         * // => true
		         *
		         * _.gte(1, 3);
		         * // => false
		         */var gte=createRelationalOperation(function(value,other){return value>=other;});/**
		       * Checks if `value` is likely an `arguments` object.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Lang
		       * @param {*} value The value to check.
		       * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		       *  else `false`.
		       * @example
		       *
		       * _.isArguments(function() { return arguments; }());
		       * // => true
		       *
		       * _.isArguments([1, 2, 3]);
		       * // => false
		       */var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};/**
		       * Checks if `value` is classified as an `Array` object.
		       *
		       * @static
		       * @memberOf _
		       * @since 0.1.0
		       * @category Lang
		       * @param {*} value The value to check.
		       * @returns {boolean} Returns `true` if `value` is an array, else `false`.
		       * @example
		       *
		       * _.isArray([1, 2, 3]);
		       * // => true
		       *
		       * _.isArray(document.body.children);
		       * // => false
		       *
		       * _.isArray('abc');
		       * // => false
		       *
		       * _.isArray(_.noop);
		       * // => false
		       */var isArray=Array.isArray;/**
		         * Checks if `value` is classified as an `ArrayBuffer` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.3.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
		         * @example
		         *
		         * _.isArrayBuffer(new ArrayBuffer(2));
		         * // => true
		         *
		         * _.isArrayBuffer(new Array(2));
		         * // => false
		         */var isArrayBuffer=nodeIsArrayBuffer?baseUnary(nodeIsArrayBuffer):baseIsArrayBuffer;/**
		       * Checks if `value` is array-like. A value is considered array-like if it's
		       * not a function and has a `value.length` that's an integer greater than or
		       * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Lang
		       * @param {*} value The value to check.
		       * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		       * @example
		       *
		       * _.isArrayLike([1, 2, 3]);
		       * // => true
		       *
		       * _.isArrayLike(document.body.children);
		       * // => true
		       *
		       * _.isArrayLike('abc');
		       * // => true
		       *
		       * _.isArrayLike(_.noop);
		       * // => false
		       */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}/**
		         * This method is like `_.isArrayLike` except that it also checks if `value`
		         * is an object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is an array-like object,
		         *  else `false`.
		         * @example
		         *
		         * _.isArrayLikeObject([1, 2, 3]);
		         * // => true
		         *
		         * _.isArrayLikeObject(document.body.children);
		         * // => true
		         *
		         * _.isArrayLikeObject('abc');
		         * // => false
		         *
		         * _.isArrayLikeObject(_.noop);
		         * // => false
		         */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}/**
		         * Checks if `value` is classified as a boolean primitive or object.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
		         * @example
		         *
		         * _.isBoolean(false);
		         * // => true
		         *
		         * _.isBoolean(null);
		         * // => false
		         */function isBoolean(value){return value===true||value===false||isObjectLike(value)&&baseGetTag(value)==boolTag;}/**
		         * Checks if `value` is a buffer.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.3.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
		         * @example
		         *
		         * _.isBuffer(new Buffer(2));
		         * // => true
		         *
		         * _.isBuffer(new Uint8Array(2));
		         * // => false
		         */var isBuffer=nativeIsBuffer||stubFalse;/**
		         * Checks if `value` is classified as a `Date` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
		         * @example
		         *
		         * _.isDate(new Date);
		         * // => true
		         *
		         * _.isDate('Mon April 23 2012');
		         * // => false
		         */var isDate=nodeIsDate?baseUnary(nodeIsDate):baseIsDate;/**
		         * Checks if `value` is likely a DOM element.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
		         * @example
		         *
		         * _.isElement(document.body);
		         * // => true
		         *
		         * _.isElement('<body>');
		         * // => false
		         */function isElement(value){return isObjectLike(value)&&value.nodeType===1&&!isPlainObject(value);}/**
		         * Checks if `value` is an empty object, collection, map, or set.
		         *
		         * Objects are considered empty if they have no own enumerable string keyed
		         * properties.
		         *
		         * Array-like values such as `arguments` objects, arrays, buffers, strings, or
		         * jQuery-like collections are considered empty if they have a `length` of `0`.
		         * Similarly, maps and sets are considered empty if they have a `size` of `0`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is empty, else `false`.
		         * @example
		         *
		         * _.isEmpty(null);
		         * // => true
		         *
		         * _.isEmpty(true);
		         * // => true
		         *
		         * _.isEmpty(1);
		         * // => true
		         *
		         * _.isEmpty([1, 2, 3]);
		         * // => false
		         *
		         * _.isEmpty({ 'a': 1 });
		         * // => false
		         */function isEmpty(value){if(value==null){return true;}if(isArrayLike(value)&&(isArray(value)||typeof value==='string'||typeof value.splice==='function'||isBuffer(value)||isTypedArray(value)||isArguments(value))){return !value.length;}var tag=getTag(value);if(tag==mapTag||tag==setTag){return !value.size;}if(isPrototype(value)){return !baseKeys(value).length;}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return true;}/**
		         * Performs a deep comparison between two values to determine if they are
		         * equivalent.
		         *
		         * **Note:** This method supports comparing arrays, array buffers, booleans,
		         * date objects, error objects, maps, numbers, `Object` objects, regexes,
		         * sets, strings, symbols, and typed arrays. `Object` objects are compared
		         * by their own, not inherited, enumerable properties. Functions and DOM
		         * nodes are compared by strict equality, i.e. `===`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		         * @example
		         *
		         * var object = { 'a': 1 };
		         * var other = { 'a': 1 };
		         *
		         * _.isEqual(object, other);
		         * // => true
		         *
		         * object === other;
		         * // => false
		         */function isEqual(value,other){return baseIsEqual(value,other);}/**
		         * This method is like `_.isEqual` except that it accepts `customizer` which
		         * is invoked to compare values. If `customizer` returns `undefined`, comparisons
		         * are handled by the method instead. The `customizer` is invoked with up to
		         * six arguments: (objValue, othValue [, index|key, object, other, stack]).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @param {Function} [customizer] The function to customize comparisons.
		         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		         * @example
		         *
		         * function isGreeting(value) {
		         *   return /^h(?:i|ello)$/.test(value);
		         * }
		         *
		         * function customizer(objValue, othValue) {
		         *   if (isGreeting(objValue) && isGreeting(othValue)) {
		         *     return true;
		         *   }
		         * }
		         *
		         * var array = ['hello', 'goodbye'];
		         * var other = ['hi', 'goodbye'];
		         *
		         * _.isEqualWith(array, other, customizer);
		         * // => true
		         */function isEqualWith(value,other,customizer){customizer=typeof customizer==='function'?customizer:undefined$1;var result=customizer?customizer(value,other):undefined$1;return result===undefined$1?baseIsEqual(value,other,undefined$1,customizer):!!result;}/**
		         * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
		         * `SyntaxError`, `TypeError`, or `URIError` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
		         * @example
		         *
		         * _.isError(new Error);
		         * // => true
		         *
		         * _.isError(Error);
		         * // => false
		         */function isError(value){if(!isObjectLike(value)){return false;}var tag=baseGetTag(value);return tag==errorTag||tag==domExcTag||typeof value.message==='string'&&typeof value.name==='string'&&!isPlainObject(value);}/**
		         * Checks if `value` is a finite primitive number.
		         *
		         * **Note:** This method is based on
		         * [`Number.isFinite`](https://mdn.io/Number/isFinite).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
		         * @example
		         *
		         * _.isFinite(3);
		         * // => true
		         *
		         * _.isFinite(Number.MIN_VALUE);
		         * // => true
		         *
		         * _.isFinite(Infinity);
		         * // => false
		         *
		         * _.isFinite('3');
		         * // => false
		         */function isFinite(value){return typeof value==='number'&&nativeIsFinite(value);}/**
		         * Checks if `value` is classified as a `Function` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a function, else `false`.
		         * @example
		         *
		         * _.isFunction(_);
		         * // => true
		         *
		         * _.isFunction(/abc/);
		         * // => false
		         */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator
		// in Safari 9 which returns 'object' for typed arrays and other constructors.
		var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}/**
		         * Checks if `value` is an integer.
		         *
		         * **Note:** This method is based on
		         * [`Number.isInteger`](https://mdn.io/Number/isInteger).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
		         * @example
		         *
		         * _.isInteger(3);
		         * // => true
		         *
		         * _.isInteger(Number.MIN_VALUE);
		         * // => false
		         *
		         * _.isInteger(Infinity);
		         * // => false
		         *
		         * _.isInteger('3');
		         * // => false
		         */function isInteger(value){return typeof value==='number'&&value==toInteger(value);}/**
		         * Checks if `value` is a valid array-like length.
		         *
		         * **Note:** This method is loosely based on
		         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		         * @example
		         *
		         * _.isLength(3);
		         * // => true
		         *
		         * _.isLength(Number.MIN_VALUE);
		         * // => false
		         *
		         * _.isLength(Infinity);
		         * // => false
		         *
		         * _.isLength('3');
		         * // => false
		         */function isLength(value){return typeof value==='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}/**
		         * Checks if `value` is the
		         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
		         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		         * @example
		         *
		         * _.isObject({});
		         * // => true
		         *
		         * _.isObject([1, 2, 3]);
		         * // => true
		         *
		         * _.isObject(_.noop);
		         * // => true
		         *
		         * _.isObject(null);
		         * // => false
		         */function isObject(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return value!=null&&(type=='object'||type=='function');}/**
		         * Checks if `value` is object-like. A value is object-like if it's not `null`
		         * and has a `typeof` result of "object".
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		         * @example
		         *
		         * _.isObjectLike({});
		         * // => true
		         *
		         * _.isObjectLike([1, 2, 3]);
		         * // => true
		         *
		         * _.isObjectLike(_.noop);
		         * // => false
		         *
		         * _.isObjectLike(null);
		         * // => false
		         */function isObjectLike(value){return value!=null&&(typeof value==='undefined'?'undefined':_typeof(value))==='object';}/**
		         * Checks if `value` is classified as a `Map` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.3.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a map, else `false`.
		         * @example
		         *
		         * _.isMap(new Map);
		         * // => true
		         *
		         * _.isMap(new WeakMap);
		         * // => false
		         */var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;/**
		         * Performs a partial deep comparison between `object` and `source` to
		         * determine if `object` contains equivalent property values.
		         *
		         * **Note:** This method is equivalent to `_.matches` when `source` is
		         * partially applied.
		         *
		         * Partial comparisons will match empty array and empty object `source`
		         * values against any array or object value, respectively. See `_.isEqual`
		         * for a list of supported value comparisons.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Lang
		         * @param {Object} object The object to inspect.
		         * @param {Object} source The object of property values to match.
		         * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		         * @example
		         *
		         * var object = { 'a': 1, 'b': 2 };
		         *
		         * _.isMatch(object, { 'b': 2 });
		         * // => true
		         *
		         * _.isMatch(object, { 'b': 1 });
		         * // => false
		         */function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));}/**
		         * This method is like `_.isMatch` except that it accepts `customizer` which
		         * is invoked to compare values. If `customizer` returns `undefined`, comparisons
		         * are handled by the method instead. The `customizer` is invoked with five
		         * arguments: (objValue, srcValue, index|key, object, source).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {Object} object The object to inspect.
		         * @param {Object} source The object of property values to match.
		         * @param {Function} [customizer] The function to customize comparisons.
		         * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		         * @example
		         *
		         * function isGreeting(value) {
		         *   return /^h(?:i|ello)$/.test(value);
		         * }
		         *
		         * function customizer(objValue, srcValue) {
		         *   if (isGreeting(objValue) && isGreeting(srcValue)) {
		         *     return true;
		         *   }
		         * }
		         *
		         * var object = { 'greeting': 'hello' };
		         * var source = { 'greeting': 'hi' };
		         *
		         * _.isMatchWith(object, source, customizer);
		         * // => true
		         */function isMatchWith(object,source,customizer){customizer=typeof customizer==='function'?customizer:undefined$1;return baseIsMatch(object,source,getMatchData(source),customizer);}/**
		         * Checks if `value` is `NaN`.
		         *
		         * **Note:** This method is based on
		         * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
		         * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
		         * `undefined` and other non-number values.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
		         * @example
		         *
		         * _.isNaN(NaN);
		         * // => true
		         *
		         * _.isNaN(new Number(NaN));
		         * // => true
		         *
		         * isNaN(undefined);
		         * // => true
		         *
		         * _.isNaN(undefined);
		         * // => false
		         */function isNaN(value){// An `NaN` primitive is the only value that is not equal to itself.
		// Perform the `toStringTag` check first to avoid errors with some
		// ActiveX objects in IE.
		return isNumber(value)&&value!=+value;}/**
		         * Checks if `value` is a pristine native function.
		         *
		         * **Note:** This method can't reliably detect native functions in the presence
		         * of the core-js package because core-js circumvents this kind of detection.
		         * Despite multiple requests, the core-js maintainer has made it clear: any
		         * attempt to fix the detection will be obstructed. As a result, we're left
		         * with little choice but to throw an error. Unfortunately, this also affects
		         * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
		         * which rely on core-js.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a native function,
		         *  else `false`.
		         * @example
		         *
		         * _.isNative(Array.prototype.push);
		         * // => true
		         *
		         * _.isNative(_);
		         * // => false
		         */function isNative(value){if(isMaskable(value)){throw new Error(CORE_ERROR_TEXT);}return baseIsNative(value);}/**
		         * Checks if `value` is `null`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
		         * @example
		         *
		         * _.isNull(null);
		         * // => true
		         *
		         * _.isNull(void 0);
		         * // => false
		         */function isNull(value){return value===null;}/**
		         * Checks if `value` is `null` or `undefined`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
		         * @example
		         *
		         * _.isNil(null);
		         * // => true
		         *
		         * _.isNil(void 0);
		         * // => true
		         *
		         * _.isNil(NaN);
		         * // => false
		         */function isNil(value){return value==null;}/**
		         * Checks if `value` is classified as a `Number` primitive or object.
		         *
		         * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
		         * classified as numbers, use the `_.isFinite` method.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a number, else `false`.
		         * @example
		         *
		         * _.isNumber(3);
		         * // => true
		         *
		         * _.isNumber(Number.MIN_VALUE);
		         * // => true
		         *
		         * _.isNumber(Infinity);
		         * // => true
		         *
		         * _.isNumber('3');
		         * // => false
		         */function isNumber(value){return typeof value==='number'||isObjectLike(value)&&baseGetTag(value)==numberTag;}/**
		         * Checks if `value` is a plain object, that is, an object created by the
		         * `Object` constructor or one with a `[[Prototype]]` of `null`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.8.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         * }
		         *
		         * _.isPlainObject(new Foo);
		         * // => false
		         *
		         * _.isPlainObject([1, 2, 3]);
		         * // => false
		         *
		         * _.isPlainObject({ 'x': 0, 'y': 0 });
		         * // => true
		         *
		         * _.isPlainObject(Object.create(null));
		         * // => true
		         */function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor==='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}/**
		         * Checks if `value` is classified as a `RegExp` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.1.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
		         * @example
		         *
		         * _.isRegExp(/abc/);
		         * // => true
		         *
		         * _.isRegExp('/abc/');
		         * // => false
		         */var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;/**
		         * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
		         * double precision number which isn't the result of a rounded unsafe integer.
		         *
		         * **Note:** This method is based on
		         * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
		         * @example
		         *
		         * _.isSafeInteger(3);
		         * // => true
		         *
		         * _.isSafeInteger(Number.MIN_VALUE);
		         * // => false
		         *
		         * _.isSafeInteger(Infinity);
		         * // => false
		         *
		         * _.isSafeInteger('3');
		         * // => false
		         */function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;}/**
		         * Checks if `value` is classified as a `Set` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.3.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a set, else `false`.
		         * @example
		         *
		         * _.isSet(new Set);
		         * // => true
		         *
		         * _.isSet(new WeakSet);
		         * // => false
		         */var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;/**
		         * Checks if `value` is classified as a `String` primitive or object.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a string, else `false`.
		         * @example
		         *
		         * _.isString('abc');
		         * // => true
		         *
		         * _.isString(1);
		         * // => false
		         */function isString(value){return typeof value==='string'||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag;}/**
		         * Checks if `value` is classified as a `Symbol` primitive or object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
		         * @example
		         *
		         * _.isSymbol(Symbol.iterator);
		         * // => true
		         *
		         * _.isSymbol('abc');
		         * // => false
		         */function isSymbol(value){return (typeof value==='undefined'?'undefined':_typeof(value))==='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}/**
		         * Checks if `value` is classified as a typed array.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		         * @example
		         *
		         * _.isTypedArray(new Uint8Array);
		         * // => true
		         *
		         * _.isTypedArray([]);
		         * // => false
		         */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/**
		       * Checks if `value` is `undefined`.
		       *
		       * @static
		       * @since 0.1.0
		       * @memberOf _
		       * @category Lang
		       * @param {*} value The value to check.
		       * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
		       * @example
		       *
		       * _.isUndefined(void 0);
		       * // => true
		       *
		       * _.isUndefined(null);
		       * // => false
		       */function isUndefined(value){return value===undefined$1;}/**
		         * Checks if `value` is classified as a `WeakMap` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.3.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
		         * @example
		         *
		         * _.isWeakMap(new WeakMap);
		         * // => true
		         *
		         * _.isWeakMap(new Map);
		         * // => false
		         */function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;}/**
		         * Checks if `value` is classified as a `WeakSet` object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.3.0
		         * @category Lang
		         * @param {*} value The value to check.
		         * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
		         * @example
		         *
		         * _.isWeakSet(new WeakSet);
		         * // => true
		         *
		         * _.isWeakSet(new Set);
		         * // => false
		         */function isWeakSet(value){return isObjectLike(value)&&baseGetTag(value)==weakSetTag;}/**
		         * Checks if `value` is less than `other`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.9.0
		         * @category Lang
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if `value` is less than `other`,
		         *  else `false`.
		         * @see _.gt
		         * @example
		         *
		         * _.lt(1, 3);
		         * // => true
		         *
		         * _.lt(3, 3);
		         * // => false
		         *
		         * _.lt(3, 1);
		         * // => false
		         */var lt=createRelationalOperation(baseLt);/**
		         * Checks if `value` is less than or equal to `other`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.9.0
		         * @category Lang
		         * @param {*} value The value to compare.
		         * @param {*} other The other value to compare.
		         * @returns {boolean} Returns `true` if `value` is less than or equal to
		         *  `other`, else `false`.
		         * @see _.gte
		         * @example
		         *
		         * _.lte(1, 3);
		         * // => true
		         *
		         * _.lte(3, 3);
		         * // => true
		         *
		         * _.lte(3, 1);
		         * // => false
		         */var lte=createRelationalOperation(function(value,other){return value<=other;});/**
		       * Converts `value` to an array.
		       *
		       * @static
		       * @since 0.1.0
		       * @memberOf _
		       * @category Lang
		       * @param {*} value The value to convert.
		       * @returns {Array} Returns the converted array.
		       * @example
		       *
		       * _.toArray({ 'a': 1, 'b': 2 });
		       * // => [1, 2]
		       *
		       * _.toArray('abc');
		       * // => ['a', 'b', 'c']
		       *
		       * _.toArray(1);
		       * // => []
		       *
		       * _.toArray(null);
		       * // => []
		       */function toArray(value){if(!value){return [];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(symIterator&&value[symIterator]){return iteratorToArray(value[symIterator]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);}/**
		         * Converts `value` to a finite number.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.12.0
		         * @category Lang
		         * @param {*} value The value to convert.
		         * @returns {number} Returns the converted number.
		         * @example
		         *
		         * _.toFinite(3.2);
		         * // => 3.2
		         *
		         * _.toFinite(Number.MIN_VALUE);
		         * // => 5e-324
		         *
		         * _.toFinite(Infinity);
		         * // => 1.7976931348623157e+308
		         *
		         * _.toFinite('3.2');
		         * // => 3.2
		         */function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}/**
		         * Converts `value` to an integer.
		         *
		         * **Note:** This method is loosely based on
		         * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to convert.
		         * @returns {number} Returns the converted integer.
		         * @example
		         *
		         * _.toInteger(3.2);
		         * // => 3
		         *
		         * _.toInteger(Number.MIN_VALUE);
		         * // => 0
		         *
		         * _.toInteger(Infinity);
		         * // => 1.7976931348623157e+308
		         *
		         * _.toInteger('3.2');
		         * // => 3
		         */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}/**
		         * Converts `value` to an integer suitable for use as the length of an
		         * array-like object.
		         *
		         * **Note:** This method is based on
		         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to convert.
		         * @returns {number} Returns the converted integer.
		         * @example
		         *
		         * _.toLength(3.2);
		         * // => 3
		         *
		         * _.toLength(Number.MIN_VALUE);
		         * // => 0
		         *
		         * _.toLength(Infinity);
		         * // => 4294967295
		         *
		         * _.toLength('3.2');
		         * // => 3
		         */function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;}/**
		         * Converts `value` to a number.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to process.
		         * @returns {number} Returns the number.
		         * @example
		         *
		         * _.toNumber(3.2);
		         * // => 3.2
		         *
		         * _.toNumber(Number.MIN_VALUE);
		         * // => 5e-324
		         *
		         * _.toNumber(Infinity);
		         * // => Infinity
		         *
		         * _.toNumber('3.2');
		         * // => 3.2
		         */function toNumber(value){if(typeof value==='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=typeof value.valueOf==='function'?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!=='string'){return value===0?value:+value;}value=value.replace(reTrim,'');var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}/**
		         * Converts `value` to a plain object flattening inherited enumerable string
		         * keyed properties of `value` to own properties of the plain object.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Lang
		         * @param {*} value The value to convert.
		         * @returns {Object} Returns the converted plain object.
		         * @example
		         *
		         * function Foo() {
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.assign({ 'a': 1 }, new Foo);
		         * // => { 'a': 1, 'b': 2 }
		         *
		         * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
		         * // => { 'a': 1, 'b': 2, 'c': 3 }
		         */function toPlainObject(value){return copyObject(value,keysIn(value));}/**
		         * Converts `value` to a safe integer. A safe integer can be compared and
		         * represented correctly.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to convert.
		         * @returns {number} Returns the converted integer.
		         * @example
		         *
		         * _.toSafeInteger(3.2);
		         * // => 3
		         *
		         * _.toSafeInteger(Number.MIN_VALUE);
		         * // => 0
		         *
		         * _.toSafeInteger(Infinity);
		         * // => 9007199254740991
		         *
		         * _.toSafeInteger('3.2');
		         * // => 3
		         */function toSafeInteger(value){return value?baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER):value===0?value:0;}/**
		         * Converts `value` to a string. An empty string is returned for `null`
		         * and `undefined` values. The sign of `-0` is preserved.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Lang
		         * @param {*} value The value to convert.
		         * @returns {string} Returns the converted string.
		         * @example
		         *
		         * _.toString(null);
		         * // => ''
		         *
		         * _.toString(-0);
		         * // => '-0'
		         *
		         * _.toString([1, 2, 3]);
		         * // => '1,2,3'
		         */function toString(value){return value==null?'':baseToString(value);}/* ------------------------------------------------------------------------*//**
		         * Assigns own enumerable string keyed properties of source objects to the
		         * destination object. Source objects are applied from left to right.
		         * Subsequent sources overwrite property assignments of previous sources.
		         *
		         * **Note:** This method mutates `object` and is loosely based on
		         * [`Object.assign`](https://mdn.io/Object/assign).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.10.0
		         * @category Object
		         * @param {Object} object The destination object.
		         * @param {...Object} [sources] The source objects.
		         * @returns {Object} Returns `object`.
		         * @see _.assignIn
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         * }
		         *
		         * function Bar() {
		         *   this.c = 3;
		         * }
		         *
		         * Foo.prototype.b = 2;
		         * Bar.prototype.d = 4;
		         *
		         * _.assign({ 'a': 0 }, new Foo, new Bar);
		         * // => { 'a': 1, 'c': 3 }
		         */var assign=createAssigner(function(object,source){if(isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}});/**
		       * This method is like `_.assign` except that it iterates over own and
		       * inherited source properties.
		       *
		       * **Note:** This method mutates `object`.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @alias extend
		       * @category Object
		       * @param {Object} object The destination object.
		       * @param {...Object} [sources] The source objects.
		       * @returns {Object} Returns `object`.
		       * @see _.assign
		       * @example
		       *
		       * function Foo() {
		       *   this.a = 1;
		       * }
		       *
		       * function Bar() {
		       *   this.c = 3;
		       * }
		       *
		       * Foo.prototype.b = 2;
		       * Bar.prototype.d = 4;
		       *
		       * _.assignIn({ 'a': 0 }, new Foo, new Bar);
		       * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
		       */var assignIn=createAssigner(function(object,source){copyObject(source,keysIn(source),object);});/**
		       * This method is like `_.assignIn` except that it accepts `customizer`
		       * which is invoked to produce the assigned values. If `customizer` returns
		       * `undefined`, assignment is handled by the method instead. The `customizer`
		       * is invoked with five arguments: (objValue, srcValue, key, object, source).
		       *
		       * **Note:** This method mutates `object`.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @alias extendWith
		       * @category Object
		       * @param {Object} object The destination object.
		       * @param {...Object} sources The source objects.
		       * @param {Function} [customizer] The function to customize assigned values.
		       * @returns {Object} Returns `object`.
		       * @see _.assignWith
		       * @example
		       *
		       * function customizer(objValue, srcValue) {
		       *   return _.isUndefined(objValue) ? srcValue : objValue;
		       * }
		       *
		       * var defaults = _.partialRight(_.assignInWith, customizer);
		       *
		       * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		       * // => { 'a': 1, 'b': 2 }
		       */var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);});/**
		       * This method is like `_.assign` except that it accepts `customizer`
		       * which is invoked to produce the assigned values. If `customizer` returns
		       * `undefined`, assignment is handled by the method instead. The `customizer`
		       * is invoked with five arguments: (objValue, srcValue, key, object, source).
		       *
		       * **Note:** This method mutates `object`.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Object
		       * @param {Object} object The destination object.
		       * @param {...Object} sources The source objects.
		       * @param {Function} [customizer] The function to customize assigned values.
		       * @returns {Object} Returns `object`.
		       * @see _.assignInWith
		       * @example
		       *
		       * function customizer(objValue, srcValue) {
		       *   return _.isUndefined(objValue) ? srcValue : objValue;
		       * }
		       *
		       * var defaults = _.partialRight(_.assignWith, customizer);
		       *
		       * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		       * // => { 'a': 1, 'b': 2 }
		       */var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);});/**
		       * Creates an array of values corresponding to `paths` of `object`.
		       *
		       * @static
		       * @memberOf _
		       * @since 1.0.0
		       * @category Object
		       * @param {Object} object The object to iterate over.
		       * @param {...(string|string[])} [paths] The property paths to pick.
		       * @returns {Array} Returns the picked values.
		       * @example
		       *
		       * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
		       *
		       * _.at(object, ['a[0].b.c', 'a[1]']);
		       * // => [3, 4]
		       */var at=flatRest(baseAt);/**
		         * Creates an object that inherits from the `prototype` object. If a
		         * `properties` object is given, its own enumerable string keyed properties
		         * are assigned to the created object.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.3.0
		         * @category Object
		         * @param {Object} prototype The object to inherit from.
		         * @param {Object} [properties] The properties to assign to the object.
		         * @returns {Object} Returns the new object.
		         * @example
		         *
		         * function Shape() {
		         *   this.x = 0;
		         *   this.y = 0;
		         * }
		         *
		         * function Circle() {
		         *   Shape.call(this);
		         * }
		         *
		         * Circle.prototype = _.create(Shape.prototype, {
		         *   'constructor': Circle
		         * });
		         *
		         * var circle = new Circle;
		         * circle instanceof Circle;
		         * // => true
		         *
		         * circle instanceof Shape;
		         * // => true
		         */function create(prototype,properties){var result=baseCreate(prototype);return properties==null?result:baseAssign(result,properties);}/**
		         * Assigns own and inherited enumerable string keyed properties of source
		         * objects to the destination object for all destination properties that
		         * resolve to `undefined`. Source objects are applied from left to right.
		         * Once a property is set, additional values of the same property are ignored.
		         *
		         * **Note:** This method mutates `object`.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Object
		         * @param {Object} object The destination object.
		         * @param {...Object} [sources] The source objects.
		         * @returns {Object} Returns `object`.
		         * @see _.defaultsDeep
		         * @example
		         *
		         * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		         * // => { 'a': 1, 'b': 2 }
		         */var defaults=baseRest(function(object,sources){object=Object(object);var index=-1;var length=sources.length;var guard=length>2?sources[2]:undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length=1;}while(++index<length){var source=sources[index];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=object[key];if(value===undefined$1||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key)){object[key]=source[key];}}}return object;});/**
		       * This method is like `_.defaults` except that it recursively assigns
		       * default properties.
		       *
		       * **Note:** This method mutates `object`.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.10.0
		       * @category Object
		       * @param {Object} object The destination object.
		       * @param {...Object} [sources] The source objects.
		       * @returns {Object} Returns `object`.
		       * @see _.defaults
		       * @example
		       *
		       * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
		       * // => { 'a': { 'b': 2, 'c': 3 } }
		       */var defaultsDeep=baseRest(function(args){args.push(undefined$1,customDefaultsMerge);return apply(mergeWith,undefined$1,args);});/**
		       * This method is like `_.find` except that it returns the key of the first
		       * element `predicate` returns truthy for instead of the element itself.
		       *
		       * @static
		       * @memberOf _
		       * @since 1.1.0
		       * @category Object
		       * @param {Object} object The object to inspect.
		       * @param {Function} [predicate=_.identity] The function invoked per iteration.
		       * @returns {string|undefined} Returns the key of the matched element,
		       *  else `undefined`.
		       * @example
		       *
		       * var users = {
		       *   'barney':  { 'age': 36, 'active': true },
		       *   'fred':    { 'age': 40, 'active': false },
		       *   'pebbles': { 'age': 1,  'active': true }
		       * };
		       *
		       * _.findKey(users, function(o) { return o.age < 40; });
		       * // => 'barney' (iteration order is not guaranteed)
		       *
		       * // The `_.matches` iteratee shorthand.
		       * _.findKey(users, { 'age': 1, 'active': true });
		       * // => 'pebbles'
		       *
		       * // The `_.matchesProperty` iteratee shorthand.
		       * _.findKey(users, ['active', false]);
		       * // => 'fred'
		       *
		       * // The `_.property` iteratee shorthand.
		       * _.findKey(users, 'active');
		       * // => 'barney'
		       */function findKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwn);}/**
		         * This method is like `_.findKey` except that it iterates over elements of
		         * a collection in the opposite order.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @category Object
		         * @param {Object} object The object to inspect.
		         * @param {Function} [predicate=_.identity] The function invoked per iteration.
		         * @returns {string|undefined} Returns the key of the matched element,
		         *  else `undefined`.
		         * @example
		         *
		         * var users = {
		         *   'barney':  { 'age': 36, 'active': true },
		         *   'fred':    { 'age': 40, 'active': false },
		         *   'pebbles': { 'age': 1,  'active': true }
		         * };
		         *
		         * _.findLastKey(users, function(o) { return o.age < 40; });
		         * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.findLastKey(users, { 'age': 36, 'active': true });
		         * // => 'barney'
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.findLastKey(users, ['active', false]);
		         * // => 'fred'
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.findLastKey(users, 'active');
		         * // => 'pebbles'
		         */function findLastKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwnRight);}/**
		         * Iterates over own and inherited enumerable string keyed properties of an
		         * object and invokes `iteratee` for each property. The iteratee is invoked
		         * with three arguments: (value, key, object). Iteratee functions may exit
		         * iteration early by explicitly returning `false`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.3.0
		         * @category Object
		         * @param {Object} object The object to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Object} Returns `object`.
		         * @see _.forInRight
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.forIn(new Foo, function(value, key) {
		         *   console.log(key);
		         * });
		         * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
		         */function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);}/**
		         * This method is like `_.forIn` except that it iterates over properties of
		         * `object` in the opposite order.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @category Object
		         * @param {Object} object The object to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Object} Returns `object`.
		         * @see _.forIn
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.forInRight(new Foo, function(value, key) {
		         *   console.log(key);
		         * });
		         * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
		         */function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);}/**
		         * Iterates over own enumerable string keyed properties of an object and
		         * invokes `iteratee` for each property. The iteratee is invoked with three
		         * arguments: (value, key, object). Iteratee functions may exit iteration
		         * early by explicitly returning `false`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.3.0
		         * @category Object
		         * @param {Object} object The object to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Object} Returns `object`.
		         * @see _.forOwnRight
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.forOwn(new Foo, function(value, key) {
		         *   console.log(key);
		         * });
		         * // => Logs 'a' then 'b' (iteration order is not guaranteed).
		         */function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));}/**
		         * This method is like `_.forOwn` except that it iterates over properties of
		         * `object` in the opposite order.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.0.0
		         * @category Object
		         * @param {Object} object The object to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Object} Returns `object`.
		         * @see _.forOwn
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.forOwnRight(new Foo, function(value, key) {
		         *   console.log(key);
		         * });
		         * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
		         */function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));}/**
		         * Creates an array of function property names from own enumerable properties
		         * of `object`.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Object
		         * @param {Object} object The object to inspect.
		         * @returns {Array} Returns the function names.
		         * @see _.functionsIn
		         * @example
		         *
		         * function Foo() {
		         *   this.a = _.constant('a');
		         *   this.b = _.constant('b');
		         * }
		         *
		         * Foo.prototype.c = _.constant('c');
		         *
		         * _.functions(new Foo);
		         * // => ['a', 'b']
		         */function functions(object){return object==null?[]:baseFunctions(object,keys(object));}/**
		         * Creates an array of function property names from own and inherited
		         * enumerable properties of `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Object
		         * @param {Object} object The object to inspect.
		         * @returns {Array} Returns the function names.
		         * @see _.functions
		         * @example
		         *
		         * function Foo() {
		         *   this.a = _.constant('a');
		         *   this.b = _.constant('b');
		         * }
		         *
		         * Foo.prototype.c = _.constant('c');
		         *
		         * _.functionsIn(new Foo);
		         * // => ['a', 'b', 'c']
		         */function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));}/**
		         * Gets the value at `path` of `object`. If the resolved value is
		         * `undefined`, the `defaultValue` is returned in its place.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.7.0
		         * @category Object
		         * @param {Object} object The object to query.
		         * @param {Array|string} path The path of the property to get.
		         * @param {*} [defaultValue] The value returned for `undefined` resolved values.
		         * @returns {*} Returns the resolved value.
		         * @example
		         *
		         * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		         *
		         * _.get(object, 'a[0].b.c');
		         * // => 3
		         *
		         * _.get(object, ['a', '0', 'b', 'c']);
		         * // => 3
		         *
		         * _.get(object, 'a.b.c', 'default');
		         * // => 'default'
		         */function get(object,path,defaultValue){var result=object==null?undefined$1:baseGet(object,path);return result===undefined$1?defaultValue:result;}/**
		         * Checks if `path` is a direct property of `object`.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Object
		         * @param {Object} object The object to query.
		         * @param {Array|string} path The path to check.
		         * @returns {boolean} Returns `true` if `path` exists, else `false`.
		         * @example
		         *
		         * var object = { 'a': { 'b': 2 } };
		         * var other = _.create({ 'a': _.create({ 'b': 2 }) });
		         *
		         * _.has(object, 'a');
		         * // => true
		         *
		         * _.has(object, 'a.b');
		         * // => true
		         *
		         * _.has(object, ['a', 'b']);
		         * // => true
		         *
		         * _.has(other, 'a');
		         * // => false
		         */function has(object,path){return object!=null&&hasPath(object,path,baseHas);}/**
		         * Checks if `path` is a direct or inherited property of `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Object
		         * @param {Object} object The object to query.
		         * @param {Array|string} path The path to check.
		         * @returns {boolean} Returns `true` if `path` exists, else `false`.
		         * @example
		         *
		         * var object = _.create({ 'a': _.create({ 'b': 2 }) });
		         *
		         * _.hasIn(object, 'a');
		         * // => true
		         *
		         * _.hasIn(object, 'a.b');
		         * // => true
		         *
		         * _.hasIn(object, ['a', 'b']);
		         * // => true
		         *
		         * _.hasIn(object, 'b');
		         * // => false
		         */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}/**
		         * Creates an object composed of the inverted keys and values of `object`.
		         * If `object` contains duplicate values, subsequent values overwrite
		         * property assignments of previous values.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.7.0
		         * @category Object
		         * @param {Object} object The object to invert.
		         * @returns {Object} Returns the new inverted object.
		         * @example
		         *
		         * var object = { 'a': 1, 'b': 2, 'c': 1 };
		         *
		         * _.invert(object);
		         * // => { '1': 'c', '2': 'b' }
		         */var invert=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!=='function'){value=nativeObjectToString.call(value);}result[value]=key;},constant(identity));/**
		       * This method is like `_.invert` except that the inverted object is generated
		       * from the results of running each element of `object` thru `iteratee`. The
		       * corresponding inverted value of each inverted key is an array of keys
		       * responsible for generating the inverted value. The iteratee is invoked
		       * with one argument: (value).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.1.0
		       * @category Object
		       * @param {Object} object The object to invert.
		       * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		       * @returns {Object} Returns the new inverted object.
		       * @example
		       *
		       * var object = { 'a': 1, 'b': 2, 'c': 1 };
		       *
		       * _.invertBy(object);
		       * // => { '1': ['a', 'c'], '2': ['b'] }
		       *
		       * _.invertBy(object, function(value) {
		       *   return 'group' + value;
		       * });
		       * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
		       */var invertBy=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!=='function'){value=nativeObjectToString.call(value);}if(hasOwnProperty.call(result,value)){result[value].push(key);}else {result[value]=[key];}},getIteratee);/**
		       * Invokes the method at `path` of `object`.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Object
		       * @param {Object} object The object to query.
		       * @param {Array|string} path The path of the method to invoke.
		       * @param {...*} [args] The arguments to invoke the method with.
		       * @returns {*} Returns the result of the invoked method.
		       * @example
		       *
		       * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
		       *
		       * _.invoke(object, 'a[0].b.c.slice', 1, 3);
		       * // => [2, 3]
		       */var invoke=baseRest(baseInvoke);/**
		         * Creates an array of the own enumerable property names of `object`.
		         *
		         * **Note:** Non-object values are coerced to objects. See the
		         * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
		         * for more details.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Object
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property names.
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.keys(new Foo);
		         * // => ['a', 'b'] (iteration order is not guaranteed)
		         *
		         * _.keys('hi');
		         * // => ['0', '1']
		         */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}/**
		         * Creates an array of the own and inherited enumerable property names of `object`.
		         *
		         * **Note:** Non-object values are coerced to objects.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Object
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property names.
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.keysIn(new Foo);
		         * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		         */function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object);}/**
		         * The opposite of `_.mapValues`; this method creates an object with the
		         * same values as `object` and keys generated by running each own enumerable
		         * string keyed property of `object` thru `iteratee`. The iteratee is invoked
		         * with three arguments: (value, key, object).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.8.0
		         * @category Object
		         * @param {Object} object The object to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Object} Returns the new mapped object.
		         * @see _.mapValues
		         * @example
		         *
		         * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
		         *   return key + value;
		         * });
		         * // => { 'a1': 1, 'b2': 2 }
		         */function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,iteratee(value,key,object),value);});return result;}/**
		         * Creates an object with the same keys as `object` and values generated
		         * by running each own enumerable string keyed property of `object` thru
		         * `iteratee`. The iteratee is invoked with three arguments:
		         * (value, key, object).
		         *
		         * @static
		         * @memberOf _
		         * @since 2.4.0
		         * @category Object
		         * @param {Object} object The object to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Object} Returns the new mapped object.
		         * @see _.mapKeys
		         * @example
		         *
		         * var users = {
		         *   'fred':    { 'user': 'fred',    'age': 40 },
		         *   'pebbles': { 'user': 'pebbles', 'age': 1 }
		         * };
		         *
		         * _.mapValues(users, function(o) { return o.age; });
		         * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.mapValues(users, 'age');
		         * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
		         */function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object));});return result;}/**
		         * This method is like `_.assign` except that it recursively merges own and
		         * inherited enumerable string keyed properties of source objects into the
		         * destination object. Source properties that resolve to `undefined` are
		         * skipped if a destination value exists. Array and plain object properties
		         * are merged recursively. Other objects and value types are overridden by
		         * assignment. Source objects are applied from left to right. Subsequent
		         * sources overwrite property assignments of previous sources.
		         *
		         * **Note:** This method mutates `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.5.0
		         * @category Object
		         * @param {Object} object The destination object.
		         * @param {...Object} [sources] The source objects.
		         * @returns {Object} Returns `object`.
		         * @example
		         *
		         * var object = {
		         *   'a': [{ 'b': 2 }, { 'd': 4 }]
		         * };
		         *
		         * var other = {
		         *   'a': [{ 'c': 3 }, { 'e': 5 }]
		         * };
		         *
		         * _.merge(object, other);
		         * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
		         */var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);});/**
		       * This method is like `_.merge` except that it accepts `customizer` which
		       * is invoked to produce the merged values of the destination and source
		       * properties. If `customizer` returns `undefined`, merging is handled by the
		       * method instead. The `customizer` is invoked with six arguments:
		       * (objValue, srcValue, key, object, source, stack).
		       *
		       * **Note:** This method mutates `object`.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Object
		       * @param {Object} object The destination object.
		       * @param {...Object} sources The source objects.
		       * @param {Function} customizer The function to customize assigned values.
		       * @returns {Object} Returns `object`.
		       * @example
		       *
		       * function customizer(objValue, srcValue) {
		       *   if (_.isArray(objValue)) {
		       *     return objValue.concat(srcValue);
		       *   }
		       * }
		       *
		       * var object = { 'a': [1], 'b': [2] };
		       * var other = { 'a': [3], 'b': [4] };
		       *
		       * _.mergeWith(object, other, customizer);
		       * // => { 'a': [1, 3], 'b': [2, 4] }
		       */var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);});/**
		       * The opposite of `_.pick`; this method creates an object composed of the
		       * own and inherited enumerable property paths of `object` that are not omitted.
		       *
		       * **Note:** This method is considerably slower than `_.pick`.
		       *
		       * @static
		       * @since 0.1.0
		       * @memberOf _
		       * @category Object
		       * @param {Object} object The source object.
		       * @param {...(string|string[])} [paths] The property paths to omit.
		       * @returns {Object} Returns the new object.
		       * @example
		       *
		       * var object = { 'a': 1, 'b': '2', 'c': 3 };
		       *
		       * _.omit(object, ['a', 'c']);
		       * // => { 'b': '2' }
		       */var omit=flatRest(function(object,paths){var result={};if(object==null){return result;}var isDeep=false;paths=arrayMap(paths,function(path){path=castPath(path,object);isDeep||(isDeep=path.length>1);return path;});copyObject(object,getAllKeysIn(object),result);if(isDeep){result=baseClone(result,CLONE_DEEP_FLAG|CLONE_FLAT_FLAG|CLONE_SYMBOLS_FLAG,customOmitClone);}var length=paths.length;while(length--){baseUnset(result,paths[length]);}return result;});/**
		       * The opposite of `_.pickBy`; this method creates an object composed of
		       * the own and inherited enumerable string keyed properties of `object` that
		       * `predicate` doesn't return truthy for. The predicate is invoked with two
		       * arguments: (value, key).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Object
		       * @param {Object} object The source object.
		       * @param {Function} [predicate=_.identity] The function invoked per property.
		       * @returns {Object} Returns the new object.
		       * @example
		       *
		       * var object = { 'a': 1, 'b': '2', 'c': 3 };
		       *
		       * _.omitBy(object, _.isNumber);
		       * // => { 'b': '2' }
		       */function omitBy(object,predicate){return pickBy(object,negate(getIteratee(predicate)));}/**
		         * Creates an object composed of the picked `object` properties.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Object
		         * @param {Object} object The source object.
		         * @param {...(string|string[])} [paths] The property paths to pick.
		         * @returns {Object} Returns the new object.
		         * @example
		         *
		         * var object = { 'a': 1, 'b': '2', 'c': 3 };
		         *
		         * _.pick(object, ['a', 'c']);
		         * // => { 'a': 1, 'c': 3 }
		         */var pick=flatRest(function(object,paths){return object==null?{}:basePick(object,paths);});/**
		       * Creates an object composed of the `object` properties `predicate` returns
		       * truthy for. The predicate is invoked with two arguments: (value, key).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Object
		       * @param {Object} object The source object.
		       * @param {Function} [predicate=_.identity] The function invoked per property.
		       * @returns {Object} Returns the new object.
		       * @example
		       *
		       * var object = { 'a': 1, 'b': '2', 'c': 3 };
		       *
		       * _.pickBy(object, _.isNumber);
		       * // => { 'a': 1, 'c': 3 }
		       */function pickBy(object,predicate){if(object==null){return {};}var props=arrayMap(getAllKeysIn(object),function(prop){return [prop];});predicate=getIteratee(predicate);return basePickBy(object,props,function(value,path){return predicate(value,path[0]);});}/**
		         * This method is like `_.get` except that if the resolved value is a
		         * function it's invoked with the `this` binding of its parent object and
		         * its result is returned.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Object
		         * @param {Object} object The object to query.
		         * @param {Array|string} path The path of the property to resolve.
		         * @param {*} [defaultValue] The value returned for `undefined` resolved values.
		         * @returns {*} Returns the resolved value.
		         * @example
		         *
		         * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
		         *
		         * _.result(object, 'a[0].b.c1');
		         * // => 3
		         *
		         * _.result(object, 'a[0].b.c2');
		         * // => 4
		         *
		         * _.result(object, 'a[0].b.c3', 'default');
		         * // => 'default'
		         *
		         * _.result(object, 'a[0].b.c3', _.constant('default'));
		         * // => 'default'
		         */function result(object,path,defaultValue){path=castPath(path,object);var index=-1,length=path.length;// Ensure the loop is entered when path is empty.
		if(!length){length=1;object=undefined$1;}while(++index<length){var value=object==null?undefined$1:object[toKey(path[index])];if(value===undefined$1){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;}/**
		         * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
		         * it's created. Arrays are created for missing index properties while objects
		         * are created for all other missing properties. Use `_.setWith` to customize
		         * `path` creation.
		         *
		         * **Note:** This method mutates `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.7.0
		         * @category Object
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The path of the property to set.
		         * @param {*} value The value to set.
		         * @returns {Object} Returns `object`.
		         * @example
		         *
		         * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		         *
		         * _.set(object, 'a[0].b.c', 4);
		         * console.log(object.a[0].b.c);
		         * // => 4
		         *
		         * _.set(object, ['x', '0', 'y', 'z'], 5);
		         * console.log(object.x[0].y.z);
		         * // => 5
		         */function set(object,path,value){return object==null?object:baseSet(object,path,value);}/**
		         * This method is like `_.set` except that it accepts `customizer` which is
		         * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
		         * path creation is handled by the method instead. The `customizer` is invoked
		         * with three arguments: (nsValue, key, nsObject).
		         *
		         * **Note:** This method mutates `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Object
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The path of the property to set.
		         * @param {*} value The value to set.
		         * @param {Function} [customizer] The function to customize assigned values.
		         * @returns {Object} Returns `object`.
		         * @example
		         *
		         * var object = {};
		         *
		         * _.setWith(object, '[0][1]', 'a', Object);
		         * // => { '0': { '1': 'a' } }
		         */function setWith(object,path,value,customizer){customizer=typeof customizer==='function'?customizer:undefined$1;return object==null?object:baseSet(object,path,value,customizer);}/**
		         * Creates an array of own enumerable string keyed-value pairs for `object`
		         * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
		         * entries are returned.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @alias entries
		         * @category Object
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the key-value pairs.
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.toPairs(new Foo);
		         * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
		         */var toPairs=createToPairs(keys);/**
		         * Creates an array of own and inherited enumerable string keyed-value pairs
		         * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
		         * or set, its entries are returned.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @alias entriesIn
		         * @category Object
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the key-value pairs.
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.toPairsIn(new Foo);
		         * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
		         */var toPairsIn=createToPairs(keysIn);/**
		         * An alternative to `_.reduce`; this method transforms `object` to a new
		         * `accumulator` object which is the result of running each of its own
		         * enumerable string keyed properties thru `iteratee`, with each invocation
		         * potentially mutating the `accumulator` object. If `accumulator` is not
		         * provided, a new object with the same `[[Prototype]]` will be used. The
		         * iteratee is invoked with four arguments: (accumulator, value, key, object).
		         * Iteratee functions may exit iteration early by explicitly returning `false`.
		         *
		         * @static
		         * @memberOf _
		         * @since 1.3.0
		         * @category Object
		         * @param {Object} object The object to iterate over.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @param {*} [accumulator] The custom accumulator value.
		         * @returns {*} Returns the accumulated value.
		         * @example
		         *
		         * _.transform([2, 3, 4], function(result, n) {
		         *   result.push(n *= n);
		         *   return n % 2 == 0;
		         * }, []);
		         * // => [4, 9]
		         *
		         * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
		         *   (result[value] || (result[value] = [])).push(key);
		         * }, {});
		         * // => { '1': ['a', 'c'], '2': ['b'] }
		         */function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else {accumulator={};}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}/**
		         * Removes the property at `path` of `object`.
		         *
		         * **Note:** This method mutates `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Object
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The path of the property to unset.
		         * @returns {boolean} Returns `true` if the property is deleted, else `false`.
		         * @example
		         *
		         * var object = { 'a': [{ 'b': { 'c': 7 } }] };
		         * _.unset(object, 'a[0].b.c');
		         * // => true
		         *
		         * console.log(object);
		         * // => { 'a': [{ 'b': {} }] };
		         *
		         * _.unset(object, ['a', '0', 'b', 'c']);
		         * // => true
		         *
		         * console.log(object);
		         * // => { 'a': [{ 'b': {} }] };
		         */function unset(object,path){return object==null?true:baseUnset(object,path);}/**
		         * This method is like `_.set` except that accepts `updater` to produce the
		         * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
		         * is invoked with one argument: (value).
		         *
		         * **Note:** This method mutates `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.6.0
		         * @category Object
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The path of the property to set.
		         * @param {Function} updater The function to produce the updated value.
		         * @returns {Object} Returns `object`.
		         * @example
		         *
		         * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		         *
		         * _.update(object, 'a[0].b.c', function(n) { return n * n; });
		         * console.log(object.a[0].b.c);
		         * // => 9
		         *
		         * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
		         * console.log(object.x[0].y.z);
		         * // => 0
		         */function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));}/**
		         * This method is like `_.update` except that it accepts `customizer` which is
		         * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
		         * path creation is handled by the method instead. The `customizer` is invoked
		         * with three arguments: (nsValue, key, nsObject).
		         *
		         * **Note:** This method mutates `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.6.0
		         * @category Object
		         * @param {Object} object The object to modify.
		         * @param {Array|string} path The path of the property to set.
		         * @param {Function} updater The function to produce the updated value.
		         * @param {Function} [customizer] The function to customize assigned values.
		         * @returns {Object} Returns `object`.
		         * @example
		         *
		         * var object = {};
		         *
		         * _.updateWith(object, '[0][1]', _.constant('a'), Object);
		         * // => { '0': { '1': 'a' } }
		         */function updateWith(object,path,updater,customizer){customizer=typeof customizer==='function'?customizer:undefined$1;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);}/**
		         * Creates an array of the own enumerable string keyed property values of `object`.
		         *
		         * **Note:** Non-object values are coerced to objects.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Object
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property values.
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.values(new Foo);
		         * // => [1, 2] (iteration order is not guaranteed)
		         *
		         * _.values('hi');
		         * // => ['h', 'i']
		         */function values(object){return object==null?[]:baseValues(object,keys(object));}/**
		         * Creates an array of the own and inherited enumerable string keyed property
		         * values of `object`.
		         *
		         * **Note:** Non-object values are coerced to objects.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Object
		         * @param {Object} object The object to query.
		         * @returns {Array} Returns the array of property values.
		         * @example
		         *
		         * function Foo() {
		         *   this.a = 1;
		         *   this.b = 2;
		         * }
		         *
		         * Foo.prototype.c = 3;
		         *
		         * _.valuesIn(new Foo);
		         * // => [1, 2, 3] (iteration order is not guaranteed)
		         */function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));}/* ------------------------------------------------------------------------*//**
		         * Clamps `number` within the inclusive `lower` and `upper` bounds.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Number
		         * @param {number} number The number to clamp.
		         * @param {number} [lower] The lower bound.
		         * @param {number} upper The upper bound.
		         * @returns {number} Returns the clamped number.
		         * @example
		         *
		         * _.clamp(-10, -5, 5);
		         * // => -5
		         *
		         * _.clamp(10, -5, 5);
		         * // => 5
		         */function clamp(number,lower,upper){if(upper===undefined$1){upper=lower;lower=undefined$1;}if(upper!==undefined$1){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined$1){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);}/**
		         * Checks if `n` is between `start` and up to, but not including, `end`. If
		         * `end` is not specified, it's set to `start` with `start` then set to `0`.
		         * If `start` is greater than `end` the params are swapped to support
		         * negative ranges.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.3.0
		         * @category Number
		         * @param {number} number The number to check.
		         * @param {number} [start=0] The start of the range.
		         * @param {number} end The end of the range.
		         * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
		         * @see _.range, _.rangeRight
		         * @example
		         *
		         * _.inRange(3, 2, 4);
		         * // => true
		         *
		         * _.inRange(4, 8);
		         * // => true
		         *
		         * _.inRange(4, 2);
		         * // => false
		         *
		         * _.inRange(2, 2);
		         * // => false
		         *
		         * _.inRange(1.2, 2);
		         * // => true
		         *
		         * _.inRange(5.2, 4);
		         * // => false
		         *
		         * _.inRange(-3, -2, -6);
		         * // => true
		         */function inRange(number,start,end){start=toFinite(start);if(end===undefined$1){end=start;start=0;}else {end=toFinite(end);}number=toNumber(number);return baseInRange(number,start,end);}/**
		         * Produces a random number between the inclusive `lower` and `upper` bounds.
		         * If only one argument is provided a number between `0` and the given number
		         * is returned. If `floating` is `true`, or either `lower` or `upper` are
		         * floats, a floating-point number is returned instead of an integer.
		         *
		         * **Note:** JavaScript follows the IEEE-754 standard for resolving
		         * floating-point values which can produce unexpected results.
		         *
		         * @static
		         * @memberOf _
		         * @since 0.7.0
		         * @category Number
		         * @param {number} [lower=0] The lower bound.
		         * @param {number} [upper=1] The upper bound.
		         * @param {boolean} [floating] Specify returning a floating-point number.
		         * @returns {number} Returns the random number.
		         * @example
		         *
		         * _.random(0, 5);
		         * // => an integer between 0 and 5
		         *
		         * _.random(5);
		         * // => also an integer between 0 and 5
		         *
		         * _.random(5, true);
		         * // => a floating-point number between 0 and 5
		         *
		         * _.random(1.2, 5.2);
		         * // => a floating-point number between 1.2 and 5.2
		         */function random(lower,upper,floating){if(floating&&typeof floating!=='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined$1;}if(floating===undefined$1){if(typeof upper==='boolean'){floating=upper;upper=undefined$1;}else if(typeof lower==='boolean'){floating=lower;lower=undefined$1;}}if(lower===undefined$1&&upper===undefined$1){lower=0;upper=1;}else {lower=toFinite(lower);if(upper===undefined$1){upper=lower;lower=0;}else {upper=toFinite(upper);}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);}/* ------------------------------------------------------------------------*//**
		         * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to convert.
		         * @returns {string} Returns the camel cased string.
		         * @example
		         *
		         * _.camelCase('Foo Bar');
		         * // => 'fooBar'
		         *
		         * _.camelCase('--foo-bar--');
		         * // => 'fooBar'
		         *
		         * _.camelCase('__FOO_BAR__');
		         * // => 'fooBar'
		         */var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);});/**
		       * Converts the first character of `string` to upper case and the remaining
		       * to lower case.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.0.0
		       * @category String
		       * @param {string} [string=''] The string to capitalize.
		       * @returns {string} Returns the capitalized string.
		       * @example
		       *
		       * _.capitalize('FRED');
		       * // => 'Fred'
		       */function capitalize(string){return upperFirst(toString(string).toLowerCase());}/**
		         * Deburrs `string` by converting
		         * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
		         * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
		         * letters to basic Latin letters and removing
		         * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to deburr.
		         * @returns {string} Returns the deburred string.
		         * @example
		         *
		         * _.deburr('déjà vu');
		         * // => 'deja vu'
		         */function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}/**
		         * Checks if `string` ends with the given target string.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to inspect.
		         * @param {string} [target] The string to search for.
		         * @param {number} [position=string.length] The position to search up to.
		         * @returns {boolean} Returns `true` if `string` ends with `target`,
		         *  else `false`.
		         * @example
		         *
		         * _.endsWith('abc', 'c');
		         * // => true
		         *
		         * _.endsWith('abc', 'b');
		         * // => false
		         *
		         * _.endsWith('abc', 'b', 2);
		         * // => true
		         */function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined$1?length:baseClamp(toInteger(position),0,length);var end=position;position-=target.length;return position>=0&&string.slice(position,end)==target;}/**
		         * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
		         * corresponding HTML entities.
		         *
		         * **Note:** No other characters are escaped. To escape additional
		         * characters use a third-party library like [_he_](https://mths.be/he).
		         *
		         * Though the ">" character is escaped for symmetry, characters like
		         * ">" and "/" don't need escaping in HTML and have no special meaning
		         * unless they're part of a tag or unquoted attribute value. See
		         * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
		         * (under "semi-related fun fact") for more details.
		         *
		         * When working with HTML you should always
		         * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
		         * XSS vectors.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category String
		         * @param {string} [string=''] The string to escape.
		         * @returns {string} Returns the escaped string.
		         * @example
		         *
		         * _.escape('fred, barney, & pebbles');
		         * // => 'fred, barney, &amp; pebbles'
		         */function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;}/**
		         * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
		         * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to escape.
		         * @returns {string} Returns the escaped string.
		         * @example
		         *
		         * _.escapeRegExp('[lodash](https://lodash.com/)');
		         * // => '\[lodash\]\(https://lodash\.com/\)'
		         */function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;}/**
		         * Converts `string` to
		         * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to convert.
		         * @returns {string} Returns the kebab cased string.
		         * @example
		         *
		         * _.kebabCase('Foo Bar');
		         * // => 'foo-bar'
		         *
		         * _.kebabCase('fooBar');
		         * // => 'foo-bar'
		         *
		         * _.kebabCase('__FOO_BAR__');
		         * // => 'foo-bar'
		         */var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();});/**
		       * Converts `string`, as space separated words, to lower case.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category String
		       * @param {string} [string=''] The string to convert.
		       * @returns {string} Returns the lower cased string.
		       * @example
		       *
		       * _.lowerCase('--Foo-Bar--');
		       * // => 'foo bar'
		       *
		       * _.lowerCase('fooBar');
		       * // => 'foo bar'
		       *
		       * _.lowerCase('__FOO_BAR__');
		       * // => 'foo bar'
		       */var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();});/**
		       * Converts the first character of `string` to lower case.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category String
		       * @param {string} [string=''] The string to convert.
		       * @returns {string} Returns the converted string.
		       * @example
		       *
		       * _.lowerFirst('Fred');
		       * // => 'fred'
		       *
		       * _.lowerFirst('FRED');
		       * // => 'fRED'
		       */var lowerFirst=createCaseFirst('toLowerCase');/**
		         * Pads `string` on the left and right sides if it's shorter than `length`.
		         * Padding characters are truncated if they can't be evenly divided by `length`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to pad.
		         * @param {number} [length=0] The padding length.
		         * @param {string} [chars=' '] The string used as padding.
		         * @returns {string} Returns the padded string.
		         * @example
		         *
		         * _.pad('abc', 8);
		         * // => '  abc   '
		         *
		         * _.pad('abc', 8, '_-');
		         * // => '_-abc_-_'
		         *
		         * _.pad('abc', 3);
		         * // => 'abc'
		         */function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);}/**
		         * Pads `string` on the right side if it's shorter than `length`. Padding
		         * characters are truncated if they exceed `length`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to pad.
		         * @param {number} [length=0] The padding length.
		         * @param {string} [chars=' '] The string used as padding.
		         * @returns {string} Returns the padded string.
		         * @example
		         *
		         * _.padEnd('abc', 6);
		         * // => 'abc   '
		         *
		         * _.padEnd('abc', 6, '_-');
		         * // => 'abc_-_'
		         *
		         * _.padEnd('abc', 3);
		         * // => 'abc'
		         */function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;}/**
		         * Pads `string` on the left side if it's shorter than `length`. Padding
		         * characters are truncated if they exceed `length`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to pad.
		         * @param {number} [length=0] The padding length.
		         * @param {string} [chars=' '] The string used as padding.
		         * @returns {string} Returns the padded string.
		         * @example
		         *
		         * _.padStart('abc', 6);
		         * // => '   abc'
		         *
		         * _.padStart('abc', 6, '_-');
		         * // => '_-_abc'
		         *
		         * _.padStart('abc', 3);
		         * // => 'abc'
		         */function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;}/**
		         * Converts `string` to an integer of the specified radix. If `radix` is
		         * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
		         * hexadecimal, in which case a `radix` of `16` is used.
		         *
		         * **Note:** This method aligns with the
		         * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
		         *
		         * @static
		         * @memberOf _
		         * @since 1.1.0
		         * @category String
		         * @param {string} string The string to convert.
		         * @param {number} [radix=10] The radix to interpret `value` by.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {number} Returns the converted integer.
		         * @example
		         *
		         * _.parseInt('08');
		         * // => 8
		         *
		         * _.map(['6', '08', '10'], _.parseInt);
		         * // => [6, 8, 10]
		         */function parseInt(string,radix,guard){if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}return nativeParseInt(toString(string).replace(reTrimStart,''),radix||0);}/**
		         * Repeats the given string `n` times.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to repeat.
		         * @param {number} [n=1] The number of times to repeat the string.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {string} Returns the repeated string.
		         * @example
		         *
		         * _.repeat('*', 3);
		         * // => '***'
		         *
		         * _.repeat('abc', 2);
		         * // => 'abcabc'
		         *
		         * _.repeat('abc', 0);
		         * // => ''
		         */function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined$1){n=1;}else {n=toInteger(n);}return baseRepeat(toString(string),n);}/**
		         * Replaces matches for `pattern` in `string` with `replacement`.
		         *
		         * **Note:** This method is based on
		         * [`String#replace`](https://mdn.io/String/replace).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to modify.
		         * @param {RegExp|string} pattern The pattern to replace.
		         * @param {Function|string} replacement The match replacement.
		         * @returns {string} Returns the modified string.
		         * @example
		         *
		         * _.replace('Hi Fred', 'Fred', 'Barney');
		         * // => 'Hi Barney'
		         */function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:string.replace(args[1],args[2]);}/**
		         * Converts `string` to
		         * [snake case](https://en.wikipedia.org/wiki/Snake_case).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to convert.
		         * @returns {string} Returns the snake cased string.
		         * @example
		         *
		         * _.snakeCase('Foo Bar');
		         * // => 'foo_bar'
		         *
		         * _.snakeCase('fooBar');
		         * // => 'foo_bar'
		         *
		         * _.snakeCase('--FOO-BAR--');
		         * // => 'foo_bar'
		         */var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();});/**
		       * Splits `string` by `separator`.
		       *
		       * **Note:** This method is based on
		       * [`String#split`](https://mdn.io/String/split).
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category String
		       * @param {string} [string=''] The string to split.
		       * @param {RegExp|string} separator The separator pattern to split by.
		       * @param {number} [limit] The length to truncate results to.
		       * @returns {Array} Returns the string segments.
		       * @example
		       *
		       * _.split('a-b-c', '-', 2);
		       * // => ['a', 'b']
		       */function split(string,separator,limit){if(limit&&typeof limit!=='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined$1;}limit=limit===undefined$1?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return [];}string=toString(string);if(string&&(typeof separator==='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(!separator&&hasUnicode(string)){return castSlice(stringToArray(string),0,limit);}}return string.split(separator,limit);}/**
		         * Converts `string` to
		         * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
		         *
		         * @static
		         * @memberOf _
		         * @since 3.1.0
		         * @category String
		         * @param {string} [string=''] The string to convert.
		         * @returns {string} Returns the start cased string.
		         * @example
		         *
		         * _.startCase('--foo-bar--');
		         * // => 'Foo Bar'
		         *
		         * _.startCase('fooBar');
		         * // => 'Foo Bar'
		         *
		         * _.startCase('__FOO_BAR__');
		         * // => 'FOO BAR'
		         */var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);});/**
		       * Checks if `string` starts with the given target string.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.0.0
		       * @category String
		       * @param {string} [string=''] The string to inspect.
		       * @param {string} [target] The string to search for.
		       * @param {number} [position=0] The position to search from.
		       * @returns {boolean} Returns `true` if `string` starts with `target`,
		       *  else `false`.
		       * @example
		       *
		       * _.startsWith('abc', 'a');
		       * // => true
		       *
		       * _.startsWith('abc', 'b');
		       * // => false
		       *
		       * _.startsWith('abc', 'b', 1);
		       * // => true
		       */function startsWith(string,target,position){string=toString(string);position=position==null?0:baseClamp(toInteger(position),0,string.length);target=baseToString(target);return string.slice(position,position+target.length)==target;}/**
		         * Creates a compiled template function that can interpolate data properties
		         * in "interpolate" delimiters, HTML-escape interpolated data properties in
		         * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
		         * properties may be accessed as free variables in the template. If a setting
		         * object is given, it takes precedence over `_.templateSettings` values.
		         *
		         * **Note:** In the development build `_.template` utilizes
		         * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
		         * for easier debugging.
		         *
		         * For more information on precompiling templates see
		         * [lodash's custom builds documentation](https://lodash.com/custom-builds).
		         *
		         * For more information on Chrome extension sandboxes see
		         * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category String
		         * @param {string} [string=''] The template string.
		         * @param {Object} [options={}] The options object.
		         * @param {RegExp} [options.escape=_.templateSettings.escape]
		         *  The HTML "escape" delimiter.
		         * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
		         *  The "evaluate" delimiter.
		         * @param {Object} [options.imports=_.templateSettings.imports]
		         *  An object to import into the template as free variables.
		         * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
		         *  The "interpolate" delimiter.
		         * @param {string} [options.sourceURL='lodash.templateSources[n]']
		         *  The sourceURL of the compiled template.
		         * @param {string} [options.variable='obj']
		         *  The data object variable name.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Function} Returns the compiled template function.
		         * @example
		         *
		         * // Use the "interpolate" delimiter to create a compiled template.
		         * var compiled = _.template('hello <%= user %>!');
		         * compiled({ 'user': 'fred' });
		         * // => 'hello fred!'
		         *
		         * // Use the HTML "escape" delimiter to escape data property values.
		         * var compiled = _.template('<b><%- value %></b>');
		         * compiled({ 'value': '<script>' });
		         * // => '<b>&lt;script&gt;</b>'
		         *
		         * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
		         * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
		         * compiled({ 'users': ['fred', 'barney'] });
		         * // => '<li>fred</li><li>barney</li>'
		         *
		         * // Use the internal `print` function in "evaluate" delimiters.
		         * var compiled = _.template('<% print("hello " + user); %>!');
		         * compiled({ 'user': 'barney' });
		         * // => 'hello barney!'
		         *
		         * // Use the ES template literal delimiter as an "interpolate" delimiter.
		         * // Disable support by replacing the "interpolate" delimiter.
		         * var compiled = _.template('hello ${ user }!');
		         * compiled({ 'user': 'pebbles' });
		         * // => 'hello pebbles!'
		         *
		         * // Use backslashes to treat delimiters as plain text.
		         * var compiled = _.template('<%= "\\<%- value %\\>" %>');
		         * compiled({ 'value': 'ignored' });
		         * // => '<%- value %>'
		         *
		         * // Use the `imports` option to import `jQuery` as `jq`.
		         * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
		         * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
		         * compiled({ 'users': ['fred', 'barney'] });
		         * // => '<li>fred</li><li>barney</li>'
		         *
		         * // Use the `sourceURL` option to specify a custom sourceURL for the template.
		         * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
		         * compiled(data);
		         * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
		         *
		         * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
		         * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
		         * compiled.source;
		         * // => function(data) {
		         * //   var __t, __p = '';
		         * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
		         * //   return __p;
		         * // }
		         *
		         * // Use custom template delimiters.
		         * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
		         * var compiled = _.template('hello {{ user }}!');
		         * compiled({ 'user': 'mustache' });
		         * // => 'hello mustache!'
		         *
		         * // Use the `source` property to inline compiled templates for meaningful
		         * // line numbers in error messages and stack traces.
		         * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
		         *   var JST = {\
		         *     "main": ' + _.template(mainText).source + '\
		         *   };\
		         * ');
		         */function template(string,options,guard){// Based on John Resig's `tmpl` implementation
		// (http://ejohn.org/blog/javascript-micro-templating/)
		// and Laura Doktorova's doT.js (https://github.com/olado/doT).
		var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined$1;}string=toString(string);options=assignInWith({},options,settings,customDefaultsAssignIn);var imports=assignInWith({},options.imports,settings.imports,customDefaultsAssignIn),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";// Compile the regexp to match each delimiter.
		var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g');// Use a sourceURL for easier debugging.
		var sourceURL='//# sourceURL='+('sourceURL'in options?options.sourceURL:'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);// Escape characters that can't be included in string literals.
		source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);// Replace delimiters with snippets.
		if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length;// The JS engine embedded in Adobe products needs `match` returned in
		// order to produce the correct `offset` value.
		return match;});source+="';\n";// If `variable` is not specified wrap a with-statement around the generated
		// code to add the data object to the top of the scope chain.
		var variable=options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';}// Cleanup code by stripping empty strings.
		source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;');// Frame code as the function body.
		source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined$1,importsValues);});// Provide the compiled function's source by its `toString` method or
		// the `source` property as a convenience for inlining compiled templates.
		result.source=source;if(isError(result)){throw result;}return result;}/**
		         * Converts `string`, as a whole, to lower case just like
		         * [String#toLowerCase](https://mdn.io/toLowerCase).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to convert.
		         * @returns {string} Returns the lower cased string.
		         * @example
		         *
		         * _.toLower('--Foo-Bar--');
		         * // => '--foo-bar--'
		         *
		         * _.toLower('fooBar');
		         * // => 'foobar'
		         *
		         * _.toLower('__FOO_BAR__');
		         * // => '__foo_bar__'
		         */function toLower(value){return toString(value).toLowerCase();}/**
		         * Converts `string`, as a whole, to upper case just like
		         * [String#toUpperCase](https://mdn.io/toUpperCase).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to convert.
		         * @returns {string} Returns the upper cased string.
		         * @example
		         *
		         * _.toUpper('--foo-bar--');
		         * // => '--FOO-BAR--'
		         *
		         * _.toUpper('fooBar');
		         * // => 'FOOBAR'
		         *
		         * _.toUpper('__foo_bar__');
		         * // => '__FOO_BAR__'
		         */function toUpper(value){return toString(value).toUpperCase();}/**
		         * Removes leading and trailing whitespace or specified characters from `string`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to trim.
		         * @param {string} [chars=whitespace] The characters to trim.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {string} Returns the trimmed string.
		         * @example
		         *
		         * _.trim('  abc  ');
		         * // => 'abc'
		         *
		         * _.trim('-_-abc-_-', '_-');
		         * // => 'abc'
		         *
		         * _.map(['  foo  ', '  bar  '], _.trim);
		         * // => ['foo', 'bar']
		         */function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.replace(reTrim,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');}/**
		         * Removes trailing whitespace or specified characters from `string`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to trim.
		         * @param {string} [chars=whitespace] The characters to trim.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {string} Returns the trimmed string.
		         * @example
		         *
		         * _.trimEnd('  abc  ');
		         * // => '  abc'
		         *
		         * _.trimEnd('-_-abc-_-', '_-');
		         * // => '-_-abc'
		         */function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.replace(reTrimEnd,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');}/**
		         * Removes leading whitespace or specified characters from `string`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to trim.
		         * @param {string} [chars=whitespace] The characters to trim.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {string} Returns the trimmed string.
		         * @example
		         *
		         * _.trimStart('  abc  ');
		         * // => 'abc  '
		         *
		         * _.trimStart('-_-abc-_-', '_-');
		         * // => 'abc-_-'
		         */function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');}/**
		         * Truncates `string` if it's longer than the given maximum string length.
		         * The last characters of the truncated string are replaced with the omission
		         * string which defaults to "...".
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to truncate.
		         * @param {Object} [options={}] The options object.
		         * @param {number} [options.length=30] The maximum string length.
		         * @param {string} [options.omission='...'] The string to indicate text is omitted.
		         * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
		         * @returns {string} Returns the truncated string.
		         * @example
		         *
		         * _.truncate('hi-diddly-ho there, neighborino');
		         * // => 'hi-diddly-ho there, neighbo...'
		         *
		         * _.truncate('hi-diddly-ho there, neighborino', {
		         *   'length': 24,
		         *   'separator': ' '
		         * });
		         * // => 'hi-diddly-ho there,...'
		         *
		         * _.truncate('hi-diddly-ho there, neighborino', {
		         *   'length': 24,
		         *   'separator': /,? +/
		         * });
		         * // => 'hi-diddly-ho there...'
		         *
		         * _.truncate('hi-diddly-ho there, neighborino', {
		         *   'omission': ' [...]'
		         * });
		         * // => 'hi-diddly-ho there, neig [...]'
		         */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined$1){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined$1?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}/**
		         * The inverse of `_.escape`; this method converts the HTML entities
		         * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
		         * their corresponding characters.
		         *
		         * **Note:** No other HTML entities are unescaped. To unescape additional
		         * HTML entities use a third-party library like [_he_](https://mths.be/he).
		         *
		         * @static
		         * @memberOf _
		         * @since 0.6.0
		         * @category String
		         * @param {string} [string=''] The string to unescape.
		         * @returns {string} Returns the unescaped string.
		         * @example
		         *
		         * _.unescape('fred, barney, &amp; pebbles');
		         * // => 'fred, barney, & pebbles'
		         */function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;}/**
		         * Converts `string`, as space separated words, to upper case.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category String
		         * @param {string} [string=''] The string to convert.
		         * @returns {string} Returns the upper cased string.
		         * @example
		         *
		         * _.upperCase('--foo-bar');
		         * // => 'FOO BAR'
		         *
		         * _.upperCase('fooBar');
		         * // => 'FOO BAR'
		         *
		         * _.upperCase('__foo_bar__');
		         * // => 'FOO BAR'
		         */var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();});/**
		       * Converts the first character of `string` to upper case.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category String
		       * @param {string} [string=''] The string to convert.
		       * @returns {string} Returns the converted string.
		       * @example
		       *
		       * _.upperFirst('fred');
		       * // => 'Fred'
		       *
		       * _.upperFirst('FRED');
		       * // => 'FRED'
		       */var upperFirst=createCaseFirst('toUpperCase');/**
		         * Splits `string` into an array of its words.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category String
		         * @param {string} [string=''] The string to inspect.
		         * @param {RegExp|string} [pattern] The pattern to match words.
		         * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		         * @returns {Array} Returns the words of `string`.
		         * @example
		         *
		         * _.words('fred, barney, & pebbles');
		         * // => ['fred', 'barney', 'pebbles']
		         *
		         * _.words('fred, barney, & pebbles', /[^, ]+/g);
		         * // => ['fred', 'barney', '&', 'pebbles']
		         */function words(string,pattern,guard){string=toString(string);pattern=guard?undefined$1:pattern;if(pattern===undefined$1){return hasUnicodeWord(string)?unicodeWords(string):asciiWords(string);}return string.match(pattern)||[];}/* ------------------------------------------------------------------------*//**
		         * Attempts to invoke `func`, returning either the result or the caught error
		         * object. Any additional arguments are provided to `func` when it's invoked.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Util
		         * @param {Function} func The function to attempt.
		         * @param {...*} [args] The arguments to invoke `func` with.
		         * @returns {*} Returns the `func` result or error object.
		         * @example
		         *
		         * // Avoid throwing errors for invalid selectors.
		         * var elements = _.attempt(function(selector) {
		         *   return document.querySelectorAll(selector);
		         * }, '>_>');
		         *
		         * if (_.isError(elements)) {
		         *   elements = [];
		         * }
		         */var attempt=baseRest(function(func,args){try{return apply(func,undefined$1,args);}catch(e){return isError(e)?e:new Error(e);}});/**
		       * Binds methods of an object to the object itself, overwriting the existing
		       * method.
		       *
		       * **Note:** This method doesn't set the "length" property of bound functions.
		       *
		       * @static
		       * @since 0.1.0
		       * @memberOf _
		       * @category Util
		       * @param {Object} object The object to bind and assign the bound methods to.
		       * @param {...(string|string[])} methodNames The object method names to bind.
		       * @returns {Object} Returns `object`.
		       * @example
		       *
		       * var view = {
		       *   'label': 'docs',
		       *   'click': function() {
		       *     console.log('clicked ' + this.label);
		       *   }
		       * };
		       *
		       * _.bindAll(view, ['click']);
		       * jQuery(element).on('click', view.click);
		       * // => Logs 'clicked docs' when clicked.
		       */var bindAll=flatRest(function(object,methodNames){arrayEach(methodNames,function(key){key=toKey(key);baseAssignValue(object,key,bind(object[key],object));});return object;});/**
		       * Creates a function that iterates over `pairs` and invokes the corresponding
		       * function of the first predicate to return truthy. The predicate-function
		       * pairs are invoked with the `this` binding and arguments of the created
		       * function.
		       *
		       * @static
		       * @memberOf _
		       * @since 4.0.0
		       * @category Util
		       * @param {Array} pairs The predicate-function pairs.
		       * @returns {Function} Returns the new composite function.
		       * @example
		       *
		       * var func = _.cond([
		       *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
		       *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
		       *   [_.stubTrue,                      _.constant('no match')]
		       * ]);
		       *
		       * func({ 'a': 1, 'b': 2 });
		       * // => 'matches A'
		       *
		       * func({ 'a': 0, 'b': 1 });
		       * // => 'matches B'
		       *
		       * func({ 'a': '1', 'b': '2' });
		       * // => 'no match'
		       */function cond(pairs){var length=pairs==null?0:pairs.length,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!=='function'){throw new TypeError(FUNC_ERROR_TEXT);}return [toIteratee(pair[0]),pair[1]];});return baseRest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});}/**
		         * Creates a function that invokes the predicate properties of `source` with
		         * the corresponding property values of a given object, returning `true` if
		         * all predicates return truthy, else `false`.
		         *
		         * **Note:** The created function is equivalent to `_.conformsTo` with
		         * `source` partially applied.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Util
		         * @param {Object} source The object of property predicates to conform to.
		         * @returns {Function} Returns the new spec function.
		         * @example
		         *
		         * var objects = [
		         *   { 'a': 2, 'b': 1 },
		         *   { 'a': 1, 'b': 2 }
		         * ];
		         *
		         * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
		         * // => [{ 'a': 1, 'b': 2 }]
		         */function conforms(source){return baseConforms(baseClone(source,CLONE_DEEP_FLAG));}/**
		         * Creates a function that returns `value`.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.4.0
		         * @category Util
		         * @param {*} value The value to return from the new function.
		         * @returns {Function} Returns the new constant function.
		         * @example
		         *
		         * var objects = _.times(2, _.constant({ 'a': 1 }));
		         *
		         * console.log(objects);
		         * // => [{ 'a': 1 }, { 'a': 1 }]
		         *
		         * console.log(objects[0] === objects[1]);
		         * // => true
		         */function constant(value){return function(){return value;};}/**
		         * Checks `value` to determine whether a default value should be returned in
		         * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
		         * or `undefined`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.14.0
		         * @category Util
		         * @param {*} value The value to check.
		         * @param {*} defaultValue The default value.
		         * @returns {*} Returns the resolved value.
		         * @example
		         *
		         * _.defaultTo(1, 10);
		         * // => 1
		         *
		         * _.defaultTo(undefined, 10);
		         * // => 10
		         */function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value;}/**
		         * Creates a function that returns the result of invoking the given functions
		         * with the `this` binding of the created function, where each successive
		         * invocation is supplied the return value of the previous.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Util
		         * @param {...(Function|Function[])} [funcs] The functions to invoke.
		         * @returns {Function} Returns the new composite function.
		         * @see _.flowRight
		         * @example
		         *
		         * function square(n) {
		         *   return n * n;
		         * }
		         *
		         * var addSquare = _.flow([_.add, square]);
		         * addSquare(1, 2);
		         * // => 9
		         */var flow=createFlow();/**
		         * This method is like `_.flow` except that it creates a function that
		         * invokes the given functions from right to left.
		         *
		         * @static
		         * @since 3.0.0
		         * @memberOf _
		         * @category Util
		         * @param {...(Function|Function[])} [funcs] The functions to invoke.
		         * @returns {Function} Returns the new composite function.
		         * @see _.flow
		         * @example
		         *
		         * function square(n) {
		         *   return n * n;
		         * }
		         *
		         * var addSquare = _.flowRight([square, _.add]);
		         * addSquare(1, 2);
		         * // => 9
		         */var flowRight=createFlow(true);/**
		         * This method returns the first argument it receives.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Util
		         * @param {*} value Any value.
		         * @returns {*} Returns `value`.
		         * @example
		         *
		         * var object = { 'a': 1 };
		         *
		         * console.log(_.identity(object) === object);
		         * // => true
		         */function identity(value){return value;}/**
		         * Creates a function that invokes `func` with the arguments of the created
		         * function. If `func` is a property name, the created function returns the
		         * property value for a given element. If `func` is an array or object, the
		         * created function returns `true` for elements that contain the equivalent
		         * source properties, otherwise it returns `false`.
		         *
		         * @static
		         * @since 4.0.0
		         * @memberOf _
		         * @category Util
		         * @param {*} [func=_.identity] The value to convert to a callback.
		         * @returns {Function} Returns the callback.
		         * @example
		         *
		         * var users = [
		         *   { 'user': 'barney', 'age': 36, 'active': true },
		         *   { 'user': 'fred',   'age': 40, 'active': false }
		         * ];
		         *
		         * // The `_.matches` iteratee shorthand.
		         * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
		         * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
		         *
		         * // The `_.matchesProperty` iteratee shorthand.
		         * _.filter(users, _.iteratee(['user', 'fred']));
		         * // => [{ 'user': 'fred', 'age': 40 }]
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.map(users, _.iteratee('user'));
		         * // => ['barney', 'fred']
		         *
		         * // Create custom iteratee shorthands.
		         * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
		         *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
		         *     return func.test(string);
		         *   };
		         * });
		         *
		         * _.filter(['abc', 'def'], /ef/);
		         * // => ['def']
		         */function iteratee(func){return baseIteratee(typeof func==='function'?func:baseClone(func,CLONE_DEEP_FLAG));}/**
		         * Creates a function that performs a partial deep comparison between a given
		         * object and `source`, returning `true` if the given object has equivalent
		         * property values, else `false`.
		         *
		         * **Note:** The created function is equivalent to `_.isMatch` with `source`
		         * partially applied.
		         *
		         * Partial comparisons will match empty array and empty object `source`
		         * values against any array or object value, respectively. See `_.isEqual`
		         * for a list of supported value comparisons.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Util
		         * @param {Object} source The object of property values to match.
		         * @returns {Function} Returns the new spec function.
		         * @example
		         *
		         * var objects = [
		         *   { 'a': 1, 'b': 2, 'c': 3 },
		         *   { 'a': 4, 'b': 5, 'c': 6 }
		         * ];
		         *
		         * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
		         * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
		         */function matches(source){return baseMatches(baseClone(source,CLONE_DEEP_FLAG));}/**
		         * Creates a function that performs a partial deep comparison between the
		         * value at `path` of a given object to `srcValue`, returning `true` if the
		         * object value is equivalent, else `false`.
		         *
		         * **Note:** Partial comparisons will match empty array and empty object
		         * `srcValue` values against any array or object value, respectively. See
		         * `_.isEqual` for a list of supported value comparisons.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.2.0
		         * @category Util
		         * @param {Array|string} path The path of the property to get.
		         * @param {*} srcValue The value to match.
		         * @returns {Function} Returns the new spec function.
		         * @example
		         *
		         * var objects = [
		         *   { 'a': 1, 'b': 2, 'c': 3 },
		         *   { 'a': 4, 'b': 5, 'c': 6 }
		         * ];
		         *
		         * _.find(objects, _.matchesProperty('a', 4));
		         * // => { 'a': 4, 'b': 5, 'c': 6 }
		         */function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,CLONE_DEEP_FLAG));}/**
		         * Creates a function that invokes the method at `path` of a given object.
		         * Any additional arguments are provided to the invoked method.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.7.0
		         * @category Util
		         * @param {Array|string} path The path of the method to invoke.
		         * @param {...*} [args] The arguments to invoke the method with.
		         * @returns {Function} Returns the new invoker function.
		         * @example
		         *
		         * var objects = [
		         *   { 'a': { 'b': _.constant(2) } },
		         *   { 'a': { 'b': _.constant(1) } }
		         * ];
		         *
		         * _.map(objects, _.method('a.b'));
		         * // => [2, 1]
		         *
		         * _.map(objects, _.method(['a', 'b']));
		         * // => [2, 1]
		         */var method=baseRest(function(path,args){return function(object){return baseInvoke(object,path,args);};});/**
		       * The opposite of `_.method`; this method creates a function that invokes
		       * the method at a given path of `object`. Any additional arguments are
		       * provided to the invoked method.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.7.0
		       * @category Util
		       * @param {Object} object The object to query.
		       * @param {...*} [args] The arguments to invoke the method with.
		       * @returns {Function} Returns the new invoker function.
		       * @example
		       *
		       * var array = _.times(3, _.constant),
		       *     object = { 'a': array, 'b': array, 'c': array };
		       *
		       * _.map(['a[2]', 'c[0]'], _.methodOf(object));
		       * // => [2, 0]
		       *
		       * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
		       * // => [2, 0]
		       */var methodOf=baseRest(function(object,args){return function(path){return baseInvoke(object,path,args);};});/**
		       * Adds all own enumerable string keyed function properties of a source
		       * object to the destination object. If `object` is a function, then methods
		       * are added to its prototype as well.
		       *
		       * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
		       * avoid conflicts caused by modifying the original.
		       *
		       * @static
		       * @since 0.1.0
		       * @memberOf _
		       * @category Util
		       * @param {Function|Object} [object=lodash] The destination object.
		       * @param {Object} source The object of functions to add.
		       * @param {Object} [options={}] The options object.
		       * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
		       * @returns {Function|Object} Returns `object`.
		       * @example
		       *
		       * function vowels(string) {
		       *   return _.filter(string, function(v) {
		       *     return /[aeiou]/i.test(v);
		       *   });
		       * }
		       *
		       * _.mixin({ 'vowels': vowels });
		       * _.vowels('fred');
		       * // => ['e']
		       *
		       * _('fred').vowels().value();
		       * // => ['e']
		       *
		       * _.mixin({ 'vowels': vowels }, { 'chain': false });
		       * _('fred').vowels();
		       * // => ['e']
		       */function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain'in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({func:func,args:arguments,thisArg:object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;}/**
		         * Reverts the `_` variable to its previous value and returns a reference to
		         * the `lodash` function.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Util
		         * @returns {Function} Returns the `lodash` function.
		         * @example
		         *
		         * var lodash = _.noConflict();
		         */function noConflict(){if(root._===this){root._=oldDash;}return this;}/**
		         * This method returns `undefined`.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.3.0
		         * @category Util
		         * @example
		         *
		         * _.times(2, _.noop);
		         * // => [undefined, undefined]
		         */function noop(){}// No operation performed.
		/**
		         * Creates a function that gets the argument at index `n`. If `n` is negative,
		         * the nth argument from the end is returned.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Util
		         * @param {number} [n=0] The index of the argument to return.
		         * @returns {Function} Returns the new pass-thru function.
		         * @example
		         *
		         * var func = _.nthArg(1);
		         * func('a', 'b', 'c', 'd');
		         * // => 'b'
		         *
		         * var func = _.nthArg(-2);
		         * func('a', 'b', 'c', 'd');
		         * // => 'c'
		         */function nthArg(n){n=toInteger(n);return baseRest(function(args){return baseNth(args,n);});}/**
		         * Creates a function that invokes `iteratees` with the arguments it receives
		         * and returns their results.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Util
		         * @param {...(Function|Function[])} [iteratees=[_.identity]]
		         *  The iteratees to invoke.
		         * @returns {Function} Returns the new function.
		         * @example
		         *
		         * var func = _.over([Math.max, Math.min]);
		         *
		         * func(1, 2, 3, 4);
		         * // => [4, 1]
		         */var over=createOver(arrayMap);/**
		         * Creates a function that checks if **all** of the `predicates` return
		         * truthy when invoked with the arguments it receives.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Util
		         * @param {...(Function|Function[])} [predicates=[_.identity]]
		         *  The predicates to check.
		         * @returns {Function} Returns the new function.
		         * @example
		         *
		         * var func = _.overEvery([Boolean, isFinite]);
		         *
		         * func('1');
		         * // => true
		         *
		         * func(null);
		         * // => false
		         *
		         * func(NaN);
		         * // => false
		         */var overEvery=createOver(arrayEvery);/**
		         * Creates a function that checks if **any** of the `predicates` return
		         * truthy when invoked with the arguments it receives.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Util
		         * @param {...(Function|Function[])} [predicates=[_.identity]]
		         *  The predicates to check.
		         * @returns {Function} Returns the new function.
		         * @example
		         *
		         * var func = _.overSome([Boolean, isFinite]);
		         *
		         * func('1');
		         * // => true
		         *
		         * func(null);
		         * // => true
		         *
		         * func(NaN);
		         * // => false
		         */var overSome=createOver(arraySome);/**
		         * Creates a function that returns the value at `path` of a given object.
		         *
		         * @static
		         * @memberOf _
		         * @since 2.4.0
		         * @category Util
		         * @param {Array|string} path The path of the property to get.
		         * @returns {Function} Returns the new accessor function.
		         * @example
		         *
		         * var objects = [
		         *   { 'a': { 'b': 2 } },
		         *   { 'a': { 'b': 1 } }
		         * ];
		         *
		         * _.map(objects, _.property('a.b'));
		         * // => [2, 1]
		         *
		         * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
		         * // => [1, 2]
		         */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}/**
		         * The opposite of `_.property`; this method creates a function that returns
		         * the value at a given path of `object`.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.0.0
		         * @category Util
		         * @param {Object} object The object to query.
		         * @returns {Function} Returns the new accessor function.
		         * @example
		         *
		         * var array = [0, 1, 2],
		         *     object = { 'a': array, 'b': array, 'c': array };
		         *
		         * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
		         * // => [2, 0]
		         *
		         * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
		         * // => [2, 0]
		         */function propertyOf(object){return function(path){return object==null?undefined$1:baseGet(object,path);};}/**
		         * Creates an array of numbers (positive and/or negative) progressing from
		         * `start` up to, but not including, `end`. A step of `-1` is used if a negative
		         * `start` is specified without an `end` or `step`. If `end` is not specified,
		         * it's set to `start` with `start` then set to `0`.
		         *
		         * **Note:** JavaScript follows the IEEE-754 standard for resolving
		         * floating-point values which can produce unexpected results.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Util
		         * @param {number} [start=0] The start of the range.
		         * @param {number} end The end of the range.
		         * @param {number} [step=1] The value to increment or decrement by.
		         * @returns {Array} Returns the range of numbers.
		         * @see _.inRange, _.rangeRight
		         * @example
		         *
		         * _.range(4);
		         * // => [0, 1, 2, 3]
		         *
		         * _.range(-4);
		         * // => [0, -1, -2, -3]
		         *
		         * _.range(1, 5);
		         * // => [1, 2, 3, 4]
		         *
		         * _.range(0, 20, 5);
		         * // => [0, 5, 10, 15]
		         *
		         * _.range(0, -4, -1);
		         * // => [0, -1, -2, -3]
		         *
		         * _.range(1, 4, 0);
		         * // => [1, 1, 1]
		         *
		         * _.range(0);
		         * // => []
		         */var range=createRange();/**
		         * This method is like `_.range` except that it populates values in
		         * descending order.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Util
		         * @param {number} [start=0] The start of the range.
		         * @param {number} end The end of the range.
		         * @param {number} [step=1] The value to increment or decrement by.
		         * @returns {Array} Returns the range of numbers.
		         * @see _.inRange, _.range
		         * @example
		         *
		         * _.rangeRight(4);
		         * // => [3, 2, 1, 0]
		         *
		         * _.rangeRight(-4);
		         * // => [-3, -2, -1, 0]
		         *
		         * _.rangeRight(1, 5);
		         * // => [4, 3, 2, 1]
		         *
		         * _.rangeRight(0, 20, 5);
		         * // => [15, 10, 5, 0]
		         *
		         * _.rangeRight(0, -4, -1);
		         * // => [-3, -2, -1, 0]
		         *
		         * _.rangeRight(1, 4, 0);
		         * // => [1, 1, 1]
		         *
		         * _.rangeRight(0);
		         * // => []
		         */var rangeRight=createRange(true);/**
		         * This method returns a new empty array.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.13.0
		         * @category Util
		         * @returns {Array} Returns the new empty array.
		         * @example
		         *
		         * var arrays = _.times(2, _.stubArray);
		         *
		         * console.log(arrays);
		         * // => [[], []]
		         *
		         * console.log(arrays[0] === arrays[1]);
		         * // => false
		         */function stubArray(){return [];}/**
		         * This method returns `false`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.13.0
		         * @category Util
		         * @returns {boolean} Returns `false`.
		         * @example
		         *
		         * _.times(2, _.stubFalse);
		         * // => [false, false]
		         */function stubFalse(){return false;}/**
		         * This method returns a new empty object.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.13.0
		         * @category Util
		         * @returns {Object} Returns the new empty object.
		         * @example
		         *
		         * var objects = _.times(2, _.stubObject);
		         *
		         * console.log(objects);
		         * // => [{}, {}]
		         *
		         * console.log(objects[0] === objects[1]);
		         * // => false
		         */function stubObject(){return {};}/**
		         * This method returns an empty string.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.13.0
		         * @category Util
		         * @returns {string} Returns the empty string.
		         * @example
		         *
		         * _.times(2, _.stubString);
		         * // => ['', '']
		         */function stubString(){return '';}/**
		         * This method returns `true`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.13.0
		         * @category Util
		         * @returns {boolean} Returns `true`.
		         * @example
		         *
		         * _.times(2, _.stubTrue);
		         * // => [true, true]
		         */function stubTrue(){return true;}/**
		         * Invokes the iteratee `n` times, returning an array of the results of
		         * each invocation. The iteratee is invoked with one argument; (index).
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Util
		         * @param {number} n The number of times to invoke `iteratee`.
		         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		         * @returns {Array} Returns the array of results.
		         * @example
		         *
		         * _.times(3, String);
		         * // => ['0', '1', '2']
		         *
		         *  _.times(4, _.constant(0));
		         * // => [0, 0, 0, 0]
		         */function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return [];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}/**
		         * Converts `value` to a property path array.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Util
		         * @param {*} value The value to convert.
		         * @returns {Array} Returns the new property path array.
		         * @example
		         *
		         * _.toPath('a.b.c');
		         * // => ['a', 'b', 'c']
		         *
		         * _.toPath('a[0].b.c');
		         * // => ['a', '0', 'b', 'c']
		         */function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(toString(value)));}/**
		         * Generates a unique ID. If `prefix` is given, the ID is appended to it.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Util
		         * @param {string} [prefix=''] The value to prefix the ID with.
		         * @returns {string} Returns the unique ID.
		         * @example
		         *
		         * _.uniqueId('contact_');
		         * // => 'contact_104'
		         *
		         * _.uniqueId();
		         * // => '105'
		         */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;}/* ------------------------------------------------------------------------*//**
		         * Adds two numbers.
		         *
		         * @static
		         * @memberOf _
		         * @since 3.4.0
		         * @category Math
		         * @param {number} augend The first number in an addition.
		         * @param {number} addend The second number in an addition.
		         * @returns {number} Returns the total.
		         * @example
		         *
		         * _.add(6, 4);
		         * // => 10
		         */var add=createMathOperation(function(augend,addend){return augend+addend;},0);/**
		       * Computes `number` rounded up to `precision`.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.10.0
		       * @category Math
		       * @param {number} number The number to round up.
		       * @param {number} [precision=0] The precision to round up to.
		       * @returns {number} Returns the rounded up number.
		       * @example
		       *
		       * _.ceil(4.006);
		       * // => 5
		       *
		       * _.ceil(6.004, 2);
		       * // => 6.01
		       *
		       * _.ceil(6040, -2);
		       * // => 6100
		       */var ceil=createRound('ceil');/**
		         * Divide two numbers.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.7.0
		         * @category Math
		         * @param {number} dividend The first number in a division.
		         * @param {number} divisor The second number in a division.
		         * @returns {number} Returns the quotient.
		         * @example
		         *
		         * _.divide(6, 4);
		         * // => 1.5
		         */var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;},1);/**
		       * Computes `number` rounded down to `precision`.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.10.0
		       * @category Math
		       * @param {number} number The number to round down.
		       * @param {number} [precision=0] The precision to round down to.
		       * @returns {number} Returns the rounded down number.
		       * @example
		       *
		       * _.floor(4.006);
		       * // => 4
		       *
		       * _.floor(0.046, 2);
		       * // => 0.04
		       *
		       * _.floor(4060, -2);
		       * // => 4000
		       */var floor=createRound('floor');/**
		         * Computes the maximum value of `array`. If `array` is empty or falsey,
		         * `undefined` is returned.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Math
		         * @param {Array} array The array to iterate over.
		         * @returns {*} Returns the maximum value.
		         * @example
		         *
		         * _.max([4, 2, 8, 6]);
		         * // => 8
		         *
		         * _.max([]);
		         * // => undefined
		         */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined$1;}/**
		         * This method is like `_.max` except that it accepts `iteratee` which is
		         * invoked for each element in `array` to generate the criterion by which
		         * the value is ranked. The iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Math
		         * @param {Array} array The array to iterate over.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {*} Returns the maximum value.
		         * @example
		         *
		         * var objects = [{ 'n': 1 }, { 'n': 2 }];
		         *
		         * _.maxBy(objects, function(o) { return o.n; });
		         * // => { 'n': 2 }
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.maxBy(objects, 'n');
		         * // => { 'n': 2 }
		         */function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseGt):undefined$1;}/**
		         * Computes the mean of the values in `array`.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Math
		         * @param {Array} array The array to iterate over.
		         * @returns {number} Returns the mean.
		         * @example
		         *
		         * _.mean([4, 2, 8, 6]);
		         * // => 5
		         */function mean(array){return baseMean(array,identity);}/**
		         * This method is like `_.mean` except that it accepts `iteratee` which is
		         * invoked for each element in `array` to generate the value to be averaged.
		         * The iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.7.0
		         * @category Math
		         * @param {Array} array The array to iterate over.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {number} Returns the mean.
		         * @example
		         *
		         * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
		         *
		         * _.meanBy(objects, function(o) { return o.n; });
		         * // => 5
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.meanBy(objects, 'n');
		         * // => 5
		         */function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee,2));}/**
		         * Computes the minimum value of `array`. If `array` is empty or falsey,
		         * `undefined` is returned.
		         *
		         * @static
		         * @since 0.1.0
		         * @memberOf _
		         * @category Math
		         * @param {Array} array The array to iterate over.
		         * @returns {*} Returns the minimum value.
		         * @example
		         *
		         * _.min([4, 2, 8, 6]);
		         * // => 2
		         *
		         * _.min([]);
		         * // => undefined
		         */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined$1;}/**
		         * This method is like `_.min` except that it accepts `iteratee` which is
		         * invoked for each element in `array` to generate the criterion by which
		         * the value is ranked. The iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Math
		         * @param {Array} array The array to iterate over.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {*} Returns the minimum value.
		         * @example
		         *
		         * var objects = [{ 'n': 1 }, { 'n': 2 }];
		         *
		         * _.minBy(objects, function(o) { return o.n; });
		         * // => { 'n': 1 }
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.minBy(objects, 'n');
		         * // => { 'n': 1 }
		         */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseLt):undefined$1;}/**
		         * Multiply two numbers.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.7.0
		         * @category Math
		         * @param {number} multiplier The first number in a multiplication.
		         * @param {number} multiplicand The second number in a multiplication.
		         * @returns {number} Returns the product.
		         * @example
		         *
		         * _.multiply(6, 4);
		         * // => 24
		         */var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;},1);/**
		       * Computes `number` rounded to `precision`.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.10.0
		       * @category Math
		       * @param {number} number The number to round.
		       * @param {number} [precision=0] The precision to round to.
		       * @returns {number} Returns the rounded number.
		       * @example
		       *
		       * _.round(4.006);
		       * // => 4
		       *
		       * _.round(4.006, 2);
		       * // => 4.01
		       *
		       * _.round(4060, -2);
		       * // => 4100
		       */var round=createRound('round');/**
		         * Subtract two numbers.
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Math
		         * @param {number} minuend The first number in a subtraction.
		         * @param {number} subtrahend The second number in a subtraction.
		         * @returns {number} Returns the difference.
		         * @example
		         *
		         * _.subtract(6, 4);
		         * // => 2
		         */var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;},0);/**
		       * Computes the sum of the values in `array`.
		       *
		       * @static
		       * @memberOf _
		       * @since 3.4.0
		       * @category Math
		       * @param {Array} array The array to iterate over.
		       * @returns {number} Returns the sum.
		       * @example
		       *
		       * _.sum([4, 2, 8, 6]);
		       * // => 20
		       */function sum(array){return array&&array.length?baseSum(array,identity):0;}/**
		         * This method is like `_.sum` except that it accepts `iteratee` which is
		         * invoked for each element in `array` to generate the value to be summed.
		         * The iteratee is invoked with one argument: (value).
		         *
		         * @static
		         * @memberOf _
		         * @since 4.0.0
		         * @category Math
		         * @param {Array} array The array to iterate over.
		         * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		         * @returns {number} Returns the sum.
		         * @example
		         *
		         * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
		         *
		         * _.sumBy(objects, function(o) { return o.n; });
		         * // => 20
		         *
		         * // The `_.property` iteratee shorthand.
		         * _.sumBy(objects, 'n');
		         * // => 20
		         */function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee,2)):0;}/* ------------------------------------------------------------------------*/// Add methods that return wrapped values in chain sequences.
		lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith;// Add aliases.
		lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith;// Add methods to `lodash.prototype`.
		mixin(lodash,lodash);/* ------------------------------------------------------------------------*/// Add methods that return unwrapped values in chain sequences.
		lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.conformsTo=conformsTo;lodash.deburr=deburr;lodash.defaultTo=defaultTo;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.stubArray=stubArray;lodash.stubFalse=stubFalse;lodash.stubObject=stubObject;lodash.stubString=stubString;lodash.stubTrue=stubTrue;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst;// Add aliases.
		lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{chain:false});/* ------------------------------------------------------------------------*//**
		         * The semantic version number.
		         *
		         * @static
		         * @memberOf _
		         * @type {string}
		         */lodash.VERSION=VERSION;// Assign default placeholders.
		arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;});// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
		arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){n=n===undefined$1?1:nativeMax(toInteger(n),0);var result=this.__filtered__&&!index?new LazyWrapper(this):this.clone();if(result.__filtered__){result.__takeCount__=nativeMin(n,result.__takeCount__);}else {result.__views__.push({size:nativeMin(n,MAX_ARRAY_LENGTH),type:methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};});// Add `LazyWrapper` methods that accept an `iteratee` value.
		arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({iteratee:getIteratee(iteratee,3),type:type});result.__filtered__=result.__filtered__||isFilter;return result;};});// Add `LazyWrapper` methods for `_.head` and `_.last`.
		arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};});// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
		arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=baseRest(function(path,args){if(typeof path==='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){return this.filter(negate(getIteratee(predicate)));};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined$1){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);};// Add `LazyWrapper` methods to `lodash.prototype`.
		baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function interceptor(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee==='function'&&iteratee.length!=1){// Avoid lazy use if the iteratee has a "length" value other than `1`.
		isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({func:thru,args:[interceptor],thisArg:undefined$1});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};});// Add `Array` methods to `lodash.prototype`.
		arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};});// Map minified method names to their real names.
		baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'',names=realNames[key]||(realNames[key]=[]);names.push({name:methodName,func:lodashFunc});}});realNames[createHybrid(undefined$1,WRAP_BIND_KEY_FLAG).name]=[{name:'wrapper',func:undefined$1}];// Add methods to `LazyWrapper`.
		LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue;// Add chain sequence methods to the `lodash` wrapper.
		lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;// Add lazy aliases.
		lodash.prototype.first=lodash.prototype.head;if(symIterator){lodash.prototype[symIterator]=wrapperToIterator;}return lodash;};/* --------------------------------------------------------------------------*/// Export lodash.
		var _=runInContext();// Some AMD build optimizers, like r.js, check for condition patterns like:
		if(freeModule){// Export for Node.js.
		(freeModule.exports=_)._=_;// Export for CommonJS support.
		freeExports._=_;}else {// Export to the global object.
		root._=_;}}).call(undefined); 
	} (lodash, lodash.exports));
	return lodash.exports;
}

var buttonGroup = {exports: {}};

var hasRequiredButtonGroup;

function requireButtonGroup () {
	if (hasRequiredButtonGroup) return buttonGroup.exports;
	hasRequiredButtonGroup = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 97);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 97:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button-group.vue?vue&type=template&id=3d8661d0&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c("div", { staticClass: "el-button-group" }, [_vm._t("default")], 2)
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/button/src/button-group.vue?vue&type=template&id=3d8661d0&

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button-group.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//

		/* harmony default export */ var button_groupvue_type_script_lang_js_ = ({
		  name: 'ElButtonGroup'
		});
		// CONCATENATED MODULE: ./packages/button/src/button-group.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_button_groupvue_type_script_lang_js_ = (button_groupvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/button/src/button-group.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_button_groupvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/button/src/button-group.vue";
		/* harmony default export */ var button_group = (component.exports);
		// CONCATENATED MODULE: ./packages/button-group/index.js


		/* istanbul ignore next */
		button_group.install = function (Vue) {
		  Vue.component(button_group.name, button_group);
		};

		/* harmony default export */ __webpack_exports__["default"] = (button_group);

		/***/ })

		/******/ }); 
	} (buttonGroup));
	return buttonGroup.exports;
}

var tag = {exports: {}};

var hasRequiredTag;

function requireTag () {
	if (hasRequiredTag) return tag.exports;
	hasRequiredTag = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 132);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 132:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tag/src/tag.vue?vue&type=script&lang=js&

		/* harmony default export */ var tagvue_type_script_lang_js_ = ({
		  name: 'ElTag',
		  props: {
		    text: String,
		    closable: Boolean,
		    type: String,
		    hit: Boolean,
		    disableTransitions: Boolean,
		    color: String,
		    size: String,
		    effect: {
		      type: String,
		      default: 'light',
		      validator: function validator(val) {
		        return ['dark', 'light', 'plain'].indexOf(val) !== -1;
		      }
		    }
		  },
		  methods: {
		    handleClose: function handleClose(event) {
		      event.stopPropagation();
		      this.$emit('close', event);
		    },
		    handleClick: function handleClick(event) {
		      this.$emit('click', event);
		    }
		  },
		  computed: {
		    tagSize: function tagSize() {
		      return this.size || (this.$ELEMENT || {}).size;
		    }
		  },
		  render: function render(h) {
		    var type = this.type,
		        tagSize = this.tagSize,
		        hit = this.hit,
		        effect = this.effect;

		    var classes = ['el-tag', type ? 'el-tag--' + type : '', tagSize ? 'el-tag--' + tagSize : '', effect ? 'el-tag--' + effect : '', hit && 'is-hit'];
		    var tagEl = h(
		      'span',
		      {
		        'class': classes,
		        style: { backgroundColor: this.color },
		        on: {
		          'click': this.handleClick
		        }
		      },
		      [this.$slots.default, this.closable && h('i', { 'class': 'el-tag__close el-icon-close', on: {
		          'click': this.handleClose
		        }
		      })]
		    );

		    return this.disableTransitions ? tagEl : h(
		      'transition',
		      {
		        attrs: { name: 'el-zoom-in-center' }
		      },
		      [tagEl]
		    );
		  }
		});
		// CONCATENATED MODULE: ./packages/tag/src/tag.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_tagvue_type_script_lang_js_ = (tagvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/tag/src/tag.vue
		var render, staticRenderFns;




		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_tagvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/tag/src/tag.vue";
		/* harmony default export */ var tag = (component.exports);
		// CONCATENATED MODULE: ./packages/tag/index.js


		/* istanbul ignore next */
		tag.install = function (Vue) {
		  Vue.component(tag.name, tag);
		};

		/* harmony default export */ __webpack_exports__["default"] = (tag);

		/***/ })

		/******/ }); 
	} (tag));
	return tag.exports;
}

var checkboxGroup = {exports: {}};

var hasRequiredCheckboxGroup;

function requireCheckboxGroup () {
	if (hasRequiredCheckboxGroup) return checkboxGroup.exports;
	hasRequiredCheckboxGroup = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 93);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 4:
		/***/ (function(module, exports) {

		module.exports = requireEmitter();

		/***/ }),

		/***/ 93:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-group.vue?vue&type=template&id=7289a290&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "div",
		    {
		      staticClass: "el-checkbox-group",
		      attrs: { role: "group", "aria-label": "checkbox-group" }
		    },
		    [_vm._t("default")],
		    2
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue?vue&type=template&id=7289a290&

		// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
		var emitter_ = __webpack_require__(4);
		var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&



		/* harmony default export */ var checkbox_groupvue_type_script_lang_js_ = ({
		  name: 'ElCheckboxGroup',

		  componentName: 'ElCheckboxGroup',

		  mixins: [emitter_default.a],

		  inject: {
		    elFormItem: {
		      default: ''
		    }
		  },

		  props: {
		    value: {},
		    disabled: Boolean,
		    min: Number,
		    max: Number,
		    size: String,
		    fill: String,
		    textColor: String
		  },

		  computed: {
		    _elFormItemSize: function _elFormItemSize() {
		      return (this.elFormItem || {}).elFormItemSize;
		    },
		    checkboxGroupSize: function checkboxGroupSize() {
		      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
		    }
		  },

		  watch: {
		    value: function value(_value) {
		      this.dispatch('ElFormItem', 'el.form.change', [_value]);
		    }
		  }
		});
		// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_checkbox_groupvue_type_script_lang_js_ = (checkbox_groupvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_checkbox_groupvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/checkbox/src/checkbox-group.vue";
		/* harmony default export */ var checkbox_group = (component.exports);
		// CONCATENATED MODULE: ./packages/checkbox-group/index.js


		/* istanbul ignore next */
		checkbox_group.install = function (Vue) {
		  Vue.component(checkbox_group.name, checkbox_group);
		};

		/* harmony default export */ __webpack_exports__["default"] = (checkbox_group);

		/***/ })

		/******/ }); 
	} (checkboxGroup));
	return checkboxGroup.exports;
}

var afterLeave = {};

var hasRequiredAfterLeave;

function requireAfterLeave () {
	if (hasRequiredAfterLeave) return afterLeave;
	hasRequiredAfterLeave = 1;

	afterLeave.__esModule = true;

	afterLeave.default = function (instance, callback) {
	  var speed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;
	  var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

	  if (!instance || !callback) throw new Error('instance & callback is required');
	  var called = false;
	  var afterLeaveCallback = function afterLeaveCallback() {
	    if (called) return;
	    called = true;
	    if (callback) {
	      callback.apply(null, arguments);
	    }
	  };
	  if (once) {
	    instance.$once('after-leave', afterLeaveCallback);
	  } else {
	    instance.$on('after-leave', afterLeaveCallback);
	  }
	  setTimeout(function () {
	    afterLeaveCallback();
	  }, speed + 100);
	};
	return afterLeave;
}

var progress = {exports: {}};

var hasRequiredProgress;

function requireProgress () {
	if (hasRequiredProgress) return progress.exports;
	hasRequiredProgress = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 104);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 104:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/progress/src/progress.vue?vue&type=template&id=229ee406&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "div",
		    {
		      staticClass: "el-progress",
		      class: [
		        "el-progress--" + _vm.type,
		        _vm.status ? "is-" + _vm.status : "",
		        {
		          "el-progress--without-text": !_vm.showText,
		          "el-progress--text-inside": _vm.textInside
		        }
		      ],
		      attrs: {
		        role: "progressbar",
		        "aria-valuenow": _vm.percentage,
		        "aria-valuemin": "0",
		        "aria-valuemax": "100"
		      }
		    },
		    [
		      _vm.type === "line"
		        ? _c("div", { staticClass: "el-progress-bar" }, [
		            _c(
		              "div",
		              {
		                staticClass: "el-progress-bar__outer",
		                style: {
		                  height: _vm.strokeWidth + "px",
		                  backgroundColor: _vm.defineBackColor
		                }
		              },
		              [
		                _c(
		                  "div",
		                  {
		                    staticClass: "el-progress-bar__inner",
		                    style: _vm.barStyle
		                  },
		                  [
		                    _vm.showText && _vm.textInside
		                      ? _c(
		                          "div",
		                          {
		                            staticClass: "el-progress-bar__innerText",
		                            style: { color: _vm.textColor }
		                          },
		                          [_vm._v(_vm._s(_vm.content))]
		                        )
		                      : _vm._e()
		                  ]
		                )
		              ]
		            )
		          ])
		        : _c(
		            "div",
		            {
		              staticClass: "el-progress-circle",
		              style: { height: _vm.width + "px", width: _vm.width + "px" }
		            },
		            [
		              _c("svg", { attrs: { viewBox: "0 0 100 100" } }, [
		                _c("path", {
		                  staticClass: "el-progress-circle__track",
		                  style: _vm.trailPathStyle,
		                  attrs: {
		                    d: _vm.trackPath,
		                    stroke: _vm.defineBackColor,
		                    "stroke-width": _vm.relativeStrokeWidth,
		                    fill: "none"
		                  }
		                }),
		                _c("path", {
		                  staticClass: "el-progress-circle__path",
		                  style: _vm.circlePathStyle,
		                  attrs: {
		                    d: _vm.trackPath,
		                    stroke: _vm.stroke,
		                    fill: "none",
		                    "stroke-linecap": _vm.strokeLinecap,
		                    "stroke-width": _vm.percentage ? _vm.relativeStrokeWidth : 0
		                  }
		                })
		              ])
		            ]
		          ),
		      _vm.showText && !_vm.textInside
		        ? _c(
		            "div",
		            {
		              staticClass: "el-progress__text",
		              style: {
		                fontSize: _vm.progressTextSize + "px",
		                color: _vm.textColor
		              }
		            },
		            [
		              !_vm.status
		                ? [_vm._v(_vm._s(_vm.content))]
		                : _c("i", { class: _vm.iconClass })
		            ],
		            2
		          )
		        : _vm._e()
		    ]
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/progress/src/progress.vue?vue&type=template&id=229ee406&

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/progress/src/progress.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//

		/* harmony default export */ var progressvue_type_script_lang_js_ = ({
		  name: 'ElProgress',
		  props: {
		    type: {
		      type: String,
		      default: 'line',
		      validator: function validator(val) {
		        return ['line', 'circle', 'dashboard'].indexOf(val) > -1;
		      }
		    },
		    percentage: {
		      type: Number,
		      default: 0,
		      required: true,
		      validator: function validator(val) {
		        return val >= 0 && val <= 100;
		      }
		    },
		    status: {
		      type: String,
		      validator: function validator(val) {
		        return ['success', 'exception', 'warning'].indexOf(val) > -1;
		      }
		    },
		    strokeWidth: {
		      type: Number,
		      default: 6
		    },
		    strokeLinecap: {
		      type: String,
		      default: 'round'
		    },
		    textInside: {
		      type: Boolean,
		      default: false
		    },
		    width: {
		      type: Number,
		      default: 126
		    },
		    showText: {
		      type: Boolean,
		      default: true
		    },
		    color: {
		      type: [String, Array, Function],
		      default: ''
		    },
		    defineBackColor: {
		      type: [String, Array, Function],
		      default: '#ebeef5'
		    },
		    textColor: {
		      type: [String, Array, Function],
		      default: '#606266'
		    },
		    format: Function
		  },
		  computed: {
		    barStyle: function barStyle() {
		      var style = {};
		      style.width = this.percentage + '%';
		      style.backgroundColor = this.getCurrentColor(this.percentage);
		      return style;
		    },
		    relativeStrokeWidth: function relativeStrokeWidth() {
		      return (this.strokeWidth / this.width * 100).toFixed(1);
		    },
		    radius: function radius() {
		      if (this.type === 'circle' || this.type === 'dashboard') {
		        return parseInt(50 - parseFloat(this.relativeStrokeWidth) / 2, 10);
		      } else {
		        return 0;
		      }
		    },
		    trackPath: function trackPath() {
		      var radius = this.radius;
		      var isDashboard = this.type === 'dashboard';
		      return '\n        M 50 50\n        m 0 ' + (isDashboard ? '' : '-') + radius + '\n        a ' + radius + ' ' + radius + ' 0 1 1 0 ' + (isDashboard ? '-' : '') + radius * 2 + '\n        a ' + radius + ' ' + radius + ' 0 1 1 0 ' + (isDashboard ? '' : '-') + radius * 2 + '\n        ';
		    },
		    perimeter: function perimeter() {
		      return 2 * Math.PI * this.radius;
		    },
		    rate: function rate() {
		      return this.type === 'dashboard' ? 0.75 : 1;
		    },
		    strokeDashoffset: function strokeDashoffset() {
		      var offset = -1 * this.perimeter * (1 - this.rate) / 2;
		      return offset + 'px';
		    },
		    trailPathStyle: function trailPathStyle() {
		      return {
		        strokeDasharray: this.perimeter * this.rate + 'px, ' + this.perimeter + 'px',
		        strokeDashoffset: this.strokeDashoffset
		      };
		    },
		    circlePathStyle: function circlePathStyle() {
		      return {
		        strokeDasharray: this.perimeter * this.rate * (this.percentage / 100) + 'px, ' + this.perimeter + 'px',
		        strokeDashoffset: this.strokeDashoffset,
		        transition: 'stroke-dasharray 0.6s ease 0s, stroke 0.6s ease'
		      };
		    },
		    stroke: function stroke() {
		      var ret = void 0;
		      if (this.color) {
		        ret = this.getCurrentColor(this.percentage);
		      } else {
		        switch (this.status) {
		          case 'success':
		            ret = '#13ce66';
		            break;
		          case 'exception':
		            ret = '#ff4949';
		            break;
		          case 'warning':
		            ret = '#e6a23c';
		            break;
		          default:
		            ret = '#20a0ff';
		        }
		      }
		      return ret;
		    },
		    iconClass: function iconClass() {
		      if (this.status === 'warning') {
		        return 'el-icon-warning';
		      }
		      if (this.type === 'line') {
		        return this.status === 'success' ? 'el-icon-circle-check' : 'el-icon-circle-close';
		      } else {
		        return this.status === 'success' ? 'el-icon-check' : 'el-icon-close';
		      }
		    },
		    progressTextSize: function progressTextSize() {
		      return this.type === 'line' ? 12 + this.strokeWidth * 0.4 : this.width * 0.111111 + 2;
		    },
		    content: function content() {
		      if (typeof this.format === 'function') {
		        return this.format(this.percentage) || '';
		      } else {
		        return this.percentage + '%';
		      }
		    }
		  },
		  methods: {
		    getCurrentColor: function getCurrentColor(percentage) {
		      if (typeof this.color === 'function') {
		        return this.color(percentage);
		      } else if (typeof this.color === 'string') {
		        return this.color;
		      } else {
		        return this.getLevelColor(percentage);
		      }
		    },
		    getLevelColor: function getLevelColor(percentage) {
		      var colorArray = this.getColorArray().sort(function (a, b) {
		        return a.percentage - b.percentage;
		      });

		      for (var i = 0; i < colorArray.length; i++) {
		        if (colorArray[i].percentage > percentage) {
		          return colorArray[i].color;
		        }
		      }
		      return colorArray[colorArray.length - 1].color;
		    },
		    getColorArray: function getColorArray() {
		      var color = this.color;
		      var span = 100 / color.length;
		      return color.map(function (seriesColor, index) {
		        if (typeof seriesColor === 'string') {
		          return {
		            color: seriesColor,
		            percentage: (index + 1) * span
		          };
		        }
		        return seriesColor;
		      });
		    }
		  }
		});
		// CONCATENATED MODULE: ./packages/progress/src/progress.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_progressvue_type_script_lang_js_ = (progressvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/progress/src/progress.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_progressvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/progress/src/progress.vue";
		/* harmony default export */ var progress = (component.exports);
		// CONCATENATED MODULE: ./packages/progress/index.js


		/* istanbul ignore next */
		progress.install = function (Vue) {
		  Vue.component(progress.name, progress);
		};

		/* harmony default export */ __webpack_exports__["default"] = (progress);

		/***/ })

		/******/ }); 
	} (progress));
	return progress.exports;
}

var ariaUtils = {};

var hasRequiredAriaUtils;

function requireAriaUtils () {
	if (hasRequiredAriaUtils) return ariaUtils;
	hasRequiredAriaUtils = 1;

	ariaUtils.__esModule = true;
	var aria = aria || {};

	aria.Utils = aria.Utils || {};

	/**
	 * @desc Set focus on descendant nodes until the first focusable element is
	 *       found.
	 * @param element
	 *          DOM node for which to find the first focusable descendant.
	 * @returns
	 *  true if a focusable element is found and focus is set.
	 */
	aria.Utils.focusFirstDescendant = function (element) {
	  for (var i = 0; i < element.childNodes.length; i++) {
	    var child = element.childNodes[i];
	    if (aria.Utils.attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {
	      return true;
	    }
	  }
	  return false;
	};

	/**
	 * @desc Find the last descendant node that is focusable.
	 * @param element
	 *          DOM node for which to find the last focusable descendant.
	 * @returns
	 *  true if a focusable element is found and focus is set.
	 */

	aria.Utils.focusLastDescendant = function (element) {
	  for (var i = element.childNodes.length - 1; i >= 0; i--) {
	    var child = element.childNodes[i];
	    if (aria.Utils.attemptFocus(child) || aria.Utils.focusLastDescendant(child)) {
	      return true;
	    }
	  }
	  return false;
	};

	/**
	 * @desc Set Attempt to set focus on the current node.
	 * @param element
	 *          The node to attempt to focus on.
	 * @returns
	 *  true if element is focused.
	 */
	aria.Utils.attemptFocus = function (element) {
	  if (!aria.Utils.isFocusable(element)) {
	    return false;
	  }
	  aria.Utils.IgnoreUtilFocusChanges = true;
	  try {
	    element.focus();
	  } catch (e) {}
	  aria.Utils.IgnoreUtilFocusChanges = false;
	  return document.activeElement === element;
	};

	aria.Utils.isFocusable = function (element) {
	  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute('tabIndex') !== null) {
	    return true;
	  }

	  if (element.disabled) {
	    return false;
	  }

	  switch (element.nodeName) {
	    case 'A':
	      return !!element.href && element.rel !== 'ignore';
	    case 'INPUT':
	      return element.type !== 'hidden' && element.type !== 'file';
	    case 'BUTTON':
	    case 'SELECT':
	    case 'TEXTAREA':
	      return true;
	    default:
	      return false;
	  }
	};

	/**
	 * 触发一个事件
	 * mouseenter, mouseleave, mouseover, keyup, change, click 等
	 * @param  {Element} elm
	 * @param  {String} name
	 * @param  {*} opts
	 */
	aria.Utils.triggerEvent = function (elm, name) {
	  var eventName = void 0;

	  if (/^mouse|click/.test(name)) {
	    eventName = 'MouseEvents';
	  } else if (/^key/.test(name)) {
	    eventName = 'KeyboardEvent';
	  } else {
	    eventName = 'HTMLEvents';
	  }
	  var evt = document.createEvent(eventName);

	  for (var _len = arguments.length, opts = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    opts[_key - 2] = arguments[_key];
	  }

	  evt.initEvent.apply(evt, [name].concat(opts));
	  elm.dispatchEvent ? elm.dispatchEvent(evt) : elm.fireEvent('on' + name, evt);

	  return elm;
	};

	aria.Utils.keys = {
	  tab: 9,
	  enter: 13,
	  space: 32,
	  left: 37,
	  up: 38,
	  right: 39,
	  down: 40,
	  esc: 27
	};

	ariaUtils.default = aria.Utils;
	return ariaUtils;
}

var select = {exports: {}};

var hasRequiredSelect;

function requireSelect () {
	if (hasRequiredSelect) return select.exports;
	hasRequiredSelect = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 62);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 10:
		/***/ (function(module, exports) {

		module.exports = requireInput();

		/***/ }),

		/***/ 12:
		/***/ (function(module, exports) {

		module.exports = requireClickoutside();

		/***/ }),

		/***/ 15:
		/***/ (function(module, exports) {

		module.exports = requireScrollbar();

		/***/ }),

		/***/ 16:
		/***/ (function(module, exports) {

		module.exports = requireResizeEvent();

		/***/ }),

		/***/ 19:
		/***/ (function(module, exports) {

		module.exports = requireDebounce$1();

		/***/ }),

		/***/ 21:
		/***/ (function(module, exports) {

		module.exports = requireShared();

		/***/ }),

		/***/ 22:
		/***/ (function(module, exports) {

		module.exports = requireFocus();

		/***/ }),

		/***/ 3:
		/***/ (function(module, exports) {

		module.exports = requireUtil();

		/***/ }),

		/***/ 31:
		/***/ (function(module, exports) {

		module.exports = requireScrollIntoView();

		/***/ }),

		/***/ 33:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=template&id=7a44c642&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "li",
		    {
		      directives: [
		        {
		          name: "show",
		          rawName: "v-show",
		          value: _vm.visible,
		          expression: "visible"
		        }
		      ],
		      staticClass: "el-select-dropdown__item",
		      class: {
		        selected: _vm.itemSelected,
		        "is-disabled": _vm.disabled || _vm.groupDisabled || _vm.limitReached,
		        hover: _vm.hover
		      },
		      on: {
		        mouseenter: _vm.hoverItem,
		        click: function($event) {
		          $event.stopPropagation();
		          return _vm.selectOptionClick($event)
		        }
		      }
		    },
		    [_vm._t("default", [_c("span", [_vm._v(_vm._s(_vm.currentLabel))])])],
		    2
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=template&id=7a44c642&

		// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
		var emitter_ = __webpack_require__(4);
		var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/util"
		var util_ = __webpack_require__(3);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=script&lang=js&
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//




		/* harmony default export */ var optionvue_type_script_lang_js_ = ({
		  mixins: [emitter_default.a],

		  name: 'ElOption',

		  componentName: 'ElOption',

		  inject: ['select'],

		  props: {
		    value: {
		      required: true
		    },
		    label: [String, Number],
		    created: Boolean,
		    disabled: {
		      type: Boolean,
		      default: false
		    }
		  },

		  data: function data() {
		    return {
		      index: -1,
		      groupDisabled: false,
		      visible: true,
		      hitState: false,
		      hover: false
		    };
		  },


		  computed: {
		    isObject: function isObject() {
		      return Object.prototype.toString.call(this.value).toLowerCase() === '[object object]';
		    },
		    currentLabel: function currentLabel() {
		      return this.label || (this.isObject ? '' : this.value);
		    },
		    currentValue: function currentValue() {
		      return this.value || this.label || '';
		    },
		    itemSelected: function itemSelected() {
		      if (!this.select.multiple) {
		        return this.isEqual(this.value, this.select.value);
		      } else {
		        return this.contains(this.select.value, this.value);
		      }
		    },
		    limitReached: function limitReached() {
		      if (this.select.multiple) {
		        return !this.itemSelected && (this.select.value || []).length >= this.select.multipleLimit && this.select.multipleLimit > 0;
		      } else {
		        return false;
		      }
		    }
		  },

		  watch: {
		    currentLabel: function currentLabel() {
		      if (!this.created && !this.select.remote) this.dispatch('ElSelect', 'setSelected');
		    },
		    value: function value(val, oldVal) {
		      var _select = this.select,
		          remote = _select.remote,
		          valueKey = _select.valueKey;

		      if (!this.created && !remote) {
		        if (valueKey && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && (typeof oldVal === 'undefined' ? 'undefined' : _typeof(oldVal)) === 'object' && val[valueKey] === oldVal[valueKey]) {
		          return;
		        }
		        this.dispatch('ElSelect', 'setSelected');
		      }
		    }
		  },

		  methods: {
		    isEqual: function isEqual(a, b) {
		      if (!this.isObject) {
		        return a === b;
		      } else {
		        var valueKey = this.select.valueKey;
		        return Object(util_["getValueByPath"])(a, valueKey) === Object(util_["getValueByPath"])(b, valueKey);
		      }
		    },
		    contains: function contains() {
		      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
		      var target = arguments[1];

		      if (!this.isObject) {
		        return arr && arr.indexOf(target) > -1;
		      } else {
		        var valueKey = this.select.valueKey;
		        return arr && arr.some(function (item) {
		          return Object(util_["getValueByPath"])(item, valueKey) === Object(util_["getValueByPath"])(target, valueKey);
		        });
		      }
		    },
		    handleGroupDisabled: function handleGroupDisabled(val) {
		      this.groupDisabled = val;
		    },
		    hoverItem: function hoverItem() {
		      if (!this.disabled && !this.groupDisabled) {
		        this.select.hoverIndex = this.select.options.indexOf(this);
		      }
		    },
		    selectOptionClick: function selectOptionClick() {
		      if (this.disabled !== true && this.groupDisabled !== true) {
		        this.dispatch('ElSelect', 'handleOptionClick', [this, true]);
		      }
		    },
		    queryChange: function queryChange(query) {
		      this.visible = new RegExp(Object(util_["escapeRegexpString"])(query), 'i').test(this.currentLabel) || this.created;
		      if (!this.visible) {
		        this.select.filteredOptionsCount--;
		      }
		    }
		  },

		  created: function created() {
		    this.select.options.push(this);
		    this.select.cachedOptions.push(this);
		    this.select.optionsCount++;
		    this.select.filteredOptionsCount++;

		    this.$on('queryChange', this.queryChange);
		    this.$on('handleGroupDisabled', this.handleGroupDisabled);
		  },
		  beforeDestroy: function beforeDestroy() {
		    var _select2 = this.select,
		        selected = _select2.selected,
		        multiple = _select2.multiple;

		    var selectedOptions = multiple ? selected : [selected];
		    var index = this.select.cachedOptions.indexOf(this);
		    var selectedIndex = selectedOptions.indexOf(this);

		    // if option is not selected, remove it from cache
		    if (index > -1 && selectedIndex < 0) {
		      this.select.cachedOptions.splice(index, 1);
		    }
		    this.select.onOptionDestroy(this.select.options.indexOf(this));
		  }
		});
		// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_optionvue_type_script_lang_js_ = (optionvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/select/src/option.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_optionvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/select/src/option.vue";
		/* harmony default export */ __webpack_exports__["a"] = (component.exports);

		/***/ }),

		/***/ 38:
		/***/ (function(module, exports) {

		module.exports = requireTag();

		/***/ }),

		/***/ 4:
		/***/ (function(module, exports) {

		module.exports = requireEmitter();

		/***/ }),

		/***/ 5:
		/***/ (function(module, exports) {

		module.exports = requireVuePopper();

		/***/ }),

		/***/ 6:
		/***/ (function(module, exports) {

		module.exports = requireLocale();

		/***/ }),

		/***/ 62:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=template&id=0e4aade6&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "div",
		    {
		      directives: [
		        {
		          name: "clickoutside",
		          rawName: "v-clickoutside",
		          value: _vm.handleClose,
		          expression: "handleClose"
		        }
		      ],
		      staticClass: "el-select",
		      class: [_vm.selectSize ? "el-select--" + _vm.selectSize : ""],
		      on: {
		        click: function($event) {
		          $event.stopPropagation();
		          return _vm.toggleMenu($event)
		        }
		      }
		    },
		    [
		      _vm.multiple
		        ? _c(
		            "div",
		            {
		              ref: "tags",
		              staticClass: "el-select__tags",
		              style: { "max-width": _vm.inputWidth - 32 + "px", width: "100%" }
		            },
		            [
		              _vm.collapseTags && _vm.selected.length
		                ? _c(
		                    "span",
		                    [
		                      _c(
		                        "el-tag",
		                        {
		                          attrs: {
		                            closable: !_vm.selectDisabled,
		                            size: _vm.collapseTagSize,
		                            hit: _vm.selected[0].hitState,
		                            type: "info",
		                            "disable-transitions": ""
		                          },
		                          on: {
		                            close: function($event) {
		                              _vm.deleteTag($event, _vm.selected[0]);
		                            }
		                          }
		                        },
		                        [
		                          _c("span", { staticClass: "el-select__tags-text" }, [
		                            _vm._v(_vm._s(_vm.selected[0].currentLabel))
		                          ])
		                        ]
		                      ),
		                      _vm.selected.length > 1
		                        ? _c(
		                            "el-tag",
		                            {
		                              attrs: {
		                                closable: false,
		                                size: _vm.collapseTagSize,
		                                type: "info",
		                                "disable-transitions": ""
		                              }
		                            },
		                            [
		                              _c(
		                                "span",
		                                { staticClass: "el-select__tags-text" },
		                                [_vm._v("+ " + _vm._s(_vm.selected.length - 1))]
		                              )
		                            ]
		                          )
		                        : _vm._e()
		                    ],
		                    1
		                  )
		                : _vm._e(),
		              !_vm.collapseTags
		                ? _c(
		                    "transition-group",
		                    { on: { "after-leave": _vm.resetInputHeight } },
		                    _vm._l(_vm.selected, function(item) {
		                      return _c(
		                        "el-tag",
		                        {
		                          key: _vm.getValueKey(item),
		                          attrs: {
		                            closable: !_vm.selectDisabled,
		                            size: _vm.collapseTagSize,
		                            hit: item.hitState,
		                            type: "info",
		                            "disable-transitions": ""
		                          },
		                          on: {
		                            close: function($event) {
		                              _vm.deleteTag($event, item);
		                            }
		                          }
		                        },
		                        [
		                          _c("span", { staticClass: "el-select__tags-text" }, [
		                            _vm._v(_vm._s(item.currentLabel))
		                          ])
		                        ]
		                      )
		                    }),
		                    1
		                  )
		                : _vm._e(),
		              _vm.filterable
		                ? _c("input", {
		                    directives: [
		                      {
		                        name: "model",
		                        rawName: "v-model",
		                        value: _vm.query,
		                        expression: "query"
		                      }
		                    ],
		                    ref: "input",
		                    staticClass: "el-select__input",
		                    class: [_vm.selectSize ? "is-" + _vm.selectSize : ""],
		                    style: {
		                      "flex-grow": "1",
		                      width: _vm.inputLength / (_vm.inputWidth - 32) + "%",
		                      "max-width": _vm.inputWidth - 42 + "px"
		                    },
		                    attrs: {
		                      type: "text",
		                      disabled: _vm.selectDisabled,
		                      autocomplete: _vm.autoComplete || _vm.autocomplete
		                    },
		                    domProps: { value: _vm.query },
		                    on: {
		                      focus: _vm.handleFocus,
		                      blur: function($event) {
		                        _vm.softFocus = false;
		                      },
		                      keyup: _vm.managePlaceholder,
		                      keydown: [
		                        _vm.resetInputState,
		                        function($event) {
		                          if (
		                            !("button" in $event) &&
		                            _vm._k($event.keyCode, "down", 40, $event.key, [
		                              "Down",
		                              "ArrowDown"
		                            ])
		                          ) {
		                            return null
		                          }
		                          $event.preventDefault();
		                          _vm.handleNavigate("next");
		                        },
		                        function($event) {
		                          if (
		                            !("button" in $event) &&
		                            _vm._k($event.keyCode, "up", 38, $event.key, [
		                              "Up",
		                              "ArrowUp"
		                            ])
		                          ) {
		                            return null
		                          }
		                          $event.preventDefault();
		                          _vm.handleNavigate("prev");
		                        },
		                        function($event) {
		                          if (
		                            !("button" in $event) &&
		                            _vm._k(
		                              $event.keyCode,
		                              "enter",
		                              13,
		                              $event.key,
		                              "Enter"
		                            )
		                          ) {
		                            return null
		                          }
		                          $event.preventDefault();
		                          return _vm.selectOption($event)
		                        },
		                        function($event) {
		                          if (
		                            !("button" in $event) &&
		                            _vm._k($event.keyCode, "esc", 27, $event.key, [
		                              "Esc",
		                              "Escape"
		                            ])
		                          ) {
		                            return null
		                          }
		                          $event.stopPropagation();
		                          $event.preventDefault();
		                          _vm.visible = false;
		                        },
		                        function($event) {
		                          if (
		                            !("button" in $event) &&
		                            _vm._k(
		                              $event.keyCode,
		                              "delete",
		                              [8, 46],
		                              $event.key,
		                              ["Backspace", "Delete", "Del"]
		                            )
		                          ) {
		                            return null
		                          }
		                          return _vm.deletePrevTag($event)
		                        },
		                        function($event) {
		                          if (
		                            !("button" in $event) &&
		                            _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
		                          ) {
		                            return null
		                          }
		                          _vm.visible = false;
		                        }
		                      ],
		                      compositionstart: _vm.handleComposition,
		                      compositionupdate: _vm.handleComposition,
		                      compositionend: _vm.handleComposition,
		                      input: [
		                        function($event) {
		                          if ($event.target.composing) {
		                            return
		                          }
		                          _vm.query = $event.target.value;
		                        },
		                        _vm.debouncedQueryChange
		                      ]
		                    }
		                  })
		                : _vm._e()
		            ],
		            1
		          )
		        : _vm._e(),
		      _c(
		        "el-input",
		        {
		          ref: "reference",
		          class: { "is-focus": _vm.visible },
		          attrs: {
		            type: "text",
		            placeholder: _vm.currentPlaceholder,
		            name: _vm.name,
		            id: _vm.id,
		            autocomplete: _vm.autoComplete || _vm.autocomplete,
		            size: _vm.selectSize,
		            disabled: _vm.selectDisabled,
		            readonly: _vm.readonly,
		            "validate-event": false,
		            tabindex: _vm.multiple && _vm.filterable ? "-1" : null
		          },
		          on: {
		            focus: _vm.handleFocus,
		            blur: _vm.handleBlur,
		            input: _vm.debouncedOnInputChange,
		            compositionstart: _vm.handleComposition,
		            compositionupdate: _vm.handleComposition,
		            compositionend: _vm.handleComposition
		          },
		          nativeOn: {
		            keydown: [
		              function($event) {
		                if (
		                  !("button" in $event) &&
		                  _vm._k($event.keyCode, "down", 40, $event.key, [
		                    "Down",
		                    "ArrowDown"
		                  ])
		                ) {
		                  return null
		                }
		                $event.stopPropagation();
		                $event.preventDefault();
		                _vm.handleNavigate("next");
		              },
		              function($event) {
		                if (
		                  !("button" in $event) &&
		                  _vm._k($event.keyCode, "up", 38, $event.key, [
		                    "Up",
		                    "ArrowUp"
		                  ])
		                ) {
		                  return null
		                }
		                $event.stopPropagation();
		                $event.preventDefault();
		                _vm.handleNavigate("prev");
		              },
		              function($event) {
		                if (
		                  !("button" in $event) &&
		                  _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
		                ) {
		                  return null
		                }
		                $event.preventDefault();
		                return _vm.selectOption($event)
		              },
		              function($event) {
		                if (
		                  !("button" in $event) &&
		                  _vm._k($event.keyCode, "esc", 27, $event.key, [
		                    "Esc",
		                    "Escape"
		                  ])
		                ) {
		                  return null
		                }
		                $event.stopPropagation();
		                $event.preventDefault();
		                _vm.visible = false;
		              },
		              function($event) {
		                if (
		                  !("button" in $event) &&
		                  _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
		                ) {
		                  return null
		                }
		                _vm.visible = false;
		              }
		            ],
		            mouseenter: function($event) {
		              _vm.inputHovering = true;
		            },
		            mouseleave: function($event) {
		              _vm.inputHovering = false;
		            }
		          },
		          model: {
		            value: _vm.selectedLabel,
		            callback: function($$v) {
		              _vm.selectedLabel = $$v;
		            },
		            expression: "selectedLabel"
		          }
		        },
		        [
		          _vm.$slots.prefix
		            ? _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2)
		            : _vm._e(),
		          _c("template", { slot: "suffix" }, [
		            _c("i", {
		              directives: [
		                {
		                  name: "show",
		                  rawName: "v-show",
		                  value: !_vm.showClose,
		                  expression: "!showClose"
		                }
		              ],
		              class: [
		                "el-select__caret",
		                "el-input__icon",
		                "el-icon-" + _vm.iconClass
		              ]
		            }),
		            _vm.showClose
		              ? _c("i", {
		                  staticClass:
		                    "el-select__caret el-input__icon el-icon-circle-close",
		                  on: { click: _vm.handleClearClick }
		                })
		              : _vm._e()
		          ])
		        ],
		        2
		      ),
		      _c(
		        "transition",
		        {
		          attrs: { name: "el-zoom-in-top" },
		          on: {
		            "before-enter": _vm.handleMenuEnter,
		            "after-leave": _vm.doDestroy
		          }
		        },
		        [
		          _c(
		            "el-select-menu",
		            {
		              directives: [
		                {
		                  name: "show",
		                  rawName: "v-show",
		                  value: _vm.visible && _vm.emptyText !== false,
		                  expression: "visible && emptyText !== false"
		                }
		              ],
		              ref: "popper",
		              attrs: { "append-to-body": _vm.popperAppendToBody }
		            },
		            [
		              _c(
		                "el-scrollbar",
		                {
		                  directives: [
		                    {
		                      name: "show",
		                      rawName: "v-show",
		                      value: _vm.options.length > 0 && !_vm.loading,
		                      expression: "options.length > 0 && !loading"
		                    }
		                  ],
		                  ref: "scrollbar",
		                  class: {
		                    "is-empty":
		                      !_vm.allowCreate &&
		                      _vm.query &&
		                      _vm.filteredOptionsCount === 0
		                  },
		                  attrs: {
		                    tag: "ul",
		                    "wrap-class": "el-select-dropdown__wrap",
		                    "view-class": "el-select-dropdown__list"
		                  }
		                },
		                [
		                  _vm.showNewOption
		                    ? _c("el-option", {
		                        attrs: { value: _vm.query, created: "" }
		                      })
		                    : _vm._e(),
		                  _vm._t("default")
		                ],
		                2
		              ),
		              _vm.emptyText &&
		              (!_vm.allowCreate ||
		                _vm.loading ||
		                (_vm.allowCreate && _vm.options.length === 0))
		                ? [
		                    _vm.$slots.empty
		                      ? _vm._t("empty")
		                      : _c("p", { staticClass: "el-select-dropdown__empty" }, [
		                          _vm._v(
		                            "\n          " +
		                              _vm._s(_vm.emptyText) +
		                              "\n        "
		                          )
		                        ])
		                  ]
		                : _vm._e()
		            ],
		            2
		          )
		        ],
		        1
		      )
		    ],
		    1
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=template&id=0e4aade6&

		// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
		var emitter_ = __webpack_require__(4);
		var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

		// EXTERNAL MODULE: external "element-ui/lib/mixins/focus"
		var focus_ = __webpack_require__(22);
		var focus_default = /*#__PURE__*/__webpack_require__.n(focus_);

		// EXTERNAL MODULE: external "element-ui/lib/mixins/locale"
		var locale_ = __webpack_require__(6);
		var locale_default = /*#__PURE__*/__webpack_require__.n(locale_);

		// EXTERNAL MODULE: external "element-ui/lib/input"
		var input_ = __webpack_require__(10);
		var input_default = /*#__PURE__*/__webpack_require__.n(input_);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select-dropdown.vue?vue&type=template&id=06828748&
		var select_dropdownvue_type_template_id_06828748_render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "div",
		    {
		      staticClass: "el-select-dropdown el-popper",
		      class: [{ "is-multiple": _vm.$parent.multiple }, _vm.popperClass],
		      style: { minWidth: _vm.minWidth }
		    },
		    [_vm._t("default")],
		    2
		  )
		};
		var select_dropdownvue_type_template_id_06828748_staticRenderFns = [];
		select_dropdownvue_type_template_id_06828748_render._withStripped = true;


		// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue?vue&type=template&id=06828748&

		// EXTERNAL MODULE: external "element-ui/lib/utils/vue-popper"
		var vue_popper_ = __webpack_require__(5);
		var vue_popper_default = /*#__PURE__*/__webpack_require__.n(vue_popper_);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select-dropdown.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//



		/* harmony default export */ var select_dropdownvue_type_script_lang_js_ = ({
		  name: 'ElSelectDropdown',

		  componentName: 'ElSelectDropdown',

		  mixins: [vue_popper_default.a],

		  props: {
		    placement: {
		      default: 'bottom-start'
		    },

		    boundariesPadding: {
		      default: 0
		    },

		    popperOptions: {
		      default: function _default() {
		        return {
		          gpuAcceleration: false
		        };
		      }
		    },

		    visibleArrow: {
		      default: true
		    },

		    appendToBody: {
		      type: Boolean,
		      default: true
		    }
		  },

		  data: function data() {
		    return {
		      minWidth: ''
		    };
		  },


		  computed: {
		    popperClass: function popperClass() {
		      return this.$parent.popperClass;
		    }
		  },

		  watch: {
		    '$parent.inputWidth': function $parentInputWidth() {
		      this.minWidth = this.$parent.$el.getBoundingClientRect().width + 'px';
		    }
		  },

		  mounted: function mounted() {
		    var _this = this;

		    this.referenceElm = this.$parent.$refs.reference.$el;
		    this.$parent.popperElm = this.popperElm = this.$el;
		    this.$on('updatePopper', function () {
		      if (_this.$parent.visible) _this.updatePopper();
		    });
		    this.$on('destroyPopper', this.destroyPopper);
		  }
		});
		// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_select_dropdownvue_type_script_lang_js_ = (select_dropdownvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_select_dropdownvue_type_script_lang_js_,
		  select_dropdownvue_type_template_id_06828748_render,
		  select_dropdownvue_type_template_id_06828748_staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/select/src/select-dropdown.vue";
		/* harmony default export */ var select_dropdown = (component.exports);
		// EXTERNAL MODULE: ./packages/select/src/option.vue + 4 modules
		var src_option = __webpack_require__(33);

		// EXTERNAL MODULE: external "element-ui/lib/tag"
		var tag_ = __webpack_require__(38);
		var tag_default = /*#__PURE__*/__webpack_require__.n(tag_);

		// EXTERNAL MODULE: external "element-ui/lib/scrollbar"
		var scrollbar_ = __webpack_require__(15);
		var scrollbar_default = /*#__PURE__*/__webpack_require__.n(scrollbar_);

		// EXTERNAL MODULE: external "throttle-debounce/debounce"
		var debounce_ = __webpack_require__(19);
		var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/clickoutside"
		var clickoutside_ = __webpack_require__(12);
		var clickoutside_default = /*#__PURE__*/__webpack_require__.n(clickoutside_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/resize-event"
		var resize_event_ = __webpack_require__(16);

		// EXTERNAL MODULE: external "element-ui/lib/utils/scroll-into-view"
		var scroll_into_view_ = __webpack_require__(31);
		var scroll_into_view_default = /*#__PURE__*/__webpack_require__.n(scroll_into_view_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/util"
		var util_ = __webpack_require__(3);

		// CONCATENATED MODULE: ./packages/select/src/navigation-mixin.js
		/* harmony default export */ var navigation_mixin = ({
		  data: function data() {
		    return {
		      hoverOption: -1
		    };
		  },


		  computed: {
		    optionsAllDisabled: function optionsAllDisabled() {
		      return this.options.filter(function (option) {
		        return option.visible;
		      }).every(function (option) {
		        return option.disabled;
		      });
		    }
		  },

		  watch: {
		    hoverIndex: function hoverIndex(val) {
		      var _this = this;

		      if (typeof val === 'number' && val > -1) {
		        this.hoverOption = this.options[val] || {};
		      }
		      this.options.forEach(function (option) {
		        option.hover = _this.hoverOption === option;
		      });
		    }
		  },

		  methods: {
		    navigateOptions: function navigateOptions(direction) {
		      var _this2 = this;

		      if (!this.visible) {
		        this.visible = true;
		        return;
		      }
		      if (this.options.length === 0 || this.filteredOptionsCount === 0) return;
		      if (!this.optionsAllDisabled) {
		        if (direction === 'next') {
		          this.hoverIndex++;
		          if (this.hoverIndex === this.options.length) {
		            this.hoverIndex = 0;
		          }
		        } else if (direction === 'prev') {
		          this.hoverIndex--;
		          if (this.hoverIndex < 0) {
		            this.hoverIndex = this.options.length - 1;
		          }
		        }
		        var option = this.options[this.hoverIndex];
		        if (option.disabled === true || option.groupDisabled === true || !option.visible) {
		          this.navigateOptions(direction);
		        }
		        this.$nextTick(function () {
		          return _this2.scrollToOption(_this2.hoverOption);
		        });
		      }
		    }
		  }
		});
		// EXTERNAL MODULE: external "element-ui/lib/utils/shared"
		var shared_ = __webpack_require__(21);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//

















		/* harmony default export */ var selectvue_type_script_lang_js_ = ({
		  mixins: [emitter_default.a, locale_default.a, focus_default()('reference'), navigation_mixin],

		  name: 'ElSelect',

		  componentName: 'ElSelect',

		  inject: {
		    elForm: {
		      default: ''
		    },

		    elFormItem: {
		      default: ''
		    }
		  },

		  provide: function provide() {
		    return {
		      'select': this
		    };
		  },


		  computed: {
		    _elFormItemSize: function _elFormItemSize() {
		      return (this.elFormItem || {}).elFormItemSize;
		    },
		    readonly: function readonly() {
		      return !this.filterable || this.multiple || !Object(util_["isIE"])() && !Object(util_["isEdge"])() && !this.visible;
		    },
		    showClose: function showClose() {
		      var hasValue = this.multiple ? Array.isArray(this.value) && this.value.length > 0 : this.value !== undefined && this.value !== null && this.value !== '';
		      var criteria = this.clearable && !this.selectDisabled && this.inputHovering && hasValue;
		      return criteria;
		    },
		    iconClass: function iconClass() {
		      return this.remote && this.filterable ? '' : this.visible ? 'arrow-up is-reverse' : 'arrow-up';
		    },
		    debounce: function debounce() {
		      return this.remote ? 300 : 0;
		    },
		    emptyText: function emptyText() {
		      if (this.loading) {
		        return this.loadingText || this.t('el.select.loading');
		      } else {
		        if (this.remote && this.query === '' && this.options.length === 0) return false;
		        if (this.filterable && this.query && this.options.length > 0 && this.filteredOptionsCount === 0) {
		          return this.noMatchText || this.t('el.select.noMatch');
		        }
		        if (this.options.length === 0) {
		          return this.noDataText || this.t('el.select.noData');
		        }
		      }
		      return null;
		    },
		    showNewOption: function showNewOption() {
		      var _this = this;

		      var hasExistingOption = this.options.filter(function (option) {
		        return !option.created;
		      }).some(function (option) {
		        return option.currentLabel === _this.query;
		      });
		      return this.filterable && this.allowCreate && this.query !== '' && !hasExistingOption;
		    },
		    selectSize: function selectSize() {
		      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
		    },
		    selectDisabled: function selectDisabled() {
		      return this.disabled || (this.elForm || {}).disabled;
		    },
		    collapseTagSize: function collapseTagSize() {
		      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small';
		    },
		    propPlaceholder: function propPlaceholder() {
		      return typeof this.placeholder !== 'undefined' ? this.placeholder : this.t('el.select.placeholder');
		    }
		  },

		  components: {
		    ElInput: input_default.a,
		    ElSelectMenu: select_dropdown,
		    ElOption: src_option["a" /* default */],
		    ElTag: tag_default.a,
		    ElScrollbar: scrollbar_default.a
		  },

		  directives: { Clickoutside: clickoutside_default.a },

		  props: {
		    name: String,
		    id: String,
		    value: {
		      required: true
		    },
		    autocomplete: {
		      type: String,
		      default: 'off'
		    },
		    /** @Deprecated in next major version */
		    autoComplete: {
		      type: String,
		      validator: function validator(val) {
		        return true;
		      }
		    },
		    automaticDropdown: Boolean,
		    size: String,
		    disabled: Boolean,
		    clearable: Boolean,
		    filterable: Boolean,
		    allowCreate: Boolean,
		    loading: Boolean,
		    popperClass: String,
		    remote: Boolean,
		    loadingText: String,
		    noMatchText: String,
		    noDataText: String,
		    remoteMethod: Function,
		    filterMethod: Function,
		    multiple: Boolean,
		    multipleLimit: {
		      type: Number,
		      default: 0
		    },
		    placeholder: {
		      type: String,
		      required: false
		    },
		    defaultFirstOption: Boolean,
		    reserveKeyword: Boolean,
		    valueKey: {
		      type: String,
		      default: 'value'
		    },
		    collapseTags: Boolean,
		    popperAppendToBody: {
		      type: Boolean,
		      default: true
		    }
		  },

		  data: function data() {
		    return {
		      options: [],
		      cachedOptions: [],
		      createdLabel: null,
		      createdSelected: false,
		      selected: this.multiple ? [] : {},
		      inputLength: 20,
		      inputWidth: 0,
		      initialInputHeight: 0,
		      cachedPlaceHolder: '',
		      optionsCount: 0,
		      filteredOptionsCount: 0,
		      visible: false,
		      softFocus: false,
		      selectedLabel: '',
		      hoverIndex: -1,
		      query: '',
		      previousQuery: null,
		      inputHovering: false,
		      currentPlaceholder: '',
		      menuVisibleOnFocus: false,
		      isOnComposition: false,
		      isSilentBlur: false
		    };
		  },


		  watch: {
		    selectDisabled: function selectDisabled() {
		      var _this2 = this;

		      this.$nextTick(function () {
		        _this2.resetInputHeight();
		      });
		    },
		    propPlaceholder: function propPlaceholder(val) {
		      this.cachedPlaceHolder = this.currentPlaceholder = val;
		    },
		    value: function value(val, oldVal) {
		      if (this.multiple) {
		        this.resetInputHeight();
		        if (val && val.length > 0 || this.$refs.input && this.query !== '') {
		          this.currentPlaceholder = '';
		        } else {
		          this.currentPlaceholder = this.cachedPlaceHolder;
		        }
		        if (this.filterable && !this.reserveKeyword) {
		          this.query = '';
		          this.handleQueryChange(this.query);
		        }
		      }
		      this.setSelected();
		      if (this.filterable && !this.multiple) {
		        this.inputLength = 20;
		      }
		      if (!Object(util_["valueEquals"])(val, oldVal)) {
		        this.dispatch('ElFormItem', 'el.form.change', val);
		      }
		    },
		    visible: function visible(val) {
		      var _this3 = this;

		      if (!val) {
		        this.broadcast('ElSelectDropdown', 'destroyPopper');
		        if (this.$refs.input) {
		          this.$refs.input.blur();
		        }
		        this.query = '';
		        this.previousQuery = null;
		        this.selectedLabel = '';
		        this.inputLength = 20;
		        this.menuVisibleOnFocus = false;
		        this.resetHoverIndex();
		        this.$nextTick(function () {
		          if (_this3.$refs.input && _this3.$refs.input.value === '' && _this3.selected.length === 0) {
		            _this3.currentPlaceholder = _this3.cachedPlaceHolder;
		          }
		        });
		        if (!this.multiple) {
		          if (this.selected) {
		            if (this.filterable && this.allowCreate && this.createdSelected && this.createdLabel) {
		              this.selectedLabel = this.createdLabel;
		            } else {
		              this.selectedLabel = this.selected.currentLabel;
		            }
		            if (this.filterable) this.query = this.selectedLabel;
		          }

		          if (this.filterable) {
		            this.currentPlaceholder = this.cachedPlaceHolder;
		          }
		        }
		      } else {
		        this.broadcast('ElSelectDropdown', 'updatePopper');
		        if (this.filterable) {
		          this.query = this.remote ? '' : this.selectedLabel;
		          this.handleQueryChange(this.query);
		          if (this.multiple) {
		            this.$refs.input.focus();
		          } else {
		            if (!this.remote) {
		              this.broadcast('ElOption', 'queryChange', '');
		              this.broadcast('ElOptionGroup', 'queryChange');
		            }

		            if (this.selectedLabel) {
		              this.currentPlaceholder = this.selectedLabel;
		              this.selectedLabel = '';
		            }
		          }
		        }
		      }
		      this.$emit('visible-change', val);
		    },
		    options: function options() {
		      var _this4 = this;

		      if (this.$isServer) return;
		      this.$nextTick(function () {
		        _this4.broadcast('ElSelectDropdown', 'updatePopper');
		      });
		      if (this.multiple) {
		        this.resetInputHeight();
		      }
		      var inputs = this.$el.querySelectorAll('input');
		      if ([].indexOf.call(inputs, document.activeElement) === -1) {
		        this.setSelected();
		      }
		      if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {
		        this.checkDefaultFirstOption();
		      }
		    }
		  },

		  methods: {
		    handleNavigate: function handleNavigate(direction) {
		      if (this.isOnComposition) return;

		      this.navigateOptions(direction);
		    },
		    handleComposition: function handleComposition(event) {
		      var _this5 = this;

		      var text = event.target.value;
		      if (event.type === 'compositionend') {
		        this.isOnComposition = false;
		        this.$nextTick(function (_) {
		          return _this5.handleQueryChange(text);
		        });
		      } else {
		        var lastCharacter = text[text.length - 1] || '';
		        this.isOnComposition = !Object(shared_["isKorean"])(lastCharacter);
		      }
		    },
		    handleQueryChange: function handleQueryChange(val) {
		      var _this6 = this;

		      if (this.previousQuery === val || this.isOnComposition) return;
		      if (this.previousQuery === null && (typeof this.filterMethod === 'function' || typeof this.remoteMethod === 'function')) {
		        this.previousQuery = val;
		        return;
		      }
		      this.previousQuery = val;
		      this.$nextTick(function () {
		        if (_this6.visible) _this6.broadcast('ElSelectDropdown', 'updatePopper');
		      });
		      this.hoverIndex = -1;
		      if (this.multiple && this.filterable) {
		        this.$nextTick(function () {
		          var length = _this6.$refs.input.value.length * 15 + 20;
		          _this6.inputLength = _this6.collapseTags ? Math.min(50, length) : length;
		          _this6.managePlaceholder();
		          _this6.resetInputHeight();
		        });
		      }
		      if (this.remote && typeof this.remoteMethod === 'function') {
		        this.hoverIndex = -1;
		        this.remoteMethod(val);
		      } else if (typeof this.filterMethod === 'function') {
		        this.filterMethod(val);
		        this.broadcast('ElOptionGroup', 'queryChange');
		      } else {
		        this.filteredOptionsCount = this.optionsCount;
		        this.broadcast('ElOption', 'queryChange', val);
		        this.broadcast('ElOptionGroup', 'queryChange');
		      }
		      if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {
		        this.checkDefaultFirstOption();
		      }
		    },
		    scrollToOption: function scrollToOption(option) {
		      var target = Array.isArray(option) && option[0] ? option[0].$el : option.$el;
		      if (this.$refs.popper && target) {
		        var menu = this.$refs.popper.$el.querySelector('.el-select-dropdown__wrap');
		        scroll_into_view_default()(menu, target);
		      }
		      this.$refs.scrollbar && this.$refs.scrollbar.handleScroll();
		    },
		    handleMenuEnter: function handleMenuEnter() {
		      var _this7 = this;

		      this.$nextTick(function () {
		        return _this7.scrollToOption(_this7.selected);
		      });
		    },
		    emitChange: function emitChange(val) {
		      if (!Object(util_["valueEquals"])(this.value, val)) {
		        this.$emit('change', val);
		      }
		    },
		    getOption: function getOption(value) {
		      var option = void 0;
		      var isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';
		      var isNull = Object.prototype.toString.call(value).toLowerCase() === '[object null]';
		      var isUndefined = Object.prototype.toString.call(value).toLowerCase() === '[object undefined]';

		      for (var i = this.cachedOptions.length - 1; i >= 0; i--) {
		        var cachedOption = this.cachedOptions[i];
		        var isEqual = isObject ? Object(util_["getValueByPath"])(cachedOption.value, this.valueKey) === Object(util_["getValueByPath"])(value, this.valueKey) : cachedOption.value === value;
		        if (isEqual) {
		          option = cachedOption;
		          break;
		        }
		      }
		      if (option) return option;
		      var label = !isObject && !isNull && !isUndefined ? String(value) : '';
		      var newOption = {
		        value: value,
		        currentLabel: label
		      };
		      if (this.multiple) {
		        newOption.hitState = false;
		      }
		      return newOption;
		    },
		    setSelected: function setSelected() {
		      var _this8 = this;

		      if (!this.multiple) {
		        var option = this.getOption(this.value);
		        if (option.created) {
		          this.createdLabel = option.currentLabel;
		          this.createdSelected = true;
		        } else {
		          this.createdSelected = false;
		        }
		        this.selectedLabel = option.currentLabel;
		        this.selected = option;
		        if (this.filterable) this.query = this.selectedLabel;
		        return;
		      }
		      var result = [];
		      if (Array.isArray(this.value)) {
		        this.value.forEach(function (value) {
		          result.push(_this8.getOption(value));
		        });
		      }
		      this.selected = result;
		      this.$nextTick(function () {
		        _this8.resetInputHeight();
		      });
		    },
		    handleFocus: function handleFocus(event) {
		      if (!this.softFocus) {
		        if (this.automaticDropdown || this.filterable) {
		          if (this.filterable && !this.visible) {
		            this.menuVisibleOnFocus = true;
		          }
		          this.visible = true;
		        }
		        this.$emit('focus', event);
		      } else {
		        this.softFocus = false;
		      }
		    },
		    blur: function blur() {
		      this.visible = false;
		      this.$refs.reference.blur();
		    },
		    handleBlur: function handleBlur(event) {
		      var _this9 = this;

		      setTimeout(function () {
		        if (_this9.isSilentBlur) {
		          _this9.isSilentBlur = false;
		        } else {
		          _this9.$emit('blur', event);
		        }
		      }, 50);
		      this.softFocus = false;
		    },
		    handleClearClick: function handleClearClick(event) {
		      this.deleteSelected(event);
		    },
		    doDestroy: function doDestroy() {
		      this.$refs.popper && this.$refs.popper.doDestroy();
		    },
		    handleClose: function handleClose() {
		      this.visible = false;
		    },
		    toggleLastOptionHitState: function toggleLastOptionHitState(hit) {
		      if (!Array.isArray(this.selected)) return;
		      var option = this.selected[this.selected.length - 1];
		      if (!option) return;

		      if (hit === true || hit === false) {
		        option.hitState = hit;
		        return hit;
		      }

		      option.hitState = !option.hitState;
		      return option.hitState;
		    },
		    deletePrevTag: function deletePrevTag(e) {
		      if (e.target.value.length <= 0 && !this.toggleLastOptionHitState()) {
		        var value = this.value.slice();
		        value.pop();
		        this.$emit('input', value);
		        this.emitChange(value);
		      }
		    },
		    managePlaceholder: function managePlaceholder() {
		      if (this.currentPlaceholder !== '') {
		        this.currentPlaceholder = this.$refs.input.value ? '' : this.cachedPlaceHolder;
		      }
		    },
		    resetInputState: function resetInputState(e) {
		      if (e.keyCode !== 8) this.toggleLastOptionHitState(false);
		      this.inputLength = this.$refs.input.value.length * 15 + 20;
		      this.resetInputHeight();
		    },
		    resetInputHeight: function resetInputHeight() {
		      var _this10 = this;

		      if (this.collapseTags && !this.filterable) return;
		      this.$nextTick(function () {
		        if (!_this10.$refs.reference) return;
		        var inputChildNodes = _this10.$refs.reference.$el.childNodes;
		        var input = [].filter.call(inputChildNodes, function (item) {
		          return item.tagName === 'INPUT';
		        })[0];
		        var tags = _this10.$refs.tags;
		        var tagsHeight = tags ? Math.round(tags.getBoundingClientRect().height) : 0;
		        var sizeInMap = _this10.initialInputHeight || 40;
		        input.style.height = _this10.selected.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tagsHeight + (tagsHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) + 'px';
		        if (_this10.visible && _this10.emptyText !== false) {
		          _this10.broadcast('ElSelectDropdown', 'updatePopper');
		        }
		      });
		    },
		    resetHoverIndex: function resetHoverIndex() {
		      var _this11 = this;

		      setTimeout(function () {
		        if (!_this11.multiple) {
		          _this11.hoverIndex = _this11.options.indexOf(_this11.selected);
		        } else {
		          if (_this11.selected.length > 0) {
		            _this11.hoverIndex = Math.min.apply(null, _this11.selected.map(function (item) {
		              return _this11.options.indexOf(item);
		            }));
		          } else {
		            _this11.hoverIndex = -1;
		          }
		        }
		      }, 300);
		    },
		    handleOptionSelect: function handleOptionSelect(option, byClick) {
		      var _this12 = this;

		      if (this.multiple) {
		        var value = (this.value || []).slice();
		        var optionIndex = this.getValueIndex(value, option.value);
		        if (optionIndex > -1) {
		          value.splice(optionIndex, 1);
		        } else if (this.multipleLimit <= 0 || value.length < this.multipleLimit) {
		          value.push(option.value);
		        }
		        this.$emit('input', value);
		        this.emitChange(value);
		        if (option.created) {
		          this.query = '';
		          this.handleQueryChange('');
		          this.inputLength = 20;
		        }
		        if (this.filterable) this.$refs.input.focus();
		      } else {
		        this.$emit('input', option.value);
		        this.emitChange(option.value);
		        this.visible = false;
		      }
		      this.isSilentBlur = byClick;
		      this.setSoftFocus();
		      if (this.visible) return;
		      this.$nextTick(function () {
		        _this12.scrollToOption(option);
		      });
		    },
		    setSoftFocus: function setSoftFocus() {
		      this.softFocus = true;
		      var input = this.$refs.input || this.$refs.reference;
		      if (input) {
		        input.focus();
		      }
		    },
		    getValueIndex: function getValueIndex() {
		      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
		      var value = arguments[1];

		      var isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';
		      if (!isObject) {
		        return arr.indexOf(value);
		      } else {
		        var valueKey = this.valueKey;
		        var index = -1;
		        arr.some(function (item, i) {
		          if (Object(util_["getValueByPath"])(item, valueKey) === Object(util_["getValueByPath"])(value, valueKey)) {
		            index = i;
		            return true;
		          }
		          return false;
		        });
		        return index;
		      }
		    },
		    toggleMenu: function toggleMenu() {
		      if (!this.selectDisabled) {
		        if (this.menuVisibleOnFocus) {
		          this.menuVisibleOnFocus = false;
		        } else {
		          this.visible = !this.visible;
		        }
		        if (this.visible) {
		          (this.$refs.input || this.$refs.reference).focus();
		        }
		      }
		    },
		    selectOption: function selectOption() {
		      if (!this.visible) {
		        this.toggleMenu();
		      } else {
		        if (this.options[this.hoverIndex]) {
		          this.handleOptionSelect(this.options[this.hoverIndex]);
		        }
		      }
		    },
		    deleteSelected: function deleteSelected(event) {
		      event.stopPropagation();
		      var value = this.multiple ? [] : '';
		      this.$emit('input', value);
		      this.emitChange(value);
		      this.visible = false;
		      this.$emit('clear');
		    },
		    deleteTag: function deleteTag(event, tag) {
		      var index = this.selected.indexOf(tag);
		      if (index > -1 && !this.selectDisabled) {
		        var value = this.value.slice();
		        value.splice(index, 1);
		        this.$emit('input', value);
		        this.emitChange(value);
		        this.$emit('remove-tag', tag.value);
		      }
		      event.stopPropagation();
		    },
		    onInputChange: function onInputChange() {
		      if (this.filterable && this.query !== this.selectedLabel) {
		        this.query = this.selectedLabel;
		        this.handleQueryChange(this.query);
		      }
		    },
		    onOptionDestroy: function onOptionDestroy(index) {
		      if (index > -1) {
		        this.optionsCount--;
		        this.filteredOptionsCount--;
		        this.options.splice(index, 1);
		      }
		    },
		    resetInputWidth: function resetInputWidth() {
		      this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;
		    },
		    handleResize: function handleResize() {
		      this.resetInputWidth();
		      if (this.multiple) this.resetInputHeight();
		    },
		    checkDefaultFirstOption: function checkDefaultFirstOption() {
		      this.hoverIndex = -1;
		      // highlight the created option
		      var hasCreated = false;
		      for (var i = this.options.length - 1; i >= 0; i--) {
		        if (this.options[i].created) {
		          hasCreated = true;
		          this.hoverIndex = i;
		          break;
		        }
		      }
		      if (hasCreated) return;
		      for (var _i = 0; _i !== this.options.length; ++_i) {
		        var option = this.options[_i];
		        if (this.query) {
		          // highlight first options that passes the filter
		          if (!option.disabled && !option.groupDisabled && option.visible) {
		            this.hoverIndex = _i;
		            break;
		          }
		        } else {
		          // highlight currently selected option
		          if (option.itemSelected) {
		            this.hoverIndex = _i;
		            break;
		          }
		        }
		      }
		    },
		    getValueKey: function getValueKey(item) {
		      if (Object.prototype.toString.call(item.value).toLowerCase() !== '[object object]') {
		        return item.value;
		      } else {
		        return Object(util_["getValueByPath"])(item.value, this.valueKey);
		      }
		    }
		  },

		  created: function created() {
		    var _this13 = this;

		    this.cachedPlaceHolder = this.currentPlaceholder = this.propPlaceholder;
		    if (this.multiple && !Array.isArray(this.value)) {
		      this.$emit('input', []);
		    }
		    if (!this.multiple && Array.isArray(this.value)) {
		      this.$emit('input', '');
		    }

		    this.debouncedOnInputChange = debounce_default()(this.debounce, function () {
		      _this13.onInputChange();
		    });

		    this.debouncedQueryChange = debounce_default()(this.debounce, function (e) {
		      _this13.handleQueryChange(e.target.value);
		    });

		    this.$on('handleOptionClick', this.handleOptionSelect);
		    this.$on('setSelected', this.setSelected);
		  },
		  mounted: function mounted() {
		    var _this14 = this;

		    if (this.multiple && Array.isArray(this.value) && this.value.length > 0) {
		      this.currentPlaceholder = '';
		    }
		    Object(resize_event_["addResizeListener"])(this.$el, this.handleResize);

		    var reference = this.$refs.reference;
		    if (reference && reference.$el) {
		      var sizeMap = {
		        medium: 36,
		        small: 32,
		        mini: 28
		      };
		      var input = reference.$el.querySelector('input');
		      this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];
		    }
		    if (this.remote && this.multiple) {
		      this.resetInputHeight();
		    }
		    this.$nextTick(function () {
		      if (reference && reference.$el) {
		        _this14.inputWidth = reference.$el.getBoundingClientRect().width;
		      }
		    });
		    this.setSelected();
		  },
		  beforeDestroy: function beforeDestroy() {
		    if (this.$el && this.handleResize) Object(resize_event_["removeResizeListener"])(this.$el, this.handleResize);
		  }
		});
		// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_selectvue_type_script_lang_js_ = (selectvue_type_script_lang_js_); 
		// CONCATENATED MODULE: ./packages/select/src/select.vue





		/* normalize component */

		var select_component = Object(componentNormalizer["a" /* default */])(
		  src_selectvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		select_component.options.__file = "packages/select/src/select.vue";
		/* harmony default export */ var src_select = (select_component.exports);
		// CONCATENATED MODULE: ./packages/select/index.js


		/* istanbul ignore next */
		src_select.install = function (Vue) {
		  Vue.component(src_select.name, src_select);
		};

		/* harmony default export */ __webpack_exports__["default"] = (src_select);

		/***/ })

		/******/ }); 
	} (select));
	return select.exports;
}

var option = {exports: {}};

var hasRequiredOption;

function requireOption () {
	if (hasRequiredOption) return option.exports;
	hasRequiredOption = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 54);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 3:
		/***/ (function(module, exports) {

		module.exports = requireUtil();

		/***/ }),

		/***/ 33:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=template&id=7a44c642&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "li",
		    {
		      directives: [
		        {
		          name: "show",
		          rawName: "v-show",
		          value: _vm.visible,
		          expression: "visible"
		        }
		      ],
		      staticClass: "el-select-dropdown__item",
		      class: {
		        selected: _vm.itemSelected,
		        "is-disabled": _vm.disabled || _vm.groupDisabled || _vm.limitReached,
		        hover: _vm.hover
		      },
		      on: {
		        mouseenter: _vm.hoverItem,
		        click: function($event) {
		          $event.stopPropagation();
		          return _vm.selectOptionClick($event)
		        }
		      }
		    },
		    [_vm._t("default", [_c("span", [_vm._v(_vm._s(_vm.currentLabel))])])],
		    2
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=template&id=7a44c642&

		// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
		var emitter_ = __webpack_require__(4);
		var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/util"
		var util_ = __webpack_require__(3);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=script&lang=js&
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//




		/* harmony default export */ var optionvue_type_script_lang_js_ = ({
		  mixins: [emitter_default.a],

		  name: 'ElOption',

		  componentName: 'ElOption',

		  inject: ['select'],

		  props: {
		    value: {
		      required: true
		    },
		    label: [String, Number],
		    created: Boolean,
		    disabled: {
		      type: Boolean,
		      default: false
		    }
		  },

		  data: function data() {
		    return {
		      index: -1,
		      groupDisabled: false,
		      visible: true,
		      hitState: false,
		      hover: false
		    };
		  },


		  computed: {
		    isObject: function isObject() {
		      return Object.prototype.toString.call(this.value).toLowerCase() === '[object object]';
		    },
		    currentLabel: function currentLabel() {
		      return this.label || (this.isObject ? '' : this.value);
		    },
		    currentValue: function currentValue() {
		      return this.value || this.label || '';
		    },
		    itemSelected: function itemSelected() {
		      if (!this.select.multiple) {
		        return this.isEqual(this.value, this.select.value);
		      } else {
		        return this.contains(this.select.value, this.value);
		      }
		    },
		    limitReached: function limitReached() {
		      if (this.select.multiple) {
		        return !this.itemSelected && (this.select.value || []).length >= this.select.multipleLimit && this.select.multipleLimit > 0;
		      } else {
		        return false;
		      }
		    }
		  },

		  watch: {
		    currentLabel: function currentLabel() {
		      if (!this.created && !this.select.remote) this.dispatch('ElSelect', 'setSelected');
		    },
		    value: function value(val, oldVal) {
		      var _select = this.select,
		          remote = _select.remote,
		          valueKey = _select.valueKey;

		      if (!this.created && !remote) {
		        if (valueKey && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && (typeof oldVal === 'undefined' ? 'undefined' : _typeof(oldVal)) === 'object' && val[valueKey] === oldVal[valueKey]) {
		          return;
		        }
		        this.dispatch('ElSelect', 'setSelected');
		      }
		    }
		  },

		  methods: {
		    isEqual: function isEqual(a, b) {
		      if (!this.isObject) {
		        return a === b;
		      } else {
		        var valueKey = this.select.valueKey;
		        return Object(util_["getValueByPath"])(a, valueKey) === Object(util_["getValueByPath"])(b, valueKey);
		      }
		    },
		    contains: function contains() {
		      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
		      var target = arguments[1];

		      if (!this.isObject) {
		        return arr && arr.indexOf(target) > -1;
		      } else {
		        var valueKey = this.select.valueKey;
		        return arr && arr.some(function (item) {
		          return Object(util_["getValueByPath"])(item, valueKey) === Object(util_["getValueByPath"])(target, valueKey);
		        });
		      }
		    },
		    handleGroupDisabled: function handleGroupDisabled(val) {
		      this.groupDisabled = val;
		    },
		    hoverItem: function hoverItem() {
		      if (!this.disabled && !this.groupDisabled) {
		        this.select.hoverIndex = this.select.options.indexOf(this);
		      }
		    },
		    selectOptionClick: function selectOptionClick() {
		      if (this.disabled !== true && this.groupDisabled !== true) {
		        this.dispatch('ElSelect', 'handleOptionClick', [this, true]);
		      }
		    },
		    queryChange: function queryChange(query) {
		      this.visible = new RegExp(Object(util_["escapeRegexpString"])(query), 'i').test(this.currentLabel) || this.created;
		      if (!this.visible) {
		        this.select.filteredOptionsCount--;
		      }
		    }
		  },

		  created: function created() {
		    this.select.options.push(this);
		    this.select.cachedOptions.push(this);
		    this.select.optionsCount++;
		    this.select.filteredOptionsCount++;

		    this.$on('queryChange', this.queryChange);
		    this.$on('handleGroupDisabled', this.handleGroupDisabled);
		  },
		  beforeDestroy: function beforeDestroy() {
		    var _select2 = this.select,
		        selected = _select2.selected,
		        multiple = _select2.multiple;

		    var selectedOptions = multiple ? selected : [selected];
		    var index = this.select.cachedOptions.indexOf(this);
		    var selectedIndex = selectedOptions.indexOf(this);

		    // if option is not selected, remove it from cache
		    if (index > -1 && selectedIndex < 0) {
		      this.select.cachedOptions.splice(index, 1);
		    }
		    this.select.onOptionDestroy(this.select.options.indexOf(this));
		  }
		});
		// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_optionvue_type_script_lang_js_ = (optionvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/select/src/option.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_optionvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/select/src/option.vue";
		/* harmony default export */ __webpack_exports__["a"] = (component.exports);

		/***/ }),

		/***/ 4:
		/***/ (function(module, exports) {

		module.exports = requireEmitter();

		/***/ }),

		/***/ 54:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);
		/* harmony import */ var _select_src_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);


		/* istanbul ignore next */
		_select_src_option__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].install = function (Vue) {
		  Vue.component(_select_src_option__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].name, _select_src_option__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]);
		};

		/* harmony default export */ __webpack_exports__["default"] = (_select_src_option__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]);

		/***/ })

		/******/ }); 
	} (option));
	return option.exports;
}

/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule UserAgent_DEPRECATED
 */

var UserAgent_DEPRECATED_1;
var hasRequiredUserAgent_DEPRECATED;

function requireUserAgent_DEPRECATED () {
	if (hasRequiredUserAgent_DEPRECATED) return UserAgent_DEPRECATED_1;
	hasRequiredUserAgent_DEPRECATED = 1;
	/**
	 *  Provides entirely client-side User Agent and OS detection. You should prefer
	 *  the non-deprecated UserAgent module when possible, which exposes our
	 *  authoritative server-side PHP-based detection to the client.
	 *
	 *  Usage is straightforward:
	 *
	 *    if (UserAgent_DEPRECATED.ie()) {
	 *      //  IE
	 *    }
	 *
	 *  You can also do version checks:
	 *
	 *    if (UserAgent_DEPRECATED.ie() >= 7) {
	 *      //  IE7 or better
	 *    }
	 *
	 *  The browser functions will return NaN if the browser does not match, so
	 *  you can also do version compares the other way:
	 *
	 *    if (UserAgent_DEPRECATED.ie() < 7) {
	 *      //  IE6 or worse
	 *    }
	 *
	 *  Note that the version is a float and may include a minor version number,
	 *  so you should always use range operators to perform comparisons, not
	 *  strict equality.
	 *
	 *  **Note:** You should **strongly** prefer capability detection to browser
	 *  version detection where it's reasonable:
	 *
	 *    http://www.quirksmode.org/js/support.html
	 *
	 *  Further, we have a large number of mature wrapper functions and classes
	 *  which abstract away many browser irregularities. Check the documentation,
	 *  grep for things, or ask on javascript@lists.facebook.com before writing yet
	 *  another copy of "event || window.event".
	 *
	 */

	var _populated = false;

	// Browsers
	var _ie, _firefox, _opera, _webkit, _chrome;

	// Actual IE browser for compatibility mode
	var _ie_real_version;

	// Platforms
	var _osx, _windows, _linux, _android;

	// Architectures
	var _win64;

	// Devices
	var _iphone, _ipad, _native;

	var _mobile;

	function _populate() {
	  if (_populated) {
	    return;
	  }

	  _populated = true;

	  // To work around buggy JS libraries that can't handle multi-digit
	  // version numbers, Opera 10's user agent string claims it's Opera
	  // 9, then later includes a Version/X.Y field:
	  //
	  // Opera/9.80 (foo) Presto/2.2.15 Version/10.10
	  var uas = navigator.userAgent;
	  var agent = /(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(uas);
	  var os    = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);

	  _iphone = /\b(iPhone|iP[ao]d)/.exec(uas);
	  _ipad = /\b(iP[ao]d)/.exec(uas);
	  _android = /Android/i.exec(uas);
	  _native = /FBAN\/\w+;/i.exec(uas);
	  _mobile = /Mobile/i.exec(uas);

	  // Note that the IE team blog would have you believe you should be checking
	  // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming
	  // from either x64 or ia64;  so ultimately, you should just check for Win64
	  // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit
	  // Windows will send 'WOW64' instead.
	  _win64 = !!(/Win64/.exec(uas));

	  if (agent) {
	    _ie = agent[1] ? parseFloat(agent[1]) : (
	          agent[5] ? parseFloat(agent[5]) : NaN);
	    // IE compatibility mode
	    if (_ie && document && document.documentMode) {
	      _ie = document.documentMode;
	    }
	    // grab the "true" ie version from the trident token if available
	    var trident = /(?:Trident\/(\d+.\d+))/.exec(uas);
	    _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;

	    _firefox = agent[2] ? parseFloat(agent[2]) : NaN;
	    _opera   = agent[3] ? parseFloat(agent[3]) : NaN;
	    _webkit  = agent[4] ? parseFloat(agent[4]) : NaN;
	    if (_webkit) {
	      // We do not add the regexp to the above test, because it will always
	      // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in
	      // the userAgent string.
	      agent = /(?:Chrome\/(\d+\.\d+))/.exec(uas);
	      _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;
	    } else {
	      _chrome = NaN;
	    }
	  } else {
	    _ie = _firefox = _opera = _chrome = _webkit = NaN;
	  }

	  if (os) {
	    if (os[1]) {
	      // Detect OS X version.  If no version number matches, set _osx to true.
	      // Version examples:  10, 10_6_1, 10.7
	      // Parses version number as a float, taking only first two sets of
	      // digits.  If only one set of digits is found, returns just the major
	      // version number.
	      var ver = /(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(uas);

	      _osx = ver ? parseFloat(ver[1].replace('_', '.')) : true;
	    } else {
	      _osx = false;
	    }
	    _windows = !!os[2];
	    _linux   = !!os[3];
	  } else {
	    _osx = _windows = _linux = false;
	  }
	}

	var UserAgent_DEPRECATED = {

	  /**
	   *  Check if the UA is Internet Explorer.
	   *
	   *
	   *  @return float|NaN Version number (if match) or NaN.
	   */
	  ie: function() {
	    return _populate() || _ie;
	  },

	  /**
	   * Check if we're in Internet Explorer compatibility mode.
	   *
	   * @return bool true if in compatibility mode, false if
	   * not compatibility mode or not ie
	   */
	  ieCompatibilityMode: function() {
	    return _populate() || (_ie_real_version > _ie);
	  },


	  /**
	   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we
	   * only need this because Skype can't handle 64-bit IE yet.  We need to remove
	   * this when we don't need it -- tracked by #601957.
	   */
	  ie64: function() {
	    return UserAgent_DEPRECATED.ie() && _win64;
	  },

	  /**
	   *  Check if the UA is Firefox.
	   *
	   *
	   *  @return float|NaN Version number (if match) or NaN.
	   */
	  firefox: function() {
	    return _populate() || _firefox;
	  },


	  /**
	   *  Check if the UA is Opera.
	   *
	   *
	   *  @return float|NaN Version number (if match) or NaN.
	   */
	  opera: function() {
	    return _populate() || _opera;
	  },


	  /**
	   *  Check if the UA is WebKit.
	   *
	   *
	   *  @return float|NaN Version number (if match) or NaN.
	   */
	  webkit: function() {
	    return _populate() || _webkit;
	  },

	  /**
	   *  For Push
	   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit
	   */
	  safari: function() {
	    return UserAgent_DEPRECATED.webkit();
	  },

	  /**
	   *  Check if the UA is a Chrome browser.
	   *
	   *
	   *  @return float|NaN Version number (if match) or NaN.
	   */
	  chrome : function() {
	    return _populate() || _chrome;
	  },


	  /**
	   *  Check if the user is running Windows.
	   *
	   *  @return bool `true' if the user's OS is Windows.
	   */
	  windows: function() {
	    return _populate() || _windows;
	  },


	  /**
	   *  Check if the user is running Mac OS X.
	   *
	   *  @return float|bool   Returns a float if a version number is detected,
	   *                       otherwise true/false.
	   */
	  osx: function() {
	    return _populate() || _osx;
	  },

	  /**
	   * Check if the user is running Linux.
	   *
	   * @return bool `true' if the user's OS is some flavor of Linux.
	   */
	  linux: function() {
	    return _populate() || _linux;
	  },

	  /**
	   * Check if the user is running on an iPhone or iPod platform.
	   *
	   * @return bool `true' if the user is running some flavor of the
	   *    iPhone OS.
	   */
	  iphone: function() {
	    return _populate() || _iphone;
	  },

	  mobile: function() {
	    return _populate() || (_iphone || _ipad || _android || _mobile);
	  },

	  nativeApp: function() {
	    // webviews inside of the native apps
	    return _populate() || _native;
	  },

	  android: function() {
	    return _populate() || _android;
	  },

	  ipad: function() {
	    return _populate() || _ipad;
	  }
	};

	UserAgent_DEPRECATED_1 = UserAgent_DEPRECATED;
	return UserAgent_DEPRECATED_1;
}

/**
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ExecutionEnvironment
 */

var ExecutionEnvironment_1;
var hasRequiredExecutionEnvironment;

function requireExecutionEnvironment () {
	if (hasRequiredExecutionEnvironment) return ExecutionEnvironment_1;
	hasRequiredExecutionEnvironment = 1;

	var canUseDOM = !!(
	  typeof window !== 'undefined' &&
	  window.document &&
	  window.document.createElement
	);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners:
	    canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	ExecutionEnvironment_1 = ExecutionEnvironment;
	return ExecutionEnvironment_1;
}

/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

var isEventSupported_1;
var hasRequiredIsEventSupported;

function requireIsEventSupported () {
	if (hasRequiredIsEventSupported) return isEventSupported_1;
	hasRequiredIsEventSupported = 1;

	var ExecutionEnvironment = requireExecutionEnvironment();

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature =
	    document.implementation &&
	    document.implementation.hasFeature &&
	    // always returns true in newer browsers as per the standard.
	    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	    document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM ||
	      capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	isEventSupported_1 = isEventSupported;
	return isEventSupported_1;
}

/**
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule normalizeWheel
 * @typechecks
 */

var normalizeWheel_1;
var hasRequiredNormalizeWheel$1;

function requireNormalizeWheel$1 () {
	if (hasRequiredNormalizeWheel$1) return normalizeWheel_1;
	hasRequiredNormalizeWheel$1 = 1;

	var UserAgent_DEPRECATED = requireUserAgent_DEPRECATED();

	var isEventSupported = requireIsEventSupported();


	// Reasonable defaults
	var PIXEL_STEP  = 10;
	var LINE_HEIGHT = 40;
	var PAGE_HEIGHT = 800;

	/**
	 * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is
	 * complicated, thus this doc is long and (hopefully) detailed enough to answer
	 * your questions.
	 *
	 * If you need to react to the mouse wheel in a predictable way, this code is
	 * like your bestest friend. * hugs *
	 *
	 * As of today, there are 4 DOM event types you can listen to:
	 *
	 *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)
	 *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari
	 *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!
	 *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003
	 *
	 * So what to do?  The is the best:
	 *
	 *   normalizeWheel.getEventType();
	 *
	 * In your event callback, use this code to get sane interpretation of the
	 * deltas.  This code will return an object with properties:
	 *
	 *   spinX   -- normalized spin speed (use for zoom) - x plane
	 *   spinY   -- " - y plane
	 *   pixelX  -- normalized distance (to pixels) - x plane
	 *   pixelY  -- " - y plane
	 *
	 * Wheel values are provided by the browser assuming you are using the wheel to
	 * scroll a web page by a number of lines or pixels (or pages).  Values can vary
	 * significantly on different platforms and browsers, forgetting that you can
	 * scroll at different speeds.  Some devices (like trackpads) emit more events
	 * at smaller increments with fine granularity, and some emit massive jumps with
	 * linear speed or acceleration.
	 *
	 * This code does its best to normalize the deltas for you:
	 *
	 *   - spin is trying to normalize how far the wheel was spun (or trackpad
	 *     dragged).  This is super useful for zoom support where you want to
	 *     throw away the chunky scroll steps on the PC and make those equal to
	 *     the slow and smooth tiny steps on the Mac. Key data: This code tries to
	 *     resolve a single slow step on a wheel to 1.
	 *
	 *   - pixel is normalizing the desired scroll delta in pixel units.  You'll
	 *     get the crazy differences between browsers, but at least it'll be in
	 *     pixels!
	 *
	 *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This
	 *     should translate to positive value zooming IN, negative zooming OUT.
	 *     This matches the newer 'wheel' event.
	 *
	 * Why are there spinX, spinY (or pixels)?
	 *
	 *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn
	 *     with a mouse.  It results in side-scrolling in the browser by default.
	 *
	 *   - spinY is what you expect -- it's the classic axis of a mouse wheel.
	 *
	 *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and
	 *     probably is by browsers in conjunction with fancy 3D controllers .. but
	 *     you know.
	 *
	 * Implementation info:
	 *
	 * Examples of 'wheel' event if you scroll slowly (down) by one step with an
	 * average mouse:
	 *
	 *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)
	 *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)
	 *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)
	 *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)
	 *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)
	 *
	 * On the trackpad:
	 *
	 *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)
	 *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)
	 *
	 * On other/older browsers.. it's more complicated as there can be multiple and
	 * also missing delta values.
	 *
	 * The 'wheel' event is more standard:
	 *
	 * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents
	 *
	 * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and
	 * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain
	 * backward compatibility with older events.  Those other values help us
	 * better normalize spin speed.  Example of what the browsers provide:
	 *
	 *                          | event.wheelDelta | event.detail
	 *        ------------------+------------------+--------------
	 *          Safari v5/OS X  |       -120       |       0
	 *          Safari v5/Win7  |       -120       |       0
	 *         Chrome v17/OS X  |       -120       |       0
	 *         Chrome v17/Win7  |       -120       |       0
	 *                IE9/Win7  |       -120       |   undefined
	 *         Firefox v4/OS X  |     undefined    |       1
	 *         Firefox v4/Win7  |     undefined    |       3
	 *
	 */
	function normalizeWheel(/*object*/ event) /*object*/ {
	  var sX = 0, sY = 0,       // spinX, spinY
	      pX = 0, pY = 0;       // pixelX, pixelY

	  // Legacy
	  if ('detail'      in event) { sY = event.detail; }
	  if ('wheelDelta'  in event) { sY = -event.wheelDelta / 120; }
	  if ('wheelDeltaY' in event) { sY = -event.wheelDeltaY / 120; }
	  if ('wheelDeltaX' in event) { sX = -event.wheelDeltaX / 120; }

	  // side scrolling on FF with DOMMouseScroll
	  if ( 'axis' in event && event.axis === event.HORIZONTAL_AXIS ) {
	    sX = sY;
	    sY = 0;
	  }

	  pX = sX * PIXEL_STEP;
	  pY = sY * PIXEL_STEP;

	  if ('deltaY' in event) { pY = event.deltaY; }
	  if ('deltaX' in event) { pX = event.deltaX; }

	  if ((pX || pY) && event.deltaMode) {
	    if (event.deltaMode == 1) {          // delta in LINE units
	      pX *= LINE_HEIGHT;
	      pY *= LINE_HEIGHT;
	    } else {                             // delta in PAGE units
	      pX *= PAGE_HEIGHT;
	      pY *= PAGE_HEIGHT;
	    }
	  }

	  // Fall-back if spin cannot be determined
	  if (pX && !sX) { sX = (pX < 1) ? -1 : 1; }
	  if (pY && !sY) { sY = (pY < 1) ? -1 : 1; }

	  return { spinX  : sX,
	           spinY  : sY,
	           pixelX : pX,
	           pixelY : pY };
	}


	/**
	 * The best combination if you prefer spinX + spinY normalization.  It favors
	 * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with
	 * 'wheel' event, making spin speed determination impossible.
	 */
	normalizeWheel.getEventType = function() /*string*/ {
	  return (UserAgent_DEPRECATED.firefox())
	           ? 'DOMMouseScroll'
	           : (isEventSupported('wheel'))
	               ? 'wheel'
	               : 'mousewheel';
	};

	normalizeWheel_1 = normalizeWheel;
	return normalizeWheel_1;
}

var normalizeWheel;
var hasRequiredNormalizeWheel;

function requireNormalizeWheel () {
	if (hasRequiredNormalizeWheel) return normalizeWheel;
	hasRequiredNormalizeWheel = 1;
	normalizeWheel = requireNormalizeWheel$1();
	return normalizeWheel;
}

var ariaDialog = {};

var hasRequiredAriaDialog;

function requireAriaDialog () {
	if (hasRequiredAriaDialog) return ariaDialog;
	hasRequiredAriaDialog = 1;

	ariaDialog.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _ariaUtils = requireAriaUtils();

	var _ariaUtils2 = _interopRequireDefault(_ariaUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @constructor
	 * @desc Dialog object providing modal focus management.
	 *
	 * Assumptions: The element serving as the dialog container is present in the
	 * DOM and hidden. The dialog container has role='dialog'.
	 *
	 * @param dialogId
	 *          The ID of the element serving as the dialog container.
	 * @param focusAfterClosed
	 *          Either the DOM node or the ID of the DOM node to focus when the
	 *          dialog closes.
	 * @param focusFirst
	 *          Optional parameter containing either the DOM node or the ID of the
	 *          DOM node to focus when the dialog opens. If not specified, the
	 *          first focusable element in the dialog will receive focus.
	 */
	var aria = aria || {};
	var tabEvent;

	aria.Dialog = function (dialog, focusAfterClosed, focusFirst) {
	  var _this = this;

	  this.dialogNode = dialog;
	  if (this.dialogNode === null || this.dialogNode.getAttribute('role') !== 'dialog') {
	    throw new Error('Dialog() requires a DOM element with ARIA role of dialog.');
	  }

	  if (typeof focusAfterClosed === 'string') {
	    this.focusAfterClosed = document.getElementById(focusAfterClosed);
	  } else if ((typeof focusAfterClosed === 'undefined' ? 'undefined' : _typeof(focusAfterClosed)) === 'object') {
	    this.focusAfterClosed = focusAfterClosed;
	  } else {
	    this.focusAfterClosed = null;
	  }

	  if (typeof focusFirst === 'string') {
	    this.focusFirst = document.getElementById(focusFirst);
	  } else if ((typeof focusFirst === 'undefined' ? 'undefined' : _typeof(focusFirst)) === 'object') {
	    this.focusFirst = focusFirst;
	  } else {
	    this.focusFirst = null;
	  }

	  if (this.focusFirst) {
	    this.focusFirst.focus();
	  } else {
	    _ariaUtils2.default.focusFirstDescendant(this.dialogNode);
	  }

	  this.lastFocus = document.activeElement;
	  tabEvent = function tabEvent(e) {
	    _this.trapFocus(e);
	  };
	  this.addListeners();
	};

	aria.Dialog.prototype.addListeners = function () {
	  document.addEventListener('focus', tabEvent, true);
	};

	aria.Dialog.prototype.removeListeners = function () {
	  document.removeEventListener('focus', tabEvent, true);
	};

	aria.Dialog.prototype.closeDialog = function () {
	  var _this2 = this;

	  this.removeListeners();
	  if (this.focusAfterClosed) {
	    setTimeout(function () {
	      _this2.focusAfterClosed.focus();
	    });
	  }
	};

	aria.Dialog.prototype.trapFocus = function (event) {
	  if (_ariaUtils2.default.IgnoreUtilFocusChanges) {
	    return;
	  }
	  if (this.dialogNode.contains(event.target)) {
	    this.lastFocus = event.target;
	  } else {
	    _ariaUtils2.default.focusFirstDescendant(this.dialogNode);
	    if (this.lastFocus === document.activeElement) {
	      _ariaUtils2.default.focusLastDescendant(this.dialogNode);
	    }
	    this.lastFocus = document.activeElement;
	  }
	};

	ariaDialog.default = aria.Dialog;
	return ariaDialog;
}

var _global = {exports: {}};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$6 = _global.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global$6; // eslint-disable-line no-undef

var _globalExports = _global.exports;

var _core = {exports: {}};

var core$4 = _core.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core$4; // eslint-disable-line no-undef

var _coreExports = _core.exports;

var _aFunction = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding
var aFunction = _aFunction;
var _ctx = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var _objectDp = {};

var _isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var isObject$4 = _isObject;
var _anObject = function (it) {
  if (!isObject$4(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var _domCreate;
var hasRequired_domCreate;

function require_domCreate () {
	if (hasRequired_domCreate) return _domCreate;
	hasRequired_domCreate = 1;
	var isObject = _isObject;
	var document = _globalExports.document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	_domCreate = function (it) {
	  return is ? document.createElement(it) : {};
	};
	return _domCreate;
}

var _ie8DomDefine = !_descriptors && !_fails(function () {
  return Object.defineProperty(require_domCreate()('div'), 'a', { get: function () { return 7; } }).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject$3 = _isObject;
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function (it, S) {
  if (!isObject$3(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject$3(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject$3(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject$3(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var anObject$3 = _anObject;
var IE8_DOM_DEFINE$1 = _ie8DomDefine;
var toPrimitive$3 = _toPrimitive;
var dP$3 = Object.defineProperty;

_objectDp.f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject$3(O);
  P = toPrimitive$3(P, true);
  anObject$3(Attributes);
  if (IE8_DOM_DEFINE$1) try {
    return dP$3(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _propertyDesc = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var dP$2 = _objectDp;
var createDesc$2 = _propertyDesc;
var _hide = _descriptors ? function (object, key, value) {
  return dP$2.f(object, key, createDesc$2(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var hasOwnProperty = {}.hasOwnProperty;
var _has = function (it, key) {
  return hasOwnProperty.call(it, key);
};

var global$5 = _globalExports;
var core$3 = _coreExports;
var ctx = _ctx;
var hide$2 = _hide;
var has$6 = _has;
var PROTOTYPE$2 = 'prototype';

var $export$3 = function (type, name, source) {
  var IS_FORCED = type & $export$3.F;
  var IS_GLOBAL = type & $export$3.G;
  var IS_STATIC = type & $export$3.S;
  var IS_PROTO = type & $export$3.P;
  var IS_BIND = type & $export$3.B;
  var IS_WRAP = type & $export$3.W;
  var exports = IS_GLOBAL ? core$3 : core$3[name] || (core$3[name] = {});
  var expProto = exports[PROTOTYPE$2];
  var target = IS_GLOBAL ? global$5 : IS_STATIC ? global$5[name] : (global$5[name] || {})[PROTOTYPE$2];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has$6(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global$5)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE$2] = C[PROTOTYPE$2];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export$3.R && expProto && !expProto[key]) hide$2(expProto, key, out);
    }
  }
};
// type bitmap
$export$3.F = 1;   // forced
$export$3.G = 2;   // global
$export$3.S = 4;   // static
$export$3.P = 8;   // proto
$export$3.B = 16;  // bind
$export$3.W = 32;  // wrap
$export$3.U = 64;  // safe
$export$3.R = 128; // real proto method for `library`
var _export = $export$3;

var toString$1 = {}.toString;

var _cof = function (it) {
  return toString$1.call(it).slice(8, -1);
};

var _iobject;
var hasRequired_iobject;

function require_iobject () {
	if (hasRequired_iobject) return _iobject;
	hasRequired_iobject = 1;
	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = _cof;
	// eslint-disable-next-line no-prototype-builtins
	_iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};
	return _iobject;
}

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require_iobject();
var defined$2 = _defined;
var _toIobject = function (it) {
  return IObject(defined$2(it));
};

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

// 7.1.15 ToLength
var toInteger$2 = _toInteger;
var min$1 = Math.min;
var _toLength = function (it) {
  return it > 0 ? min$1(toInteger$2(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var toInteger$1 = _toInteger;
var max = Math.max;
var min = Math.min;
var _toAbsoluteIndex = function (index, length) {
  index = toInteger$1(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes
var toIObject$5 = _toIobject;
var toLength = _toLength;
var toAbsoluteIndex = _toAbsoluteIndex;
var _arrayIncludes = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject$5($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var _shared = {exports: {}};

var _library;
var hasRequired_library;

function require_library () {
	if (hasRequired_library) return _library;
	hasRequired_library = 1;
	_library = true;
	return _library;
}

var core$2 = _coreExports;
var global$4 = _globalExports;
var SHARED = '__core-js_shared__';
var store$1 = global$4[SHARED] || (global$4[SHARED] = {});

(_shared.exports = function (key, value) {
  return store$1[key] || (store$1[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core$2.version,
  mode: require_library() ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});

var _sharedExports = _shared.exports;

var id$1 = 0;
var px = Math.random();
var _uid = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id$1 + px).toString(36));
};

var shared$1 = _sharedExports('keys');
var uid$2 = _uid;
var _sharedKey = function (key) {
  return shared$1[key] || (shared$1[key] = uid$2(key));
};

var has$5 = _has;
var toIObject$4 = _toIobject;
var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO$2 = _sharedKey('IE_PROTO');

var _objectKeysInternal = function (object, names) {
  var O = toIObject$4(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO$2) has$5(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has$5(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys$1 = _objectKeysInternal;
var enumBugKeys$1 = _enumBugKeys;

var _objectKeys = Object.keys || function keys(O) {
  return $keys$1(O, enumBugKeys$1);
};

var _objectGops = {};

_objectGops.f = Object.getOwnPropertySymbols;

var _objectPie = {};

var hasRequired_objectPie;

function require_objectPie () {
	if (hasRequired_objectPie) return _objectPie;
	hasRequired_objectPie = 1;
	_objectPie.f = {}.propertyIsEnumerable;
	return _objectPie;
}

// 7.1.13 ToObject(argument)
var defined$1 = _defined;
var _toObject = function (it) {
  return Object(defined$1(it));
};

var _objectAssign;
var hasRequired_objectAssign;

function require_objectAssign () {
	if (hasRequired_objectAssign) return _objectAssign;
	hasRequired_objectAssign = 1;
	// 19.1.2.1 Object.assign(target, source, ...)
	var DESCRIPTORS = _descriptors;
	var getKeys = _objectKeys;
	var gOPS = _objectGops;
	var pIE = require_objectPie();
	var toObject = _toObject;
	var IObject = require_iobject();
	var $assign = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	_objectAssign = !$assign || _fails(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) {
	      key = keys[j++];
	      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
	    }
	  } return T;
	} : $assign;
	return _objectAssign;
}

// 19.1.3.1 Object.assign(target, source)
var $export$2 = _export;

$export$2($export$2.S + $export$2.F, 'Object', { assign: require_objectAssign() });

var assign$1 = _coreExports.Object.assign;

var assign = { "default": assign$1, __esModule: true };

var _assign = assign;

var _assign2 = _interopRequireDefault$1(_assign);

function _interopRequireDefault$1(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default$2 = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var toInteger = _toInteger;
var defined = _defined;
// true  -> String#at
// false -> String#codePointAt
var _stringAt = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

var _redefine = _hide;

var _iterators = {};

var dP$1 = _objectDp;
var anObject$2 = _anObject;
var getKeys$1 = _objectKeys;

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$2(O);
  var keys = getKeys$1(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP$1.f(O, P = keys[i++], Properties[P]);
  return O;
};

var _html;
var hasRequired_html;

function require_html () {
	if (hasRequired_html) return _html;
	hasRequired_html = 1;
	var document = _globalExports.document;
	_html = document && document.documentElement;
	return _html;
}

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject$1 = _anObject;
var dPs = _objectDps;
var enumBugKeys = _enumBugKeys;
var IE_PROTO$1 = _sharedKey('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE$1 = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require_domCreate()('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require_html().appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE$1][enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE$1] = anObject$1(O);
    result = new Empty();
    Empty[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

var _wks = {exports: {}};

var store = _sharedExports('wks');
var uid$1 = _uid;
var Symbol$1 = _globalExports.Symbol;
var USE_SYMBOL = typeof Symbol$1 == 'function';

var $exports = _wks.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol$1[name] || (USE_SYMBOL ? Symbol$1 : uid$1)('Symbol.' + name));
};

$exports.store = store;

var _wksExports = _wks.exports;

var def = _objectDp.f;
var has$4 = _has;
var TAG = _wksExports('toStringTag');

var _setToStringTag = function (it, tag, stat) {
  if (it && !has$4(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

var create = _objectCreate;
var descriptor = _propertyDesc;
var setToStringTag$2 = _setToStringTag;
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype, _wksExports('iterator'), function () { return this; });

var _iterCreate = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag$2(Constructor, NAME + ' Iterator');
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has$3 = _has;
var toObject$1 = _toObject;
var IE_PROTO = _sharedKey('IE_PROTO');
var ObjectProto$1 = Object.prototype;

var _objectGpo = Object.getPrototypeOf || function (O) {
  O = toObject$1(O);
  if (has$3(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto$1 : null;
};

var LIBRARY$1 = require_library();
var $export$1 = _export;
var redefine$1 = _redefine;
var hide$1 = _hide;
var Iterators$2 = _iterators;
var $iterCreate = _iterCreate;
var setToStringTag$1 = _setToStringTag;
var getPrototypeOf = _objectGpo;
var ITERATOR = _wksExports('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag$1(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY$1 && typeof IteratorPrototype[ITERATOR] != 'function') hide$1(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY$1 || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide$1(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators$2[NAME] = $default;
  Iterators$2[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine$1(proto, key, methods[key]);
    } else $export$1($export$1.P + $export$1.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

var $at = _stringAt(true);

// 21.1.3.27 String.prototype[@@iterator]()
_iterDefine(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

var _iterStep = function (done, value) {
  return { value: value, done: !!done };
};

var step = _iterStep;
var Iterators$1 = _iterators;
var toIObject$3 = _toIobject;

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
_iterDefine(Array, 'Array', function (iterated, kind) {
  this._t = toIObject$3(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators$1.Arguments = Iterators$1.Array;

var global$3 = _globalExports;
var hide = _hide;
var Iterators = _iterators;
var TO_STRING_TAG = _wksExports('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global$3[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

var _wksExt = {};

_wksExt.f = _wksExports;

var iterator$1 = _wksExt.f('iterator');

var iterator = { "default": iterator$1, __esModule: true };

var _meta = {exports: {}};

var META$1 = _uid('meta');
var isObject$2 = _isObject;
var has$2 = _has;
var setDesc = _objectDp.f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !_fails(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META$1, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject$2(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has$2(it, META$1)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META$1].i;
};
var getWeak = function (it, create) {
  if (!has$2(it, META$1)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META$1].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has$2(it, META$1)) setMeta(it);
  return it;
};
var meta = _meta.exports = {
  KEY: META$1,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

var _metaExports = _meta.exports;

var global$2 = _globalExports;
var core$1 = _coreExports;
var LIBRARY = require_library();
var wksExt$1 = _wksExt;
var defineProperty$1 = _objectDp.f;
var _wksDefine = function (name) {
  var $Symbol = core$1.Symbol || (core$1.Symbol = LIBRARY ? {} : global$2.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty$1($Symbol, name, { value: wksExt$1.f(name) });
};

// all enumerable object keys, includes symbols
var getKeys = _objectKeys;
var gOPS = _objectGops;
var pIE$1 = require_objectPie();
var _enumKeys = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE$1.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

// 7.2.2 IsArray(argument)
var cof = _cof;
var _isArray = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

var _objectGopnExt = {};

var _objectGopn = {};

var hasRequired_objectGopn;

function require_objectGopn () {
	if (hasRequired_objectGopn) return _objectGopn;
	hasRequired_objectGopn = 1;
	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = _objectKeysInternal;
	var hiddenKeys = _enumBugKeys.concat('length', 'prototype');

	_objectGopn.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};
	return _objectGopn;
}

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject$2 = _toIobject;
var gOPN$1 = require_objectGopn().f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN$1(it);
  } catch (e) {
    return windowNames.slice();
  }
};

_objectGopnExt.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN$1(toIObject$2(it));
};

var _objectGopd = {};

var pIE = require_objectPie();
var createDesc$1 = _propertyDesc;
var toIObject$1 = _toIobject;
var toPrimitive$2 = _toPrimitive;
var has$1 = _has;
var IE8_DOM_DEFINE = _ie8DomDefine;
var gOPD$1 = Object.getOwnPropertyDescriptor;

_objectGopd.f = _descriptors ? gOPD$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIObject$1(O);
  P = toPrimitive$2(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD$1(O, P);
  } catch (e) { /* empty */ }
  if (has$1(O, P)) return createDesc$1(!pIE.f.call(O, P), O[P]);
};

// ECMAScript 6 symbols shim
var global$1 = _globalExports;
var has = _has;
var DESCRIPTORS = _descriptors;
var $export = _export;
var redefine = _redefine;
var META = _metaExports.KEY;
var $fails = _fails;
var shared = _sharedExports;
var setToStringTag = _setToStringTag;
var uid = _uid;
var wks = _wksExports;
var wksExt = _wksExt;
var wksDefine = _wksDefine;
var enumKeys = _enumKeys;
var isArray = _isArray;
var anObject = _anObject;
var isObject$1 = _isObject;
var toObject = _toObject;
var toIObject = _toIobject;
var toPrimitive$1 = _toPrimitive;
var createDesc = _propertyDesc;
var _create = _objectCreate;
var gOPNExt = _objectGopnExt;
var $GOPD = _objectGopd;
var $GOPS = _objectGops;
var $DP = _objectDp;
var $keys = _objectKeys;
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global$1.Symbol;
var $JSON = global$1.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global$1.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive$1(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive$1(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive$1(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require_objectGopn().f = gOPNExt.f = $getOwnPropertyNames;
  require_objectPie().f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require_library()) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject$1(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global$1.JSON, 'JSON', true);

_wksDefine('asyncIterator');

_wksDefine('observable');

var symbol$1 = _coreExports.Symbol;

var symbol = { "default": symbol$1, __esModule: true };

var _iterator = iterator;

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = symbol;

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof$1 = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default$1 = typeof _symbol2.default === "function" && _typeof$1(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof$1(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof$1(obj);
};

var formatRegExp = /%[sdj%]/g;

function format() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var i = 1;
  var f = args[0];
  var len = args.length;
  if (typeof f === 'function') {
    return f.apply(null, args.slice(1));
  }
  if (typeof f === 'string') {
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') {
        return '%';
      }
      if (i >= len) {
        return x;
      }
      switch (x) {
        case '%s':
          return String(args[i++]);
        case '%d':
          return Number(args[i++]);
        case '%j':
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return '[Circular]';
          }
          break;
        default:
          return x;
      }
    });
    for (var arg = args[i]; i < len; arg = args[++i]) {
      str += ' ' + arg;
    }
    return str;
  }
  return f;
}

function isNativeStringType(type) {
  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'pattern';
}

function isEmptyValue(value, type) {
  if (value === undefined || value === null) {
    return true;
  }
  if (type === 'array' && Array.isArray(value) && !value.length) {
    return true;
  }
  if (isNativeStringType(type) && typeof value === 'string' && !value) {
    return true;
  }
  return false;
}

function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total = 0;
  var arrLength = arr.length;

  function count(errors) {
    results.push.apply(results, errors);
    total++;
    if (total === arrLength) {
      callback(results);
    }
  }

  arr.forEach(function (a) {
    func(a, count);
  });
}

function asyncSerialArray(arr, func, callback) {
  var index = 0;
  var arrLength = arr.length;

  function next(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index;
    index = index + 1;
    if (original < arrLength) {
      func(arr[original], next);
    } else {
      callback([]);
    }
  }

  next([]);
}

function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function (k) {
    ret.push.apply(ret, objArr[k]);
  });
  return ret;
}

function asyncMap(objArr, option, func, callback) {
  if (option.first) {
    var flattenArr = flattenObjArr(objArr);
    return asyncSerialArray(flattenArr, func, callback);
  }
  var firstFields = option.firstFields || [];
  if (firstFields === true) {
    firstFields = Object.keys(objArr);
  }
  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total = 0;
  var results = [];
  var next = function next(errors) {
    results.push.apply(results, errors);
    total++;
    if (total === objArrLength) {
      callback(results);
    }
  };
  objArrKeys.forEach(function (key) {
    var arr = objArr[key];
    if (firstFields.indexOf(key) !== -1) {
      asyncSerialArray(arr, func, next);
    } else {
      asyncParallelArray(arr, func, next);
    }
  });
}

function complementError(rule) {
  return function (oe) {
    if (oe && oe.message) {
      oe.field = oe.field || rule.fullField;
      return oe;
    }
    return {
      message: oe,
      field: oe.field || rule.fullField
    };
  };
}

function deepMerge(target, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value = source[s];
        if ((typeof value === 'undefined' ? 'undefined' : _default$1(value)) === 'object' && _default$1(target[s]) === 'object') {
          target[s] = _default$2({}, target[s], value);
        } else {
          target[s] = value;
        }
      }
    }
  }
  return target;
}

/**
 *  Rule for validating required fields.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function required$1(rule, value, source, errors, options, type) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type || rule.type))) {
    errors.push(format(options.messages.required, rule.fullField));
  }
}

/**
 *  Rule for validating whitespace.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function whitespace(rule, value, source, errors, options) {
  if (/^\s+$/.test(value) || value === '') {
    errors.push(format(options.messages.whitespace, rule.fullField));
  }
}

/* eslint max-len:0 */

var pattern$2 = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$', 'i'),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};

var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  float: function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  regexp: function regexp(value) {
    if (value instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value);
    } catch (e) {
      return false;
    }
  },
  date: function date(value) {
    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }
    return typeof value === 'number';
  },
  object: function object(value) {
    return (typeof value === 'undefined' ? 'undefined' : _default$1(value)) === 'object' && !types.array(value);
  },
  method: function method(value) {
    return typeof value === 'function';
  },
  email: function email(value) {
    return typeof value === 'string' && !!value.match(pattern$2.email) && value.length < 255;
  },
  url: function url(value) {
    return typeof value === 'string' && !!value.match(pattern$2.url);
  },
  hex: function hex(value) {
    return typeof value === 'string' && !!value.match(pattern$2.hex);
  }
};

/**
 *  Rule for validating the type of a value.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function type$1(rule, value, source, errors, options) {
  if (rule.required && value === undefined) {
    required$1(rule, value, source, errors, options);
    return;
  }
  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value)) {
      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
    }
    // straight typeof check
  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : _default$1(value)) !== rule.type) {
    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
  }
}

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function range(rule, value, source, errors, options) {
  var len = typeof rule.len === 'number';
  var min = typeof rule.min === 'number';
  var max = typeof rule.max === 'number';
  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value;
  var key = null;
  var num = typeof value === 'number';
  var str = typeof value === 'string';
  var arr = Array.isArray(value);
  if (num) {
    key = 'number';
  } else if (str) {
    key = 'string';
  } else if (arr) {
    key = 'array';
  }
  // if the value is not of a supported type for range validation
  // the validation rule rule should use the
  // type property to also test for a particular type
  if (!key) {
    return false;
  }
  if (arr) {
    val = value.length;
  }
  if (str) {
    // 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
    val = value.replace(spRegexp, '_').length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(format(options.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min && !max && val < rule.min) {
    errors.push(format(options.messages[key].min, rule.fullField, rule.min));
  } else if (max && !min && val > rule.max) {
    errors.push(format(options.messages[key].max, rule.fullField, rule.max));
  } else if (min && max && (val < rule.min || val > rule.max)) {
    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));
  }
}

var ENUM$1 = 'enum';

/**
 *  Rule for validating a value exists in an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enumerable$1(rule, value, source, errors, options) {
  rule[ENUM$1] = Array.isArray(rule[ENUM$1]) ? rule[ENUM$1] : [];
  if (rule[ENUM$1].indexOf(value) === -1) {
    errors.push(format(options.messages[ENUM$1], rule.fullField, rule[ENUM$1].join(', ')));
  }
}

/**
 *  Rule for validating a regular expression pattern.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern$1(rule, value, source, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      // if a RegExp instance is passed, reset `lastIndex` in case its `global`
      // flag is accidentally set to `true`, which in a validation scenario
      // is not necessary and the result might be misleading
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    } else if (typeof rule.pattern === 'string') {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    }
  }
}

var rules = {
  required: required$1,
  whitespace: whitespace,
  type: type$1,
  range: range,
  'enum': enumerable$1,
  pattern: pattern$1
};

/**
 *  Performs validation for string types.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function string(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, 'string') && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, 'string');
    if (!isEmptyValue(value, 'string')) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
      rules.pattern(rule, value, source, errors, options);
      if (rule.whitespace === true) {
        rules.whitespace(rule, value, source, errors, options);
      }
    }
  }
  callback(errors);
}

/**
 *  Validates a function.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function method(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates a number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function number(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates a boolean.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function boolean(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates the regular expression type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function regexp(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value)) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates a number is an integer.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function integer(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates a number is a floating point number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function floatFn(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates an array.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function array(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, 'array') && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, 'array');
    if (!isEmptyValue(value, 'array')) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates an object.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function object(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

var ENUM = 'enum';

/**
 *  Validates an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enumerable(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value) {
      rules[ENUM](rule, value, source, errors, options);
    }
  }
  callback(errors);
}

/**
 *  Validates a regular expression pattern.
 *
 *  Performs validation when a rule only contains
 *  a pattern property but is not declared as a string type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, 'string') && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value, 'string')) {
      rules.pattern(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

function date(rule, value, callback, source, options) {
  // console.log('integer rule called %j', rule);
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  // console.log('validate on %s value', value);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value)) {
      var dateObject = void 0;

      if (typeof value === 'number') {
        dateObject = new Date(value);
      } else {
        dateObject = value;
      }

      rules.type(rule, dateObject, source, errors, options);
      if (dateObject) {
        rules.range(rule, dateObject.getTime(), source, errors, options);
      }
    }
  }
  callback(errors);
}

function required(rule, value, callback, source, options) {
  var errors = [];
  var type = Array.isArray(value) ? 'array' : typeof value === 'undefined' ? 'undefined' : _default$1(value);
  rules.required(rule, value, source, errors, options, type);
  callback(errors);
}

function type(rule, value, callback, source, options) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, ruleType) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, ruleType);
    if (!isEmptyValue(value, ruleType)) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

var validators = {
  string: string,
  method: method,
  number: number,
  boolean: boolean,
  regexp: regexp,
  integer: integer,
  float: floatFn,
  array: array,
  object: object,
  'enum': enumerable,
  pattern: pattern,
  date: date,
  url: type,
  hex: type,
  email: type,
  required: required
};

function newMessages() {
  return {
    'default': 'Validation error on field %s',
    required: '%s is required',
    'enum': '%s must be one of %s',
    whitespace: '%s cannot be empty',
    date: {
      format: '%s date %s is invalid for format %s',
      parse: '%s date could not be parsed, %s is invalid ',
      invalid: '%s date %s is invalid'
    },
    types: {
      string: '%s is not a %s',
      method: '%s is not a %s (function)',
      array: '%s is not an %s',
      object: '%s is not an %s',
      number: '%s is not a %s',
      date: '%s is not a %s',
      boolean: '%s is not a %s',
      integer: '%s is not an %s',
      float: '%s is not a %s',
      regexp: '%s is not a valid %s',
      email: '%s is not a valid %s',
      url: '%s is not a valid %s',
      hex: '%s is not a valid %s'
    },
    string: {
      len: '%s must be exactly %s characters',
      min: '%s must be at least %s characters',
      max: '%s cannot be longer than %s characters',
      range: '%s must be between %s and %s characters'
    },
    number: {
      len: '%s must equal %s',
      min: '%s cannot be less than %s',
      max: '%s cannot be greater than %s',
      range: '%s must be between %s and %s'
    },
    array: {
      len: '%s must be exactly %s in length',
      min: '%s cannot be less than %s in length',
      max: '%s cannot be greater than %s in length',
      range: '%s must be between %s and %s in length'
    },
    pattern: {
      mismatch: '%s value %s does not match pattern %s'
    },
    clone: function clone() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}

var messages = newMessages();

/**
 *  Encapsulates a validation schema.
 *
 *  @param descriptor An object declaring validation rules
 *  for this schema.
 */
function Schema(descriptor) {
  this.rules = null;
  this._messages = messages;
  this.define(descriptor);
}

Schema.prototype = {
  messages: function messages(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }
    return this._messages;
  },
  define: function define(rules) {
    if (!rules) {
      throw new Error('Cannot configure a schema with no rules');
    }
    if ((typeof rules === 'undefined' ? 'undefined' : _default$1(rules)) !== 'object' || Array.isArray(rules)) {
      throw new Error('Rules must be an object');
    }
    this.rules = {};
    var z = void 0;
    var item = void 0;
    for (z in rules) {
      if (rules.hasOwnProperty(z)) {
        item = rules[z];
        this.rules[z] = Array.isArray(item) ? item : [item];
      }
    }
  },
  validate: function validate(source_) {
    var _this = this;

    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var oc = arguments[2];

    var source = source_;
    var options = o;
    var callback = oc;
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback();
      }
      return;
    }
    function complete(results) {
      var i = void 0;
      var field = void 0;
      var errors = [];
      var fields = {};

      function add(e) {
        if (Array.isArray(e)) {
          errors = errors.concat.apply(errors, e);
        } else {
          errors.push(e);
        }
      }

      for (i = 0; i < results.length; i++) {
        add(results[i]);
      }
      if (!errors.length) {
        errors = null;
        fields = null;
      } else {
        for (i = 0; i < errors.length; i++) {
          field = errors[i].field;
          fields[field] = fields[field] || [];
          fields[field].push(errors[i]);
        }
      }
      callback(errors, fields);
    }

    if (options.messages) {
      var messages$1 = this.messages();
      if (messages$1 === messages) {
        messages$1 = newMessages();
      }
      deepMerge(messages$1, options.messages);
      options.messages = messages$1;
    } else {
      options.messages = this.messages();
    }
    var arr = void 0;
    var value = void 0;
    var series = {};
    var keys = options.keys || Object.keys(this.rules);
    keys.forEach(function (z) {
      arr = _this.rules[z];
      value = source[z];
      arr.forEach(function (r) {
        var rule = r;
        if (typeof rule.transform === 'function') {
          if (source === source_) {
            source = _default$2({}, source);
          }
          value = source[z] = rule.transform(value);
        }
        if (typeof rule === 'function') {
          rule = {
            validator: rule
          };
        } else {
          rule = _default$2({}, rule);
        }
        rule.validator = _this.getValidationMethod(rule);
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this.getType(rule);
        if (!rule.validator) {
          return;
        }
        series[z] = series[z] || [];
        series[z].push({
          rule: rule,
          value: value,
          source: source,
          field: z
        });
      });
    });
    var errorFields = {};
    asyncMap(series, options, function (data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === 'object' || rule.type === 'array') && (_default$1(rule.fields) === 'object' || _default$1(rule.defaultField) === 'object');
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;
      function addFullfield(key, schema) {
        return _default$2({}, schema, {
          fullField: rule.fullField + '.' + key
        });
      }

      function cb() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        var errors = e;
        if (!Array.isArray(errors)) {
          errors = [errors];
        }
        if (errors.length) ;
        if (errors.length && rule.message) {
          errors = [].concat(rule.message);
        }

        errors = errors.map(complementError(rule));

        if (options.first && errors.length) {
          errorFields[rule.field] = 1;
          return doIt(errors);
        }
        if (!deep) {
          doIt(errors);
        } else {
          // if rule is required but the target object
          // does not exist fail at the rule level and don't
          // go deeper
          if (rule.required && !data.value) {
            if (rule.message) {
              errors = [].concat(rule.message).map(complementError(rule));
            } else if (options.error) {
              errors = [options.error(rule, format(options.messages.required, rule.field))];
            } else {
              errors = [];
            }
            return doIt(errors);
          }

          var fieldsSchema = {};
          if (rule.defaultField) {
            for (var k in data.value) {
              if (data.value.hasOwnProperty(k)) {
                fieldsSchema[k] = rule.defaultField;
              }
            }
          }
          fieldsSchema = _default$2({}, fieldsSchema, data.rule.fields);
          for (var f in fieldsSchema) {
            if (fieldsSchema.hasOwnProperty(f)) {
              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];
              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
            }
          }
          var schema = new Schema(fieldsSchema);
          schema.messages(options.messages);
          if (data.rule.options) {
            data.rule.options.messages = options.messages;
            data.rule.options.error = options.error;
          }
          schema.validate(data.value, data.rule.options || options, function (errs) {
            doIt(errs && errs.length ? errors.concat(errs) : errs);
          });
        }
      }

      var res = rule.validator(rule, data.value, cb, data.source, options);
      if (res && res.then) {
        res.then(function () {
          return cb();
        }, function (e) {
          return cb(e);
        });
      }
    }, function (results) {
      complete(results);
    });
  },
  getType: function getType(rule) {
    if (rule.type === undefined && rule.pattern instanceof RegExp) {
      rule.type = 'pattern';
    }
    if (typeof rule.validator !== 'function' && rule.type && !validators.hasOwnProperty(rule.type)) {
      throw new Error(format('Unknown rule type %s', rule.type));
    }
    return rule.type || 'string';
  },
  getValidationMethod: function getValidationMethod(rule) {
    if (typeof rule.validator === 'function') {
      return rule.validator;
    }
    var keys = Object.keys(rule);
    var messageIndex = keys.indexOf('message');
    if (messageIndex !== -1) {
      keys.splice(messageIndex, 1);
    }
    if (keys.length === 1 && keys[0] === 'required') {
      return validators.required;
    }
    return validators[this.getType(rule)] || false;
  }
};

Schema.register = function register(type, validator) {
  if (typeof validator !== 'function') {
    throw new Error('Cannot register a validator by type, validator is not a function');
  }
  validators[type] = validator;
};

Schema.messages = messages;

var es = /*#__PURE__*/Object.freeze({
  __proto__: null,
  default: Schema
});

var require$$41 = /*@__PURE__*/getAugmentedNamespace(es);

var inputNumber = {exports: {}};

var hasRequiredInputNumber;

function requireInputNumber () {
	if (hasRequiredInputNumber) return inputNumber.exports;
	hasRequiredInputNumber = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 87);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 10:
		/***/ (function(module, exports) {

		module.exports = requireInput();

		/***/ }),

		/***/ 2:
		/***/ (function(module, exports) {

		module.exports = requireDom();

		/***/ }),

		/***/ 22:
		/***/ (function(module, exports) {

		module.exports = requireFocus();

		/***/ }),

		/***/ 3:
		/***/ (function(module, exports) {

		module.exports = requireUtil();

		/***/ }),

		/***/ 30:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony import */ var element_ui_src_utils_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
		/* harmony import */ var element_ui_src_utils_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);



		/* harmony default export */ __webpack_exports__["a"] = ({
		  bind: function bind(el, binding, vnode) {
		    var interval = null;
		    var startTime = void 0;
		    var maxIntervals = Object(element_ui_src_utils_util__WEBPACK_IMPORTED_MODULE_1__["isMac"])() ? 100 : 200;
		    var handler = function handler() {
		      return vnode.context[binding.expression].apply();
		    };
		    var clear = function clear() {
		      if (Date.now() - startTime < maxIntervals) {
		        handler();
		      }
		      clearInterval(interval);
		      interval = null;
		    };

		    Object(element_ui_src_utils_dom__WEBPACK_IMPORTED_MODULE_0__["on"])(el, 'mousedown', function (e) {
		      if (e.button !== 0) return;
		      startTime = Date.now();
		      Object(element_ui_src_utils_dom__WEBPACK_IMPORTED_MODULE_0__["once"])(document, 'mouseup', clear);
		      clearInterval(interval);
		      interval = setInterval(handler, maxIntervals);
		    });
		  }
		});

		/***/ }),

		/***/ 87:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/input-number/src/input-number.vue?vue&type=template&id=42f8cf66&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "div",
		    {
		      class: [
		        "el-input-number",
		        _vm.inputNumberSize ? "el-input-number--" + _vm.inputNumberSize : "",
		        { "is-disabled": _vm.inputNumberDisabled },
		        { "is-without-controls": !_vm.controls },
		        { "is-controls-right": _vm.controlsAtRight }
		      ],
		      on: {
		        dragstart: function($event) {
		          $event.preventDefault();
		        }
		      }
		    },
		    [
		      _vm.controls
		        ? _c(
		            "span",
		            {
		              directives: [
		                {
		                  name: "repeat-click",
		                  rawName: "v-repeat-click",
		                  value: _vm.decrease,
		                  expression: "decrease"
		                }
		              ],
		              staticClass: "el-input-number__decrease",
		              class: { "is-disabled": _vm.minDisabled },
		              attrs: { role: "button" },
		              on: {
		                keydown: function($event) {
		                  if (
		                    !("button" in $event) &&
		                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
		                  ) {
		                    return null
		                  }
		                  return _vm.decrease($event)
		                }
		              }
		            },
		            [
		              _c("i", {
		                class:
		                  "el-icon-" + (_vm.controlsAtRight ? "arrow-down" : "minus")
		              })
		            ]
		          )
		        : _vm._e(),
		      _vm.controls
		        ? _c(
		            "span",
		            {
		              directives: [
		                {
		                  name: "repeat-click",
		                  rawName: "v-repeat-click",
		                  value: _vm.increase,
		                  expression: "increase"
		                }
		              ],
		              staticClass: "el-input-number__increase",
		              class: { "is-disabled": _vm.maxDisabled },
		              attrs: { role: "button" },
		              on: {
		                keydown: function($event) {
		                  if (
		                    !("button" in $event) &&
		                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
		                  ) {
		                    return null
		                  }
		                  return _vm.increase($event)
		                }
		              }
		            },
		            [
		              _c("i", {
		                class: "el-icon-" + (_vm.controlsAtRight ? "arrow-up" : "plus")
		              })
		            ]
		          )
		        : _vm._e(),
		      _c("el-input", {
		        ref: "input",
		        attrs: {
		          value: _vm.displayValue,
		          placeholder: _vm.placeholder,
		          disabled: _vm.inputNumberDisabled,
		          size: _vm.inputNumberSize,
		          max: _vm.max,
		          min: _vm.min,
		          name: _vm.name,
		          label: _vm.label
		        },
		        on: {
		          blur: _vm.handleBlur,
		          focus: _vm.handleFocus,
		          input: _vm.handleInput,
		          change: _vm.handleInputChange
		        },
		        nativeOn: {
		          keydown: [
		            function($event) {
		              if (
		                !("button" in $event) &&
		                _vm._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])
		              ) {
		                return null
		              }
		              $event.preventDefault();
		              return _vm.increase($event)
		            },
		            function($event) {
		              if (
		                !("button" in $event) &&
		                _vm._k($event.keyCode, "down", 40, $event.key, [
		                  "Down",
		                  "ArrowDown"
		                ])
		              ) {
		                return null
		              }
		              $event.preventDefault();
		              return _vm.decrease($event)
		            }
		          ]
		        }
		      })
		    ],
		    1
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue?vue&type=template&id=42f8cf66&

		// EXTERNAL MODULE: external "element-ui/lib/input"
		var input_ = __webpack_require__(10);
		var input_default = /*#__PURE__*/__webpack_require__.n(input_);

		// EXTERNAL MODULE: external "element-ui/lib/mixins/focus"
		var focus_ = __webpack_require__(22);
		var focus_default = /*#__PURE__*/__webpack_require__.n(focus_);

		// EXTERNAL MODULE: ./src/directives/repeat-click.js
		var repeat_click = __webpack_require__(30);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/input-number/src/input-number.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//





		/* harmony default export */ var input_numbervue_type_script_lang_js_ = ({
		  name: 'ElInputNumber',
		  mixins: [focus_default()('input')],
		  inject: {
		    elForm: {
		      default: ''
		    },
		    elFormItem: {
		      default: ''
		    }
		  },
		  directives: {
		    repeatClick: repeat_click["a" /* default */]
		  },
		  components: {
		    ElInput: input_default.a
		  },
		  props: {
		    step: {
		      type: Number,
		      default: 1
		    },
		    stepStrictly: {
		      type: Boolean,
		      default: false
		    },
		    max: {
		      type: Number,
		      default: Infinity
		    },
		    min: {
		      type: Number,
		      default: -Infinity
		    },
		    value: {},
		    disabled: Boolean,
		    size: String,
		    controls: {
		      type: Boolean,
		      default: true
		    },
		    controlsPosition: {
		      type: String,
		      default: ''
		    },
		    name: String,
		    label: String,
		    placeholder: String,
		    precision: {
		      type: Number,
		      validator: function validator(val) {
		        return val >= 0 && val === parseInt(val, 10);
		      }
		    }
		  },
		  data: function data() {
		    return {
		      currentValue: 0,
		      userInput: null
		    };
		  },

		  watch: {
		    value: {
		      immediate: true,
		      handler: function handler(value) {
		        var newVal = value === undefined ? value : Number(value);
		        if (newVal !== undefined) {
		          if (isNaN(newVal)) {
		            return;
		          }

		          if (this.stepStrictly) {
		            var stepPrecision = this.getPrecision(this.step);
		            var precisionFactor = Math.pow(10, stepPrecision);
		            newVal = Math.round(newVal / this.step) * precisionFactor * this.step / precisionFactor;
		          }

		          if (this.precision !== undefined) {
		            newVal = this.toPrecision(newVal, this.precision);
		          }
		        }
		        if (newVal >= this.max) newVal = this.max;
		        if (newVal <= this.min) newVal = this.min;
		        this.currentValue = newVal;
		        this.userInput = null;
		        this.$emit('input', newVal);
		      }
		    }
		  },
		  computed: {
		    minDisabled: function minDisabled() {
		      return this._decrease(this.value, this.step) < this.min;
		    },
		    maxDisabled: function maxDisabled() {
		      return this._increase(this.value, this.step) > this.max;
		    },
		    numPrecision: function numPrecision() {
		      var value = this.value,
		          step = this.step,
		          getPrecision = this.getPrecision,
		          precision = this.precision;

		      var stepPrecision = getPrecision(step);
		      if (precision !== undefined) {
		        if (stepPrecision > precision) {
		          console.warn('[Element Warn][InputNumber]precision should not be less than the decimal places of step');
		        }
		        return precision;
		      } else {
		        return Math.max(getPrecision(value), stepPrecision);
		      }
		    },
		    controlsAtRight: function controlsAtRight() {
		      return this.controls && this.controlsPosition === 'right';
		    },
		    _elFormItemSize: function _elFormItemSize() {
		      return (this.elFormItem || {}).elFormItemSize;
		    },
		    inputNumberSize: function inputNumberSize() {
		      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
		    },
		    inputNumberDisabled: function inputNumberDisabled() {
		      return this.disabled || !!(this.elForm || {}).disabled;
		    },
		    displayValue: function displayValue() {
		      if (this.userInput !== null) {
		        return this.userInput;
		      }

		      var currentValue = this.currentValue;

		      if (typeof currentValue === 'number') {
		        if (this.stepStrictly) {
		          var stepPrecision = this.getPrecision(this.step);
		          var precisionFactor = Math.pow(10, stepPrecision);
		          currentValue = Math.round(currentValue / this.step) * precisionFactor * this.step / precisionFactor;
		        }

		        if (this.precision !== undefined) {
		          currentValue = currentValue.toFixed(this.precision);
		        }
		      }

		      return currentValue;
		    }
		  },
		  methods: {
		    toPrecision: function toPrecision(num, precision) {
		      if (precision === undefined) precision = this.numPrecision;
		      return parseFloat(Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision));
		    },
		    getPrecision: function getPrecision(value) {
		      if (value === undefined) return 0;
		      var valueString = value.toString();
		      var dotPosition = valueString.indexOf('.');
		      var precision = 0;
		      if (dotPosition !== -1) {
		        precision = valueString.length - dotPosition - 1;
		      }
		      return precision;
		    },
		    _increase: function _increase(val, step) {
		      if (typeof val !== 'number' && val !== undefined) return this.currentValue;

		      var precisionFactor = Math.pow(10, this.numPrecision);
		      // Solve the accuracy problem of JS decimal calculation by converting the value to integer.
		      return this.toPrecision((precisionFactor * val + precisionFactor * step) / precisionFactor);
		    },
		    _decrease: function _decrease(val, step) {
		      if (typeof val !== 'number' && val !== undefined) return this.currentValue;

		      var precisionFactor = Math.pow(10, this.numPrecision);

		      return this.toPrecision((precisionFactor * val - precisionFactor * step) / precisionFactor);
		    },
		    increase: function increase() {
		      if (this.inputNumberDisabled || this.maxDisabled) return;
		      var value = this.value || 0;
		      var newVal = this._increase(value, this.step);
		      this.setCurrentValue(newVal);
		    },
		    decrease: function decrease() {
		      if (this.inputNumberDisabled || this.minDisabled) return;
		      var value = this.value || 0;
		      var newVal = this._decrease(value, this.step);
		      this.setCurrentValue(newVal);
		    },
		    handleBlur: function handleBlur(event) {
		      this.$emit('blur', event);
		    },
		    handleFocus: function handleFocus(event) {
		      this.$emit('focus', event);
		    },
		    setCurrentValue: function setCurrentValue(newVal) {
		      var oldVal = this.currentValue;
		      if (typeof newVal === 'number' && this.precision !== undefined) {
		        newVal = this.toPrecision(newVal, this.precision);
		      }
		      if (newVal >= this.max) newVal = this.max;
		      if (newVal <= this.min) newVal = this.min;
		      if (oldVal === newVal) return;
		      this.userInput = null;
		      this.$emit('input', newVal);
		      this.$emit('change', newVal, oldVal);
		      this.currentValue = newVal;
		    },
		    handleInput: function handleInput(value) {
		      this.userInput = value;
		    },
		    handleInputChange: function handleInputChange(value) {
		      var newVal = value === '' ? undefined : Number(value);
		      if (!isNaN(newVal) || value === '') {
		        this.setCurrentValue(newVal);
		      }
		      this.userInput = null;
		    },
		    select: function select() {
		      this.$refs.input.select();
		    }
		  },
		  mounted: function mounted() {
		    var innerInput = this.$refs.input.$refs.input;
		    innerInput.setAttribute('role', 'spinbutton');
		    innerInput.setAttribute('aria-valuemax', this.max);
		    innerInput.setAttribute('aria-valuemin', this.min);
		    innerInput.setAttribute('aria-valuenow', this.currentValue);
		    innerInput.setAttribute('aria-disabled', this.inputNumberDisabled);
		  },
		  updated: function updated() {
		    if (!this.$refs || !this.$refs.input) return;
		    var innerInput = this.$refs.input.$refs.input;
		    innerInput.setAttribute('aria-valuenow', this.currentValue);
		  }
		});
		// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_input_numbervue_type_script_lang_js_ = (input_numbervue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_input_numbervue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/input-number/src/input-number.vue";
		/* harmony default export */ var input_number = (component.exports);
		// CONCATENATED MODULE: ./packages/input-number/index.js


		/* istanbul ignore next */
		input_number.install = function (Vue) {
		  Vue.component(input_number.name, input_number);
		};

		/* harmony default export */ __webpack_exports__["default"] = (input_number);

		/***/ })

		/******/ }); 
	} (inputNumber));
	return inputNumber.exports;
}

var cascaderPanel = {exports: {}};

var radio = {exports: {}};

var hasRequiredRadio;

function requireRadio () {
	if (hasRequiredRadio) return radio.exports;
	hasRequiredRadio = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 88);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 4:
		/***/ (function(module, exports) {

		module.exports = requireEmitter();

		/***/ }),

		/***/ 88:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio.vue?vue&type=template&id=69cd6268&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "label",
		    {
		      staticClass: "el-radio",
		      class: [
		        _vm.border && _vm.radioSize ? "el-radio--" + _vm.radioSize : "",
		        { "is-disabled": _vm.isDisabled },
		        { "is-focus": _vm.focus },
		        { "is-bordered": _vm.border },
		        { "is-checked": _vm.model === _vm.label }
		      ],
		      attrs: {
		        role: "radio",
		        "aria-checked": _vm.model === _vm.label,
		        "aria-disabled": _vm.isDisabled,
		        tabindex: _vm.tabIndex
		      },
		      on: {
		        keydown: function($event) {
		          if (
		            !("button" in $event) &&
		            _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])
		          ) {
		            return null
		          }
		          $event.stopPropagation();
		          $event.preventDefault();
		          _vm.model = _vm.isDisabled ? _vm.model : _vm.label;
		        }
		      }
		    },
		    [
		      _c(
		        "span",
		        {
		          staticClass: "el-radio__input",
		          class: {
		            "is-disabled": _vm.isDisabled,
		            "is-checked": _vm.model === _vm.label
		          }
		        },
		        [
		          _c("span", { staticClass: "el-radio__inner" }),
		          _c("input", {
		            directives: [
		              {
		                name: "model",
		                rawName: "v-model",
		                value: _vm.model,
		                expression: "model"
		              }
		            ],
		            ref: "radio",
		            staticClass: "el-radio__original",
		            attrs: {
		              type: "radio",
		              "aria-hidden": "true",
		              name: _vm.name,
		              disabled: _vm.isDisabled,
		              tabindex: "-1",
		              autocomplete: "off"
		            },
		            domProps: {
		              value: _vm.label,
		              checked: _vm._q(_vm.model, _vm.label)
		            },
		            on: {
		              focus: function($event) {
		                _vm.focus = true;
		              },
		              blur: function($event) {
		                _vm.focus = false;
		              },
		              change: [
		                function($event) {
		                  _vm.model = _vm.label;
		                },
		                _vm.handleChange
		              ]
		            }
		          })
		        ]
		      ),
		      _c(
		        "span",
		        {
		          staticClass: "el-radio__label",
		          on: {
		            keydown: function($event) {
		              $event.stopPropagation();
		            }
		          }
		        },
		        [
		          _vm._t("default"),
		          !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e()
		        ],
		        2
		      )
		    ]
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/radio/src/radio.vue?vue&type=template&id=69cd6268&

		// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
		var emitter_ = __webpack_require__(4);
		var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//



		/* harmony default export */ var radiovue_type_script_lang_js_ = ({
		  name: 'ElRadio',

		  mixins: [emitter_default.a],

		  inject: {
		    elForm: {
		      default: ''
		    },

		    elFormItem: {
		      default: ''
		    }
		  },

		  componentName: 'ElRadio',

		  props: {
		    value: {},
		    label: {},
		    disabled: Boolean,
		    name: String,
		    border: Boolean,
		    size: String
		  },

		  data: function data() {
		    return {
		      focus: false
		    };
		  },

		  computed: {
		    isGroup: function isGroup() {
		      var parent = this.$parent;
		      while (parent) {
		        if (parent.$options.componentName !== 'ElRadioGroup') {
		          parent = parent.$parent;
		        } else {
		          this._radioGroup = parent;
		          return true;
		        }
		      }
		      return false;
		    },

		    model: {
		      get: function get() {
		        return this.isGroup ? this._radioGroup.value : this.value;
		      },
		      set: function set(val) {
		        if (this.isGroup) {
		          this.dispatch('ElRadioGroup', 'input', [val]);
		        } else {
		          this.$emit('input', val);
		        }
		        this.$refs.radio && (this.$refs.radio.checked = this.model === this.label);
		      }
		    },
		    _elFormItemSize: function _elFormItemSize() {
		      return (this.elFormItem || {}).elFormItemSize;
		    },
		    radioSize: function radioSize() {
		      var temRadioSize = this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
		      return this.isGroup ? this._radioGroup.radioGroupSize || temRadioSize : temRadioSize;
		    },
		    isDisabled: function isDisabled() {
		      return this.isGroup ? this._radioGroup.disabled || this.disabled || (this.elForm || {}).disabled : this.disabled || (this.elForm || {}).disabled;
		    },
		    tabIndex: function tabIndex() {
		      return this.isDisabled || this.isGroup && this.model !== this.label ? -1 : 0;
		    }
		  },

		  methods: {
		    handleChange: function handleChange() {
		      var _this = this;

		      this.$nextTick(function () {
		        _this.$emit('change', _this.model);
		        _this.isGroup && _this.dispatch('ElRadioGroup', 'handleChange', _this.model);
		      });
		    }
		  }
		});
		// CONCATENATED MODULE: ./packages/radio/src/radio.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_radiovue_type_script_lang_js_ = (radiovue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/radio/src/radio.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_radiovue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/radio/src/radio.vue";
		/* harmony default export */ var src_radio = (component.exports);
		// CONCATENATED MODULE: ./packages/radio/index.js


		/* istanbul ignore next */
		src_radio.install = function (Vue) {
		  Vue.component(src_radio.name, src_radio);
		};

		/* harmony default export */ __webpack_exports__["default"] = (src_radio);

		/***/ })

		/******/ }); 
	} (radio));
	return radio.exports;
}

var hasRequiredCascaderPanel;

function requireCascaderPanel () {
	if (hasRequiredCascaderPanel) return cascaderPanel.exports;
	hasRequiredCascaderPanel = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 61);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 15:
		/***/ (function(module, exports) {

		module.exports = requireScrollbar();

		/***/ }),

		/***/ 18:
		/***/ (function(module, exports) {

		module.exports = requireCheckbox();

		/***/ }),

		/***/ 21:
		/***/ (function(module, exports) {

		module.exports = requireShared();

		/***/ }),

		/***/ 26:
		/***/ (function(module, exports) {

		module.exports = requireBabelHelperVueJsxMergeProps();

		/***/ }),

		/***/ 3:
		/***/ (function(module, exports) {

		module.exports = requireUtil();

		/***/ }),

		/***/ 31:
		/***/ (function(module, exports) {

		module.exports = requireScrollIntoView();

		/***/ }),

		/***/ 41:
		/***/ (function(module, exports) {

		module.exports = requireAriaUtils();

		/***/ }),

		/***/ 52:
		/***/ (function(module, exports) {

		module.exports = requireRadio();

		/***/ }),

		/***/ 6:
		/***/ (function(module, exports) {

		module.exports = requireLocale();

		/***/ }),

		/***/ 61:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=34932346&
		var cascader_panelvue_type_template_id_34932346_render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "div",
		    {
		      class: ["el-cascader-panel", _vm.border && "is-bordered"],
		      on: { keydown: _vm.handleKeyDown }
		    },
		    _vm._l(_vm.menus, function(menu, index) {
		      return _c("cascader-menu", {
		        key: index,
		        ref: "menu",
		        refInFor: true,
		        attrs: { index: index, nodes: menu }
		      })
		    }),
		    1
		  )
		};
		var staticRenderFns = [];
		cascader_panelvue_type_template_id_34932346_render._withStripped = true;


		// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=34932346&

		// EXTERNAL MODULE: external "babel-helper-vue-jsx-merge-props"
		var external_babel_helper_vue_jsx_merge_props_ = __webpack_require__(26);
		var external_babel_helper_vue_jsx_merge_props_default = /*#__PURE__*/__webpack_require__.n(external_babel_helper_vue_jsx_merge_props_);

		// EXTERNAL MODULE: external "element-ui/lib/scrollbar"
		var scrollbar_ = __webpack_require__(15);
		var scrollbar_default = /*#__PURE__*/__webpack_require__.n(scrollbar_);

		// EXTERNAL MODULE: external "element-ui/lib/checkbox"
		var checkbox_ = __webpack_require__(18);
		var checkbox_default = /*#__PURE__*/__webpack_require__.n(checkbox_);

		// EXTERNAL MODULE: external "element-ui/lib/radio"
		var radio_ = __webpack_require__(52);
		var radio_default = /*#__PURE__*/__webpack_require__.n(radio_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/util"
		var util_ = __webpack_require__(3);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&






		var stopPropagation = function stopPropagation(e) {
		  return e.stopPropagation();
		};

		/* harmony default export */ var cascader_nodevue_type_script_lang_js_ = ({
		  inject: ['panel'],

		  components: {
		    ElCheckbox: checkbox_default.a,
		    ElRadio: radio_default.a
		  },

		  props: {
		    node: {
		      required: true
		    },
		    nodeId: String
		  },

		  computed: {
		    config: function config() {
		      return this.panel.config;
		    },
		    isLeaf: function isLeaf() {
		      return this.node.isLeaf;
		    },
		    isDisabled: function isDisabled() {
		      return this.node.isDisabled;
		    },
		    checkedValue: function checkedValue() {
		      return this.panel.checkedValue;
		    },
		    isChecked: function isChecked() {
		      return this.node.isSameNode(this.checkedValue);
		    },
		    inActivePath: function inActivePath() {
		      return this.isInPath(this.panel.activePath);
		    },
		    inCheckedPath: function inCheckedPath() {
		      var _this = this;

		      if (!this.config.checkStrictly) return false;

		      return this.panel.checkedNodePaths.some(function (checkedPath) {
		        return _this.isInPath(checkedPath);
		      });
		    },
		    value: function value() {
		      return this.node.getValueByOption();
		    }
		  },

		  methods: {
		    handleExpand: function handleExpand() {
		      var _this2 = this;

		      var panel = this.panel,
		          node = this.node,
		          isDisabled = this.isDisabled,
		          config = this.config;
		      var multiple = config.multiple,
		          checkStrictly = config.checkStrictly;


		      if (!checkStrictly && isDisabled || node.loading) return;

		      if (config.lazy && !node.loaded) {
		        panel.lazyLoad(node, function () {
		          // do not use cached leaf value here, invoke this.isLeaf to get new value.
		          var isLeaf = _this2.isLeaf;


		          if (!isLeaf) _this2.handleExpand();
		          if (multiple) {
		            // if leaf sync checked state, else clear checked state
		            var checked = isLeaf ? node.checked : false;
		            _this2.handleMultiCheckChange(checked);
		          }
		        });
		      } else {
		        panel.handleExpand(node);
		      }
		    },
		    handleCheckChange: function handleCheckChange() {
		      var panel = this.panel,
		          value = this.value,
		          node = this.node;

		      panel.handleCheckChange(value);
		      panel.handleExpand(node);
		    },
		    handleMultiCheckChange: function handleMultiCheckChange(checked) {
		      this.node.doCheck(checked);
		      this.panel.calculateMultiCheckedValue();
		    },
		    isInPath: function isInPath(pathNodes) {
		      var node = this.node;

		      var selectedPathNode = pathNodes[node.level - 1] || {};
		      return selectedPathNode.uid === node.uid;
		    },
		    renderPrefix: function renderPrefix(h) {
		      var isLeaf = this.isLeaf,
		          isChecked = this.isChecked,
		          config = this.config;
		      var checkStrictly = config.checkStrictly,
		          multiple = config.multiple;


		      if (multiple) {
		        return this.renderCheckbox(h);
		      } else if (checkStrictly) {
		        return this.renderRadio(h);
		      } else if (isLeaf && isChecked) {
		        return this.renderCheckIcon(h);
		      }

		      return null;
		    },
		    renderPostfix: function renderPostfix(h) {
		      var node = this.node,
		          isLeaf = this.isLeaf;


		      if (node.loading) {
		        return this.renderLoadingIcon(h);
		      } else if (!isLeaf) {
		        return this.renderExpandIcon(h);
		      }

		      return null;
		    },
		    renderCheckbox: function renderCheckbox(h) {
		      var node = this.node,
		          config = this.config,
		          isDisabled = this.isDisabled;

		      var events = {
		        on: { change: this.handleMultiCheckChange },
		        nativeOn: {}
		      };

		      if (config.checkStrictly) {
		        // when every node is selectable, click event should not trigger expand event.
		        events.nativeOn.click = stopPropagation;
		      }

		      return h('el-checkbox', external_babel_helper_vue_jsx_merge_props_default()([{
		        attrs: {
		          value: node.checked,
		          indeterminate: node.indeterminate,
		          disabled: isDisabled
		        }
		      }, events]));
		    },
		    renderRadio: function renderRadio(h) {
		      var checkedValue = this.checkedValue,
		          value = this.value,
		          isDisabled = this.isDisabled;

		      // to keep same reference if value cause radio's checked state is calculated by reference comparision;

		      if (Object(util_["isEqual"])(value, checkedValue)) {
		        value = checkedValue;
		      }

		      return h(
		        'el-radio',
		        {
		          attrs: {
		            value: checkedValue,
		            label: value,
		            disabled: isDisabled
		          },
		          on: {
		            'change': this.handleCheckChange
		          },
		          nativeOn: {
		            'click': stopPropagation
		          }
		        },
		        [h('span')]
		      );
		    },
		    renderCheckIcon: function renderCheckIcon(h) {
		      return h('i', { 'class': 'el-icon-check el-cascader-node__prefix' });
		    },
		    renderLoadingIcon: function renderLoadingIcon(h) {
		      return h('i', { 'class': 'el-icon-loading el-cascader-node__postfix' });
		    },
		    renderExpandIcon: function renderExpandIcon(h) {
		      return h('i', { 'class': 'el-icon-arrow-right el-cascader-node__postfix' });
		    },
		    renderContent: function renderContent(h) {
		      var panel = this.panel,
		          node = this.node;

		      var render = panel.renderLabelFn;
		      var vnode = render ? render({ node: node, data: node.data }) : null;

		      return h(
		        'span',
		        { 'class': 'el-cascader-node__label' },
		        [vnode || node.label]
		      );
		    }
		  },

		  render: function render(h) {
		    var _this3 = this;

		    var inActivePath = this.inActivePath,
		        inCheckedPath = this.inCheckedPath,
		        isChecked = this.isChecked,
		        isLeaf = this.isLeaf,
		        isDisabled = this.isDisabled,
		        config = this.config,
		        nodeId = this.nodeId;
		    var expandTrigger = config.expandTrigger,
		        checkStrictly = config.checkStrictly,
		        multiple = config.multiple;

		    var disabled = !checkStrictly && isDisabled;
		    var events = { on: {} };

		    if (expandTrigger === 'click') {
		      events.on.click = this.handleExpand;
		    } else {
		      events.on.mouseenter = function (e) {
		        _this3.handleExpand();
		        _this3.$emit('expand', e);
		      };
		      events.on.focus = function (e) {
		        _this3.handleExpand();
		        _this3.$emit('expand', e);
		      };
		    }
		    if (isLeaf && !isDisabled && !checkStrictly && !multiple) {
		      events.on.click = this.handleCheckChange;
		    }

		    return h(
		      'li',
		      external_babel_helper_vue_jsx_merge_props_default()([{
		        attrs: {
		          role: 'menuitem',
		          id: nodeId,
		          'aria-expanded': inActivePath,
		          tabindex: disabled ? null : -1
		        },
		        'class': {
		          'el-cascader-node': true,
		          'is-selectable': checkStrictly,
		          'in-active-path': inActivePath,
		          'in-checked-path': inCheckedPath,
		          'is-active': isChecked,
		          'is-disabled': disabled
		        }
		      }, events]),
		      [this.renderPrefix(h), this.renderContent(h), this.renderPostfix(h)]
		    );
		  }
		});
		// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_cascader_nodevue_type_script_lang_js_ = (cascader_nodevue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue
		var cascader_node_render, cascader_node_staticRenderFns;




		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_cascader_nodevue_type_script_lang_js_,
		  cascader_node_render,
		  cascader_node_staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/cascader-panel/src/cascader-node.vue";
		/* harmony default export */ var cascader_node = (component.exports);
		// EXTERNAL MODULE: external "element-ui/lib/mixins/locale"
		var locale_ = __webpack_require__(6);
		var locale_default = /*#__PURE__*/__webpack_require__.n(locale_);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&







		/* harmony default export */ var cascader_menuvue_type_script_lang_js_ = ({
		  name: 'ElCascaderMenu',

		  mixins: [locale_default.a],

		  inject: ['panel'],

		  components: {
		    ElScrollbar: scrollbar_default.a,
		    CascaderNode: cascader_node
		  },

		  props: {
		    nodes: {
		      type: Array,
		      required: true
		    },
		    index: Number
		  },

		  data: function data() {
		    return {
		      activeNode: null,
		      hoverTimer: null,
		      id: Object(util_["generateId"])()
		    };
		  },


		  computed: {
		    isEmpty: function isEmpty() {
		      return !this.nodes.length;
		    },
		    menuId: function menuId() {
		      return 'cascader-menu-' + this.id + '-' + this.index;
		    }
		  },

		  methods: {
		    handleExpand: function handleExpand(e) {
		      this.activeNode = e.target;
		    },
		    handleMouseMove: function handleMouseMove(e) {
		      var activeNode = this.activeNode,
		          hoverTimer = this.hoverTimer;
		      var hoverZone = this.$refs.hoverZone;


		      if (!activeNode || !hoverZone) return;

		      if (activeNode.contains(e.target)) {
		        clearTimeout(hoverTimer);

		        var _$el$getBoundingClien = this.$el.getBoundingClientRect(),
		            left = _$el$getBoundingClien.left;

		        var startX = e.clientX - left;
		        var _$el = this.$el,
		            offsetWidth = _$el.offsetWidth,
		            offsetHeight = _$el.offsetHeight;

		        var top = activeNode.offsetTop;
		        var bottom = top + activeNode.offsetHeight;

		        hoverZone.innerHTML = '\n          <path style="pointer-events: auto;" fill="transparent" d="M' + startX + ' ' + top + ' L' + offsetWidth + ' 0 V' + top + ' Z" />\n          <path style="pointer-events: auto;" fill="transparent" d="M' + startX + ' ' + bottom + ' L' + offsetWidth + ' ' + offsetHeight + ' V' + bottom + ' Z" />\n        ';
		      } else if (!hoverTimer) {
		        this.hoverTimer = setTimeout(this.clearHoverZone, this.panel.config.hoverThreshold);
		      }
		    },
		    clearHoverZone: function clearHoverZone() {
		      var hoverZone = this.$refs.hoverZone;

		      if (!hoverZone) return;
		      hoverZone.innerHTML = '';
		    },
		    renderEmptyText: function renderEmptyText(h) {
		      return h(
		        'div',
		        { 'class': 'el-cascader-menu__empty-text' },
		        [this.t('el.cascader.noData')]
		      );
		    },
		    renderNodeList: function renderNodeList(h) {
		      var menuId = this.menuId;
		      var isHoverMenu = this.panel.isHoverMenu;

		      var events = { on: {} };

		      if (isHoverMenu) {
		        events.on.expand = this.handleExpand;
		      }

		      var nodes = this.nodes.map(function (node, index) {
		        var hasChildren = node.hasChildren;

		        return h('cascader-node', external_babel_helper_vue_jsx_merge_props_default()([{
		          key: node.uid,
		          attrs: { node: node,
		            'node-id': menuId + '-' + index,
		            'aria-haspopup': hasChildren,
		            'aria-owns': hasChildren ? menuId : null
		          }
		        }, events]));
		      });

		      return [].concat(nodes, [isHoverMenu ? h('svg', { ref: 'hoverZone', 'class': 'el-cascader-menu__hover-zone' }) : null]);
		    }
		  },

		  render: function render(h) {
		    var isEmpty = this.isEmpty,
		        menuId = this.menuId;

		    var events = { nativeOn: {} };

		    // optimize hover to expand experience (#8010)
		    if (this.panel.isHoverMenu) {
		      events.nativeOn.mousemove = this.handleMouseMove;
		      // events.nativeOn.mouseleave = this.clearHoverZone;
		    }

		    return h(
		      'el-scrollbar',
		      external_babel_helper_vue_jsx_merge_props_default()([{
		        attrs: {
		          tag: 'ul',
		          role: 'menu',
		          id: menuId,

		          'wrap-class': 'el-cascader-menu__wrap',
		          'view-class': {
		            'el-cascader-menu__list': true,
		            'is-empty': isEmpty
		          }
		        },
		        'class': 'el-cascader-menu' }, events]),
		      [isEmpty ? this.renderEmptyText(h) : this.renderNodeList(h)]
		    );
		  }
		});
		// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_cascader_menuvue_type_script_lang_js_ = (cascader_menuvue_type_script_lang_js_); 
		// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue
		var cascader_menu_render, cascader_menu_staticRenderFns;




		/* normalize component */

		var cascader_menu_component = Object(componentNormalizer["a" /* default */])(
		  src_cascader_menuvue_type_script_lang_js_,
		  cascader_menu_render,
		  cascader_menu_staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		cascader_menu_component.options.__file = "packages/cascader-panel/src/cascader-menu.vue";
		/* harmony default export */ var cascader_menu = (cascader_menu_component.exports);
		// EXTERNAL MODULE: external "element-ui/lib/utils/shared"
		var shared_ = __webpack_require__(21);

		// CONCATENATED MODULE: ./packages/cascader-panel/src/node.js
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




		var uid = 0;

		var node_Node = function () {
		  function Node(data, config, parentNode) {
		    _classCallCheck(this, Node);

		    this.data = data;
		    this.config = config;
		    this.parent = parentNode || null;
		    this.level = !this.parent ? 1 : this.parent.level + 1;
		    this.uid = uid++;

		    this.initState();
		    this.initChildren();
		  }

		  Node.prototype.initState = function initState() {
		    var _config = this.config,
		        valueKey = _config.value,
		        labelKey = _config.label;


		    this.value = this.data[valueKey];
		    this.label = this.data[labelKey];
		    this.pathNodes = this.calculatePathNodes();
		    this.path = this.pathNodes.map(function (node) {
		      return node.value;
		    });
		    this.pathLabels = this.pathNodes.map(function (node) {
		      return node.label;
		    });

		    // lazy load
		    this.loading = false;
		    this.loaded = false;
		  };

		  Node.prototype.initChildren = function initChildren() {
		    var _this = this;

		    var config = this.config;

		    var childrenKey = config.children;
		    var childrenData = this.data[childrenKey];
		    this.hasChildren = Array.isArray(childrenData);
		    this.children = (childrenData || []).map(function (child) {
		      return new Node(child, config, _this);
		    });
		  };

		  Node.prototype.calculatePathNodes = function calculatePathNodes() {
		    var nodes = [this];
		    var parent = this.parent;

		    while (parent) {
		      nodes.unshift(parent);
		      parent = parent.parent;
		    }

		    return nodes;
		  };

		  Node.prototype.getPath = function getPath() {
		    return this.path;
		  };

		  Node.prototype.getValue = function getValue() {
		    return this.value;
		  };

		  Node.prototype.getValueByOption = function getValueByOption() {
		    return this.config.emitPath ? this.getPath() : this.getValue();
		  };

		  Node.prototype.getText = function getText(allLevels, separator) {
		    return allLevels ? this.pathLabels.join(separator) : this.label;
		  };

		  Node.prototype.isSameNode = function isSameNode(checkedValue) {
		    var value = this.getValueByOption();
		    return this.config.multiple && Array.isArray(checkedValue) ? checkedValue.some(function (val) {
		      return Object(util_["isEqual"])(val, value);
		    }) : Object(util_["isEqual"])(checkedValue, value);
		  };

		  Node.prototype.broadcast = function broadcast(event) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }

		    var handlerName = 'onParent' + Object(util_["capitalize"])(event);

		    this.children.forEach(function (child) {
		      if (child) {
		        // bottom up
		        child.broadcast.apply(child, [event].concat(args));
		        child[handlerName] && child[handlerName].apply(child, args);
		      }
		    });
		  };

		  Node.prototype.emit = function emit(event) {
		    var parent = this.parent;

		    var handlerName = 'onChild' + Object(util_["capitalize"])(event);
		    if (parent) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
		        args[_key2 - 1] = arguments[_key2];
		      }

		      parent[handlerName] && parent[handlerName].apply(parent, args);
		      parent.emit.apply(parent, [event].concat(args));
		    }
		  };

		  Node.prototype.onParentCheck = function onParentCheck(checked) {
		    if (!this.isDisabled) {
		      this.setCheckState(checked);
		    }
		  };

		  Node.prototype.onChildCheck = function onChildCheck() {
		    var children = this.children;

		    var validChildren = children.filter(function (child) {
		      return !child.isDisabled;
		    });
		    var checked = validChildren.length ? validChildren.every(function (child) {
		      return child.checked;
		    }) : false;

		    this.setCheckState(checked);
		  };

		  Node.prototype.setCheckState = function setCheckState(checked) {
		    var totalNum = this.children.length;
		    var checkedNum = this.children.reduce(function (c, p) {
		      var num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;
		      return c + num;
		    }, 0);

		    this.checked = checked;
		    this.indeterminate = checkedNum !== totalNum && checkedNum > 0;
		  };

		  Node.prototype.syncCheckState = function syncCheckState(checkedValue) {
		    var value = this.getValueByOption();
		    var checked = this.isSameNode(checkedValue, value);

		    this.doCheck(checked);
		  };

		  Node.prototype.doCheck = function doCheck(checked) {
		    if (this.checked !== checked) {
		      if (this.config.checkStrictly) {
		        this.checked = checked;
		      } else {
		        // bottom up to unify the calculation of the indeterminate state
		        this.broadcast('check', checked);
		        this.setCheckState(checked);
		        this.emit('check');
		      }
		    }
		  };

		  _createClass(Node, [{
		    key: 'isDisabled',
		    get: function get() {
		      var data = this.data,
		          parent = this.parent,
		          config = this.config;

		      var disabledKey = config.disabled;
		      var checkStrictly = config.checkStrictly;

		      return data[disabledKey] || !checkStrictly && parent && parent.isDisabled;
		    }
		  }, {
		    key: 'isLeaf',
		    get: function get() {
		      var data = this.data,
		          loaded = this.loaded,
		          hasChildren = this.hasChildren,
		          children = this.children;
		      var _config2 = this.config,
		          lazy = _config2.lazy,
		          leafKey = _config2.leaf;

		      if (lazy) {
		        var isLeaf = Object(shared_["isDef"])(data[leafKey]) ? data[leafKey] : loaded ? !children.length : false;
		        this.hasChildren = !isLeaf;
		        return isLeaf;
		      }
		      return !hasChildren;
		    }
		  }]);

		  return Node;
		}();

		/* harmony default export */ var src_node = (node_Node);
		// CONCATENATED MODULE: ./packages/cascader-panel/src/store.js
		function store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




		var flatNodes = function flatNodes(data, leafOnly) {
		  return data.reduce(function (res, node) {
		    if (node.isLeaf) {
		      res.push(node);
		    } else {
		      !leafOnly && res.push(node);
		      res = res.concat(flatNodes(node.children, leafOnly));
		    }
		    return res;
		  }, []);
		};

		var store_Store = function () {
		  function Store(data, config) {
		    store_classCallCheck(this, Store);

		    this.config = config;
		    this.initNodes(data);
		  }

		  Store.prototype.initNodes = function initNodes(data) {
		    var _this = this;

		    data = Object(util_["coerceTruthyValueToArray"])(data);
		    this.nodes = data.map(function (nodeData) {
		      return new src_node(nodeData, _this.config);
		    });
		    this.flattedNodes = this.getFlattedNodes(false, false);
		    this.leafNodes = this.getFlattedNodes(true, false);
		  };

		  Store.prototype.appendNode = function appendNode(nodeData, parentNode) {
		    var node = new src_node(nodeData, this.config, parentNode);
		    var children = parentNode ? parentNode.children : this.nodes;

		    children.push(node);
		  };

		  Store.prototype.appendNodes = function appendNodes(nodeDataList, parentNode) {
		    var _this2 = this;

		    nodeDataList = Object(util_["coerceTruthyValueToArray"])(nodeDataList);
		    nodeDataList.forEach(function (nodeData) {
		      return _this2.appendNode(nodeData, parentNode);
		    });
		  };

		  Store.prototype.getNodes = function getNodes() {
		    return this.nodes;
		  };

		  Store.prototype.getFlattedNodes = function getFlattedNodes(leafOnly) {
		    var cached = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

		    var cachedNodes = leafOnly ? this.leafNodes : this.flattedNodes;
		    return cached ? cachedNodes : flatNodes(this.nodes, leafOnly);
		  };

		  Store.prototype.getNodeByValue = function getNodeByValue(value) {
		    var nodes = this.getFlattedNodes(false, !this.config.lazy).filter(function (node) {
		      return Object(util_["valueEquals"])(node.path, value) || node.value === value;
		    });
		    return nodes && nodes.length ? nodes[0] : null;
		  };

		  return Store;
		}();

		/* harmony default export */ var src_store = (store_Store);
		// EXTERNAL MODULE: external "element-ui/lib/utils/merge"
		var merge_ = __webpack_require__(9);
		var merge_default = /*#__PURE__*/__webpack_require__.n(merge_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/aria-utils"
		var aria_utils_ = __webpack_require__(41);
		var aria_utils_default = /*#__PURE__*/__webpack_require__.n(aria_utils_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/scroll-into-view"
		var scroll_into_view_ = __webpack_require__(31);
		var scroll_into_view_default = /*#__PURE__*/__webpack_require__.n(scroll_into_view_);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//








		var KeyCode = aria_utils_default.a.keys;

		var DefaultProps = {
		  expandTrigger: 'click', // or hover
		  multiple: false,
		  checkStrictly: false, // whether all nodes can be selected
		  emitPath: true, // wether to emit an array of all levels value in which node is located
		  lazy: false,
		  lazyLoad: util_["noop"],
		  value: 'value',
		  label: 'label',
		  children: 'children',
		  leaf: 'leaf',
		  disabled: 'disabled',
		  hoverThreshold: 500
		};

		var cascader_panelvue_type_script_lang_js_isLeaf = function isLeaf(el) {
		  return !el.getAttribute('aria-owns');
		};

		var getSibling = function getSibling(el, distance) {
		  var parentNode = el.parentNode;

		  if (parentNode) {
		    var siblings = parentNode.querySelectorAll('.el-cascader-node[tabindex="-1"]');
		    var index = Array.prototype.indexOf.call(siblings, el);
		    return siblings[index + distance] || null;
		  }
		  return null;
		};

		var getMenuIndex = function getMenuIndex(el, distance) {
		  if (!el) return;
		  var pieces = el.id.split('-');
		  return Number(pieces[pieces.length - 2]);
		};

		var focusNode = function focusNode(el) {
		  if (!el) return;
		  el.focus();
		  !cascader_panelvue_type_script_lang_js_isLeaf(el) && el.click();
		};

		var checkNode = function checkNode(el) {
		  if (!el) return;

		  var input = el.querySelector('input');
		  if (input) {
		    input.click();
		  } else if (cascader_panelvue_type_script_lang_js_isLeaf(el)) {
		    el.click();
		  }
		};

		/* harmony default export */ var cascader_panelvue_type_script_lang_js_ = ({
		  name: 'ElCascaderPanel',

		  components: {
		    CascaderMenu: cascader_menu
		  },

		  props: {
		    value: {},
		    options: Array,
		    props: Object,
		    border: {
		      type: Boolean,
		      default: true
		    },
		    renderLabel: Function
		  },

		  provide: function provide() {
		    return {
		      panel: this
		    };
		  },
		  data: function data() {
		    return {
		      checkedValue: null,
		      checkedNodePaths: [],
		      store: [],
		      menus: [],
		      activePath: [],
		      loadCount: 0
		    };
		  },


		  computed: {
		    config: function config() {
		      return merge_default()(_extends({}, DefaultProps), this.props || {});
		    },
		    multiple: function multiple() {
		      return this.config.multiple;
		    },
		    checkStrictly: function checkStrictly() {
		      return this.config.checkStrictly;
		    },
		    leafOnly: function leafOnly() {
		      return !this.checkStrictly;
		    },
		    isHoverMenu: function isHoverMenu() {
		      return this.config.expandTrigger === 'hover';
		    },
		    renderLabelFn: function renderLabelFn() {
		      return this.renderLabel || this.$scopedSlots.default;
		    }
		  },

		  watch: {
		    value: function value() {
		      this.syncCheckedValue();
		      this.checkStrictly && this.calculateCheckedNodePaths();
		    },

		    options: {
		      handler: function handler() {
		        this.initStore();
		      },
		      immediate: true,
		      deep: true
		    },
		    checkedValue: function checkedValue(val) {
		      if (!Object(util_["isEqual"])(val, this.value)) {
		        this.checkStrictly && this.calculateCheckedNodePaths();
		        this.$emit('input', val);
		        this.$emit('change', val);
		      }
		    }
		  },

		  mounted: function mounted() {
		    if (!this.isEmptyValue(this.value)) {
		      this.syncCheckedValue();
		    }
		  },


		  methods: {
		    initStore: function initStore() {
		      var config = this.config,
		          options = this.options;

		      if (config.lazy && Object(util_["isEmpty"])(options)) {
		        this.lazyLoad();
		      } else {
		        this.store = new src_store(options, config);
		        this.menus = [this.store.getNodes()];
		        this.syncMenuState();
		      }
		    },
		    syncCheckedValue: function syncCheckedValue() {
		      var value = this.value,
		          checkedValue = this.checkedValue;

		      if (!Object(util_["isEqual"])(value, checkedValue)) {
		        this.activePath = [];
		        this.checkedValue = value;
		        this.syncMenuState();
		      }
		    },
		    syncMenuState: function syncMenuState() {
		      var multiple = this.multiple,
		          checkStrictly = this.checkStrictly;

		      this.syncActivePath();
		      multiple && this.syncMultiCheckState();
		      checkStrictly && this.calculateCheckedNodePaths();
		      this.$nextTick(this.scrollIntoView);
		    },
		    syncMultiCheckState: function syncMultiCheckState() {
		      var _this = this;

		      var nodes = this.getFlattedNodes(this.leafOnly);

		      nodes.forEach(function (node) {
		        node.syncCheckState(_this.checkedValue);
		      });
		    },
		    isEmptyValue: function isEmptyValue(val) {
		      var multiple = this.multiple,
		          config = this.config;
		      var emitPath = config.emitPath;

		      if (multiple || emitPath) {
		        return Object(util_["isEmpty"])(val);
		      }
		      return false;
		    },
		    syncActivePath: function syncActivePath() {
		      var _this2 = this;

		      var store = this.store,
		          multiple = this.multiple,
		          activePath = this.activePath,
		          checkedValue = this.checkedValue;


		      if (!Object(util_["isEmpty"])(activePath)) {
		        var nodes = activePath.map(function (node) {
		          return _this2.getNodeByValue(node.getValue());
		        });
		        this.expandNodes(nodes);
		      } else if (!this.isEmptyValue(checkedValue)) {
		        var value = multiple ? checkedValue[0] : checkedValue;
		        var checkedNode = this.getNodeByValue(value) || {};
		        var _nodes = (checkedNode.pathNodes || []).slice(0, -1);
		        this.expandNodes(_nodes);
		      } else {
		        this.activePath = [];
		        this.menus = [store.getNodes()];
		      }
		    },
		    expandNodes: function expandNodes(nodes) {
		      var _this3 = this;

		      nodes.forEach(function (node) {
		        return _this3.handleExpand(node, true /* silent */);
		      });
		    },
		    calculateCheckedNodePaths: function calculateCheckedNodePaths() {
		      var _this4 = this;

		      var checkedValue = this.checkedValue,
		          multiple = this.multiple;

		      var checkedValues = multiple ? Object(util_["coerceTruthyValueToArray"])(checkedValue) : [checkedValue];
		      this.checkedNodePaths = checkedValues.map(function (v) {
		        var checkedNode = _this4.getNodeByValue(v);
		        return checkedNode ? checkedNode.pathNodes : [];
		      });
		    },
		    handleKeyDown: function handleKeyDown(e) {
		      var target = e.target,
		          keyCode = e.keyCode;


		      switch (keyCode) {
		        case KeyCode.up:
		          var prev = getSibling(target, -1);
		          focusNode(prev);
		          break;
		        case KeyCode.down:
		          var next = getSibling(target, 1);
		          focusNode(next);
		          break;
		        case KeyCode.left:
		          var preMenu = this.$refs.menu[getMenuIndex(target) - 1];
		          if (preMenu) {
		            var expandedNode = preMenu.$el.querySelector('.el-cascader-node[aria-expanded="true"]');
		            focusNode(expandedNode);
		          }
		          break;
		        case KeyCode.right:
		          var nextMenu = this.$refs.menu[getMenuIndex(target) + 1];
		          if (nextMenu) {
		            var firstNode = nextMenu.$el.querySelector('.el-cascader-node[tabindex="-1"]');
		            focusNode(firstNode);
		          }
		          break;
		        case KeyCode.enter:
		          checkNode(target);
		          break;
		        case KeyCode.esc:
		        case KeyCode.tab:
		          this.$emit('close');
		          break;
		        default:
		          return;
		      }
		    },
		    handleExpand: function handleExpand(node, silent) {
		      var activePath = this.activePath;
		      var level = node.level;

		      var path = activePath.slice(0, level - 1);
		      var menus = this.menus.slice(0, level);

		      if (!node.isLeaf) {
		        path.push(node);
		        menus.push(node.children);
		      }

		      this.activePath = path;
		      this.menus = menus;

		      if (!silent) {
		        var pathValues = path.map(function (node) {
		          return node.getValue();
		        });
		        var activePathValues = activePath.map(function (node) {
		          return node.getValue();
		        });
		        if (!Object(util_["valueEquals"])(pathValues, activePathValues)) {
		          this.$emit('active-item-change', pathValues); // Deprecated
		          this.$emit('expand-change', pathValues);
		        }
		      }
		    },
		    handleCheckChange: function handleCheckChange(value) {
		      this.checkedValue = value;
		    },
		    lazyLoad: function lazyLoad(node, onFullfiled) {
		      var _this5 = this;

		      var config = this.config;

		      if (!node) {
		        node = node || { root: true, level: 0 };
		        this.store = new src_store([], config);
		        this.menus = [this.store.getNodes()];
		      }
		      node.loading = true;
		      var resolve = function resolve(dataList) {
		        var parent = node.root ? null : node;
		        dataList && dataList.length && _this5.store.appendNodes(dataList, parent);
		        node.loading = false;
		        node.loaded = true;

		        // dispose default value on lazy load mode
		        if (Array.isArray(_this5.checkedValue)) {
		          var nodeValue = _this5.checkedValue[_this5.loadCount++];
		          var valueKey = _this5.config.value;
		          var leafKey = _this5.config.leaf;

		          if (Array.isArray(dataList) && dataList.filter(function (item) {
		            return item[valueKey] === nodeValue;
		          }).length > 0) {
		            var checkedNode = _this5.store.getNodeByValue(nodeValue);

		            if (!checkedNode.data[leafKey]) {
		              _this5.lazyLoad(checkedNode, function () {
		                _this5.handleExpand(checkedNode);
		              });
		            }

		            if (_this5.loadCount === _this5.checkedValue.length) {
		              _this5.$parent.computePresentText();
		            }
		          }
		        }

		        onFullfiled && onFullfiled(dataList);
		      };
		      config.lazyLoad(node, resolve);
		    },


		    /**
		     * public methods
		    */
		    calculateMultiCheckedValue: function calculateMultiCheckedValue() {
		      this.checkedValue = this.getCheckedNodes(this.leafOnly).map(function (node) {
		        return node.getValueByOption();
		      });
		    },
		    scrollIntoView: function scrollIntoView() {
		      if (this.$isServer) return;

		      var menus = this.$refs.menu || [];
		      menus.forEach(function (menu) {
		        var menuElement = menu.$el;
		        if (menuElement) {
		          var container = menuElement.querySelector('.el-scrollbar__wrap');
		          var activeNode = menuElement.querySelector('.el-cascader-node.is-active') || menuElement.querySelector('.el-cascader-node.in-active-path');
		          scroll_into_view_default()(container, activeNode);
		        }
		      });
		    },
		    getNodeByValue: function getNodeByValue(val) {
		      return this.store.getNodeByValue(val);
		    },
		    getFlattedNodes: function getFlattedNodes(leafOnly) {
		      var cached = !this.config.lazy;
		      return this.store.getFlattedNodes(leafOnly, cached);
		    },
		    getCheckedNodes: function getCheckedNodes(leafOnly) {
		      var checkedValue = this.checkedValue,
		          multiple = this.multiple;

		      if (multiple) {
		        var nodes = this.getFlattedNodes(leafOnly);
		        return nodes.filter(function (node) {
		          return node.checked;
		        });
		      } else {
		        return this.isEmptyValue(checkedValue) ? [] : [this.getNodeByValue(checkedValue)];
		      }
		    },
		    clearCheckedNodes: function clearCheckedNodes() {
		      var config = this.config,
		          leafOnly = this.leafOnly;
		      var multiple = config.multiple,
		          emitPath = config.emitPath;

		      if (multiple) {
		        this.getCheckedNodes(leafOnly).filter(function (node) {
		          return !node.isDisabled;
		        }).forEach(function (node) {
		          return node.doCheck(false);
		        });
		        this.calculateMultiCheckedValue();
		      } else {
		        this.checkedValue = emitPath ? [] : null;
		      }
		    }
		  }
		});
		// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_cascader_panelvue_type_script_lang_js_ = (cascader_panelvue_type_script_lang_js_); 
		// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue





		/* normalize component */

		var cascader_panel_component = Object(componentNormalizer["a" /* default */])(
		  src_cascader_panelvue_type_script_lang_js_,
		  cascader_panelvue_type_template_id_34932346_render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		cascader_panel_component.options.__file = "packages/cascader-panel/src/cascader-panel.vue";
		/* harmony default export */ var cascader_panel = (cascader_panel_component.exports);
		// CONCATENATED MODULE: ./packages/cascader-panel/index.js


		/* istanbul ignore next */
		cascader_panel.install = function (Vue) {
		  Vue.component(cascader_panel.name, cascader_panel);
		};

		/* harmony default export */ __webpack_exports__["default"] = (cascader_panel);

		/***/ }),

		/***/ 9:
		/***/ (function(module, exports) {

		module.exports = requireMerge();

		/***/ })

		/******/ }); 
	} (cascaderPanel));
	return cascaderPanel.exports;
}

var popover = {exports: {}};

var hasRequiredPopover;

function requirePopover () {
	if (hasRequiredPopover) return popover.exports;
	hasRequiredPopover = 1;
	(function (module) {
		module.exports =
		/******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// define __esModule on exports
		/******/ 	__webpack_require__.r = function(exports) {
		/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
		/******/ 		}
		/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
		/******/ 	};
		/******/
		/******/ 	// create a fake namespace object
		/******/ 	// mode & 1: value is a module id, require it
		/******/ 	// mode & 2: merge all properties of value into the ns
		/******/ 	// mode & 4: return value when already ns object
		/******/ 	// mode & 8|1: behave like require
		/******/ 	__webpack_require__.t = function(value, mode) {
		/******/ 		if(mode & 1) value = __webpack_require__(value);
		/******/ 		if(mode & 8) return value;
		/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
		/******/ 		var ns = Object.create(null);
		/******/ 		__webpack_require__.r(ns);
		/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
		/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
		/******/ 		return ns;
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "/dist/";
		/******/
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 78);
		/******/ })
		/************************************************************************/
		/******/ ({

		/***/ 0:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
		/* globals __VUE_SSR_CONTEXT__ */

		// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
		// This module is a runtime utility for cleaner component module output and will
		// be included in the final webpack user bundle.

		function normalizeComponent (
		  scriptExports,
		  render,
		  staticRenderFns,
		  functionalTemplate,
		  injectStyles,
		  scopeId,
		  moduleIdentifier, /* server only */
		  shadowMode /* vue-cli only */
		) {
		  // Vue.extend constructor export interop
		  var options = typeof scriptExports === 'function'
		    ? scriptExports.options
		    : scriptExports;

		  // render functions
		  if (render) {
		    options.render = render;
		    options.staticRenderFns = staticRenderFns;
		    options._compiled = true;
		  }

		  // functional template
		  if (functionalTemplate) {
		    options.functional = true;
		  }

		  // scopedId
		  if (scopeId) {
		    options._scopeId = 'data-v-' + scopeId;
		  }

		  var hook;
		  if (moduleIdentifier) { // server build
		    hook = function (context) {
		      // 2.3 injection
		      context =
		        context || // cached call
		        (this.$vnode && this.$vnode.ssrContext) || // stateful
		        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
		      // 2.2 with runInNewContext: true
		      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
		        context = __VUE_SSR_CONTEXT__;
		      }
		      // inject component styles
		      if (injectStyles) {
		        injectStyles.call(this, context);
		      }
		      // register component module identifier for async chunk inferrence
		      if (context && context._registeredComponents) {
		        context._registeredComponents.add(moduleIdentifier);
		      }
		    };
		    // used by ssr in case component is cached and beforeCreate
		    // never gets called
		    options._ssrRegister = hook;
		  } else if (injectStyles) {
		    hook = shadowMode
		      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
		      : injectStyles;
		  }

		  if (hook) {
		    if (options.functional) {
		      // for template-only hot-reload because in that case the render fn doesn't
		      // go through the normalizer
		      options._injectStyles = hook;
		      // register for functioal component in vue file
		      var originalRender = options.render;
		      options.render = function renderWithStyleInjection (h, context) {
		        hook.call(context);
		        return originalRender(h, context)
		      };
		    } else {
		      // inject component registration as beforeCreate hook
		      var existing = options.beforeCreate;
		      options.beforeCreate = existing
		        ? [].concat(existing, hook)
		        : [hook];
		    }
		  }

		  return {
		    exports: scriptExports,
		    options: options
		  }
		}


		/***/ }),

		/***/ 2:
		/***/ (function(module, exports) {

		module.exports = requireDom();

		/***/ }),

		/***/ 3:
		/***/ (function(module, exports) {

		module.exports = requireUtil();

		/***/ }),

		/***/ 5:
		/***/ (function(module, exports) {

		module.exports = requireVuePopper();

		/***/ }),

		/***/ 7:
		/***/ (function(module, exports) {

		module.exports = Vue;

		/***/ }),

		/***/ 78:
		/***/ (function(module, __webpack_exports__, __webpack_require__) {
		__webpack_require__.r(__webpack_exports__);

		// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/popover/src/main.vue?vue&type=template&id=52060272&
		var render = function() {
		  var _vm = this;
		  var _h = _vm.$createElement;
		  var _c = _vm._self._c || _h;
		  return _c(
		    "span",
		    [
		      _c(
		        "transition",
		        {
		          attrs: { name: _vm.transition },
		          on: {
		            "after-enter": _vm.handleAfterEnter,
		            "after-leave": _vm.handleAfterLeave
		          }
		        },
		        [
		          _c(
		            "div",
		            {
		              directives: [
		                {
		                  name: "show",
		                  rawName: "v-show",
		                  value: !_vm.disabled && _vm.showPopper,
		                  expression: "!disabled && showPopper"
		                }
		              ],
		              ref: "popper",
		              staticClass: "el-popover el-popper",
		              class: [_vm.popperClass, _vm.content && "el-popover--plain"],
		              style: { width: _vm.width + "px" },
		              attrs: {
		                role: "tooltip",
		                id: _vm.tooltipId,
		                "aria-hidden":
		                  _vm.disabled || !_vm.showPopper ? "true" : "false"
		              }
		            },
		            [
		              _vm.title
		                ? _c("div", {
		                    staticClass: "el-popover__title",
		                    domProps: { textContent: _vm._s(_vm.title) }
		                  })
		                : _vm._e(),
		              _vm._t("default", [_vm._v(_vm._s(_vm.content))])
		            ],
		            2
		          )
		        ]
		      ),
		      _c(
		        "span",
		        { ref: "wrapper", staticClass: "el-popover__reference-wrapper" },
		        [_vm._t("reference")],
		        2
		      )
		    ],
		    1
		  )
		};
		var staticRenderFns = [];
		render._withStripped = true;


		// CONCATENATED MODULE: ./packages/popover/src/main.vue?vue&type=template&id=52060272&

		// EXTERNAL MODULE: external "element-ui/lib/utils/vue-popper"
		var vue_popper_ = __webpack_require__(5);
		var vue_popper_default = /*#__PURE__*/__webpack_require__.n(vue_popper_);

		// EXTERNAL MODULE: external "element-ui/lib/utils/dom"
		var dom_ = __webpack_require__(2);

		// EXTERNAL MODULE: external "element-ui/lib/utils/util"
		var util_ = __webpack_require__(3);

		// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/popover/src/main.vue?vue&type=script&lang=js&
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//
		//






		/* harmony default export */ var mainvue_type_script_lang_js_ = ({
		  name: 'ElPopover',

		  mixins: [vue_popper_default.a],

		  props: {
		    trigger: {
		      type: String,
		      default: 'click',
		      validator: function validator(value) {
		        return ['click', 'focus', 'hover', 'manual'].indexOf(value) > -1;
		      }
		    },
		    openDelay: {
		      type: Number,
		      default: 0
		    },
		    closeDelay: {
		      type: Number,
		      default: 200
		    },
		    title: String,
		    disabled: Boolean,
		    content: String,
		    reference: {},
		    popperClass: String,
		    width: {},
		    visibleArrow: {
		      default: true
		    },
		    arrowOffset: {
		      type: Number,
		      default: 0
		    },
		    transition: {
		      type: String,
		      default: 'fade-in-linear'
		    },
		    tabindex: {
		      type: Number,
		      default: 0
		    }
		  },

		  computed: {
		    tooltipId: function tooltipId() {
		      return 'el-popover-' + Object(util_["generateId"])();
		    }
		  },
		  watch: {
		    showPopper: function showPopper(val) {
		      if (this.disabled) {
		        return;
		      }
		      val ? this.$emit('show') : this.$emit('hide');
		    }
		  },

		  mounted: function mounted() {
		    var _this = this;

		    var reference = this.referenceElm = this.reference || this.$refs.reference;
		    var popper = this.popper || this.$refs.popper;

		    if (!reference && this.$refs.wrapper.children) {
		      reference = this.referenceElm = this.$refs.wrapper.children[0];
		    }
		    // 可访问性
		    if (reference) {
		      Object(dom_["addClass"])(reference, 'el-popover__reference');
		      reference.setAttribute('aria-describedby', this.tooltipId);
		      reference.setAttribute('tabindex', this.tabindex); // tab序列
		      popper.setAttribute('tabindex', 0);

		      if (this.trigger !== 'click') {
		        Object(dom_["on"])(reference, 'focusin', function () {
		          _this.handleFocus();
		          var instance = reference.__vue__;
		          if (instance && typeof instance.focus === 'function') {
		            instance.focus();
		          }
		        });
		        Object(dom_["on"])(popper, 'focusin', this.handleFocus);
		        Object(dom_["on"])(reference, 'focusout', this.handleBlur);
		        Object(dom_["on"])(popper, 'focusout', this.handleBlur);
		      }
		      Object(dom_["on"])(reference, 'keydown', this.handleKeydown);
		      Object(dom_["on"])(reference, 'click', this.handleClick);
		    }
		    if (this.trigger === 'click') {
		      Object(dom_["on"])(reference, 'click', this.doToggle);
		      Object(dom_["on"])(document, 'click', this.handleDocumentClick);
		    } else if (this.trigger === 'hover') {
		      Object(dom_["on"])(reference, 'mouseenter', this.handleMouseEnter);
		      Object(dom_["on"])(popper, 'mouseenter', this.handleMouseEnter);
		      Object(dom_["on"])(reference, 'mouseleave', this.handleMouseLeave);
		      Object(dom_["on"])(popper, 'mouseleave', this.handleMouseLeave);
		    } else if (this.trigger === 'focus') {
		      if (this.tabindex < 0) {
		        console.warn('[Element Warn][Popover]a negative taindex means that the element cannot be focused by tab key');
		      }
		      if (reference.querySelector('input, textarea')) {
		        Object(dom_["on"])(reference, 'focusin', this.doShow);
		        Object(dom_["on"])(reference, 'focusout', this.doClose);
		      } else {
		        Object(dom_["on"])(reference, 'mousedown', this.doShow);
		        Object(dom_["on"])(reference, 'mouseup', this.doClose);
		      }
		    }
		  },
		  beforeDestroy: function beforeDestroy() {
		    this.cleanup();
		  },
		  deactivated: function deactivated() {
		    this.cleanup();
		  },


		  methods: {
		    doToggle: function doToggle() {
		      this.showPopper = !this.showPopper;
		    },
		    doShow: function doShow() {
		      this.showPopper = true;
		    },
		    doClose: function doClose() {
		      this.showPopper = false;
		    },
		    handleFocus: function handleFocus() {
		      Object(dom_["addClass"])(this.referenceElm, 'focusing');
		      if (this.trigger === 'click' || this.trigger === 'focus') this.showPopper = true;
		    },
		    handleClick: function handleClick() {
		      Object(dom_["removeClass"])(this.referenceElm, 'focusing');
		    },
		    handleBlur: function handleBlur() {
		      Object(dom_["removeClass"])(this.referenceElm, 'focusing');
		      if (this.trigger === 'click' || this.trigger === 'focus') this.showPopper = false;
		    },
		    handleMouseEnter: function handleMouseEnter() {
		      var _this2 = this;

		      clearTimeout(this._timer);
		      if (this.openDelay) {
		        this._timer = setTimeout(function () {
		          _this2.showPopper = true;
		        }, this.openDelay);
		      } else {
		        this.showPopper = true;
		      }
		    },
		    handleKeydown: function handleKeydown(ev) {
		      if (ev.keyCode === 27 && this.trigger !== 'manual') {
		        // esc
		        this.doClose();
		      }
		    },
		    handleMouseLeave: function handleMouseLeave() {
		      var _this3 = this;

		      clearTimeout(this._timer);
		      if (this.closeDelay) {
		        this._timer = setTimeout(function () {
		          _this3.showPopper = false;
		        }, this.closeDelay);
		      } else {
		        this.showPopper = false;
		      }
		    },
		    handleDocumentClick: function handleDocumentClick(e) {
		      var reference = this.reference || this.$refs.reference;
		      var popper = this.popper || this.$refs.popper;

		      if (!reference && this.$refs.wrapper.children) {
		        reference = this.referenceElm = this.$refs.wrapper.children[0];
		      }
		      if (!this.$el || !reference || this.$el.contains(e.target) || reference.contains(e.target) || !popper || popper.contains(e.target)) return;
		      this.showPopper = false;
		    },
		    handleAfterEnter: function handleAfterEnter() {
		      this.$emit('after-enter');
		    },
		    handleAfterLeave: function handleAfterLeave() {
		      this.$emit('after-leave');
		      this.doDestroy();
		    },
		    cleanup: function cleanup() {
		      if (this.openDelay || this.closeDelay) {
		        clearTimeout(this._timer);
		      }
		    }
		  },

		  destroyed: function destroyed() {
		    var reference = this.reference;

		    Object(dom_["off"])(reference, 'click', this.doToggle);
		    Object(dom_["off"])(reference, 'mouseup', this.doClose);
		    Object(dom_["off"])(reference, 'mousedown', this.doShow);
		    Object(dom_["off"])(reference, 'focusin', this.doShow);
		    Object(dom_["off"])(reference, 'focusout', this.doClose);
		    Object(dom_["off"])(reference, 'mousedown', this.doShow);
		    Object(dom_["off"])(reference, 'mouseup', this.doClose);
		    Object(dom_["off"])(reference, 'mouseleave', this.handleMouseLeave);
		    Object(dom_["off"])(reference, 'mouseenter', this.handleMouseEnter);
		    Object(dom_["off"])(document, 'click', this.handleDocumentClick);
		  }
		});
		// CONCATENATED MODULE: ./packages/popover/src/main.vue?vue&type=script&lang=js&
		 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
		// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
		var componentNormalizer = __webpack_require__(0);

		// CONCATENATED MODULE: ./packages/popover/src/main.vue





		/* normalize component */

		var component = Object(componentNormalizer["a" /* default */])(
		  src_mainvue_type_script_lang_js_,
		  render,
		  staticRenderFns,
		  false,
		  null,
		  null,
		  null
		  
		);
		component.options.__file = "packages/popover/src/main.vue";
		/* harmony default export */ var main = (component.exports);
		// CONCATENATED MODULE: ./packages/popover/src/directive.js
		var getReference = function getReference(el, binding, vnode) {
		  var _ref = binding.expression ? binding.value : binding.arg;
		  var popper = vnode.context.$refs[_ref];
		  if (popper) {
		    if (Array.isArray(popper)) {
		      popper[0].$refs.reference = el;
		    } else {
		      popper.$refs.reference = el;
		    }
		  }
		};

		/* harmony default export */ var directive = ({
		  bind: function bind(el, binding, vnode) {
		    getReference(el, binding, vnode);
		  },
		  inserted: function inserted(el, binding, vnode) {
		    getReference(el, binding, vnode);
		  }
		});
		// EXTERNAL MODULE: external "vue"
		var external_vue_ = __webpack_require__(7);
		var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

		// CONCATENATED MODULE: ./packages/popover/index.js




		external_vue_default.a.directive('popover', directive);

		/* istanbul ignore next */
		main.install = function (Vue) {
		  Vue.directive('popover', directive);
		  Vue.component(main.name, main);
		};
		main.directive = directive;

		/* harmony default export */ __webpack_exports__["default"] = (main);

		/***/ })

		/******/ }); 
	} (popover));
	return popover.exports;
}

(function (module) {
	module.exports =
	/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// define __esModule on exports
	/******/ 	__webpack_require__.r = function(exports) {
	/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
	/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
	/******/ 		}
	/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
	/******/ 	};
	/******/
	/******/ 	// create a fake namespace object
	/******/ 	// mode & 1: value is a module id, require it
	/******/ 	// mode & 2: merge all properties of value into the ns
	/******/ 	// mode & 4: return value when already ns object
	/******/ 	// mode & 8|1: behave like require
	/******/ 	__webpack_require__.t = function(value, mode) {
	/******/ 		if(mode & 1) value = __webpack_require__(value);
	/******/ 		if(mode & 8) return value;
	/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
	/******/ 		var ns = Object.create(null);
	/******/ 		__webpack_require__.r(ns);
	/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
	/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
	/******/ 		return ns;
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "/dist/";
	/******/
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 46);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports) {

	module.exports = requireDateUtil();

	/***/ }),
	/* 1 */
	/***/ (function(module, exports) {

	module.exports = requireDom();

	/***/ }),
	/* 2 */
	/***/ (function(module, exports) {

	module.exports = requireUtil();

	/***/ }),
	/* 3 */
	/***/ (function(module, exports) {

	module.exports = requireEmitter();

	/***/ }),
	/* 4 */
	/***/ (function(module, exports) {

	module.exports = requireLocale();

	/***/ }),
	/* 5 */
	/***/ (function(module, exports) {

	module.exports = requireVuePopper();

	/***/ }),
	/* 6 */
	/***/ (function(module, exports) {

	module.exports = Vue;

	/***/ }),
	/* 7 */
	/***/ (function(module, exports) {

	module.exports = requireMerge();

	/***/ }),
	/* 8 */
	/***/ (function(module, exports) {

	module.exports = requireInput();

	/***/ }),
	/* 9 */
	/***/ (function(module, exports) {

	module.exports = requireMigrating();

	/***/ }),
	/* 10 */
	/***/ (function(module, exports) {

	module.exports = requireClickoutside();

	/***/ }),
	/* 11 */
	/***/ (function(module, exports) {

	module.exports = requirePopup();

	/***/ }),
	/* 12 */
	/***/ (function(module, exports) {

	module.exports = requireLocale$1();

	/***/ }),
	/* 13 */
	/***/ (function(module, exports) {

	module.exports = requireButton();

	/***/ }),
	/* 14 */
	/***/ (function(module, exports) {

	module.exports = requireCheckbox();

	/***/ }),
	/* 15 */
	/***/ (function(module, exports) {

	module.exports = requireResizeEvent();

	/***/ }),
	/* 16 */
	/***/ (function(module, exports) {

	module.exports = requireTypes();

	/***/ }),
	/* 17 */
	/***/ (function(module, exports) {

	module.exports = requireDebounce$1();

	/***/ }),
	/* 18 */
	/***/ (function(module, exports) {

	module.exports = requireScrollbar();

	/***/ }),
	/* 19 */
	/***/ (function(module, exports) {

	module.exports = requireShared();

	/***/ }),
	/* 20 */
	/***/ (function(module, exports) {

	module.exports = requireDate();

	/***/ }),
	/* 21 */
	/***/ (function(module, exports) {

	module.exports = requireCollapseTransition();

	/***/ }),
	/* 22 */
	/***/ (function(module, exports) {

	module.exports = requireVdom();

	/***/ }),
	/* 23 */
	/***/ (function(module, exports) {

	module.exports = requireFocus();

	/***/ }),
	/* 24 */
	/***/ (function(module, exports) {

	module.exports = requireBabelHelperVueJsxMergeProps();

	/***/ }),
	/* 25 */
	/***/ (function(module, exports) {

	module.exports = requireThrottle();

	/***/ }),
	/* 26 */
	/***/ (function(module, exports) {

	module.exports = requireTooltip();

	/***/ }),
	/* 27 */
	/***/ (function(module, exports) {

	module.exports = requireScrollIntoView();

	/***/ }),
	/* 28 */
	/***/ (function(module, exports) {

	module.exports = requireLodash();

	/***/ }),
	/* 29 */
	/***/ (function(module, exports) {

	module.exports = requireButtonGroup();

	/***/ }),
	/* 30 */
	/***/ (function(module, exports) {

	module.exports = requireTag();

	/***/ }),
	/* 31 */
	/***/ (function(module, exports) {

	module.exports = requireScrollbarWidth();

	/***/ }),
	/* 32 */
	/***/ (function(module, exports) {

	module.exports = requireCheckboxGroup();

	/***/ }),
	/* 33 */
	/***/ (function(module, exports) {

	module.exports = requireAfterLeave();

	/***/ }),
	/* 34 */
	/***/ (function(module, exports) {

	module.exports = requireProgress();

	/***/ }),
	/* 35 */
	/***/ (function(module, exports) {

	module.exports = requireAriaUtils();

	/***/ }),
	/* 36 */
	/***/ (function(module, exports) {

	module.exports = requireThrottleDebounce();

	/***/ }),
	/* 37 */
	/***/ (function(module, exports) {

	module.exports = requireSelect();

	/***/ }),
	/* 38 */
	/***/ (function(module, exports) {

	module.exports = requireOption();

	/***/ }),
	/* 39 */
	/***/ (function(module, exports) {

	module.exports = requireNormalizeWheel();

	/***/ }),
	/* 40 */
	/***/ (function(module, exports) {

	module.exports = requireAriaDialog();

	/***/ }),
	/* 41 */
	/***/ (function(module, exports) {

	module.exports = require$$41;

	/***/ }),
	/* 42 */
	/***/ (function(module, exports) {

	module.exports = requireInputNumber();

	/***/ }),
	/* 43 */
	/***/ (function(module, exports) {

	module.exports = requireCascaderPanel();

	/***/ }),
	/* 44 */
	/***/ (function(module, exports) {

	module.exports = requireRadio();

	/***/ }),
	/* 45 */
	/***/ (function(module, exports) {

	module.exports = requirePopover();

	/***/ }),
	/* 46 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(47);


	/***/ }),
	/* 47 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {
	__webpack_require__.r(__webpack_exports__);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/pagination/src/pager.vue?vue&type=template&id=7274f267&
	var pagervue_type_template_id_7274f267_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "ul",
	    { staticClass: "el-pager", on: { click: _vm.onPagerClick } },
	    [
	      _vm.pageCount > 0
	        ? _c(
	            "li",
	            {
	              staticClass: "number",
	              class: { active: _vm.currentPage === 1, disabled: _vm.disabled }
	            },
	            [_vm._v("1")]
	          )
	        : _vm._e(),
	      _vm.showPrevMore
	        ? _c("li", {
	            staticClass: "el-icon more btn-quickprev",
	            class: [_vm.quickprevIconClass, { disabled: _vm.disabled }],
	            on: {
	              mouseenter: function($event) {
	                _vm.onMouseenter("left");
	              },
	              mouseleave: function($event) {
	                _vm.quickprevIconClass = "el-icon-more";
	              }
	            }
	          })
	        : _vm._e(),
	      _vm._l(_vm.pagers, function(pager) {
	        return _c(
	          "li",
	          {
	            key: pager,
	            staticClass: "number",
	            class: { active: _vm.currentPage === pager, disabled: _vm.disabled }
	          },
	          [_vm._v(_vm._s(pager))]
	        )
	      }),
	      _vm.showNextMore
	        ? _c("li", {
	            staticClass: "el-icon more btn-quicknext",
	            class: [_vm.quicknextIconClass, { disabled: _vm.disabled }],
	            on: {
	              mouseenter: function($event) {
	                _vm.onMouseenter("right");
	              },
	              mouseleave: function($event) {
	                _vm.quicknextIconClass = "el-icon-more";
	              }
	            }
	          })
	        : _vm._e(),
	      _vm.pageCount > 1
	        ? _c(
	            "li",
	            {
	              staticClass: "number",
	              class: {
	                active: _vm.currentPage === _vm.pageCount,
	                disabled: _vm.disabled
	              }
	            },
	            [_vm._v(_vm._s(_vm.pageCount))]
	          )
	        : _vm._e()
	    ],
	    2
	  )
	};
	var staticRenderFns = [];
	pagervue_type_template_id_7274f267_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/pagination/src/pager.vue?vue&type=template&id=7274f267&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/pagination/src/pager.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var pagervue_type_script_lang_js_ = ({
	  name: 'ElPager',

	  props: {
	    currentPage: Number,

	    pageCount: Number,

	    pagerCount: Number,

	    disabled: Boolean
	  },

	  watch: {
	    showPrevMore: function showPrevMore(val) {
	      if (!val) this.quickprevIconClass = 'el-icon-more';
	    },
	    showNextMore: function showNextMore(val) {
	      if (!val) this.quicknextIconClass = 'el-icon-more';
	    }
	  },

	  methods: {
	    onPagerClick: function onPagerClick(event) {
	      var target = event.target;
	      if (target.tagName === 'UL' || this.disabled) {
	        return;
	      }

	      var newPage = Number(event.target.textContent);
	      var pageCount = this.pageCount;
	      var currentPage = this.currentPage;
	      var pagerCountOffset = this.pagerCount - 2;

	      if (target.className.indexOf('more') !== -1) {
	        if (target.className.indexOf('quickprev') !== -1) {
	          newPage = currentPage - pagerCountOffset;
	        } else if (target.className.indexOf('quicknext') !== -1) {
	          newPage = currentPage + pagerCountOffset;
	        }
	      }

	      /* istanbul ignore if */
	      if (!isNaN(newPage)) {
	        if (newPage < 1) {
	          newPage = 1;
	        }

	        if (newPage > pageCount) {
	          newPage = pageCount;
	        }
	      }

	      if (newPage !== currentPage) {
	        this.$emit('change', newPage);
	      }
	    },
	    onMouseenter: function onMouseenter(direction) {
	      if (this.disabled) return;
	      if (direction === 'left') {
	        this.quickprevIconClass = 'el-icon-d-arrow-left';
	      } else {
	        this.quicknextIconClass = 'el-icon-d-arrow-right';
	      }
	    }
	  },

	  computed: {
	    pagers: function pagers() {
	      var pagerCount = this.pagerCount;
	      var halfPagerCount = (pagerCount - 1) / 2;

	      var currentPage = Number(this.currentPage);
	      var pageCount = Number(this.pageCount);

	      var showPrevMore = false;
	      var showNextMore = false;

	      if (pageCount > pagerCount) {
	        if (currentPage > pagerCount - halfPagerCount) {
	          showPrevMore = true;
	        }

	        if (currentPage < pageCount - halfPagerCount) {
	          showNextMore = true;
	        }
	      }

	      var array = [];

	      if (showPrevMore && !showNextMore) {
	        var startPage = pageCount - (pagerCount - 2);
	        for (var i = startPage; i < pageCount; i++) {
	          array.push(i);
	        }
	      } else if (!showPrevMore && showNextMore) {
	        for (var _i = 2; _i < pagerCount; _i++) {
	          array.push(_i);
	        }
	      } else if (showPrevMore && showNextMore) {
	        var offset = Math.floor(pagerCount / 2) - 1;
	        for (var _i2 = currentPage - offset; _i2 <= currentPage + offset; _i2++) {
	          array.push(_i2);
	        }
	      } else {
	        for (var _i3 = 2; _i3 < pageCount; _i3++) {
	          array.push(_i3);
	        }
	      }

	      this.showPrevMore = showPrevMore;
	      this.showNextMore = showNextMore;

	      return array;
	    }
	  },

	  data: function data() {
	    return {
	      current: null,
	      showPrevMore: false,
	      showNextMore: false,
	      quicknextIconClass: 'el-icon-more',
	      quickprevIconClass: 'el-icon-more'
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/pagination/src/pager.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_pagervue_type_script_lang_js_ = (pagervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
	/* globals __VUE_SSR_CONTEXT__ */

	// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
	// This module is a runtime utility for cleaner component module output and will
	// be included in the final webpack user bundle.

	function normalizeComponent (
	  scriptExports,
	  render,
	  staticRenderFns,
	  functionalTemplate,
	  injectStyles,
	  scopeId,
	  moduleIdentifier, /* server only */
	  shadowMode /* vue-cli only */
	) {
	  // Vue.extend constructor export interop
	  var options = typeof scriptExports === 'function'
	    ? scriptExports.options
	    : scriptExports;

	  // render functions
	  if (render) {
	    options.render = render;
	    options.staticRenderFns = staticRenderFns;
	    options._compiled = true;
	  }

	  // functional template
	  if (functionalTemplate) {
	    options.functional = true;
	  }

	  // scopedId
	  if (scopeId) {
	    options._scopeId = 'data-v-' + scopeId;
	  }

	  var hook;
	  if (moduleIdentifier) { // server build
	    hook = function (context) {
	      // 2.3 injection
	      context =
	        context || // cached call
	        (this.$vnode && this.$vnode.ssrContext) || // stateful
	        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
	      // 2.2 with runInNewContext: true
	      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
	        context = __VUE_SSR_CONTEXT__;
	      }
	      // inject component styles
	      if (injectStyles) {
	        injectStyles.call(this, context);
	      }
	      // register component module identifier for async chunk inferrence
	      if (context && context._registeredComponents) {
	        context._registeredComponents.add(moduleIdentifier);
	      }
	    };
	    // used by ssr in case component is cached and beforeCreate
	    // never gets called
	    options._ssrRegister = hook;
	  } else if (injectStyles) {
	    hook = shadowMode
	      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
	      : injectStyles;
	  }

	  if (hook) {
	    if (options.functional) {
	      // for template-only hot-reload because in that case the render fn doesn't
	      // go through the normalizer
	      options._injectStyles = hook;
	      // register for functioal component in vue file
	      var originalRender = options.render;
	      options.render = function renderWithStyleInjection (h, context) {
	        hook.call(context);
	        return originalRender(h, context)
	      };
	    } else {
	      // inject component registration as beforeCreate hook
	      var existing = options.beforeCreate;
	      options.beforeCreate = existing
	        ? [].concat(existing, hook)
	        : [hook];
	    }
	  }

	  return {
	    exports: scriptExports,
	    options: options
	  }
	}

	// CONCATENATED MODULE: ./packages/pagination/src/pager.vue





	/* normalize component */

	var component = normalizeComponent(
	  src_pagervue_type_script_lang_js_,
	  pagervue_type_template_id_7274f267_render,
	  staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	component.options.__file = "packages/pagination/src/pager.vue";
	/* harmony default export */ var pager = (component.exports);
	// EXTERNAL MODULE: external "element-ui/lib/select"
	var select_ = __webpack_require__(37);
	var select_default = /*#__PURE__*/__webpack_require__.n(select_);

	// EXTERNAL MODULE: external "element-ui/lib/option"
	var option_ = __webpack_require__(38);
	var option_default = /*#__PURE__*/__webpack_require__.n(option_);

	// EXTERNAL MODULE: external "element-ui/lib/input"
	var input_ = __webpack_require__(8);
	var input_default = /*#__PURE__*/__webpack_require__.n(input_);

	// EXTERNAL MODULE: external "element-ui/lib/mixins/locale"
	var locale_ = __webpack_require__(4);
	var locale_default = /*#__PURE__*/__webpack_require__.n(locale_);

	// EXTERNAL MODULE: external "element-ui/lib/utils/util"
	var util_ = __webpack_require__(2);

	// CONCATENATED MODULE: ./packages/pagination/src/pagination.js







	/* harmony default export */ var pagination = ({
	  name: 'ElPagination',

	  props: {
	    pageSize: {
	      type: Number,
	      default: 10
	    },

	    small: Boolean,

	    total: Number,

	    pageCount: Number,

	    pagerCount: {
	      type: Number,
	      validator: function validator(value) {
	        return (value | 0) === value && value > 4 && value < 22 && value % 2 === 1;
	      },

	      default: 7
	    },

	    currentPage: {
	      type: Number,
	      default: 1
	    },

	    layout: {
	      default: 'prev, pager, next, jumper, ->, total'
	    },

	    pageSizes: {
	      type: Array,
	      default: function _default() {
	        return [10, 20, 30, 40, 50, 100];
	      }
	    },

	    popperClass: String,

	    prevText: String,

	    nextText: String,

	    background: Boolean,

	    disabled: Boolean,

	    hideOnSinglePage: Boolean
	  },

	  data: function data() {
	    return {
	      internalCurrentPage: 1,
	      internalPageSize: 0,
	      lastEmittedPage: -1,
	      userChangePageSize: false
	    };
	  },
	  render: function render(h) {
	    var layout = this.layout;
	    if (!layout) return null;
	    if (this.hideOnSinglePage && (!this.internalPageCount || this.internalPageCount === 1)) return null;

	    var template = h('div', { 'class': ['el-pagination', {
	        'is-background': this.background,
	        'el-pagination--small': this.small
	      }] });
	    var TEMPLATE_MAP = {
	      prev: h('prev'),
	      jumper: h('jumper'),
	      pager: h('pager', {
	        attrs: { currentPage: this.internalCurrentPage, pageCount: this.internalPageCount, pagerCount: this.pagerCount, disabled: this.disabled },
	        on: {
	          'change': this.handleCurrentChange
	        }
	      }),
	      next: h('next'),
	      sizes: h('sizes', {
	        attrs: { pageSizes: this.pageSizes }
	      }),
	      slot: h('slot', [this.$slots.default ? this.$slots.default : '']),
	      total: h('total')
	    };
	    var components = layout.split(',').map(function (item) {
	      return item.trim();
	    });
	    var rightWrapper = h('div', { 'class': 'el-pagination__rightwrapper' });
	    var haveRightWrapper = false;

	    template.children = template.children || [];
	    rightWrapper.children = rightWrapper.children || [];
	    components.forEach(function (compo) {
	      if (compo === '->') {
	        haveRightWrapper = true;
	        return;
	      }

	      if (!haveRightWrapper) {
	        template.children.push(TEMPLATE_MAP[compo]);
	      } else {
	        rightWrapper.children.push(TEMPLATE_MAP[compo]);
	      }
	    });

	    if (haveRightWrapper) {
	      template.children.unshift(rightWrapper);
	    }

	    return template;
	  },


	  components: {
	    Prev: {
	      render: function render(h) {
	        return h(
	          'button',
	          {
	            attrs: {
	              type: 'button',

	              disabled: this.$parent.disabled || this.$parent.internalCurrentPage <= 1
	            },
	            'class': 'btn-prev', on: {
	              'click': this.$parent.prev
	            }
	          },
	          [this.$parent.prevText ? h('span', [this.$parent.prevText]) : h('i', { 'class': 'el-icon el-icon-arrow-left' })]
	        );
	      }
	    },

	    Next: {
	      render: function render(h) {
	        return h(
	          'button',
	          {
	            attrs: {
	              type: 'button',

	              disabled: this.$parent.disabled || this.$parent.internalCurrentPage === this.$parent.internalPageCount || this.$parent.internalPageCount === 0
	            },
	            'class': 'btn-next', on: {
	              'click': this.$parent.next
	            }
	          },
	          [this.$parent.nextText ? h('span', [this.$parent.nextText]) : h('i', { 'class': 'el-icon el-icon-arrow-right' })]
	        );
	      }
	    },

	    Sizes: {
	      mixins: [locale_default.a],

	      props: {
	        pageSizes: Array
	      },

	      watch: {
	        pageSizes: {
	          immediate: true,
	          handler: function handler(newVal, oldVal) {
	            if (Object(util_["valueEquals"])(newVal, oldVal)) return;
	            if (Array.isArray(newVal)) {
	              this.$parent.internalPageSize = newVal.indexOf(this.$parent.pageSize) > -1 ? this.$parent.pageSize : this.pageSizes[0];
	            }
	          }
	        }
	      },

	      render: function render(h) {
	        var _this = this;

	        return h(
	          'span',
	          { 'class': 'el-pagination__sizes' },
	          [h(
	            'el-select',
	            {
	              attrs: {
	                value: this.$parent.internalPageSize,
	                popperClass: this.$parent.popperClass || '',
	                size: 'mini',

	                disabled: this.$parent.disabled },
	              on: {
	                'input': this.handleChange
	              }
	            },
	            [this.pageSizes.map(function (item) {
	              return h('el-option', {
	                attrs: {
	                  value: item,
	                  label: item + _this.t('el.pagination.pagesize') }
	              });
	            })]
	          )]
	        );
	      },


	      components: {
	        ElSelect: select_default.a,
	        ElOption: option_default.a
	      },

	      methods: {
	        handleChange: function handleChange(val) {
	          if (val !== this.$parent.internalPageSize) {
	            this.$parent.internalPageSize = val = parseInt(val, 10);
	            this.$parent.userChangePageSize = true;
	            this.$parent.$emit('update:pageSize', val);
	            this.$parent.$emit('size-change', val);
	          }
	        }
	      }
	    },

	    Jumper: {
	      mixins: [locale_default.a],

	      components: { ElInput: input_default.a },

	      data: function data() {
	        return {
	          userInput: null
	        };
	      },


	      watch: {
	        '$parent.internalCurrentPage': function $parentInternalCurrentPage() {
	          this.userInput = null;
	        }
	      },

	      methods: {
	        handleKeyup: function handleKeyup(_ref) {
	          var keyCode = _ref.keyCode,
	              target = _ref.target;

	          // Chrome, Safari, Firefox triggers change event on Enter
	          // Hack for IE: https://github.com/ElemeFE/element/issues/11710
	          // Drop this method when we no longer supports IE
	          if (keyCode === 13) {
	            this.handleChange(target.value);
	          }
	        },
	        handleInput: function handleInput(value) {
	          this.userInput = value;
	        },
	        handleChange: function handleChange(value) {
	          this.$parent.internalCurrentPage = this.$parent.getValidCurrentPage(value);
	          this.$parent.emitChange();
	          this.userInput = null;
	        }
	      },

	      render: function render(h) {
	        return h(
	          'span',
	          { 'class': 'el-pagination__jump' },
	          [this.t('el.pagination.goto'), h('el-input', {
	            'class': 'el-pagination__editor is-in-pagination',
	            attrs: { min: 1,
	              max: this.$parent.internalPageCount,
	              value: this.userInput !== null ? this.userInput : this.$parent.internalCurrentPage,
	              type: 'number',
	              disabled: this.$parent.disabled
	            },
	            nativeOn: {
	              'keyup': this.handleKeyup
	            },
	            on: {
	              'input': this.handleInput,
	              'change': this.handleChange
	            }
	          }), this.t('el.pagination.pageClassifier')]
	        );
	      }
	    },

	    Total: {
	      mixins: [locale_default.a],

	      render: function render(h) {
	        return typeof this.$parent.total === 'number' ? h(
	          'span',
	          { 'class': 'el-pagination__total' },
	          [this.t('el.pagination.total', { total: this.$parent.total })]
	        ) : '';
	      }
	    },

	    Pager: pager
	  },

	  methods: {
	    handleCurrentChange: function handleCurrentChange(val) {
	      this.internalCurrentPage = this.getValidCurrentPage(val);
	      this.userChangePageSize = true;
	      this.emitChange();
	    },
	    prev: function prev() {
	      if (this.disabled) return;
	      var newVal = this.internalCurrentPage - 1;
	      this.internalCurrentPage = this.getValidCurrentPage(newVal);
	      this.$emit('prev-click', this.internalCurrentPage);
	      this.emitChange();
	    },
	    next: function next() {
	      if (this.disabled) return;
	      var newVal = this.internalCurrentPage + 1;
	      this.internalCurrentPage = this.getValidCurrentPage(newVal);
	      this.$emit('next-click', this.internalCurrentPage);
	      this.emitChange();
	    },
	    getValidCurrentPage: function getValidCurrentPage(value) {
	      value = parseInt(value, 10);

	      var havePageCount = typeof this.internalPageCount === 'number';

	      var resetValue = void 0;
	      if (!havePageCount) {
	        if (isNaN(value) || value < 1) resetValue = 1;
	      } else {
	        if (value < 1) {
	          resetValue = 1;
	        } else if (value > this.internalPageCount) {
	          resetValue = this.internalPageCount;
	        }
	      }

	      if (resetValue === undefined && isNaN(value)) {
	        resetValue = 1;
	      } else if (resetValue === 0) {
	        resetValue = 1;
	      }

	      return resetValue === undefined ? value : resetValue;
	    },
	    emitChange: function emitChange() {
	      var _this2 = this;

	      this.$nextTick(function () {
	        if (_this2.internalCurrentPage !== _this2.lastEmittedPage || _this2.userChangePageSize) {
	          _this2.$emit('current-change', _this2.internalCurrentPage);
	          _this2.lastEmittedPage = _this2.internalCurrentPage;
	          _this2.userChangePageSize = false;
	        }
	      });
	    }
	  },

	  computed: {
	    internalPageCount: function internalPageCount() {
	      if (typeof this.total === 'number') {
	        return Math.max(1, Math.ceil(this.total / this.internalPageSize));
	      } else if (typeof this.pageCount === 'number') {
	        return Math.max(1, this.pageCount);
	      }
	      return null;
	    }
	  },

	  watch: {
	    currentPage: {
	      immediate: true,
	      handler: function handler(val) {
	        this.internalCurrentPage = this.getValidCurrentPage(val);
	      }
	    },

	    pageSize: {
	      immediate: true,
	      handler: function handler(val) {
	        this.internalPageSize = isNaN(val) ? 10 : val;
	      }
	    },

	    internalCurrentPage: {
	      immediate: true,
	      handler: function handler(newVal) {
	        this.$emit('update:currentPage', newVal);
	        this.lastEmittedPage = -1;
	      }
	    },

	    internalPageCount: function internalPageCount(newVal) {
	      /* istanbul ignore if */
	      var oldPage = this.internalCurrentPage;
	      if (newVal > 0 && oldPage === 0) {
	        this.internalCurrentPage = 1;
	      } else if (oldPage > newVal) {
	        this.internalCurrentPage = newVal === 0 ? 1 : newVal;
	        this.userChangePageSize && this.emitChange();
	      }
	      this.userChangePageSize = false;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/pagination/index.js


	/* istanbul ignore next */
	pagination.install = function (Vue) {
	  Vue.component(pagination.name, pagination);
	};

	/* harmony default export */ var packages_pagination = (pagination);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/dialog/src/component.vue?vue&type=template&id=60140e62&
	var componentvue_type_template_id_60140e62_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "dialog-fade" },
	      on: { "after-enter": _vm.afterEnter, "after-leave": _vm.afterLeave }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-dialog__wrapper",
	          on: {
	            click: function($event) {
	              if ($event.target !== $event.currentTarget) {
	                return null
	              }
	              return _vm.handleWrapperClick($event)
	            }
	          }
	        },
	        [
	          _c(
	            "div",
	            {
	              key: _vm.key,
	              ref: "dialog",
	              class: [
	                "el-dialog",
	                {
	                  "is-fullscreen": _vm.fullscreen,
	                  "el-dialog--center": _vm.center
	                },
	                _vm.customClass
	              ],
	              style: _vm.style,
	              attrs: {
	                role: "dialog",
	                "aria-modal": "true",
	                "aria-label": _vm.title || "dialog"
	              }
	            },
	            [
	              _c(
	                "div",
	                { staticClass: "el-dialog__header" },
	                [
	                  _vm._t("title", [
	                    _c("span", { staticClass: "el-dialog__title" }, [
	                      _vm._v(_vm._s(_vm.title))
	                    ])
	                  ]),
	                  _vm.showClose
	                    ? _c(
	                        "button",
	                        {
	                          staticClass: "el-dialog__headerbtn",
	                          attrs: { type: "button", "aria-label": "Close" },
	                          on: { click: _vm.handleClose }
	                        },
	                        [
	                          _c("i", {
	                            staticClass:
	                              "el-dialog__close el-icon el-icon-close"
	                          })
	                        ]
	                      )
	                    : _vm._e()
	                ],
	                2
	              ),
	              _vm.rendered
	                ? _c(
	                    "div",
	                    { staticClass: "el-dialog__body" },
	                    [_vm._t("default")],
	                    2
	                  )
	                : _vm._e(),
	              _vm.$slots.footer
	                ? _c(
	                    "div",
	                    { staticClass: "el-dialog__footer" },
	                    [_vm._t("footer")],
	                    2
	                  )
	                : _vm._e()
	            ]
	          )
	        ]
	      )
	    ]
	  )
	};
	var componentvue_type_template_id_60140e62_staticRenderFns = [];
	componentvue_type_template_id_60140e62_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/dialog/src/component.vue?vue&type=template&id=60140e62&

	// EXTERNAL MODULE: external "element-ui/lib/utils/popup"
	var popup_ = __webpack_require__(11);
	var popup_default = /*#__PURE__*/__webpack_require__.n(popup_);

	// EXTERNAL MODULE: external "element-ui/lib/mixins/migrating"
	var migrating_ = __webpack_require__(9);
	var migrating_default = /*#__PURE__*/__webpack_require__.n(migrating_);

	// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"
	var emitter_ = __webpack_require__(3);
	var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dialog/src/component.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var componentvue_type_script_lang_js_ = ({
	  name: 'ElDialog',

	  mixins: [popup_default.a, emitter_default.a, migrating_default.a],

	  props: {
	    title: {
	      type: String,
	      default: ''
	    },

	    modal: {
	      type: Boolean,
	      default: true
	    },

	    modalAppendToBody: {
	      type: Boolean,
	      default: true
	    },

	    appendToBody: {
	      type: Boolean,
	      default: false
	    },

	    lockScroll: {
	      type: Boolean,
	      default: true
	    },

	    closeOnClickModal: {
	      type: Boolean,
	      default: true
	    },

	    closeOnPressEscape: {
	      type: Boolean,
	      default: true
	    },

	    showClose: {
	      type: Boolean,
	      default: true
	    },

	    width: String,

	    fullscreen: Boolean,

	    customClass: {
	      type: String,
	      default: ''
	    },

	    top: {
	      type: String,
	      default: '15vh'
	    },
	    beforeClose: Function,
	    center: {
	      type: Boolean,
	      default: false
	    },

	    destroyOnClose: Boolean
	  },

	  data: function data() {
	    return {
	      closed: false,
	      key: 0
	    };
	  },


	  watch: {
	    visible: function visible(val) {
	      var _this = this;

	      if (val) {
	        this.closed = false;
	        this.$emit('open');
	        this.$el.addEventListener('scroll', this.updatePopper);
	        this.$nextTick(function () {
	          _this.$refs.dialog.scrollTop = 0;
	        });
	        if (this.appendToBody) {
	          document.body.appendChild(this.$el);
	        }
	      } else {
	        this.$el.removeEventListener('scroll', this.updatePopper);
	        if (!this.closed) this.$emit('close');
	        if (this.destroyOnClose) {
	          this.$nextTick(function () {
	            _this.key++;
	          });
	        }
	      }
	    }
	  },

	  computed: {
	    style: function style() {
	      var style = {};
	      if (!this.fullscreen) {
	        style.marginTop = this.top;
	        if (this.width) {
	          style.width = this.width;
	        }
	      }
	      return style;
	    }
	  },

	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'size': 'size is removed.'
	        }
	      };
	    },
	    handleWrapperClick: function handleWrapperClick() {
	      if (!this.closeOnClickModal) return;
	      this.handleClose();
	    },
	    handleClose: function handleClose() {
	      if (typeof this.beforeClose === 'function') {
	        this.beforeClose(this.hide);
	      } else {
	        this.hide();
	      }
	    },
	    hide: function hide(cancel) {
	      if (cancel !== false) {
	        this.$emit('update:visible', false);
	        this.$emit('close');
	        this.closed = true;
	      }
	    },
	    updatePopper: function updatePopper() {
	      this.broadcast('ElSelectDropdown', 'updatePopper');
	      this.broadcast('ElDropdownMenu', 'updatePopper');
	    },
	    afterEnter: function afterEnter() {
	      this.$emit('opened');
	    },
	    afterLeave: function afterLeave() {
	      this.$emit('closed');
	    }
	  },

	  mounted: function mounted() {
	    if (this.visible) {
	      this.rendered = true;
	      this.open();
	      if (this.appendToBody) {
	        document.body.appendChild(this.$el);
	      }
	    }
	  },
	  destroyed: function destroyed() {
	    // if appendToBody is true, remove DOM node after destroy
	    if (this.appendToBody && this.$el && this.$el.parentNode) {
	      this.$el.parentNode.removeChild(this.$el);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/dialog/src/component.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_componentvue_type_script_lang_js_ = (componentvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/dialog/src/component.vue





	/* normalize component */

	var component_component = normalizeComponent(
	  src_componentvue_type_script_lang_js_,
	  componentvue_type_template_id_60140e62_render,
	  componentvue_type_template_id_60140e62_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	component_component.options.__file = "packages/dialog/src/component.vue";
	/* harmony default export */ var src_component = (component_component.exports);
	// CONCATENATED MODULE: ./packages/dialog/index.js


	/* istanbul ignore next */
	src_component.install = function (Vue) {
	  Vue.component(src_component.name, src_component);
	};

	/* harmony default export */ var dialog = (src_component);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete.vue?vue&type=template&id=152f2ee6&
	var autocompletevue_type_template_id_152f2ee6_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      directives: [
	        {
	          name: "clickoutside",
	          rawName: "v-clickoutside",
	          value: _vm.close,
	          expression: "close"
	        }
	      ],
	      staticClass: "el-autocomplete",
	      attrs: {
	        "aria-haspopup": "listbox",
	        role: "combobox",
	        "aria-expanded": _vm.suggestionVisible,
	        "aria-owns": _vm.id
	      }
	    },
	    [
	      _c(
	        "el-input",
	        _vm._b(
	          {
	            ref: "input",
	            on: {
	              input: _vm.handleInput,
	              change: _vm.handleChange,
	              focus: _vm.handleFocus,
	              blur: _vm.handleBlur,
	              clear: _vm.handleClear
	            },
	            nativeOn: {
	              keydown: [
	                function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "up", 38, $event.key, [
	                      "Up",
	                      "ArrowUp"
	                    ])
	                  ) {
	                    return null
	                  }
	                  $event.preventDefault();
	                  _vm.highlight(_vm.highlightedIndex - 1);
	                },
	                function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "down", 40, $event.key, [
	                      "Down",
	                      "ArrowDown"
	                    ])
	                  ) {
	                    return null
	                  }
	                  $event.preventDefault();
	                  _vm.highlight(_vm.highlightedIndex + 1);
	                },
	                function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
	                  ) {
	                    return null
	                  }
	                  return _vm.handleKeyEnter($event)
	                },
	                function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
	                  ) {
	                    return null
	                  }
	                  return _vm.close($event)
	                }
	              ]
	            }
	          },
	          "el-input",
	          [_vm.$props, _vm.$attrs],
	          false
	        ),
	        [
	          _vm.$slots.prepend
	            ? _c("template", { slot: "prepend" }, [_vm._t("prepend")], 2)
	            : _vm._e(),
	          _vm.$slots.append
	            ? _c("template", { slot: "append" }, [_vm._t("append")], 2)
	            : _vm._e(),
	          _vm.$slots.prefix
	            ? _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2)
	            : _vm._e(),
	          _vm.$slots.suffix
	            ? _c("template", { slot: "suffix" }, [_vm._t("suffix")], 2)
	            : _vm._e()
	        ],
	        2
	      ),
	      _c(
	        "el-autocomplete-suggestions",
	        {
	          ref: "suggestions",
	          class: [_vm.popperClass ? _vm.popperClass : ""],
	          attrs: {
	            "visible-arrow": "",
	            "popper-options": _vm.popperOptions,
	            "append-to-body": _vm.popperAppendToBody,
	            placement: _vm.placement,
	            id: _vm.id
	          }
	        },
	        _vm._l(_vm.suggestions, function(item, index) {
	          return _c(
	            "li",
	            {
	              key: index,
	              class: { highlighted: _vm.highlightedIndex === index },
	              attrs: {
	                id: _vm.id + "-item-" + index,
	                role: "option",
	                "aria-selected": _vm.highlightedIndex === index
	              },
	              on: {
	                click: function($event) {
	                  _vm.select(item);
	                }
	              }
	            },
	            [
	              _vm._t(
	                "default",
	                [
	                  _vm._v("\n        " + _vm._s(item[_vm.valueKey]) + "\n      ")
	                ],
	                { item: item }
	              )
	            ],
	            2
	          )
	        }),
	        0
	      )
	    ],
	    1
	  )
	};
	var autocompletevue_type_template_id_152f2ee6_staticRenderFns = [];
	autocompletevue_type_template_id_152f2ee6_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete.vue?vue&type=template&id=152f2ee6&

	// EXTERNAL MODULE: external "throttle-debounce/debounce"
	var debounce_ = __webpack_require__(17);
	var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

	// EXTERNAL MODULE: external "element-ui/lib/utils/clickoutside"
	var clickoutside_ = __webpack_require__(10);
	var clickoutside_default = /*#__PURE__*/__webpack_require__.n(clickoutside_);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=template&id=cd10dcf0&
	var autocomplete_suggestionsvue_type_template_id_cd10dcf0_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    { attrs: { name: "el-zoom-in-top" }, on: { "after-leave": _vm.doDestroy } },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.showPopper,
	              expression: "showPopper"
	            }
	          ],
	          staticClass: "el-autocomplete-suggestion el-popper",
	          class: {
	            "is-loading": !_vm.parent.hideLoading && _vm.parent.loading
	          },
	          style: { width: _vm.dropdownWidth },
	          attrs: { role: "region" }
	        },
	        [
	          _c(
	            "el-scrollbar",
	            {
	              attrs: {
	                tag: "ul",
	                "wrap-class": "el-autocomplete-suggestion__wrap",
	                "view-class": "el-autocomplete-suggestion__list"
	              }
	            },
	            [
	              !_vm.parent.hideLoading && _vm.parent.loading
	                ? _c("li", [_c("i", { staticClass: "el-icon-loading" })])
	                : _vm._t("default")
	            ],
	            2
	          )
	        ],
	        1
	      )
	    ]
	  )
	};
	var autocomplete_suggestionsvue_type_template_id_cd10dcf0_staticRenderFns = [];
	autocomplete_suggestionsvue_type_template_id_cd10dcf0_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=template&id=cd10dcf0&

	// EXTERNAL MODULE: external "element-ui/lib/utils/vue-popper"
	var vue_popper_ = __webpack_require__(5);
	var vue_popper_default = /*#__PURE__*/__webpack_require__.n(vue_popper_);

	// EXTERNAL MODULE: external "element-ui/lib/scrollbar"
	var scrollbar_ = __webpack_require__(18);
	var scrollbar_default = /*#__PURE__*/__webpack_require__.n(scrollbar_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var autocomplete_suggestionsvue_type_script_lang_js_ = ({
	  components: { ElScrollbar: scrollbar_default.a },
	  mixins: [vue_popper_default.a, emitter_default.a],

	  componentName: 'ElAutocompleteSuggestions',

	  data: function data() {
	    return {
	      parent: this.$parent,
	      dropdownWidth: ''
	    };
	  },


	  props: {
	    options: {
	      default: function _default() {
	        return {
	          gpuAcceleration: false
	        };
	      }
	    },
	    id: String
	  },

	  methods: {
	    select: function select(item) {
	      this.dispatch('ElAutocomplete', 'item-click', item);
	    }
	  },

	  updated: function updated() {
	    var _this = this;

	    this.$nextTick(function (_) {
	      _this.popperJS && _this.updatePopper();
	    });
	  },
	  mounted: function mounted() {
	    this.$parent.popperElm = this.popperElm = this.$el;
	    this.referenceElm = this.$parent.$refs.input.$refs.input || this.$parent.$refs.input.$refs.textarea;
	    this.referenceList = this.$el.querySelector('.el-autocomplete-suggestion__list');
	    this.referenceList.setAttribute('role', 'listbox');
	    this.referenceList.setAttribute('id', this.id);
	  },
	  created: function created() {
	    var _this2 = this;

	    this.$on('visible', function (val, inputWidth) {
	      _this2.dropdownWidth = inputWidth + 'px';
	      _this2.showPopper = val;
	    });
	  }
	});
	// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_autocomplete_suggestionsvue_type_script_lang_js_ = (autocomplete_suggestionsvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete-suggestions.vue





	/* normalize component */

	var autocomplete_suggestions_component = normalizeComponent(
	  src_autocomplete_suggestionsvue_type_script_lang_js_,
	  autocomplete_suggestionsvue_type_template_id_cd10dcf0_render,
	  autocomplete_suggestionsvue_type_template_id_cd10dcf0_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	autocomplete_suggestions_component.options.__file = "packages/autocomplete/src/autocomplete-suggestions.vue";
	/* harmony default export */ var autocomplete_suggestions = (autocomplete_suggestions_component.exports);
	// EXTERNAL MODULE: external "element-ui/lib/mixins/focus"
	var focus_ = __webpack_require__(23);
	var focus_default = /*#__PURE__*/__webpack_require__.n(focus_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//










	/* harmony default export */ var autocompletevue_type_script_lang_js_ = ({
	  name: 'ElAutocomplete',

	  mixins: [emitter_default.a, focus_default()('input'), migrating_default.a],

	  inheritAttrs: false,

	  componentName: 'ElAutocomplete',

	  components: {
	    ElInput: input_default.a,
	    ElAutocompleteSuggestions: autocomplete_suggestions
	  },

	  directives: { Clickoutside: clickoutside_default.a },

	  props: {
	    valueKey: {
	      type: String,
	      default: 'value'
	    },
	    popperClass: String,
	    popperOptions: Object,
	    placeholder: String,
	    clearable: {
	      type: Boolean,
	      default: false
	    },
	    disabled: Boolean,
	    name: String,
	    size: String,
	    value: String,
	    maxlength: Number,
	    minlength: Number,
	    autofocus: Boolean,
	    fetchSuggestions: Function,
	    triggerOnFocus: {
	      type: Boolean,
	      default: true
	    },
	    customItem: String,
	    selectWhenUnmatched: {
	      type: Boolean,
	      default: false
	    },
	    prefixIcon: String,
	    suffixIcon: String,
	    label: String,
	    debounce: {
	      type: Number,
	      default: 300
	    },
	    placement: {
	      type: String,
	      default: 'bottom-start'
	    },
	    hideLoading: Boolean,
	    popperAppendToBody: {
	      type: Boolean,
	      default: true
	    },
	    highlightFirstItem: {
	      type: Boolean,
	      default: false
	    }
	  },
	  data: function data() {
	    return {
	      activated: false,
	      suggestions: [],
	      loading: false,
	      highlightedIndex: -1,
	      suggestionDisabled: false
	    };
	  },

	  computed: {
	    suggestionVisible: function suggestionVisible() {
	      var suggestions = this.suggestions;
	      var isValidData = Array.isArray(suggestions) && suggestions.length > 0;
	      return (isValidData || this.loading) && this.activated;
	    },
	    id: function id() {
	      return 'el-autocomplete-' + Object(util_["generateId"])();
	    }
	  },
	  watch: {
	    suggestionVisible: function suggestionVisible(val) {
	      var $input = this.getInput();
	      if ($input) {
	        this.broadcast('ElAutocompleteSuggestions', 'visible', [val, $input.offsetWidth]);
	      }
	    }
	  },
	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'custom-item': 'custom-item is removed, use scoped slot instead.',
	          'props': 'props is removed, use value-key instead.'
	        }
	      };
	    },
	    getData: function getData(queryString) {
	      var _this = this;

	      if (this.suggestionDisabled) {
	        return;
	      }
	      this.loading = true;
	      this.fetchSuggestions(queryString, function (suggestions) {
	        _this.loading = false;
	        if (_this.suggestionDisabled) {
	          return;
	        }
	        if (Array.isArray(suggestions)) {
	          _this.suggestions = suggestions;
	          _this.highlightedIndex = _this.highlightFirstItem ? 0 : -1;
	        } else {
	          console.error('[Element Error][Autocomplete]autocomplete suggestions must be an array');
	        }
	      });
	    },
	    handleInput: function handleInput(value) {
	      this.$emit('input', value);
	      this.suggestionDisabled = false;
	      if (!this.triggerOnFocus && !value) {
	        this.suggestionDisabled = true;
	        this.suggestions = [];
	        return;
	      }
	      this.debouncedGetData(value);
	    },
	    handleChange: function handleChange(value) {
	      this.$emit('change', value);
	    },
	    handleFocus: function handleFocus(event) {
	      this.activated = true;
	      this.$emit('focus', event);
	      if (this.triggerOnFocus) {
	        this.debouncedGetData(this.value);
	      }
	    },
	    handleBlur: function handleBlur(event) {
	      this.$emit('blur', event);
	    },
	    handleClear: function handleClear() {
	      this.activated = false;
	      this.$emit('clear');
	    },
	    close: function close(e) {
	      this.activated = false;
	    },
	    handleKeyEnter: function handleKeyEnter(e) {
	      var _this2 = this;

	      if (this.suggestionVisible && this.highlightedIndex >= 0 && this.highlightedIndex < this.suggestions.length) {
	        e.preventDefault();
	        this.select(this.suggestions[this.highlightedIndex]);
	      } else if (this.selectWhenUnmatched) {
	        this.$emit('select', { value: this.value });
	        this.$nextTick(function (_) {
	          _this2.suggestions = [];
	          _this2.highlightedIndex = -1;
	        });
	      }
	    },
	    select: function select(item) {
	      var _this3 = this;

	      this.$emit('input', item[this.valueKey]);
	      this.$emit('select', item);
	      this.$nextTick(function (_) {
	        _this3.suggestions = [];
	        _this3.highlightedIndex = -1;
	      });
	    },
	    highlight: function highlight(index) {
	      if (!this.suggestionVisible || this.loading) {
	        return;
	      }
	      if (index < 0) {
	        this.highlightedIndex = -1;
	        return;
	      }
	      if (index >= this.suggestions.length) {
	        index = this.suggestions.length - 1;
	      }
	      var suggestion = this.$refs.suggestions.$el.querySelector('.el-autocomplete-suggestion__wrap');
	      var suggestionList = suggestion.querySelectorAll('.el-autocomplete-suggestion__list li');

	      var highlightItem = suggestionList[index];
	      var scrollTop = suggestion.scrollTop;
	      var offsetTop = highlightItem.offsetTop;

	      if (offsetTop + highlightItem.scrollHeight > scrollTop + suggestion.clientHeight) {
	        suggestion.scrollTop += highlightItem.scrollHeight;
	      }
	      if (offsetTop < scrollTop) {
	        suggestion.scrollTop -= highlightItem.scrollHeight;
	      }
	      this.highlightedIndex = index;
	      var $input = this.getInput();
	      $input.setAttribute('aria-activedescendant', this.id + '-item-' + this.highlightedIndex);
	    },
	    getInput: function getInput() {
	      return this.$refs.input.getInput();
	    }
	  },
	  mounted: function mounted() {
	    var _this4 = this;

	    this.debouncedGetData = debounce_default()(this.debounce, this.getData);
	    this.$on('item-click', function (item) {
	      _this4.select(item);
	    });
	    var $input = this.getInput();
	    $input.setAttribute('role', 'textbox');
	    $input.setAttribute('aria-autocomplete', 'list');
	    $input.setAttribute('aria-controls', 'id');
	    $input.setAttribute('aria-activedescendant', this.id + '-item-' + this.highlightedIndex);
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.$refs.suggestions.$destroy();
	  }
	});
	// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_autocompletevue_type_script_lang_js_ = (autocompletevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete.vue





	/* normalize component */

	var autocomplete_component = normalizeComponent(
	  src_autocompletevue_type_script_lang_js_,
	  autocompletevue_type_template_id_152f2ee6_render,
	  autocompletevue_type_template_id_152f2ee6_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	autocomplete_component.options.__file = "packages/autocomplete/src/autocomplete.vue";
	/* harmony default export */ var autocomplete = (autocomplete_component.exports);
	// CONCATENATED MODULE: ./packages/autocomplete/index.js


	/* istanbul ignore next */
	autocomplete.install = function (Vue) {
	  Vue.component(autocomplete.name, autocomplete);
	};

	/* harmony default export */ var packages_autocomplete = (autocomplete);
	// EXTERNAL MODULE: external "element-ui/lib/button"
	var button_ = __webpack_require__(13);
	var button_default = /*#__PURE__*/__webpack_require__.n(button_);

	// EXTERNAL MODULE: external "element-ui/lib/button-group"
	var button_group_ = __webpack_require__(29);
	var button_group_default = /*#__PURE__*/__webpack_require__.n(button_group_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown.vue?vue&type=script&lang=js&








	/* harmony default export */ var dropdownvue_type_script_lang_js_ = ({
	  name: 'ElDropdown',

	  componentName: 'ElDropdown',

	  mixins: [emitter_default.a, migrating_default.a],

	  directives: { Clickoutside: clickoutside_default.a },

	  components: {
	    ElButton: button_default.a,
	    ElButtonGroup: button_group_default.a
	  },

	  provide: function provide() {
	    return {
	      dropdown: this
	    };
	  },


	  props: {
	    trigger: {
	      type: String,
	      default: 'hover'
	    },
	    type: String,
	    size: {
	      type: String,
	      default: ''
	    },
	    splitButton: Boolean,
	    hideOnClick: {
	      type: Boolean,
	      default: true
	    },
	    placement: {
	      type: String,
	      default: 'bottom-end'
	    },
	    visibleArrow: {
	      default: true
	    },
	    showTimeout: {
	      type: Number,
	      default: 250
	    },
	    hideTimeout: {
	      type: Number,
	      default: 150
	    },
	    tabindex: {
	      type: Number,
	      default: 0
	    },
	    disabled: {
	      type: Boolean,
	      default: false
	    }
	  },

	  data: function data() {
	    return {
	      timeout: null,
	      visible: false,
	      triggerElm: null,
	      menuItems: null,
	      menuItemsArray: null,
	      dropdownElm: null,
	      focusing: false,
	      listId: 'dropdown-menu-' + Object(util_["generateId"])()
	    };
	  },


	  computed: {
	    dropdownSize: function dropdownSize() {
	      return this.size || (this.$ELEMENT || {}).size;
	    }
	  },

	  mounted: function mounted() {
	    this.$on('menu-item-click', this.handleMenuItemClick);
	  },


	  watch: {
	    visible: function visible(val) {
	      this.broadcast('ElDropdownMenu', 'visible', val);
	      this.$emit('visible-change', val);
	    },
	    focusing: function focusing(val) {
	      var selfDefine = this.$el.querySelector('.el-dropdown-selfdefine');
	      if (selfDefine) {
	        // 自定义
	        if (val) {
	          selfDefine.className += ' focusing';
	        } else {
	          selfDefine.className = selfDefine.className.replace('focusing', '');
	        }
	      }
	    }
	  },

	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'menu-align': 'menu-align is renamed to placement.'
	        }
	      };
	    },
	    show: function show() {
	      var _this = this;

	      if (this.disabled) return;
	      clearTimeout(this.timeout);
	      this.timeout = setTimeout(function () {
	        _this.visible = true;
	      }, this.trigger === 'click' ? 0 : this.showTimeout);
	    },
	    hide: function hide() {
	      var _this2 = this;

	      if (this.disabled) return;
	      this.removeTabindex();
	      if (this.tabindex >= 0) {
	        this.resetTabindex(this.triggerElm);
	      }
	      clearTimeout(this.timeout);
	      this.timeout = setTimeout(function () {
	        _this2.visible = false;
	      }, this.trigger === 'click' ? 0 : this.hideTimeout);
	    },
	    handleClick: function handleClick() {
	      if (this.disabled) return;
	      if (this.visible) {
	        this.hide();
	      } else {
	        this.show();
	      }
	    },
	    handleTriggerKeyDown: function handleTriggerKeyDown(ev) {
	      var keyCode = ev.keyCode;
	      if ([38, 40].indexOf(keyCode) > -1) {
	        // up/down
	        this.removeTabindex();
	        this.resetTabindex(this.menuItems[0]);
	        this.menuItems[0].focus();
	        ev.preventDefault();
	        ev.stopPropagation();
	      } else if (keyCode === 13) {
	        // space enter选中
	        this.handleClick();
	      } else if ([9, 27].indexOf(keyCode) > -1) {
	        // tab || esc
	        this.hide();
	      }
	    },
	    handleItemKeyDown: function handleItemKeyDown(ev) {
	      var keyCode = ev.keyCode;
	      var target = ev.target;
	      var currentIndex = this.menuItemsArray.indexOf(target);
	      var max = this.menuItemsArray.length - 1;
	      var nextIndex = void 0;
	      if ([38, 40].indexOf(keyCode) > -1) {
	        // up/down
	        if (keyCode === 38) {
	          // up
	          nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0;
	        } else {
	          // down
	          nextIndex = currentIndex < max ? currentIndex + 1 : max;
	        }
	        this.removeTabindex();
	        this.resetTabindex(this.menuItems[nextIndex]);
	        this.menuItems[nextIndex].focus();
	        ev.preventDefault();
	        ev.stopPropagation();
	      } else if (keyCode === 13) {
	        // enter选中
	        this.triggerElmFocus();
	        target.click();
	        if (this.hideOnClick) {
	          // click关闭
	          this.visible = false;
	        }
	      } else if ([9, 27].indexOf(keyCode) > -1) {
	        // tab // esc
	        this.hide();
	        this.triggerElmFocus();
	      }
	    },
	    resetTabindex: function resetTabindex(ele) {
	      // 下次tab时组件聚焦元素
	      this.removeTabindex();
	      ele.setAttribute('tabindex', '0'); // 下次期望的聚焦元素
	    },
	    removeTabindex: function removeTabindex() {
	      this.triggerElm.setAttribute('tabindex', '-1');
	      this.menuItemsArray.forEach(function (item) {
	        item.setAttribute('tabindex', '-1');
	      });
	    },
	    initAria: function initAria() {
	      this.dropdownElm.setAttribute('id', this.listId);
	      this.triggerElm.setAttribute('aria-haspopup', 'list');
	      this.triggerElm.setAttribute('aria-controls', this.listId);

	      if (!this.splitButton) {
	        // 自定义
	        this.triggerElm.setAttribute('role', 'button');
	        this.triggerElm.setAttribute('tabindex', this.tabindex);
	        this.triggerElm.setAttribute('class', (this.triggerElm.getAttribute('class') || '') + ' el-dropdown-selfdefine'); // 控制
	      }
	    },
	    initEvent: function initEvent() {
	      var _this3 = this;

	      var trigger = this.trigger,
	          show = this.show,
	          hide = this.hide,
	          handleClick = this.handleClick,
	          splitButton = this.splitButton,
	          handleTriggerKeyDown = this.handleTriggerKeyDown,
	          handleItemKeyDown = this.handleItemKeyDown;

	      this.triggerElm = splitButton ? this.$refs.trigger.$el : this.$slots.default[0].elm;

	      var dropdownElm = this.dropdownElm;

	      this.triggerElm.addEventListener('keydown', handleTriggerKeyDown); // triggerElm keydown
	      dropdownElm.addEventListener('keydown', handleItemKeyDown, true); // item keydown
	      // 控制自定义元素的样式
	      if (!splitButton) {
	        this.triggerElm.addEventListener('focus', function () {
	          _this3.focusing = true;
	        });
	        this.triggerElm.addEventListener('blur', function () {
	          _this3.focusing = false;
	        });
	        this.triggerElm.addEventListener('click', function () {
	          _this3.focusing = false;
	        });
	      }
	      if (trigger === 'hover') {
	        this.triggerElm.addEventListener('mouseenter', show);
	        this.triggerElm.addEventListener('mouseleave', hide);
	        dropdownElm.addEventListener('mouseenter', show);
	        dropdownElm.addEventListener('mouseleave', hide);
	      } else if (trigger === 'click') {
	        this.triggerElm.addEventListener('click', handleClick);
	      }
	    },
	    handleMenuItemClick: function handleMenuItemClick(command, instance) {
	      if (this.hideOnClick) {
	        this.visible = false;
	      }
	      this.$emit('command', command, instance);
	    },
	    triggerElmFocus: function triggerElmFocus() {
	      this.triggerElm.focus && this.triggerElm.focus();
	    },
	    initDomOperation: function initDomOperation() {
	      this.dropdownElm = this.popperElm;
	      this.menuItems = this.dropdownElm.querySelectorAll("[tabindex='-1']");
	      this.menuItemsArray = [].slice.call(this.menuItems);

	      this.initEvent();
	      this.initAria();
	    }
	  },

	  render: function render(h) {
	    var _this4 = this;

	    var hide = this.hide,
	        splitButton = this.splitButton,
	        type = this.type,
	        dropdownSize = this.dropdownSize,
	        disabled = this.disabled;


	    var handleMainButtonClick = function handleMainButtonClick(event) {
	      _this4.$emit('click', event);
	      hide();
	    };

	    var triggerElm = null;
	    if (splitButton) {
	      triggerElm = h('el-button-group', [h(
	        'el-button',
	        {
	          attrs: { type: type, size: dropdownSize, disabled: disabled },
	          nativeOn: {
	            'click': handleMainButtonClick
	          }
	        },
	        [this.$slots.default]
	      ), h(
	        'el-button',
	        { ref: 'trigger', attrs: { type: type, size: dropdownSize, disabled: disabled },
	          'class': 'el-dropdown__caret-button' },
	        [h('i', { 'class': 'el-dropdown__icon el-icon-arrow-down' })]
	      )]);
	    } else {
	      triggerElm = this.$slots.default;
	      var vnodeData = triggerElm[0].data || {};
	      var _vnodeData$attrs = vnodeData.attrs,
	          attrs = _vnodeData$attrs === undefined ? {} : _vnodeData$attrs;

	      if (disabled && !attrs.disabled) {
	        attrs.disabled = true;
	        vnodeData.attrs = attrs;
	      }
	    }
	    var menuElm = disabled ? null : this.$slots.dropdown;

	    return h(
	      'div',
	      { 'class': 'el-dropdown', directives: [{
	          name: 'clickoutside',
	          value: hide
	        }],
	        attrs: { 'aria-disabled': disabled }
	      },
	      [triggerElm, menuElm]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_dropdownvue_type_script_lang_js_ = (dropdownvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown.vue
	var dropdown_render, dropdown_staticRenderFns;




	/* normalize component */

	var dropdown_component = normalizeComponent(
	  src_dropdownvue_type_script_lang_js_,
	  dropdown_render,
	  dropdown_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	dropdown_component.options.__file = "packages/dropdown/src/dropdown.vue";
	/* harmony default export */ var dropdown = (dropdown_component.exports);
	// CONCATENATED MODULE: ./packages/dropdown/index.js


	/* istanbul ignore next */
	dropdown.install = function (Vue) {
	  Vue.component(dropdown.name, dropdown);
	};

	/* harmony default export */ var packages_dropdown = (dropdown);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-menu.vue?vue&type=template&id=0da6b714&
	var dropdown_menuvue_type_template_id_0da6b714_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    { attrs: { name: "el-zoom-in-top" }, on: { "after-leave": _vm.doDestroy } },
	    [
	      _c(
	        "ul",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.showPopper,
	              expression: "showPopper"
	            }
	          ],
	          staticClass: "el-dropdown-menu el-popper",
	          class: [_vm.size && "el-dropdown-menu--" + _vm.size]
	        },
	        [_vm._t("default")],
	        2
	      )
	    ]
	  )
	};
	var dropdown_menuvue_type_template_id_0da6b714_staticRenderFns = [];
	dropdown_menuvue_type_template_id_0da6b714_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-menu.vue?vue&type=template&id=0da6b714&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-menu.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var dropdown_menuvue_type_script_lang_js_ = ({
	  name: 'ElDropdownMenu',

	  componentName: 'ElDropdownMenu',

	  mixins: [vue_popper_default.a],

	  props: {
	    visibleArrow: {
	      type: Boolean,
	      default: true
	    },
	    arrowOffset: {
	      type: Number,
	      default: 0
	    }
	  },

	  data: function data() {
	    return {
	      size: this.dropdown.dropdownSize
	    };
	  },


	  inject: ['dropdown'],

	  created: function created() {
	    var _this = this;

	    this.$on('updatePopper', function () {
	      if (_this.showPopper) _this.updatePopper();
	    });
	    this.$on('visible', function (val) {
	      _this.showPopper = val;
	    });
	  },
	  mounted: function mounted() {
	    this.dropdown.popperElm = this.popperElm = this.$el;
	    this.referenceElm = this.dropdown.$el;
	    // compatible with 2.6 new v-slot syntax
	    // issue link https://github.com/ElemeFE/element/issues/14345
	    this.dropdown.initDomOperation();
	  },


	  watch: {
	    'dropdown.placement': {
	      immediate: true,
	      handler: function handler(val) {
	        this.currentPlacement = val;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-menu.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_dropdown_menuvue_type_script_lang_js_ = (dropdown_menuvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-menu.vue





	/* normalize component */

	var dropdown_menu_component = normalizeComponent(
	  src_dropdown_menuvue_type_script_lang_js_,
	  dropdown_menuvue_type_template_id_0da6b714_render,
	  dropdown_menuvue_type_template_id_0da6b714_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	dropdown_menu_component.options.__file = "packages/dropdown/src/dropdown-menu.vue";
	/* harmony default export */ var dropdown_menu = (dropdown_menu_component.exports);
	// CONCATENATED MODULE: ./packages/dropdown-menu/index.js


	/* istanbul ignore next */
	dropdown_menu.install = function (Vue) {
	  Vue.component(dropdown_menu.name, dropdown_menu);
	};

	/* harmony default export */ var packages_dropdown_menu = (dropdown_menu);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-item.vue?vue&type=template&id=6359102a&
	var dropdown_itemvue_type_template_id_6359102a_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "li",
	    {
	      staticClass: "el-dropdown-menu__item",
	      class: {
	        "is-disabled": _vm.disabled,
	        "el-dropdown-menu__item--divided": _vm.divided
	      },
	      attrs: {
	        "aria-disabled": _vm.disabled,
	        tabindex: _vm.disabled ? null : -1
	      },
	      on: { click: _vm.handleClick }
	    },
	    [_vm.icon ? _c("i", { class: _vm.icon }) : _vm._e(), _vm._t("default")],
	    2
	  )
	};
	var dropdown_itemvue_type_template_id_6359102a_staticRenderFns = [];
	dropdown_itemvue_type_template_id_6359102a_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-item.vue?vue&type=template&id=6359102a&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-item.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var dropdown_itemvue_type_script_lang_js_ = ({
	  name: 'ElDropdownItem',

	  mixins: [emitter_default.a],

	  props: {
	    command: {},
	    disabled: Boolean,
	    divided: Boolean,
	    icon: String
	  },

	  methods: {
	    handleClick: function handleClick(e) {
	      this.dispatch('ElDropdown', 'menu-item-click', [this.command, this]);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_dropdown_itemvue_type_script_lang_js_ = (dropdown_itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-item.vue





	/* normalize component */

	var dropdown_item_component = normalizeComponent(
	  src_dropdown_itemvue_type_script_lang_js_,
	  dropdown_itemvue_type_template_id_6359102a_render,
	  dropdown_itemvue_type_template_id_6359102a_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	dropdown_item_component.options.__file = "packages/dropdown/src/dropdown-item.vue";
	/* harmony default export */ var dropdown_item = (dropdown_item_component.exports);
	// CONCATENATED MODULE: ./packages/dropdown-item/index.js


	/* istanbul ignore next */
	dropdown_item.install = function (Vue) {
	  Vue.component(dropdown_item.name, dropdown_item);
	};

	/* harmony default export */ var packages_dropdown_item = (dropdown_item);
	// CONCATENATED MODULE: ./src/utils/aria-utils.js
	var aria = aria || {};

	aria.Utils = aria.Utils || {};

	/**
	 * @desc Set focus on descendant nodes until the first focusable element is
	 *       found.
	 * @param element
	 *          DOM node for which to find the first focusable descendant.
	 * @returns
	 *  true if a focusable element is found and focus is set.
	 */
	aria.Utils.focusFirstDescendant = function (element) {
	  for (var i = 0; i < element.childNodes.length; i++) {
	    var child = element.childNodes[i];
	    if (aria.Utils.attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {
	      return true;
	    }
	  }
	  return false;
	};

	/**
	 * @desc Find the last descendant node that is focusable.
	 * @param element
	 *          DOM node for which to find the last focusable descendant.
	 * @returns
	 *  true if a focusable element is found and focus is set.
	 */

	aria.Utils.focusLastDescendant = function (element) {
	  for (var i = element.childNodes.length - 1; i >= 0; i--) {
	    var child = element.childNodes[i];
	    if (aria.Utils.attemptFocus(child) || aria.Utils.focusLastDescendant(child)) {
	      return true;
	    }
	  }
	  return false;
	};

	/**
	 * @desc Set Attempt to set focus on the current node.
	 * @param element
	 *          The node to attempt to focus on.
	 * @returns
	 *  true if element is focused.
	 */
	aria.Utils.attemptFocus = function (element) {
	  if (!aria.Utils.isFocusable(element)) {
	    return false;
	  }
	  aria.Utils.IgnoreUtilFocusChanges = true;
	  try {
	    element.focus();
	  } catch (e) {}
	  aria.Utils.IgnoreUtilFocusChanges = false;
	  return document.activeElement === element;
	};

	aria.Utils.isFocusable = function (element) {
	  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute('tabIndex') !== null) {
	    return true;
	  }

	  if (element.disabled) {
	    return false;
	  }

	  switch (element.nodeName) {
	    case 'A':
	      return !!element.href && element.rel !== 'ignore';
	    case 'INPUT':
	      return element.type !== 'hidden' && element.type !== 'file';
	    case 'BUTTON':
	    case 'SELECT':
	    case 'TEXTAREA':
	      return true;
	    default:
	      return false;
	  }
	};

	/**
	 * 触发一个事件
	 * mouseenter, mouseleave, mouseover, keyup, change, click 等
	 * @param  {Element} elm
	 * @param  {String} name
	 * @param  {*} opts
	 */
	aria.Utils.triggerEvent = function (elm, name) {
	  var eventName = void 0;

	  if (/^mouse|click/.test(name)) {
	    eventName = 'MouseEvents';
	  } else if (/^key/.test(name)) {
	    eventName = 'KeyboardEvent';
	  } else {
	    eventName = 'HTMLEvents';
	  }
	  var evt = document.createEvent(eventName);

	  for (var _len = arguments.length, opts = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    opts[_key - 2] = arguments[_key];
	  }

	  evt.initEvent.apply(evt, [name].concat(opts));
	  elm.dispatchEvent ? elm.dispatchEvent(evt) : elm.fireEvent('on' + name, evt);

	  return elm;
	};

	aria.Utils.keys = {
	  tab: 9,
	  enter: 13,
	  space: 32,
	  left: 37,
	  up: 38,
	  right: 39,
	  down: 40,
	  esc: 27
	};

	/* harmony default export */ var aria_utils = (aria.Utils);
	// CONCATENATED MODULE: ./src/utils/menu/aria-submenu.js


	var SubMenu = function SubMenu(parent, domNode) {
	  this.domNode = domNode;
	  this.parent = parent;
	  this.subMenuItems = [];
	  this.subIndex = 0;
	  this.init();
	};

	SubMenu.prototype.init = function () {
	  this.subMenuItems = this.domNode.querySelectorAll('li');
	  this.addListeners();
	};

	SubMenu.prototype.gotoSubIndex = function (idx) {
	  if (idx === this.subMenuItems.length) {
	    idx = 0;
	  } else if (idx < 0) {
	    idx = this.subMenuItems.length - 1;
	  }
	  this.subMenuItems[idx].focus();
	  this.subIndex = idx;
	};

	SubMenu.prototype.addListeners = function () {
	  var _this = this;

	  var keys = aria_utils.keys;
	  var parentNode = this.parent.domNode;
	  Array.prototype.forEach.call(this.subMenuItems, function (el) {
	    el.addEventListener('keydown', function (event) {
	      var prevDef = false;
	      switch (event.keyCode) {
	        case keys.down:
	          _this.gotoSubIndex(_this.subIndex + 1);
	          prevDef = true;
	          break;
	        case keys.up:
	          _this.gotoSubIndex(_this.subIndex - 1);
	          prevDef = true;
	          break;
	        case keys.tab:
	          aria_utils.triggerEvent(parentNode, 'mouseleave');
	          break;
	        case keys.enter:
	        case keys.space:
	          prevDef = true;
	          event.currentTarget.click();
	          break;
	      }
	      if (prevDef) {
	        event.preventDefault();
	        event.stopPropagation();
	      }
	      return false;
	    });
	  });
	};

	/* harmony default export */ var aria_submenu = (SubMenu);
	// CONCATENATED MODULE: ./src/utils/menu/aria-menuitem.js



	var MenuItem = function MenuItem(domNode) {
	  this.domNode = domNode;
	  this.submenu = null;
	  this.init();
	};

	MenuItem.prototype.init = function () {
	  this.domNode.setAttribute('tabindex', '0');
	  var menuChild = this.domNode.querySelector('.el-menu');
	  if (menuChild) {
	    this.submenu = new aria_submenu(this, menuChild);
	  }
	  this.addListeners();
	};

	MenuItem.prototype.addListeners = function () {
	  var _this = this;

	  var keys = aria_utils.keys;
	  this.domNode.addEventListener('keydown', function (event) {
	    var prevDef = false;
	    switch (event.keyCode) {
	      case keys.down:
	        aria_utils.triggerEvent(event.currentTarget, 'mouseenter');
	        _this.submenu && _this.submenu.gotoSubIndex(0);
	        prevDef = true;
	        break;
	      case keys.up:
	        aria_utils.triggerEvent(event.currentTarget, 'mouseenter');
	        _this.submenu && _this.submenu.gotoSubIndex(_this.submenu.subMenuItems.length - 1);
	        prevDef = true;
	        break;
	      case keys.tab:
	        aria_utils.triggerEvent(event.currentTarget, 'mouseleave');
	        break;
	      case keys.enter:
	      case keys.space:
	        prevDef = true;
	        event.currentTarget.click();
	        break;
	    }
	    if (prevDef) {
	      event.preventDefault();
	    }
	  });
	};

	/* harmony default export */ var aria_menuitem = (MenuItem);
	// CONCATENATED MODULE: ./src/utils/menu/aria-menubar.js


	var Menu = function Menu(domNode) {
	  this.domNode = domNode;
	  this.init();
	};

	Menu.prototype.init = function () {
	  var menuChildren = this.domNode.childNodes;
	  [].filter.call(menuChildren, function (child) {
	    return child.nodeType === 1;
	  }).forEach(function (child) {
	    new aria_menuitem(child); // eslint-disable-line
	  });
	};
	/* harmony default export */ var aria_menubar = (Menu);
	// EXTERNAL MODULE: external "element-ui/lib/utils/dom"
	var dom_ = __webpack_require__(1);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu.vue?vue&type=script&lang=js&






	/* harmony default export */ var menuvue_type_script_lang_js_ = ({
	  name: 'ElMenu',

	  render: function render(h) {
	    var component = h(
	      'ul',
	      {
	        attrs: {
	          role: 'menubar'
	        },
	        key: +this.collapse,
	        style: { backgroundColor: this.backgroundColor || '' },
	        'class': {
	          'el-menu--horizontal': this.mode === 'horizontal',
	          'el-menu--collapse': this.collapse,
	          "el-menu": true
	        }
	      },
	      [this.$slots.default]
	    );

	    if (this.collapseTransition) {
	      return h('el-menu-collapse-transition', [component]);
	    } else {
	      return component;
	    }
	  },


	  componentName: 'ElMenu',

	  mixins: [emitter_default.a, migrating_default.a],

	  provide: function provide() {
	    return {
	      rootMenu: this
	    };
	  },


	  components: {
	    'el-menu-collapse-transition': {
	      functional: true,
	      render: function render(createElement, context) {
	        var data = {
	          props: {
	            mode: 'out-in'
	          },
	          on: {
	            beforeEnter: function beforeEnter(el) {
	              el.style.opacity = 0.2;
	            },
	            enter: function enter(el) {
	              Object(dom_["addClass"])(el, 'el-opacity-transition');
	              el.style.opacity = 1;
	            },
	            afterEnter: function afterEnter(el) {
	              Object(dom_["removeClass"])(el, 'el-opacity-transition');
	              el.style.opacity = '';
	            },
	            beforeLeave: function beforeLeave(el) {
	              if (!el.dataset) el.dataset = {};

	              if (Object(dom_["hasClass"])(el, 'el-menu--collapse')) {
	                Object(dom_["removeClass"])(el, 'el-menu--collapse');
	                el.dataset.oldOverflow = el.style.overflow;
	                el.dataset.scrollWidth = el.clientWidth;
	                Object(dom_["addClass"])(el, 'el-menu--collapse');
	              } else {
	                Object(dom_["addClass"])(el, 'el-menu--collapse');
	                el.dataset.oldOverflow = el.style.overflow;
	                el.dataset.scrollWidth = el.clientWidth;
	                Object(dom_["removeClass"])(el, 'el-menu--collapse');
	              }

	              el.style.width = el.scrollWidth + 'px';
	              el.style.overflow = 'hidden';
	            },
	            leave: function leave(el) {
	              Object(dom_["addClass"])(el, 'horizontal-collapse-transition');
	              el.style.width = el.dataset.scrollWidth + 'px';
	            }
	          }
	        };
	        return createElement('transition', data, context.children);
	      }
	    }
	  },

	  props: {
	    mode: {
	      type: String,
	      default: 'vertical'
	    },
	    defaultActive: {
	      type: String,
	      default: ''
	    },
	    defaultOpeneds: Array,
	    uniqueOpened: Boolean,
	    router: Boolean,
	    menuTrigger: {
	      type: String,
	      default: 'hover'
	    },
	    collapse: Boolean,
	    backgroundColor: String,
	    textColor: String,
	    activeTextColor: String,
	    collapseTransition: {
	      type: Boolean,
	      default: true
	    }
	  },
	  data: function data() {
	    return {
	      activeIndex: this.defaultActive,
	      openedMenus: this.defaultOpeneds && !this.collapse ? this.defaultOpeneds.slice(0) : [],
	      items: {},
	      submenus: {}
	    };
	  },

	  computed: {
	    hoverBackground: function hoverBackground() {
	      return this.backgroundColor ? this.mixColor(this.backgroundColor, 0.2) : '';
	    },
	    isMenuPopup: function isMenuPopup() {
	      return this.mode === 'horizontal' || this.mode === 'vertical' && this.collapse;
	    }
	  },
	  watch: {
	    defaultActive: function defaultActive(value) {
	      if (!this.items[value]) {
	        this.activeIndex = null;
	      }
	      this.updateActiveIndex(value);
	    },
	    defaultOpeneds: function defaultOpeneds(value) {
	      if (!this.collapse) {
	        this.openedMenus = value;
	      }
	    },
	    collapse: function collapse(value) {
	      if (value) this.openedMenus = [];
	      this.broadcast('ElSubmenu', 'toggle-collapse', value);
	    }
	  },
	  methods: {
	    updateActiveIndex: function updateActiveIndex(val) {
	      var item = this.items[val] || this.items[this.activeIndex] || this.items[this.defaultActive];
	      if (item) {
	        this.activeIndex = item.index;
	        this.initOpenedMenu();
	      } else {
	        this.activeIndex = null;
	      }
	    },
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'theme': 'theme is removed.'
	        }
	      };
	    },
	    getColorChannels: function getColorChannels(color) {
	      color = color.replace('#', '');
	      if (/^[0-9a-fA-F]{3}$/.test(color)) {
	        color = color.split('');
	        for (var i = 2; i >= 0; i--) {
	          color.splice(i, 0, color[i]);
	        }
	        color = color.join('');
	      }
	      if (/^[0-9a-fA-F]{6}$/.test(color)) {
	        return {
	          red: parseInt(color.slice(0, 2), 16),
	          green: parseInt(color.slice(2, 4), 16),
	          blue: parseInt(color.slice(4, 6), 16)
	        };
	      } else {
	        return {
	          red: 255,
	          green: 255,
	          blue: 255
	        };
	      }
	    },
	    mixColor: function mixColor(color, percent) {
	      var _getColorChannels = this.getColorChannels(color),
	          red = _getColorChannels.red,
	          green = _getColorChannels.green,
	          blue = _getColorChannels.blue;

	      if (percent > 0) {
	        // shade given color
	        red *= 1 - percent;
	        green *= 1 - percent;
	        blue *= 1 - percent;
	      } else {
	        // tint given color
	        red += (255 - red) * percent;
	        green += (255 - green) * percent;
	        blue += (255 - blue) * percent;
	      }
	      return 'rgb(' + Math.round(red) + ', ' + Math.round(green) + ', ' + Math.round(blue) + ')';
	    },
	    addItem: function addItem(item) {
	      this.$set(this.items, item.index, item);
	    },
	    removeItem: function removeItem(item) {
	      delete this.items[item.index];
	    },
	    addSubmenu: function addSubmenu(item) {
	      this.$set(this.submenus, item.index, item);
	    },
	    removeSubmenu: function removeSubmenu(item) {
	      delete this.submenus[item.index];
	    },
	    openMenu: function openMenu(index, indexPath) {
	      var openedMenus = this.openedMenus;
	      if (openedMenus.indexOf(index) !== -1) return;
	      // 将不在该菜单路径下的其余菜单收起
	      // collapse all menu that are not under current menu item
	      if (this.uniqueOpened) {
	        this.openedMenus = openedMenus.filter(function (index) {
	          return indexPath.indexOf(index) !== -1;
	        });
	      }
	      this.openedMenus.push(index);
	    },
	    closeMenu: function closeMenu(index) {
	      var i = this.openedMenus.indexOf(index);
	      if (i !== -1) {
	        this.openedMenus.splice(i, 1);
	      }
	    },
	    handleSubmenuClick: function handleSubmenuClick(submenu) {
	      var index = submenu.index,
	          indexPath = submenu.indexPath;

	      var isOpened = this.openedMenus.indexOf(index) !== -1;

	      if (isOpened) {
	        this.closeMenu(index);
	        this.$emit('close', index, indexPath);
	      } else {
	        this.openMenu(index, indexPath);
	        this.$emit('open', index, indexPath);
	      }
	    },
	    handleItemClick: function handleItemClick(item) {
	      var _this = this;

	      var index = item.index,
	          indexPath = item.indexPath;

	      var oldActiveIndex = this.activeIndex;
	      var hasIndex = item.index !== null;

	      if (hasIndex) {
	        this.activeIndex = item.index;
	      }

	      this.$emit('select', index, indexPath, item);

	      if (this.mode === 'horizontal' || this.collapse) {
	        this.openedMenus = [];
	      }

	      if (this.router && hasIndex) {
	        this.routeToItem(item, function (error) {
	          _this.activeIndex = oldActiveIndex;
	          if (error) {
	            // vue-router 3.1.0+ push/replace cause NavigationDuplicated error 
	            // https://github.com/ElemeFE/element/issues/17044
	            if (error.name === 'NavigationDuplicated') return;
	            console.error(error);
	          }
	        });
	      }
	    },

	    // 初始化展开菜单
	    // initialize opened menu
	    initOpenedMenu: function initOpenedMenu() {
	      var _this2 = this;

	      var index = this.activeIndex;
	      var activeItem = this.items[index];
	      if (!activeItem || this.mode === 'horizontal' || this.collapse) return;

	      var indexPath = activeItem.indexPath;

	      // 展开该菜单项的路径上所有子菜单
	      // expand all submenus of the menu item
	      indexPath.forEach(function (index) {
	        var submenu = _this2.submenus[index];
	        submenu && _this2.openMenu(index, submenu.indexPath);
	      });
	    },
	    routeToItem: function routeToItem(item, onError) {
	      var route = item.route || item.index;
	      try {
	        this.$router.push(route, function () {}, onError);
	      } catch (e) {
	        console.error(e);
	      }
	    },
	    open: function open(index) {
	      var _this3 = this;

	      var indexPath = this.submenus[index.toString()].indexPath;

	      indexPath.forEach(function (i) {
	        return _this3.openMenu(i, indexPath);
	      });
	    },
	    close: function close(index) {
	      this.closeMenu(index);
	    }
	  },
	  mounted: function mounted() {
	    this.initOpenedMenu();
	    this.$on('item-click', this.handleItemClick);
	    this.$on('submenu-click', this.handleSubmenuClick);
	    if (this.mode === 'horizontal') {
	      new aria_menubar(this.$el); // eslint-disable-line
	    }
	    this.$watch('items', this.updateActiveIndex);
	  }
	});
	// CONCATENATED MODULE: ./packages/menu/src/menu.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_menuvue_type_script_lang_js_ = (menuvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/menu/src/menu.vue
	var menu_render, menu_staticRenderFns;




	/* normalize component */

	var menu_component = normalizeComponent(
	  src_menuvue_type_script_lang_js_,
	  menu_render,
	  menu_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	menu_component.options.__file = "packages/menu/src/menu.vue";
	/* harmony default export */ var src_menu = (menu_component.exports);
	// CONCATENATED MODULE: ./packages/menu/index.js


	/* istanbul ignore next */
	src_menu.install = function (Vue) {
	  Vue.component(src_menu.name, src_menu);
	};

	/* harmony default export */ var packages_menu = (src_menu);
	// EXTERNAL MODULE: external "element-ui/lib/transitions/collapse-transition"
	var collapse_transition_ = __webpack_require__(21);
	var collapse_transition_default = /*#__PURE__*/__webpack_require__.n(collapse_transition_);

	// CONCATENATED MODULE: ./packages/menu/src/menu-mixin.js
	/* harmony default export */ var menu_mixin = ({
	  inject: ['rootMenu'],
	  computed: {
	    indexPath: function indexPath() {
	      var path = [this.index];
	      var parent = this.$parent;
	      while (parent.$options.componentName !== 'ElMenu') {
	        if (parent.index) {
	          path.unshift(parent.index);
	        }
	        parent = parent.$parent;
	      }
	      return path;
	    },
	    parentMenu: function parentMenu() {
	      var parent = this.$parent;
	      while (parent && ['ElMenu', 'ElSubmenu'].indexOf(parent.$options.componentName) === -1) {
	        parent = parent.$parent;
	      }
	      return parent;
	    },
	    paddingStyle: function paddingStyle() {
	      if (this.rootMenu.mode !== 'vertical') return {};

	      var padding = 20;
	      var parent = this.$parent;

	      if (this.rootMenu.collapse) {
	        padding = 20;
	      } else {
	        while (parent && parent.$options.componentName !== 'ElMenu') {
	          if (parent.$options.componentName === 'ElSubmenu') {
	            padding += 20;
	          }
	          parent = parent.$parent;
	        }
	      }
	      return { paddingLeft: padding + 'px' };
	    }
	  }
	});
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/submenu.vue?vue&type=script&lang=js&






	var poperMixins = {
	  props: {
	    transformOrigin: {
	      type: [Boolean, String],
	      default: false
	    },
	    offset: vue_popper_default.a.props.offset,
	    boundariesPadding: vue_popper_default.a.props.boundariesPadding,
	    popperOptions: vue_popper_default.a.props.popperOptions
	  },
	  data: vue_popper_default.a.data,
	  methods: vue_popper_default.a.methods,
	  beforeDestroy: vue_popper_default.a.beforeDestroy,
	  deactivated: vue_popper_default.a.deactivated
	};

	/* harmony default export */ var submenuvue_type_script_lang_js_ = ({
	  name: 'ElSubmenu',

	  componentName: 'ElSubmenu',

	  mixins: [menu_mixin, emitter_default.a, poperMixins],

	  components: { ElCollapseTransition: collapse_transition_default.a },

	  props: {
	    index: {
	      type: String,
	      required: true
	    },
	    showTimeout: {
	      type: Number,
	      default: 300
	    },
	    hideTimeout: {
	      type: Number,
	      default: 300
	    },
	    popperClass: String,
	    disabled: Boolean,
	    popperAppendToBody: {
	      type: Boolean,
	      default: undefined
	    }
	  },

	  data: function data() {
	    return {
	      popperJS: null,
	      timeout: null,
	      items: {},
	      submenus: {},
	      mouseInChild: false
	    };
	  },

	  watch: {
	    opened: function opened(val) {
	      var _this = this;

	      if (this.isMenuPopup) {
	        this.$nextTick(function (_) {
	          _this.updatePopper();
	        });
	      }
	    }
	  },
	  computed: {
	    // popper option
	    appendToBody: function appendToBody() {
	      return this.popperAppendToBody === undefined ? this.isFirstLevel : this.popperAppendToBody;
	    },
	    menuTransitionName: function menuTransitionName() {
	      return this.rootMenu.collapse ? 'el-zoom-in-left' : 'el-zoom-in-top';
	    },
	    opened: function opened() {
	      return this.rootMenu.openedMenus.indexOf(this.index) > -1;
	    },
	    active: function active() {
	      var isActive = false;
	      var submenus = this.submenus;
	      var items = this.items;

	      Object.keys(items).forEach(function (index) {
	        if (items[index].active) {
	          isActive = true;
	        }
	      });

	      Object.keys(submenus).forEach(function (index) {
	        if (submenus[index].active) {
	          isActive = true;
	        }
	      });

	      return isActive;
	    },
	    hoverBackground: function hoverBackground() {
	      return this.rootMenu.hoverBackground;
	    },
	    backgroundColor: function backgroundColor() {
	      return this.rootMenu.backgroundColor || '';
	    },
	    activeTextColor: function activeTextColor() {
	      return this.rootMenu.activeTextColor || '';
	    },
	    textColor: function textColor() {
	      return this.rootMenu.textColor || '';
	    },
	    mode: function mode() {
	      return this.rootMenu.mode;
	    },
	    isMenuPopup: function isMenuPopup() {
	      return this.rootMenu.isMenuPopup;
	    },
	    titleStyle: function titleStyle() {
	      if (this.mode !== 'horizontal') {
	        return {
	          color: this.textColor
	        };
	      }
	      return {
	        borderBottomColor: this.active ? this.rootMenu.activeTextColor ? this.activeTextColor : '' : 'transparent',
	        color: this.active ? this.activeTextColor : this.textColor
	      };
	    },
	    isFirstLevel: function isFirstLevel() {
	      var isFirstLevel = true;
	      var parent = this.$parent;
	      while (parent && parent !== this.rootMenu) {
	        if (['ElSubmenu', 'ElMenuItemGroup'].indexOf(parent.$options.componentName) > -1) {
	          isFirstLevel = false;
	          break;
	        } else {
	          parent = parent.$parent;
	        }
	      }
	      return isFirstLevel;
	    }
	  },
	  methods: {
	    handleCollapseToggle: function handleCollapseToggle(value) {
	      if (value) {
	        this.initPopper();
	      } else {
	        this.doDestroy();
	      }
	    },
	    addItem: function addItem(item) {
	      this.$set(this.items, item.index, item);
	    },
	    removeItem: function removeItem(item) {
	      delete this.items[item.index];
	    },
	    addSubmenu: function addSubmenu(item) {
	      this.$set(this.submenus, item.index, item);
	    },
	    removeSubmenu: function removeSubmenu(item) {
	      delete this.submenus[item.index];
	    },
	    handleClick: function handleClick() {
	      var rootMenu = this.rootMenu,
	          disabled = this.disabled;

	      if (rootMenu.menuTrigger === 'hover' && rootMenu.mode === 'horizontal' || rootMenu.collapse && rootMenu.mode === 'vertical' || disabled) {
	        return;
	      }
	      this.dispatch('ElMenu', 'submenu-click', this);
	    },
	    handleMouseenter: function handleMouseenter(event) {
	      var _this2 = this;

	      var showTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.showTimeout;


	      if (!('ActiveXObject' in window) && event.type === 'focus' && !event.relatedTarget) {
	        return;
	      }
	      var rootMenu = this.rootMenu,
	          disabled = this.disabled;

	      if (rootMenu.menuTrigger === 'click' && rootMenu.mode === 'horizontal' || !rootMenu.collapse && rootMenu.mode === 'vertical' || disabled) {
	        return;
	      }
	      this.dispatch('ElSubmenu', 'mouse-enter-child');
	      clearTimeout(this.timeout);
	      this.timeout = setTimeout(function () {
	        _this2.rootMenu.openMenu(_this2.index, _this2.indexPath);
	      }, showTimeout);

	      if (this.appendToBody) {
	        this.$parent.$el.dispatchEvent(new MouseEvent('mouseenter'));
	      }
	    },
	    handleMouseleave: function handleMouseleave() {
	      var _this3 = this;

	      var deepDispatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	      var rootMenu = this.rootMenu;

	      if (rootMenu.menuTrigger === 'click' && rootMenu.mode === 'horizontal' || !rootMenu.collapse && rootMenu.mode === 'vertical') {
	        return;
	      }
	      this.dispatch('ElSubmenu', 'mouse-leave-child');
	      clearTimeout(this.timeout);
	      this.timeout = setTimeout(function () {
	        !_this3.mouseInChild && _this3.rootMenu.closeMenu(_this3.index);
	      }, this.hideTimeout);

	      if (this.appendToBody && deepDispatch) {
	        if (this.$parent.$options.name === 'ElSubmenu') {
	          this.$parent.handleMouseleave(true);
	        }
	      }
	    },
	    handleTitleMouseenter: function handleTitleMouseenter() {
	      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
	      var title = this.$refs['submenu-title'];
	      title && (title.style.backgroundColor = this.rootMenu.hoverBackground);
	    },
	    handleTitleMouseleave: function handleTitleMouseleave() {
	      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
	      var title = this.$refs['submenu-title'];
	      title && (title.style.backgroundColor = this.rootMenu.backgroundColor || '');
	    },
	    updatePlacement: function updatePlacement() {
	      this.currentPlacement = this.mode === 'horizontal' && this.isFirstLevel ? 'bottom-start' : 'right-start';
	    },
	    initPopper: function initPopper() {
	      this.referenceElm = this.$el;
	      this.popperElm = this.$refs.menu;
	      this.updatePlacement();
	    }
	  },
	  created: function created() {
	    var _this4 = this;

	    this.$on('toggle-collapse', this.handleCollapseToggle);
	    this.$on('mouse-enter-child', function () {
	      _this4.mouseInChild = true;
	      clearTimeout(_this4.timeout);
	    });
	    this.$on('mouse-leave-child', function () {
	      _this4.mouseInChild = false;
	      clearTimeout(_this4.timeout);
	    });
	  },
	  mounted: function mounted() {
	    this.parentMenu.addSubmenu(this);
	    this.rootMenu.addSubmenu(this);
	    this.initPopper();
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.parentMenu.removeSubmenu(this);
	    this.rootMenu.removeSubmenu(this);
	  },
	  render: function render(h) {
	    var _this5 = this;

	    var active = this.active,
	        opened = this.opened,
	        paddingStyle = this.paddingStyle,
	        titleStyle = this.titleStyle,
	        backgroundColor = this.backgroundColor,
	        rootMenu = this.rootMenu,
	        currentPlacement = this.currentPlacement,
	        menuTransitionName = this.menuTransitionName,
	        mode = this.mode,
	        disabled = this.disabled,
	        popperClass = this.popperClass,
	        $slots = this.$slots,
	        isFirstLevel = this.isFirstLevel;


	    var popupMenu = h(
	      'transition',
	      {
	        attrs: { name: menuTransitionName }
	      },
	      [h(
	        'div',
	        {
	          ref: 'menu',
	          directives: [{
	            name: 'show',
	            value: opened
	          }],

	          'class': ['el-menu--' + mode, popperClass],
	          on: {
	            'mouseenter': function mouseenter($event) {
	              return _this5.handleMouseenter($event, 100);
	            },
	            'mouseleave': function mouseleave() {
	              return _this5.handleMouseleave(true);
	            },
	            'focus': function focus($event) {
	              return _this5.handleMouseenter($event, 100);
	            }
	          }
	        },
	        [h(
	          'ul',
	          {
	            attrs: {
	              role: 'menu'
	            },
	            'class': ['el-menu el-menu--popup', 'el-menu--popup-' + currentPlacement],
	            style: { backgroundColor: rootMenu.backgroundColor || '' } },
	          [$slots.default]
	        )]
	      )]
	    );

	    var inlineMenu = h('el-collapse-transition', [h(
	      'ul',
	      {
	        attrs: {
	          role: 'menu'
	        },
	        'class': 'el-menu el-menu--inline',
	        directives: [{
	          name: 'show',
	          value: opened
	        }],

	        style: { backgroundColor: rootMenu.backgroundColor || '' } },
	      [$slots.default]
	    )]);

	    var submenuTitleIcon = rootMenu.mode === 'horizontal' && isFirstLevel || rootMenu.mode === 'vertical' && !rootMenu.collapse ? 'el-icon-arrow-down' : 'el-icon-arrow-right';

	    return h(
	      'li',
	      {
	        'class': {
	          'el-submenu': true,
	          'is-active': active,
	          'is-opened': opened,
	          'is-disabled': disabled
	        },
	        attrs: { role: 'menuitem',
	          'aria-haspopup': 'true',
	          'aria-expanded': opened
	        },
	        on: {
	          'mouseenter': this.handleMouseenter,
	          'mouseleave': function mouseleave() {
	            return _this5.handleMouseleave(false);
	          },
	          'focus': this.handleMouseenter
	        }
	      },
	      [h(
	        'div',
	        {
	          'class': 'el-submenu__title',
	          ref: 'submenu-title',
	          on: {
	            'click': this.handleClick,
	            'mouseenter': this.handleTitleMouseenter,
	            'mouseleave': this.handleTitleMouseleave
	          },

	          style: [paddingStyle, titleStyle, { backgroundColor: backgroundColor }]
	        },
	        [$slots.title, h('i', { 'class': ['el-submenu__icon-arrow', submenuTitleIcon] })]
	      ), this.isMenuPopup ? popupMenu : inlineMenu]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/menu/src/submenu.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_submenuvue_type_script_lang_js_ = (submenuvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/menu/src/submenu.vue
	var submenu_render, submenu_staticRenderFns;




	/* normalize component */

	var submenu_component = normalizeComponent(
	  src_submenuvue_type_script_lang_js_,
	  submenu_render,
	  submenu_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	submenu_component.options.__file = "packages/menu/src/submenu.vue";
	/* harmony default export */ var submenu = (submenu_component.exports);
	// CONCATENATED MODULE: ./packages/submenu/index.js


	/* istanbul ignore next */
	submenu.install = function (Vue) {
	  Vue.component(submenu.name, submenu);
	};

	/* harmony default export */ var packages_submenu = (submenu);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item.vue?vue&type=template&id=2a5dbfea&
	var menu_itemvue_type_template_id_2a5dbfea_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "li",
	    {
	      staticClass: "el-menu-item",
	      class: {
	        "is-active": _vm.active,
	        "is-disabled": _vm.disabled
	      },
	      style: [
	        _vm.paddingStyle,
	        _vm.itemStyle,
	        { backgroundColor: _vm.backgroundColor }
	      ],
	      attrs: { role: "menuitem", tabindex: "-1" },
	      on: {
	        click: _vm.handleClick,
	        mouseenter: _vm.onMouseEnter,
	        focus: _vm.onMouseEnter,
	        blur: _vm.onMouseLeave,
	        mouseleave: _vm.onMouseLeave
	      }
	    },
	    [
	      _vm.parentMenu.$options.componentName === "ElMenu" &&
	      _vm.rootMenu.collapse &&
	      _vm.$slots.title
	        ? _c("el-tooltip", { attrs: { effect: "dark", placement: "right" } }, [
	            _c(
	              "div",
	              { attrs: { slot: "content" }, slot: "content" },
	              [_vm._t("title")],
	              2
	            ),
	            _c(
	              "div",
	              {
	                staticStyle: {
	                  position: "absolute",
	                  left: "0",
	                  top: "0",
	                  height: "100%",
	                  width: "100%",
	                  display: "inline-block",
	                  "box-sizing": "border-box",
	                  padding: "0 20px"
	                }
	              },
	              [_vm._t("default")],
	              2
	            )
	          ])
	        : [_vm._t("default"), _vm._t("title")]
	    ],
	    2
	  )
	};
	var menu_itemvue_type_template_id_2a5dbfea_staticRenderFns = [];
	menu_itemvue_type_template_id_2a5dbfea_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/menu/src/menu-item.vue?vue&type=template&id=2a5dbfea&

	// EXTERNAL MODULE: external "element-ui/lib/tooltip"
	var tooltip_ = __webpack_require__(26);
	var tooltip_default = /*#__PURE__*/__webpack_require__.n(tooltip_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var menu_itemvue_type_script_lang_js_ = ({
	  name: 'ElMenuItem',

	  componentName: 'ElMenuItem',

	  mixins: [menu_mixin, emitter_default.a],

	  components: { ElTooltip: tooltip_default.a },

	  props: {
	    index: {
	      default: null,
	      validator: function validator(val) {
	        return typeof val === 'string' || val === null;
	      }
	    },
	    route: [String, Object],
	    disabled: Boolean
	  },
	  computed: {
	    active: function active() {
	      return this.index === this.rootMenu.activeIndex;
	    },
	    hoverBackground: function hoverBackground() {
	      return this.rootMenu.hoverBackground;
	    },
	    backgroundColor: function backgroundColor() {
	      return this.rootMenu.backgroundColor || '';
	    },
	    activeTextColor: function activeTextColor() {
	      return this.rootMenu.activeTextColor || '';
	    },
	    textColor: function textColor() {
	      return this.rootMenu.textColor || '';
	    },
	    mode: function mode() {
	      return this.rootMenu.mode;
	    },
	    itemStyle: function itemStyle() {
	      var style = {
	        color: this.active ? this.activeTextColor : this.textColor
	      };
	      if (this.mode === 'horizontal' && !this.isNested) {
	        style.borderBottomColor = this.active ? this.rootMenu.activeTextColor ? this.activeTextColor : '' : 'transparent';
	      }
	      return style;
	    },
	    isNested: function isNested() {
	      return this.parentMenu !== this.rootMenu;
	    }
	  },
	  methods: {
	    onMouseEnter: function onMouseEnter() {
	      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
	      this.$el.style.backgroundColor = this.hoverBackground;
	    },
	    onMouseLeave: function onMouseLeave() {
	      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
	      this.$el.style.backgroundColor = this.backgroundColor;
	    },
	    handleClick: function handleClick() {
	      if (!this.disabled) {
	        this.dispatch('ElMenu', 'item-click', this);
	        this.$emit('click', this);
	      }
	    }
	  },
	  mounted: function mounted() {
	    this.parentMenu.addItem(this);
	    this.rootMenu.addItem(this);
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.parentMenu.removeItem(this);
	    this.rootMenu.removeItem(this);
	  }
	});
	// CONCATENATED MODULE: ./packages/menu/src/menu-item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_menu_itemvue_type_script_lang_js_ = (menu_itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/menu/src/menu-item.vue





	/* normalize component */

	var menu_item_component = normalizeComponent(
	  src_menu_itemvue_type_script_lang_js_,
	  menu_itemvue_type_template_id_2a5dbfea_render,
	  menu_itemvue_type_template_id_2a5dbfea_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	menu_item_component.options.__file = "packages/menu/src/menu-item.vue";
	/* harmony default export */ var menu_item = (menu_item_component.exports);
	// CONCATENATED MODULE: ./packages/menu-item/index.js


	/* istanbul ignore next */
	menu_item.install = function (Vue) {
	  Vue.component(menu_item.name, menu_item);
	};

	/* harmony default export */ var packages_menu_item = (menu_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item-group.vue?vue&type=template&id=543b7bdc&
	var menu_item_groupvue_type_template_id_543b7bdc_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("li", { staticClass: "el-menu-item-group" }, [
	    _c(
	      "div",
	      {
	        staticClass: "el-menu-item-group__title",
	        style: { paddingLeft: _vm.levelPadding + "px" }
	      },
	      [!_vm.$slots.title ? [_vm._v(_vm._s(_vm.title))] : _vm._t("title")],
	      2
	    ),
	    _c("ul", [_vm._t("default")], 2)
	  ])
	};
	var menu_item_groupvue_type_template_id_543b7bdc_staticRenderFns = [];
	menu_item_groupvue_type_template_id_543b7bdc_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/menu/src/menu-item-group.vue?vue&type=template&id=543b7bdc&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item-group.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var menu_item_groupvue_type_script_lang_js_ = ({
	  name: 'ElMenuItemGroup',

	  componentName: 'ElMenuItemGroup',

	  inject: ['rootMenu'],
	  props: {
	    title: {
	      type: String
	    }
	  },
	  data: function data() {
	    return {
	      paddingLeft: 20
	    };
	  },

	  computed: {
	    levelPadding: function levelPadding() {
	      var padding = 20;
	      var parent = this.$parent;
	      if (this.rootMenu.collapse) return 20;
	      while (parent && parent.$options.componentName !== 'ElMenu') {
	        if (parent.$options.componentName === 'ElSubmenu') {
	          padding += 20;
	        }
	        parent = parent.$parent;
	      }
	      return padding;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/menu/src/menu-item-group.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_menu_item_groupvue_type_script_lang_js_ = (menu_item_groupvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/menu/src/menu-item-group.vue





	/* normalize component */

	var menu_item_group_component = normalizeComponent(
	  src_menu_item_groupvue_type_script_lang_js_,
	  menu_item_groupvue_type_template_id_543b7bdc_render,
	  menu_item_groupvue_type_template_id_543b7bdc_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	menu_item_group_component.options.__file = "packages/menu/src/menu-item-group.vue";
	/* harmony default export */ var menu_item_group = (menu_item_group_component.exports);
	// CONCATENATED MODULE: ./packages/menu-item-group/index.js


	/* istanbul ignore next */
	menu_item_group.install = function (Vue) {
	  Vue.component(menu_item_group.name, menu_item_group);
	};

	/* harmony default export */ var packages_menu_item_group = (menu_item_group);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/input/src/input.vue?vue&type=template&id=343dd774&
	var inputvue_type_template_id_343dd774_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      class: [
	        _vm.type === "textarea" ? "el-textarea" : "el-input",
	        _vm.inputSize ? "el-input--" + _vm.inputSize : "",
	        {
	          "is-disabled": _vm.inputDisabled,
	          "is-exceed": _vm.inputExceed,
	          "el-input-group": _vm.$slots.prepend || _vm.$slots.append,
	          "el-input-group--append": _vm.$slots.append,
	          "el-input-group--prepend": _vm.$slots.prepend,
	          "el-input--prefix": _vm.$slots.prefix || _vm.prefixIcon,
	          "el-input--suffix":
	            _vm.$slots.suffix ||
	            _vm.suffixIcon ||
	            _vm.clearable ||
	            _vm.showPassword
	        }
	      ],
	      on: {
	        mouseenter: function($event) {
	          _vm.hovering = true;
	        },
	        mouseleave: function($event) {
	          _vm.hovering = false;
	        }
	      }
	    },
	    [
	      _vm.type !== "textarea"
	        ? [
	            _vm.$slots.prepend
	              ? _c(
	                  "div",
	                  { staticClass: "el-input-group__prepend" },
	                  [_vm._t("prepend")],
	                  2
	                )
	              : _vm._e(),
	            _vm.type !== "textarea"
	              ? _c(
	                  "input",
	                  _vm._b(
	                    {
	                      ref: "input",
	                      staticClass: "el-input__inner",
	                      attrs: {
	                        tabindex: _vm.tabindex,
	                        type: _vm.showPassword
	                          ? _vm.passwordVisible
	                            ? "text"
	                            : "password"
	                          : _vm.type,
	                        disabled: _vm.inputDisabled,
	                        readonly: _vm.readonly,
	                        autocomplete: _vm.autoComplete || _vm.autocomplete,
	                        "aria-label": _vm.label
	                      },
	                      on: {
	                        compositionstart: _vm.handleCompositionStart,
	                        compositionupdate: _vm.handleCompositionUpdate,
	                        compositionend: _vm.handleCompositionEnd,
	                        input: _vm.handleInput,
	                        focus: _vm.handleFocus,
	                        blur: _vm.handleBlur,
	                        change: _vm.handleChange
	                      }
	                    },
	                    "input",
	                    _vm.$attrs,
	                    false
	                  )
	                )
	              : _vm._e(),
	            _vm.$slots.prefix || _vm.prefixIcon
	              ? _c(
	                  "span",
	                  { staticClass: "el-input__prefix" },
	                  [
	                    _vm._t("prefix"),
	                    _vm.prefixIcon
	                      ? _c("i", {
	                          staticClass: "el-input__icon",
	                          class: _vm.prefixIcon
	                        })
	                      : _vm._e()
	                  ],
	                  2
	                )
	              : _vm._e(),
	            _vm.getSuffixVisible()
	              ? _c("span", { staticClass: "el-input__suffix" }, [
	                  _c(
	                    "span",
	                    { staticClass: "el-input__suffix-inner" },
	                    [
	                      !_vm.showClear ||
	                      !_vm.showPwdVisible ||
	                      !_vm.isWordLimitVisible
	                        ? [
	                            _vm._t("suffix"),
	                            _vm.suffixIcon
	                              ? _c("i", {
	                                  staticClass: "el-input__icon",
	                                  class: _vm.suffixIcon
	                                })
	                              : _vm._e()
	                          ]
	                        : _vm._e(),
	                      _vm.showClear
	                        ? _c("i", {
	                            staticClass:
	                              "el-input__icon el-icon-circle-close el-input__clear",
	                            on: {
	                              mousedown: function($event) {
	                                $event.preventDefault();
	                              },
	                              click: _vm.clear
	                            }
	                          })
	                        : _vm._e(),
	                      _vm.showPwdVisible
	                        ? _c("i", {
	                            staticClass:
	                              "el-input__icon el-icon-view el-input__clear",
	                            on: { click: _vm.handlePasswordVisible }
	                          })
	                        : _vm._e(),
	                      _vm.isWordLimitVisible
	                        ? _c("span", { staticClass: "el-input__count" }, [
	                            _c(
	                              "span",
	                              { staticClass: "el-input__count-inner" },
	                              [
	                                _vm._v(
	                                  "\n            " +
	                                    _vm._s(_vm.textLength) +
	                                    "/" +
	                                    _vm._s(_vm.upperLimit) +
	                                    "\n          "
	                                )
	                              ]
	                            )
	                          ])
	                        : _vm._e()
	                    ],
	                    2
	                  ),
	                  _vm.validateState
	                    ? _c("i", {
	                        staticClass: "el-input__icon",
	                        class: ["el-input__validateIcon", _vm.validateIcon]
	                      })
	                    : _vm._e()
	                ])
	              : _vm._e(),
	            _vm.$slots.append
	              ? _c(
	                  "div",
	                  { staticClass: "el-input-group__append" },
	                  [_vm._t("append")],
	                  2
	                )
	              : _vm._e()
	          ]
	        : _c(
	            "textarea",
	            _vm._b(
	              {
	                ref: "textarea",
	                staticClass: "el-textarea__inner",
	                style: _vm.textareaStyle,
	                attrs: {
	                  tabindex: _vm.tabindex,
	                  disabled: _vm.inputDisabled,
	                  readonly: _vm.readonly,
	                  autocomplete: _vm.autoComplete || _vm.autocomplete,
	                  "aria-label": _vm.label
	                },
	                on: {
	                  compositionstart: _vm.handleCompositionStart,
	                  compositionupdate: _vm.handleCompositionUpdate,
	                  compositionend: _vm.handleCompositionEnd,
	                  input: _vm.handleInput,
	                  focus: _vm.handleFocus,
	                  blur: _vm.handleBlur,
	                  change: _vm.handleChange
	                }
	              },
	              "textarea",
	              _vm.$attrs,
	              false
	            )
	          ),
	      _vm.isWordLimitVisible && _vm.type === "textarea"
	        ? _c("span", { staticClass: "el-input__count" }, [
	            _vm._v(_vm._s(_vm.textLength) + "/" + _vm._s(_vm.upperLimit))
	          ])
	        : _vm._e()
	    ],
	    2
	  )
	};
	var inputvue_type_template_id_343dd774_staticRenderFns = [];
	inputvue_type_template_id_343dd774_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/input/src/input.vue?vue&type=template&id=343dd774&

	// CONCATENATED MODULE: ./packages/input/src/calcTextareaHeight.js
	var hiddenTextarea = void 0;

	var HIDDEN_STYLE = '\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n';

	var CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];

	function calculateNodeStyling(targetElement) {
	  var style = window.getComputedStyle(targetElement);

	  var boxSizing = style.getPropertyValue('box-sizing');

	  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));

	  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));

	  var contextStyle = CONTEXT_STYLE.map(function (name) {
	    return name + ':' + style.getPropertyValue(name);
	  }).join(';');

	  return { contextStyle: contextStyle, paddingSize: paddingSize, borderSize: borderSize, boxSizing: boxSizing };
	}

	function calcTextareaHeight(targetElement) {
	  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
	  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  if (!hiddenTextarea) {
	    hiddenTextarea = document.createElement('textarea');
	    document.body.appendChild(hiddenTextarea);
	  }

	  var _calculateNodeStyling = calculateNodeStyling(targetElement),
	      paddingSize = _calculateNodeStyling.paddingSize,
	      borderSize = _calculateNodeStyling.borderSize,
	      boxSizing = _calculateNodeStyling.boxSizing,
	      contextStyle = _calculateNodeStyling.contextStyle;

	  hiddenTextarea.setAttribute('style', contextStyle + ';' + HIDDEN_STYLE);
	  hiddenTextarea.value = targetElement.value || targetElement.placeholder || '';

	  var height = hiddenTextarea.scrollHeight;
	  var result = {};

	  if (boxSizing === 'border-box') {
	    height = height + borderSize;
	  } else if (boxSizing === 'content-box') {
	    height = height - paddingSize;
	  }

	  hiddenTextarea.value = '';
	  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;

	  if (minRows !== null) {
	    var minHeight = singleRowHeight * minRows;
	    if (boxSizing === 'border-box') {
	      minHeight = minHeight + paddingSize + borderSize;
	    }
	    height = Math.max(minHeight, height);
	    result.minHeight = minHeight + 'px';
	  }
	  if (maxRows !== null) {
	    var maxHeight = singleRowHeight * maxRows;
	    if (boxSizing === 'border-box') {
	      maxHeight = maxHeight + paddingSize + borderSize;
	    }
	    height = Math.min(maxHeight, height);
	  }
	  result.height = height + 'px';
	  hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);
	  hiddenTextarea = null;
	  return result;
	}	// EXTERNAL MODULE: external "element-ui/lib/utils/merge"
	var merge_ = __webpack_require__(7);
	var merge_default = /*#__PURE__*/__webpack_require__.n(merge_);

	// EXTERNAL MODULE: external "element-ui/lib/utils/shared"
	var shared_ = __webpack_require__(19);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/input/src/input.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//







	/* harmony default export */ var inputvue_type_script_lang_js_ = ({
	  name: 'ElInput',

	  componentName: 'ElInput',

	  mixins: [emitter_default.a, migrating_default.a],

	  inheritAttrs: false,

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  data: function data() {
	    return {
	      textareaCalcStyle: {},
	      hovering: false,
	      focused: false,
	      isComposing: false,
	      passwordVisible: false
	    };
	  },


	  props: {
	    value: [String, Number],
	    size: String,
	    resize: String,
	    form: String,
	    disabled: Boolean,
	    readonly: Boolean,
	    type: {
	      type: String,
	      default: 'text'
	    },
	    autosize: {
	      type: [Boolean, Object],
	      default: false
	    },
	    autocomplete: {
	      type: String,
	      default: 'off'
	    },
	    /** @Deprecated in next major version */
	    autoComplete: {
	      type: String,
	      validator: function validator(val) {
	        return true;
	      }
	    },
	    validateEvent: {
	      type: Boolean,
	      default: true
	    },
	    suffixIcon: String,
	    prefixIcon: String,
	    label: String,
	    clearable: {
	      type: Boolean,
	      default: false
	    },
	    showPassword: {
	      type: Boolean,
	      default: false
	    },
	    showWordLimit: {
	      type: Boolean,
	      default: false
	    },
	    tabindex: String
	  },

	  computed: {
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    validateState: function validateState() {
	      return this.elFormItem ? this.elFormItem.validateState : '';
	    },
	    needStatusIcon: function needStatusIcon() {
	      return this.elForm ? this.elForm.statusIcon : false;
	    },
	    validateIcon: function validateIcon() {
	      return {
	        validating: 'el-icon-loading',
	        success: 'el-icon-circle-check',
	        error: 'el-icon-circle-close'
	      }[this.validateState];
	    },
	    textareaStyle: function textareaStyle() {
	      return merge_default()({}, this.textareaCalcStyle, { resize: this.resize });
	    },
	    inputSize: function inputSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    inputDisabled: function inputDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    },
	    nativeInputValue: function nativeInputValue() {
	      return this.value === null || this.value === undefined ? '' : String(this.value);
	    },
	    showClear: function showClear() {
	      return this.clearable && !this.inputDisabled && !this.readonly && this.nativeInputValue && (this.focused || this.hovering);
	    },
	    showPwdVisible: function showPwdVisible() {
	      return this.showPassword && !this.inputDisabled && !this.readonly && (!!this.nativeInputValue || this.focused);
	    },
	    isWordLimitVisible: function isWordLimitVisible() {
	      return this.showWordLimit && this.$attrs.maxlength && (this.type === 'text' || this.type === 'textarea') && !this.inputDisabled && !this.readonly && !this.showPassword;
	    },
	    upperLimit: function upperLimit() {
	      return this.$attrs.maxlength;
	    },
	    textLength: function textLength() {
	      if (typeof this.value === 'number') {
	        return String(this.value).length;
	      }

	      return (this.value || '').length;
	    },
	    inputExceed: function inputExceed() {
	      // show exceed style if length of initial value greater then maxlength
	      return this.isWordLimitVisible && this.textLength > this.upperLimit;
	    }
	  },

	  watch: {
	    value: function value(val) {
	      this.$nextTick(this.resizeTextarea);
	      if (this.validateEvent) {
	        this.dispatch('ElFormItem', 'el.form.change', [val]);
	      }
	    },

	    // native input value is set explicitly
	    // do not use v-model / :value in template
	    // see: https://github.com/ElemeFE/element/issues/14521
	    nativeInputValue: function nativeInputValue() {
	      this.setNativeInputValue();
	    },

	    // when change between <input> and <textarea>,
	    // update DOM dependent value and styles
	    // https://github.com/ElemeFE/element/issues/14857
	    type: function type() {
	      var _this = this;

	      this.$nextTick(function () {
	        _this.setNativeInputValue();
	        _this.resizeTextarea();
	        _this.updateIconOffset();
	      });
	    }
	  },

	  methods: {
	    focus: function focus() {
	      this.getInput().focus();
	    },
	    blur: function blur() {
	      this.getInput().blur();
	    },
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'icon': 'icon is removed, use suffix-icon / prefix-icon instead.',
	          'on-icon-click': 'on-icon-click is removed.'
	        },
	        events: {
	          'click': 'click is removed.'
	        }
	      };
	    },
	    handleBlur: function handleBlur(event) {
	      this.focused = false;
	      this.$emit('blur', event);
	      if (this.validateEvent) {
	        this.dispatch('ElFormItem', 'el.form.blur', [this.value]);
	      }
	    },
	    select: function select() {
	      this.getInput().select();
	    },
	    resizeTextarea: function resizeTextarea() {
	      if (this.$isServer) return;
	      var autosize = this.autosize,
	          type = this.type;

	      if (type !== 'textarea') return;
	      if (!autosize) {
	        this.textareaCalcStyle = {
	          minHeight: calcTextareaHeight(this.$refs.textarea).minHeight
	        };
	        return;
	      }
	      var minRows = autosize.minRows;
	      var maxRows = autosize.maxRows;

	      this.textareaCalcStyle = calcTextareaHeight(this.$refs.textarea, minRows, maxRows);
	    },
	    setNativeInputValue: function setNativeInputValue() {
	      var input = this.getInput();
	      if (!input) return;
	      if (input.value === this.nativeInputValue) return;
	      input.value = this.nativeInputValue;
	    },
	    handleFocus: function handleFocus(event) {
	      this.focused = true;
	      this.$emit('focus', event);
	    },
	    handleCompositionStart: function handleCompositionStart(event) {
	      this.$emit('compositionstart', event);
	      this.isComposing = true;
	    },
	    handleCompositionUpdate: function handleCompositionUpdate(event) {
	      this.$emit('compositionupdate', event);
	      var text = event.target.value;
	      var lastCharacter = text[text.length - 1] || '';
	      this.isComposing = !Object(shared_["isKorean"])(lastCharacter);
	    },
	    handleCompositionEnd: function handleCompositionEnd(event) {
	      this.$emit('compositionend', event);
	      if (this.isComposing) {
	        this.isComposing = false;
	        this.handleInput(event);
	      }
	    },
	    handleInput: function handleInput(event) {
	      // should not emit input during composition
	      // see: https://github.com/ElemeFE/element/issues/10516
	      if (this.isComposing) return;

	      // hack for https://github.com/ElemeFE/element/issues/8548
	      // should remove the following line when we don't support IE
	      if (event.target.value === this.nativeInputValue) return;

	      this.$emit('input', event.target.value);

	      // ensure native input value is controlled
	      // see: https://github.com/ElemeFE/element/issues/12850
	      this.$nextTick(this.setNativeInputValue);
	    },
	    handleChange: function handleChange(event) {
	      this.$emit('change', event.target.value);
	    },
	    calcIconOffset: function calcIconOffset(place) {
	      var elList = [].slice.call(this.$el.querySelectorAll('.el-input__' + place) || []);
	      if (!elList.length) return;
	      var el = null;
	      for (var i = 0; i < elList.length; i++) {
	        if (elList[i].parentNode === this.$el) {
	          el = elList[i];
	          break;
	        }
	      }
	      if (!el) return;
	      var pendantMap = {
	        suffix: 'append',
	        prefix: 'prepend'
	      };

	      var pendant = pendantMap[place];
	      if (this.$slots[pendant]) {
	        el.style.transform = 'translateX(' + (place === 'suffix' ? '-' : '') + this.$el.querySelector('.el-input-group__' + pendant).offsetWidth + 'px)';
	      } else {
	        el.removeAttribute('style');
	      }
	    },
	    updateIconOffset: function updateIconOffset() {
	      this.calcIconOffset('prefix');
	      this.calcIconOffset('suffix');
	    },
	    clear: function clear() {
	      this.$emit('input', '');
	      this.$emit('change', '');
	      this.$emit('clear');
	    },
	    handlePasswordVisible: function handlePasswordVisible() {
	      var _this2 = this;

	      this.passwordVisible = !this.passwordVisible;
	      this.$nextTick(function () {
	        _this2.focus();
	      });
	    },
	    getInput: function getInput() {
	      return this.$refs.input || this.$refs.textarea;
	    },
	    getSuffixVisible: function getSuffixVisible() {
	      return this.$slots.suffix || this.suffixIcon || this.showClear || this.showPassword || this.isWordLimitVisible || this.validateState && this.needStatusIcon;
	    }
	  },

	  created: function created() {
	    this.$on('inputSelect', this.select);
	  },
	  mounted: function mounted() {
	    this.setNativeInputValue();
	    this.resizeTextarea();
	    this.updateIconOffset();
	  },
	  updated: function updated() {
	    this.$nextTick(this.updateIconOffset);
	  }
	});
	// CONCATENATED MODULE: ./packages/input/src/input.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_inputvue_type_script_lang_js_ = (inputvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/input/src/input.vue





	/* normalize component */

	var input_component = normalizeComponent(
	  src_inputvue_type_script_lang_js_,
	  inputvue_type_template_id_343dd774_render,
	  inputvue_type_template_id_343dd774_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	input_component.options.__file = "packages/input/src/input.vue";
	/* harmony default export */ var src_input = (input_component.exports);
	// CONCATENATED MODULE: ./packages/input/index.js


	/* istanbul ignore next */
	src_input.install = function (Vue) {
	  Vue.component(src_input.name, src_input);
	};

	/* harmony default export */ var packages_input = (src_input);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/input-number/src/input-number.vue?vue&type=template&id=42f8cf66&
	var input_numbervue_type_template_id_42f8cf66_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      class: [
	        "el-input-number",
	        _vm.inputNumberSize ? "el-input-number--" + _vm.inputNumberSize : "",
	        { "is-disabled": _vm.inputNumberDisabled },
	        { "is-without-controls": !_vm.controls },
	        { "is-controls-right": _vm.controlsAtRight }
	      ],
	      on: {
	        dragstart: function($event) {
	          $event.preventDefault();
	        }
	      }
	    },
	    [
	      _vm.controls
	        ? _c(
	            "span",
	            {
	              directives: [
	                {
	                  name: "repeat-click",
	                  rawName: "v-repeat-click",
	                  value: _vm.decrease,
	                  expression: "decrease"
	                }
	              ],
	              staticClass: "el-input-number__decrease",
	              class: { "is-disabled": _vm.minDisabled },
	              attrs: { role: "button" },
	              on: {
	                keydown: function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
	                  ) {
	                    return null
	                  }
	                  return _vm.decrease($event)
	                }
	              }
	            },
	            [
	              _c("i", {
	                class:
	                  "el-icon-" + (_vm.controlsAtRight ? "arrow-down" : "minus")
	              })
	            ]
	          )
	        : _vm._e(),
	      _vm.controls
	        ? _c(
	            "span",
	            {
	              directives: [
	                {
	                  name: "repeat-click",
	                  rawName: "v-repeat-click",
	                  value: _vm.increase,
	                  expression: "increase"
	                }
	              ],
	              staticClass: "el-input-number__increase",
	              class: { "is-disabled": _vm.maxDisabled },
	              attrs: { role: "button" },
	              on: {
	                keydown: function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
	                  ) {
	                    return null
	                  }
	                  return _vm.increase($event)
	                }
	              }
	            },
	            [
	              _c("i", {
	                class: "el-icon-" + (_vm.controlsAtRight ? "arrow-up" : "plus")
	              })
	            ]
	          )
	        : _vm._e(),
	      _c("el-input", {
	        ref: "input",
	        attrs: {
	          value: _vm.displayValue,
	          placeholder: _vm.placeholder,
	          disabled: _vm.inputNumberDisabled,
	          size: _vm.inputNumberSize,
	          max: _vm.max,
	          min: _vm.min,
	          name: _vm.name,
	          label: _vm.label
	        },
	        on: {
	          blur: _vm.handleBlur,
	          focus: _vm.handleFocus,
	          input: _vm.handleInput,
	          change: _vm.handleInputChange
	        },
	        nativeOn: {
	          keydown: [
	            function($event) {
	              if (
	                !("button" in $event) &&
	                _vm._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])
	              ) {
	                return null
	              }
	              $event.preventDefault();
	              return _vm.increase($event)
	            },
	            function($event) {
	              if (
	                !("button" in $event) &&
	                _vm._k($event.keyCode, "down", 40, $event.key, [
	                  "Down",
	                  "ArrowDown"
	                ])
	              ) {
	                return null
	              }
	              $event.preventDefault();
	              return _vm.decrease($event)
	            }
	          ]
	        }
	      })
	    ],
	    1
	  )
	};
	var input_numbervue_type_template_id_42f8cf66_staticRenderFns = [];
	input_numbervue_type_template_id_42f8cf66_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue?vue&type=template&id=42f8cf66&

	// CONCATENATED MODULE: ./src/directives/repeat-click.js



	/* harmony default export */ var repeat_click = ({
	  bind: function bind(el, binding, vnode) {
	    var interval = null;
	    var startTime = void 0;
	    var maxIntervals = Object(util_["isMac"])() ? 100 : 200;
	    var handler = function handler() {
	      return vnode.context[binding.expression].apply();
	    };
	    var clear = function clear() {
	      if (Date.now() - startTime < maxIntervals) {
	        handler();
	      }
	      clearInterval(interval);
	      interval = null;
	    };

	    Object(dom_["on"])(el, 'mousedown', function (e) {
	      if (e.button !== 0) return;
	      startTime = Date.now();
	      Object(dom_["once"])(document, 'mouseup', clear);
	      clearInterval(interval);
	      interval = setInterval(handler, maxIntervals);
	    });
	  }
	});
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/input-number/src/input-number.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var input_numbervue_type_script_lang_js_ = ({
	  name: 'ElInputNumber',
	  mixins: [focus_default()('input')],
	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },
	  directives: {
	    repeatClick: repeat_click
	  },
	  components: {
	    ElInput: input_default.a
	  },
	  props: {
	    step: {
	      type: Number,
	      default: 1
	    },
	    stepStrictly: {
	      type: Boolean,
	      default: false
	    },
	    max: {
	      type: Number,
	      default: Infinity
	    },
	    min: {
	      type: Number,
	      default: -Infinity
	    },
	    value: {},
	    disabled: Boolean,
	    size: String,
	    controls: {
	      type: Boolean,
	      default: true
	    },
	    controlsPosition: {
	      type: String,
	      default: ''
	    },
	    name: String,
	    label: String,
	    placeholder: String,
	    precision: {
	      type: Number,
	      validator: function validator(val) {
	        return val >= 0 && val === parseInt(val, 10);
	      }
	    }
	  },
	  data: function data() {
	    return {
	      currentValue: 0,
	      userInput: null
	    };
	  },

	  watch: {
	    value: {
	      immediate: true,
	      handler: function handler(value) {
	        var newVal = value === undefined ? value : Number(value);
	        if (newVal !== undefined) {
	          if (isNaN(newVal)) {
	            return;
	          }

	          if (this.stepStrictly) {
	            var stepPrecision = this.getPrecision(this.step);
	            var precisionFactor = Math.pow(10, stepPrecision);
	            newVal = Math.round(newVal / this.step) * precisionFactor * this.step / precisionFactor;
	          }

	          if (this.precision !== undefined) {
	            newVal = this.toPrecision(newVal, this.precision);
	          }
	        }
	        if (newVal >= this.max) newVal = this.max;
	        if (newVal <= this.min) newVal = this.min;
	        this.currentValue = newVal;
	        this.userInput = null;
	        this.$emit('input', newVal);
	      }
	    }
	  },
	  computed: {
	    minDisabled: function minDisabled() {
	      return this._decrease(this.value, this.step) < this.min;
	    },
	    maxDisabled: function maxDisabled() {
	      return this._increase(this.value, this.step) > this.max;
	    },
	    numPrecision: function numPrecision() {
	      var value = this.value,
	          step = this.step,
	          getPrecision = this.getPrecision,
	          precision = this.precision;

	      var stepPrecision = getPrecision(step);
	      if (precision !== undefined) {
	        if (stepPrecision > precision) {
	          console.warn('[Element Warn][InputNumber]precision should not be less than the decimal places of step');
	        }
	        return precision;
	      } else {
	        return Math.max(getPrecision(value), stepPrecision);
	      }
	    },
	    controlsAtRight: function controlsAtRight() {
	      return this.controls && this.controlsPosition === 'right';
	    },
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    inputNumberSize: function inputNumberSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    inputNumberDisabled: function inputNumberDisabled() {
	      return this.disabled || !!(this.elForm || {}).disabled;
	    },
	    displayValue: function displayValue() {
	      if (this.userInput !== null) {
	        return this.userInput;
	      }

	      var currentValue = this.currentValue;

	      if (typeof currentValue === 'number') {
	        if (this.stepStrictly) {
	          var stepPrecision = this.getPrecision(this.step);
	          var precisionFactor = Math.pow(10, stepPrecision);
	          currentValue = Math.round(currentValue / this.step) * precisionFactor * this.step / precisionFactor;
	        }

	        if (this.precision !== undefined) {
	          currentValue = currentValue.toFixed(this.precision);
	        }
	      }

	      return currentValue;
	    }
	  },
	  methods: {
	    toPrecision: function toPrecision(num, precision) {
	      if (precision === undefined) precision = this.numPrecision;
	      return parseFloat(Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision));
	    },
	    getPrecision: function getPrecision(value) {
	      if (value === undefined) return 0;
	      var valueString = value.toString();
	      var dotPosition = valueString.indexOf('.');
	      var precision = 0;
	      if (dotPosition !== -1) {
	        precision = valueString.length - dotPosition - 1;
	      }
	      return precision;
	    },
	    _increase: function _increase(val, step) {
	      if (typeof val !== 'number' && val !== undefined) return this.currentValue;

	      var precisionFactor = Math.pow(10, this.numPrecision);
	      // Solve the accuracy problem of JS decimal calculation by converting the value to integer.
	      return this.toPrecision((precisionFactor * val + precisionFactor * step) / precisionFactor);
	    },
	    _decrease: function _decrease(val, step) {
	      if (typeof val !== 'number' && val !== undefined) return this.currentValue;

	      var precisionFactor = Math.pow(10, this.numPrecision);

	      return this.toPrecision((precisionFactor * val - precisionFactor * step) / precisionFactor);
	    },
	    increase: function increase() {
	      if (this.inputNumberDisabled || this.maxDisabled) return;
	      var value = this.value || 0;
	      var newVal = this._increase(value, this.step);
	      this.setCurrentValue(newVal);
	    },
	    decrease: function decrease() {
	      if (this.inputNumberDisabled || this.minDisabled) return;
	      var value = this.value || 0;
	      var newVal = this._decrease(value, this.step);
	      this.setCurrentValue(newVal);
	    },
	    handleBlur: function handleBlur(event) {
	      this.$emit('blur', event);
	    },
	    handleFocus: function handleFocus(event) {
	      this.$emit('focus', event);
	    },
	    setCurrentValue: function setCurrentValue(newVal) {
	      var oldVal = this.currentValue;
	      if (typeof newVal === 'number' && this.precision !== undefined) {
	        newVal = this.toPrecision(newVal, this.precision);
	      }
	      if (newVal >= this.max) newVal = this.max;
	      if (newVal <= this.min) newVal = this.min;
	      if (oldVal === newVal) return;
	      this.userInput = null;
	      this.$emit('input', newVal);
	      this.$emit('change', newVal, oldVal);
	      this.currentValue = newVal;
	    },
	    handleInput: function handleInput(value) {
	      this.userInput = value;
	    },
	    handleInputChange: function handleInputChange(value) {
	      var newVal = value === '' ? undefined : Number(value);
	      if (!isNaN(newVal) || value === '') {
	        this.setCurrentValue(newVal);
	      }
	      this.userInput = null;
	    },
	    select: function select() {
	      this.$refs.input.select();
	    }
	  },
	  mounted: function mounted() {
	    var innerInput = this.$refs.input.$refs.input;
	    innerInput.setAttribute('role', 'spinbutton');
	    innerInput.setAttribute('aria-valuemax', this.max);
	    innerInput.setAttribute('aria-valuemin', this.min);
	    innerInput.setAttribute('aria-valuenow', this.currentValue);
	    innerInput.setAttribute('aria-disabled', this.inputNumberDisabled);
	  },
	  updated: function updated() {
	    if (!this.$refs || !this.$refs.input) return;
	    var innerInput = this.$refs.input.$refs.input;
	    innerInput.setAttribute('aria-valuenow', this.currentValue);
	  }
	});
	// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_input_numbervue_type_script_lang_js_ = (input_numbervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue





	/* normalize component */

	var input_number_component = normalizeComponent(
	  src_input_numbervue_type_script_lang_js_,
	  input_numbervue_type_template_id_42f8cf66_render,
	  input_numbervue_type_template_id_42f8cf66_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	input_number_component.options.__file = "packages/input-number/src/input-number.vue";
	/* harmony default export */ var input_number = (input_number_component.exports);
	// CONCATENATED MODULE: ./packages/input-number/index.js


	/* istanbul ignore next */
	input_number.install = function (Vue) {
	  Vue.component(input_number.name, input_number);
	};

	/* harmony default export */ var packages_input_number = (input_number);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio.vue?vue&type=template&id=69cd6268&
	var radiovue_type_template_id_69cd6268_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "label",
	    {
	      staticClass: "el-radio",
	      class: [
	        _vm.border && _vm.radioSize ? "el-radio--" + _vm.radioSize : "",
	        { "is-disabled": _vm.isDisabled },
	        { "is-focus": _vm.focus },
	        { "is-bordered": _vm.border },
	        { "is-checked": _vm.model === _vm.label }
	      ],
	      attrs: {
	        role: "radio",
	        "aria-checked": _vm.model === _vm.label,
	        "aria-disabled": _vm.isDisabled,
	        tabindex: _vm.tabIndex
	      },
	      on: {
	        keydown: function($event) {
	          if (
	            !("button" in $event) &&
	            _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])
	          ) {
	            return null
	          }
	          $event.stopPropagation();
	          $event.preventDefault();
	          _vm.model = _vm.isDisabled ? _vm.model : _vm.label;
	        }
	      }
	    },
	    [
	      _c(
	        "span",
	        {
	          staticClass: "el-radio__input",
	          class: {
	            "is-disabled": _vm.isDisabled,
	            "is-checked": _vm.model === _vm.label
	          }
	        },
	        [
	          _c("span", { staticClass: "el-radio__inner" }),
	          _c("input", {
	            directives: [
	              {
	                name: "model",
	                rawName: "v-model",
	                value: _vm.model,
	                expression: "model"
	              }
	            ],
	            ref: "radio",
	            staticClass: "el-radio__original",
	            attrs: {
	              type: "radio",
	              "aria-hidden": "true",
	              name: _vm.name,
	              disabled: _vm.isDisabled,
	              tabindex: "-1",
	              autocomplete: "off"
	            },
	            domProps: {
	              value: _vm.label,
	              checked: _vm._q(_vm.model, _vm.label)
	            },
	            on: {
	              focus: function($event) {
	                _vm.focus = true;
	              },
	              blur: function($event) {
	                _vm.focus = false;
	              },
	              change: [
	                function($event) {
	                  _vm.model = _vm.label;
	                },
	                _vm.handleChange
	              ]
	            }
	          })
	        ]
	      ),
	      _c(
	        "span",
	        {
	          staticClass: "el-radio__label",
	          on: {
	            keydown: function($event) {
	              $event.stopPropagation();
	            }
	          }
	        },
	        [
	          _vm._t("default"),
	          !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e()
	        ],
	        2
	      )
	    ]
	  )
	};
	var radiovue_type_template_id_69cd6268_staticRenderFns = [];
	radiovue_type_template_id_69cd6268_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/radio/src/radio.vue?vue&type=template&id=69cd6268&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var radiovue_type_script_lang_js_ = ({
	  name: 'ElRadio',

	  mixins: [emitter_default.a],

	  inject: {
	    elForm: {
	      default: ''
	    },

	    elFormItem: {
	      default: ''
	    }
	  },

	  componentName: 'ElRadio',

	  props: {
	    value: {},
	    label: {},
	    disabled: Boolean,
	    name: String,
	    border: Boolean,
	    size: String
	  },

	  data: function data() {
	    return {
	      focus: false
	    };
	  },

	  computed: {
	    isGroup: function isGroup() {
	      var parent = this.$parent;
	      while (parent) {
	        if (parent.$options.componentName !== 'ElRadioGroup') {
	          parent = parent.$parent;
	        } else {
	          this._radioGroup = parent;
	          return true;
	        }
	      }
	      return false;
	    },

	    model: {
	      get: function get() {
	        return this.isGroup ? this._radioGroup.value : this.value;
	      },
	      set: function set(val) {
	        if (this.isGroup) {
	          this.dispatch('ElRadioGroup', 'input', [val]);
	        } else {
	          this.$emit('input', val);
	        }
	        this.$refs.radio && (this.$refs.radio.checked = this.model === this.label);
	      }
	    },
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    radioSize: function radioSize() {
	      var temRadioSize = this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	      return this.isGroup ? this._radioGroup.radioGroupSize || temRadioSize : temRadioSize;
	    },
	    isDisabled: function isDisabled() {
	      return this.isGroup ? this._radioGroup.disabled || this.disabled || (this.elForm || {}).disabled : this.disabled || (this.elForm || {}).disabled;
	    },
	    tabIndex: function tabIndex() {
	      return this.isDisabled || this.isGroup && this.model !== this.label ? -1 : 0;
	    }
	  },

	  methods: {
	    handleChange: function handleChange() {
	      var _this = this;

	      this.$nextTick(function () {
	        _this.$emit('change', _this.model);
	        _this.isGroup && _this.dispatch('ElRadioGroup', 'handleChange', _this.model);
	      });
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/radio/src/radio.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_radiovue_type_script_lang_js_ = (radiovue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/radio/src/radio.vue





	/* normalize component */

	var radio_component = normalizeComponent(
	  src_radiovue_type_script_lang_js_,
	  radiovue_type_template_id_69cd6268_render,
	  radiovue_type_template_id_69cd6268_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	radio_component.options.__file = "packages/radio/src/radio.vue";
	/* harmony default export */ var src_radio = (radio_component.exports);
	// CONCATENATED MODULE: ./packages/radio/index.js


	/* istanbul ignore next */
	src_radio.install = function (Vue) {
	  Vue.component(src_radio.name, src_radio);
	};

	/* harmony default export */ var packages_radio = (src_radio);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-group.vue?vue&type=template&id=818a704c&
	var radio_groupvue_type_template_id_818a704c_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    _vm._elTag,
	    {
	      tag: "component",
	      staticClass: "el-radio-group",
	      attrs: { role: "radiogroup" },
	      on: { keydown: _vm.handleKeydown }
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var radio_groupvue_type_template_id_818a704c_staticRenderFns = [];
	radio_groupvue_type_template_id_818a704c_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/radio/src/radio-group.vue?vue&type=template&id=818a704c&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-group.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	var keyCode = Object.freeze({
	  LEFT: 37,
	  UP: 38,
	  RIGHT: 39,
	  DOWN: 40
	});
	/* harmony default export */ var radio_groupvue_type_script_lang_js_ = ({
	  name: 'ElRadioGroup',

	  componentName: 'ElRadioGroup',

	  inject: {
	    elFormItem: {
	      default: ''
	    }
	  },

	  mixins: [emitter_default.a],

	  props: {
	    value: {},
	    size: String,
	    fill: String,
	    textColor: String,
	    disabled: Boolean
	  },

	  computed: {
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    _elTag: function _elTag() {
	      var tag = (this.$vnode.data || {}).tag;
	      if (!tag || tag === 'component') tag = 'div';
	      return tag;
	    },
	    radioGroupSize: function radioGroupSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    }
	  },

	  created: function created() {
	    var _this = this;

	    this.$on('handleChange', function (value) {
	      _this.$emit('change', value);
	    });
	  },
	  mounted: function mounted() {
	    // 当radioGroup没有默认选项时，第一个可以选中Tab导航
	    var radios = this.$el.querySelectorAll('[type=radio]');
	    var firstLabel = this.$el.querySelectorAll('[role=radio]')[0];
	    if (![].some.call(radios, function (radio) {
	      return radio.checked;
	    }) && firstLabel) {
	      firstLabel.tabIndex = 0;
	    }
	  },

	  methods: {
	    handleKeydown: function handleKeydown(e) {
	      // 左右上下按键 可以在radio组内切换不同选项
	      var target = e.target;
	      var className = target.nodeName === 'INPUT' ? '[type=radio]' : '[role=radio]';
	      var radios = this.$el.querySelectorAll(className);
	      var length = radios.length;
	      var index = [].indexOf.call(radios, target);
	      var roleRadios = this.$el.querySelectorAll('[role=radio]');
	      switch (e.keyCode) {
	        case keyCode.LEFT:
	        case keyCode.UP:
	          e.stopPropagation();
	          e.preventDefault();
	          if (index === 0) {
	            roleRadios[length - 1].click();
	            roleRadios[length - 1].focus();
	          } else {
	            roleRadios[index - 1].click();
	            roleRadios[index - 1].focus();
	          }
	          break;
	        case keyCode.RIGHT:
	        case keyCode.DOWN:
	          if (index === length - 1) {
	            e.stopPropagation();
	            e.preventDefault();
	            roleRadios[0].click();
	            roleRadios[0].focus();
	          } else {
	            roleRadios[index + 1].click();
	            roleRadios[index + 1].focus();
	          }
	          break;
	      }
	    }
	  },
	  watch: {
	    value: function value(_value) {
	      this.dispatch('ElFormItem', 'el.form.change', [this.value]);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/radio/src/radio-group.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_radio_groupvue_type_script_lang_js_ = (radio_groupvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/radio/src/radio-group.vue





	/* normalize component */

	var radio_group_component = normalizeComponent(
	  src_radio_groupvue_type_script_lang_js_,
	  radio_groupvue_type_template_id_818a704c_render,
	  radio_groupvue_type_template_id_818a704c_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	radio_group_component.options.__file = "packages/radio/src/radio-group.vue";
	/* harmony default export */ var radio_group = (radio_group_component.exports);
	// CONCATENATED MODULE: ./packages/radio-group/index.js


	/* istanbul ignore next */
	radio_group.install = function (Vue) {
	  Vue.component(radio_group.name, radio_group);
	};

	/* harmony default export */ var packages_radio_group = (radio_group);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-button.vue?vue&type=template&id=18a77a32&
	var radio_buttonvue_type_template_id_18a77a32_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "label",
	    {
	      staticClass: "el-radio-button",
	      class: [
	        _vm.size ? "el-radio-button--" + _vm.size : "",
	        { "is-active": _vm.value === _vm.label },
	        { "is-disabled": _vm.isDisabled },
	        { "is-focus": _vm.focus }
	      ],
	      attrs: {
	        role: "radio",
	        "aria-checked": _vm.value === _vm.label,
	        "aria-disabled": _vm.isDisabled,
	        tabindex: _vm.tabIndex
	      },
	      on: {
	        keydown: function($event) {
	          if (
	            !("button" in $event) &&
	            _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])
	          ) {
	            return null
	          }
	          $event.stopPropagation();
	          $event.preventDefault();
	          _vm.value = _vm.isDisabled ? _vm.value : _vm.label;
	        }
	      }
	    },
	    [
	      _c("input", {
	        directives: [
	          {
	            name: "model",
	            rawName: "v-model",
	            value: _vm.value,
	            expression: "value"
	          }
	        ],
	        staticClass: "el-radio-button__orig-radio",
	        attrs: {
	          type: "radio",
	          name: _vm.name,
	          disabled: _vm.isDisabled,
	          tabindex: "-1",
	          autocomplete: "off"
	        },
	        domProps: { value: _vm.label, checked: _vm._q(_vm.value, _vm.label) },
	        on: {
	          change: [
	            function($event) {
	              _vm.value = _vm.label;
	            },
	            _vm.handleChange
	          ],
	          focus: function($event) {
	            _vm.focus = true;
	          },
	          blur: function($event) {
	            _vm.focus = false;
	          }
	        }
	      }),
	      _c(
	        "span",
	        {
	          staticClass: "el-radio-button__inner",
	          style: _vm.value === _vm.label ? _vm.activeStyle : null,
	          on: {
	            keydown: function($event) {
	              $event.stopPropagation();
	            }
	          }
	        },
	        [
	          _vm._t("default"),
	          !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e()
	        ],
	        2
	      )
	    ]
	  )
	};
	var radio_buttonvue_type_template_id_18a77a32_staticRenderFns = [];
	radio_buttonvue_type_template_id_18a77a32_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue?vue&type=template&id=18a77a32&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-button.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var radio_buttonvue_type_script_lang_js_ = ({
	  name: 'ElRadioButton',

	  mixins: [emitter_default.a],

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  props: {
	    label: {},
	    disabled: Boolean,
	    name: String
	  },
	  data: function data() {
	    return {
	      focus: false
	    };
	  },

	  computed: {
	    value: {
	      get: function get() {
	        return this._radioGroup.value;
	      },
	      set: function set(value) {
	        this._radioGroup.$emit('input', value);
	      }
	    },
	    _radioGroup: function _radioGroup() {
	      var parent = this.$parent;
	      while (parent) {
	        if (parent.$options.componentName !== 'ElRadioGroup') {
	          parent = parent.$parent;
	        } else {
	          return parent;
	        }
	      }
	      return false;
	    },
	    activeStyle: function activeStyle() {
	      return {
	        backgroundColor: this._radioGroup.fill || '',
	        borderColor: this._radioGroup.fill || '',
	        boxShadow: this._radioGroup.fill ? '-1px 0 0 0 ' + this._radioGroup.fill : '',
	        color: this._radioGroup.textColor || ''
	      };
	    },
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    size: function size() {
	      return this._radioGroup.radioGroupSize || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    isDisabled: function isDisabled() {
	      return this.disabled || this._radioGroup.disabled || (this.elForm || {}).disabled;
	    },
	    tabIndex: function tabIndex() {
	      return this.isDisabled || this._radioGroup && this.value !== this.label ? -1 : 0;
	    }
	  },

	  methods: {
	    handleChange: function handleChange() {
	      var _this = this;

	      this.$nextTick(function () {
	        _this.dispatch('ElRadioGroup', 'handleChange', _this.value);
	      });
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_radio_buttonvue_type_script_lang_js_ = (radio_buttonvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue





	/* normalize component */

	var radio_button_component = normalizeComponent(
	  src_radio_buttonvue_type_script_lang_js_,
	  radio_buttonvue_type_template_id_18a77a32_render,
	  radio_buttonvue_type_template_id_18a77a32_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	radio_button_component.options.__file = "packages/radio/src/radio-button.vue";
	/* harmony default export */ var radio_button = (radio_button_component.exports);
	// CONCATENATED MODULE: ./packages/radio-button/index.js


	/* istanbul ignore next */
	radio_button.install = function (Vue) {
	  Vue.component(radio_button.name, radio_button);
	};

	/* harmony default export */ var packages_radio_button = (radio_button);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox.vue?vue&type=template&id=d0387074&
	var checkboxvue_type_template_id_d0387074_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "label",
	    {
	      staticClass: "el-checkbox",
	      class: [
	        _vm.border && _vm.checkboxSize
	          ? "el-checkbox--" + _vm.checkboxSize
	          : "",
	        { "is-disabled": _vm.isDisabled },
	        { "is-bordered": _vm.border },
	        { "is-checked": _vm.isChecked }
	      ],
	      attrs: { id: _vm.id }
	    },
	    [
	      _c(
	        "span",
	        {
	          staticClass: "el-checkbox__input",
	          class: {
	            "is-disabled": _vm.isDisabled,
	            "is-checked": _vm.isChecked,
	            "is-indeterminate": _vm.indeterminate,
	            "is-focus": _vm.focus
	          },
	          attrs: {
	            tabindex: _vm.indeterminate ? 0 : false,
	            role: _vm.indeterminate ? "checkbox" : false,
	            "aria-checked": _vm.indeterminate ? "mixed" : false
	          }
	        },
	        [
	          _c("span", { staticClass: "el-checkbox__inner" }),
	          _vm.trueLabel || _vm.falseLabel
	            ? _c("input", {
	                directives: [
	                  {
	                    name: "model",
	                    rawName: "v-model",
	                    value: _vm.model,
	                    expression: "model"
	                  }
	                ],
	                staticClass: "el-checkbox__original",
	                attrs: {
	                  type: "checkbox",
	                  "aria-hidden": _vm.indeterminate ? "true" : "false",
	                  name: _vm.name,
	                  disabled: _vm.isDisabled,
	                  "true-value": _vm.trueLabel,
	                  "false-value": _vm.falseLabel
	                },
	                domProps: {
	                  checked: Array.isArray(_vm.model)
	                    ? _vm._i(_vm.model, null) > -1
	                    : _vm._q(_vm.model, _vm.trueLabel)
	                },
	                on: {
	                  change: [
	                    function($event) {
	                      var $$a = _vm.model,
	                        $$el = $event.target,
	                        $$c = $$el.checked ? _vm.trueLabel : _vm.falseLabel;
	                      if (Array.isArray($$a)) {
	                        var $$v = null,
	                          $$i = _vm._i($$a, $$v);
	                        if ($$el.checked) {
	                          $$i < 0 && (_vm.model = $$a.concat([$$v]));
	                        } else {
	                          $$i > -1 &&
	                            (_vm.model = $$a
	                              .slice(0, $$i)
	                              .concat($$a.slice($$i + 1)));
	                        }
	                      } else {
	                        _vm.model = $$c;
	                      }
	                    },
	                    _vm.handleChange
	                  ],
	                  focus: function($event) {
	                    _vm.focus = true;
	                  },
	                  blur: function($event) {
	                    _vm.focus = false;
	                  }
	                }
	              })
	            : _c("input", {
	                directives: [
	                  {
	                    name: "model",
	                    rawName: "v-model",
	                    value: _vm.model,
	                    expression: "model"
	                  }
	                ],
	                staticClass: "el-checkbox__original",
	                attrs: {
	                  type: "checkbox",
	                  "aria-hidden": _vm.indeterminate ? "true" : "false",
	                  disabled: _vm.isDisabled,
	                  name: _vm.name
	                },
	                domProps: {
	                  value: _vm.label,
	                  checked: Array.isArray(_vm.model)
	                    ? _vm._i(_vm.model, _vm.label) > -1
	                    : _vm.model
	                },
	                on: {
	                  change: [
	                    function($event) {
	                      var $$a = _vm.model,
	                        $$el = $event.target,
	                        $$c = $$el.checked ? true : false;
	                      if (Array.isArray($$a)) {
	                        var $$v = _vm.label,
	                          $$i = _vm._i($$a, $$v);
	                        if ($$el.checked) {
	                          $$i < 0 && (_vm.model = $$a.concat([$$v]));
	                        } else {
	                          $$i > -1 &&
	                            (_vm.model = $$a
	                              .slice(0, $$i)
	                              .concat($$a.slice($$i + 1)));
	                        }
	                      } else {
	                        _vm.model = $$c;
	                      }
	                    },
	                    _vm.handleChange
	                  ],
	                  focus: function($event) {
	                    _vm.focus = true;
	                  },
	                  blur: function($event) {
	                    _vm.focus = false;
	                  }
	                }
	              })
	        ]
	      ),
	      _vm.$slots.default || _vm.label
	        ? _c(
	            "span",
	            { staticClass: "el-checkbox__label" },
	            [
	              _vm._t("default"),
	              !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e()
	            ],
	            2
	          )
	        : _vm._e()
	    ]
	  )
	};
	var checkboxvue_type_template_id_d0387074_staticRenderFns = [];
	checkboxvue_type_template_id_d0387074_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue?vue&type=template&id=d0387074&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var checkboxvue_type_script_lang_js_ = ({
	  name: 'ElCheckbox',

	  mixins: [emitter_default.a],

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  componentName: 'ElCheckbox',

	  data: function data() {
	    return {
	      selfModel: false,
	      focus: false,
	      isLimitExceeded: false
	    };
	  },


	  computed: {
	    model: {
	      get: function get() {
	        return this.isGroup ? this.store : this.value !== undefined ? this.value : this.selfModel;
	      },
	      set: function set(val) {
	        if (this.isGroup) {
	          this.isLimitExceeded = false;
	          this._checkboxGroup.min !== undefined && val.length < this._checkboxGroup.min && (this.isLimitExceeded = true);

	          this._checkboxGroup.max !== undefined && val.length > this._checkboxGroup.max && (this.isLimitExceeded = true);

	          this.isLimitExceeded === false && this.dispatch('ElCheckboxGroup', 'input', [val]);
	        } else {
	          this.$emit('input', val);
	          this.selfModel = val;
	        }
	      }
	    },

	    isChecked: function isChecked() {
	      if ({}.toString.call(this.model) === '[object Boolean]') {
	        return this.model;
	      } else if (Array.isArray(this.model)) {
	        return this.model.indexOf(this.label) > -1;
	      } else if (this.model !== null && this.model !== undefined) {
	        return this.model === this.trueLabel;
	      }
	    },
	    isGroup: function isGroup() {
	      var parent = this.$parent;
	      while (parent) {
	        if (parent.$options.componentName !== 'ElCheckboxGroup') {
	          parent = parent.$parent;
	        } else {
	          this._checkboxGroup = parent;
	          return true;
	        }
	      }
	      return false;
	    },
	    store: function store() {
	      return this._checkboxGroup ? this._checkboxGroup.value : this.value;
	    },


	    /* used to make the isDisabled judgment under max/min props */
	    isLimitDisabled: function isLimitDisabled() {
	      var _checkboxGroup = this._checkboxGroup,
	          max = _checkboxGroup.max,
	          min = _checkboxGroup.min;

	      return !!(max || min) && this.model.length >= max && !this.isChecked || this.model.length <= min && this.isChecked;
	    },
	    isDisabled: function isDisabled() {
	      return this.isGroup ? this._checkboxGroup.disabled || this.disabled || (this.elForm || {}).disabled || this.isLimitDisabled : this.disabled || (this.elForm || {}).disabled;
	    },
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    checkboxSize: function checkboxSize() {
	      var temCheckboxSize = this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	      return this.isGroup ? this._checkboxGroup.checkboxGroupSize || temCheckboxSize : temCheckboxSize;
	    }
	  },

	  props: {
	    value: {},
	    label: {},
	    indeterminate: Boolean,
	    disabled: Boolean,
	    checked: Boolean,
	    name: String,
	    trueLabel: [String, Number],
	    falseLabel: [String, Number],
	    id: String, /* 当indeterminate为真时，为controls提供相关连的checkbox的id，表明元素间的控制关系*/
	    controls: String, /* 当indeterminate为真时，为controls提供相关连的checkbox的id，表明元素间的控制关系*/
	    border: Boolean,
	    size: String
	  },

	  methods: {
	    addToStore: function addToStore() {
	      if (Array.isArray(this.model) && this.model.indexOf(this.label) === -1) {
	        this.model.push(this.label);
	      } else {
	        this.model = this.trueLabel || true;
	      }
	    },
	    handleChange: function handleChange(ev) {
	      var _this = this;

	      if (this.isLimitExceeded) return;
	      var value = void 0;
	      if (ev.target.checked) {
	        value = this.trueLabel === undefined ? true : this.trueLabel;
	      } else {
	        value = this.falseLabel === undefined ? false : this.falseLabel;
	      }
	      this.$emit('change', value, ev);
	      this.$nextTick(function () {
	        if (_this.isGroup) {
	          _this.dispatch('ElCheckboxGroup', 'change', [_this._checkboxGroup.value]);
	        }
	      });
	    }
	  },

	  created: function created() {
	    this.checked && this.addToStore();
	  },
	  mounted: function mounted() {
	    // 为indeterminate元素 添加aria-controls 属性
	    if (this.indeterminate) {
	      this.$el.setAttribute('aria-controls', this.controls);
	    }
	  },


	  watch: {
	    value: function value(_value) {
	      this.dispatch('ElFormItem', 'el.form.change', _value);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_checkboxvue_type_script_lang_js_ = (checkboxvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue





	/* normalize component */

	var checkbox_component = normalizeComponent(
	  src_checkboxvue_type_script_lang_js_,
	  checkboxvue_type_template_id_d0387074_render,
	  checkboxvue_type_template_id_d0387074_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	checkbox_component.options.__file = "packages/checkbox/src/checkbox.vue";
	/* harmony default export */ var src_checkbox = (checkbox_component.exports);
	// CONCATENATED MODULE: ./packages/checkbox/index.js


	/* istanbul ignore next */
	src_checkbox.install = function (Vue) {
	  Vue.component(src_checkbox.name, src_checkbox);
	};

	/* harmony default export */ var packages_checkbox = (src_checkbox);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-button.vue?vue&type=template&id=478e906e&
	var checkbox_buttonvue_type_template_id_478e906e_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "label",
	    {
	      staticClass: "el-checkbox-button",
	      class: [
	        _vm.size ? "el-checkbox-button--" + _vm.size : "",
	        { "is-disabled": _vm.isDisabled },
	        { "is-checked": _vm.isChecked },
	        { "is-focus": _vm.focus }
	      ],
	      attrs: {
	        role: "checkbox",
	        "aria-checked": _vm.isChecked,
	        "aria-disabled": _vm.isDisabled
	      }
	    },
	    [
	      _vm.trueLabel || _vm.falseLabel
	        ? _c("input", {
	            directives: [
	              {
	                name: "model",
	                rawName: "v-model",
	                value: _vm.model,
	                expression: "model"
	              }
	            ],
	            staticClass: "el-checkbox-button__original",
	            attrs: {
	              type: "checkbox",
	              name: _vm.name,
	              disabled: _vm.isDisabled,
	              "true-value": _vm.trueLabel,
	              "false-value": _vm.falseLabel
	            },
	            domProps: {
	              checked: Array.isArray(_vm.model)
	                ? _vm._i(_vm.model, null) > -1
	                : _vm._q(_vm.model, _vm.trueLabel)
	            },
	            on: {
	              change: [
	                function($event) {
	                  var $$a = _vm.model,
	                    $$el = $event.target,
	                    $$c = $$el.checked ? _vm.trueLabel : _vm.falseLabel;
	                  if (Array.isArray($$a)) {
	                    var $$v = null,
	                      $$i = _vm._i($$a, $$v);
	                    if ($$el.checked) {
	                      $$i < 0 && (_vm.model = $$a.concat([$$v]));
	                    } else {
	                      $$i > -1 &&
	                        (_vm.model = $$a
	                          .slice(0, $$i)
	                          .concat($$a.slice($$i + 1)));
	                    }
	                  } else {
	                    _vm.model = $$c;
	                  }
	                },
	                _vm.handleChange
	              ],
	              focus: function($event) {
	                _vm.focus = true;
	              },
	              blur: function($event) {
	                _vm.focus = false;
	              }
	            }
	          })
	        : _c("input", {
	            directives: [
	              {
	                name: "model",
	                rawName: "v-model",
	                value: _vm.model,
	                expression: "model"
	              }
	            ],
	            staticClass: "el-checkbox-button__original",
	            attrs: {
	              type: "checkbox",
	              name: _vm.name,
	              disabled: _vm.isDisabled
	            },
	            domProps: {
	              value: _vm.label,
	              checked: Array.isArray(_vm.model)
	                ? _vm._i(_vm.model, _vm.label) > -1
	                : _vm.model
	            },
	            on: {
	              change: [
	                function($event) {
	                  var $$a = _vm.model,
	                    $$el = $event.target,
	                    $$c = $$el.checked ? true : false;
	                  if (Array.isArray($$a)) {
	                    var $$v = _vm.label,
	                      $$i = _vm._i($$a, $$v);
	                    if ($$el.checked) {
	                      $$i < 0 && (_vm.model = $$a.concat([$$v]));
	                    } else {
	                      $$i > -1 &&
	                        (_vm.model = $$a
	                          .slice(0, $$i)
	                          .concat($$a.slice($$i + 1)));
	                    }
	                  } else {
	                    _vm.model = $$c;
	                  }
	                },
	                _vm.handleChange
	              ],
	              focus: function($event) {
	                _vm.focus = true;
	              },
	              blur: function($event) {
	                _vm.focus = false;
	              }
	            }
	          }),
	      _vm.$slots.default || _vm.label
	        ? _c(
	            "span",
	            {
	              staticClass: "el-checkbox-button__inner",
	              style: _vm.isChecked ? _vm.activeStyle : null
	            },
	            [_vm._t("default", [_vm._v(_vm._s(_vm.label))])],
	            2
	          )
	        : _vm._e()
	    ]
	  )
	};
	var checkbox_buttonvue_type_template_id_478e906e_staticRenderFns = [];
	checkbox_buttonvue_type_template_id_478e906e_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-button.vue?vue&type=template&id=478e906e&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-button.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var checkbox_buttonvue_type_script_lang_js_ = ({
	  name: 'ElCheckboxButton',

	  mixins: [emitter_default.a],

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  data: function data() {
	    return {
	      selfModel: false,
	      focus: false,
	      isLimitExceeded: false
	    };
	  },


	  props: {
	    value: {},
	    label: {},
	    disabled: Boolean,
	    checked: Boolean,
	    name: String,
	    trueLabel: [String, Number],
	    falseLabel: [String, Number]
	  },
	  computed: {
	    model: {
	      get: function get() {
	        return this._checkboxGroup ? this.store : this.value !== undefined ? this.value : this.selfModel;
	      },
	      set: function set(val) {
	        if (this._checkboxGroup) {
	          this.isLimitExceeded = false;
	          this._checkboxGroup.min !== undefined && val.length < this._checkboxGroup.min && (this.isLimitExceeded = true);

	          this._checkboxGroup.max !== undefined && val.length > this._checkboxGroup.max && (this.isLimitExceeded = true);

	          this.isLimitExceeded === false && this.dispatch('ElCheckboxGroup', 'input', [val]);
	        } else if (this.value !== undefined) {
	          this.$emit('input', val);
	        } else {
	          this.selfModel = val;
	        }
	      }
	    },

	    isChecked: function isChecked() {
	      if ({}.toString.call(this.model) === '[object Boolean]') {
	        return this.model;
	      } else if (Array.isArray(this.model)) {
	        return this.model.indexOf(this.label) > -1;
	      } else if (this.model !== null && this.model !== undefined) {
	        return this.model === this.trueLabel;
	      }
	    },
	    _checkboxGroup: function _checkboxGroup() {
	      var parent = this.$parent;
	      while (parent) {
	        if (parent.$options.componentName !== 'ElCheckboxGroup') {
	          parent = parent.$parent;
	        } else {
	          return parent;
	        }
	      }
	      return false;
	    },
	    store: function store() {
	      return this._checkboxGroup ? this._checkboxGroup.value : this.value;
	    },
	    activeStyle: function activeStyle() {
	      return {
	        backgroundColor: this._checkboxGroup.fill || '',
	        borderColor: this._checkboxGroup.fill || '',
	        color: this._checkboxGroup.textColor || '',
	        'box-shadow': '-1px 0 0 0 ' + this._checkboxGroup.fill

	      };
	    },
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    size: function size() {
	      return this._checkboxGroup.checkboxGroupSize || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },


	    /* used to make the isDisabled judgment under max/min props */
	    isLimitDisabled: function isLimitDisabled() {
	      var _checkboxGroup2 = this._checkboxGroup,
	          max = _checkboxGroup2.max,
	          min = _checkboxGroup2.min;

	      return !!(max || min) && this.model.length >= max && !this.isChecked || this.model.length <= min && this.isChecked;
	    },
	    isDisabled: function isDisabled() {
	      return this._checkboxGroup ? this._checkboxGroup.disabled || this.disabled || (this.elForm || {}).disabled || this.isLimitDisabled : this.disabled || (this.elForm || {}).disabled;
	    }
	  },
	  methods: {
	    addToStore: function addToStore() {
	      if (Array.isArray(this.model) && this.model.indexOf(this.label) === -1) {
	        this.model.push(this.label);
	      } else {
	        this.model = this.trueLabel || true;
	      }
	    },
	    handleChange: function handleChange(ev) {
	      var _this = this;

	      if (this.isLimitExceeded) return;
	      var value = void 0;
	      if (ev.target.checked) {
	        value = this.trueLabel === undefined ? true : this.trueLabel;
	      } else {
	        value = this.falseLabel === undefined ? false : this.falseLabel;
	      }
	      this.$emit('change', value, ev);
	      this.$nextTick(function () {
	        if (_this._checkboxGroup) {
	          _this.dispatch('ElCheckboxGroup', 'change', [_this._checkboxGroup.value]);
	        }
	      });
	    }
	  },

	  created: function created() {
	    this.checked && this.addToStore();
	  }
	});
	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-button.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_checkbox_buttonvue_type_script_lang_js_ = (checkbox_buttonvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-button.vue





	/* normalize component */

	var checkbox_button_component = normalizeComponent(
	  src_checkbox_buttonvue_type_script_lang_js_,
	  checkbox_buttonvue_type_template_id_478e906e_render,
	  checkbox_buttonvue_type_template_id_478e906e_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	checkbox_button_component.options.__file = "packages/checkbox/src/checkbox-button.vue";
	/* harmony default export */ var checkbox_button = (checkbox_button_component.exports);
	// CONCATENATED MODULE: ./packages/checkbox-button/index.js


	/* istanbul ignore next */
	checkbox_button.install = function (Vue) {
	  Vue.component(checkbox_button.name, checkbox_button);
	};

	/* harmony default export */ var packages_checkbox_button = (checkbox_button);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-group.vue?vue&type=template&id=7289a290&
	var checkbox_groupvue_type_template_id_7289a290_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-checkbox-group",
	      attrs: { role: "group", "aria-label": "checkbox-group" }
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var checkbox_groupvue_type_template_id_7289a290_staticRenderFns = [];
	checkbox_groupvue_type_template_id_7289a290_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue?vue&type=template&id=7289a290&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&



	/* harmony default export */ var checkbox_groupvue_type_script_lang_js_ = ({
	  name: 'ElCheckboxGroup',

	  componentName: 'ElCheckboxGroup',

	  mixins: [emitter_default.a],

	  inject: {
	    elFormItem: {
	      default: ''
	    }
	  },

	  props: {
	    value: {},
	    disabled: Boolean,
	    min: Number,
	    max: Number,
	    size: String,
	    fill: String,
	    textColor: String
	  },

	  computed: {
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    checkboxGroupSize: function checkboxGroupSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    }
	  },

	  watch: {
	    value: function value(_value) {
	      this.dispatch('ElFormItem', 'el.form.change', [_value]);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_checkbox_groupvue_type_script_lang_js_ = (checkbox_groupvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue





	/* normalize component */

	var checkbox_group_component = normalizeComponent(
	  src_checkbox_groupvue_type_script_lang_js_,
	  checkbox_groupvue_type_template_id_7289a290_render,
	  checkbox_groupvue_type_template_id_7289a290_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	checkbox_group_component.options.__file = "packages/checkbox/src/checkbox-group.vue";
	/* harmony default export */ var checkbox_group = (checkbox_group_component.exports);
	// CONCATENATED MODULE: ./packages/checkbox-group/index.js


	/* istanbul ignore next */
	checkbox_group.install = function (Vue) {
	  Vue.component(checkbox_group.name, checkbox_group);
	};

	/* harmony default export */ var packages_checkbox_group = (checkbox_group);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/switch/src/component.vue?vue&type=template&id=2dcd8fbb&
	var componentvue_type_template_id_2dcd8fbb_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-switch",
	      class: { "is-disabled": _vm.switchDisabled, "is-checked": _vm.checked },
	      attrs: {
	        role: "switch",
	        "aria-checked": _vm.checked,
	        "aria-disabled": _vm.switchDisabled
	      },
	      on: {
	        click: function($event) {
	          $event.preventDefault();
	          return _vm.switchValue($event)
	        }
	      }
	    },
	    [
	      _c("input", {
	        ref: "input",
	        staticClass: "el-switch__input",
	        attrs: {
	          type: "checkbox",
	          id: _vm.id,
	          name: _vm.name,
	          "true-value": _vm.activeValue,
	          "false-value": _vm.inactiveValue,
	          disabled: _vm.switchDisabled
	        },
	        on: {
	          change: _vm.handleChange,
	          keydown: function($event) {
	            if (
	              !("button" in $event) &&
	              _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
	            ) {
	              return null
	            }
	            return _vm.switchValue($event)
	          }
	        }
	      }),
	      _vm.inactiveIconClass || _vm.inactiveText
	        ? _c(
	            "span",
	            {
	              class: [
	                "el-switch__label",
	                "el-switch__label--left",
	                !_vm.checked ? "is-active" : ""
	              ]
	            },
	            [
	              _vm.inactiveIconClass
	                ? _c("i", { class: [_vm.inactiveIconClass] })
	                : _vm._e(),
	              !_vm.inactiveIconClass && _vm.inactiveText
	                ? _c("span", { attrs: { "aria-hidden": _vm.checked } }, [
	                    _vm._v(_vm._s(_vm.inactiveText))
	                  ])
	                : _vm._e()
	            ]
	          )
	        : _vm._e(),
	      _c("span", {
	        ref: "core",
	        staticClass: "el-switch__core",
	        style: { width: _vm.coreWidth + "px" }
	      }),
	      _vm.activeIconClass || _vm.activeText
	        ? _c(
	            "span",
	            {
	              class: [
	                "el-switch__label",
	                "el-switch__label--right",
	                _vm.checked ? "is-active" : ""
	              ]
	            },
	            [
	              _vm.activeIconClass
	                ? _c("i", { class: [_vm.activeIconClass] })
	                : _vm._e(),
	              !_vm.activeIconClass && _vm.activeText
	                ? _c("span", { attrs: { "aria-hidden": !_vm.checked } }, [
	                    _vm._v(_vm._s(_vm.activeText))
	                  ])
	                : _vm._e()
	            ]
	          )
	        : _vm._e()
	    ]
	  )
	};
	var componentvue_type_template_id_2dcd8fbb_staticRenderFns = [];
	componentvue_type_template_id_2dcd8fbb_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/switch/src/component.vue?vue&type=template&id=2dcd8fbb&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/switch/src/component.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var switch_src_componentvue_type_script_lang_js_ = ({
	  name: 'ElSwitch',
	  mixins: [focus_default()('input'), migrating_default.a, emitter_default.a],
	  inject: {
	    elForm: {
	      default: ''
	    }
	  },
	  props: {
	    value: {
	      type: [Boolean, String, Number],
	      default: false
	    },
	    disabled: {
	      type: Boolean,
	      default: false
	    },
	    width: {
	      type: Number,
	      default: 40
	    },
	    activeIconClass: {
	      type: String,
	      default: ''
	    },
	    inactiveIconClass: {
	      type: String,
	      default: ''
	    },
	    activeText: String,
	    inactiveText: String,
	    activeColor: {
	      type: String,
	      default: ''
	    },
	    inactiveColor: {
	      type: String,
	      default: ''
	    },
	    activeValue: {
	      type: [Boolean, String, Number],
	      default: true
	    },
	    inactiveValue: {
	      type: [Boolean, String, Number],
	      default: false
	    },
	    name: {
	      type: String,
	      default: ''
	    },
	    validateEvent: {
	      type: Boolean,
	      default: true
	    },
	    id: String
	  },
	  data: function data() {
	    return {
	      coreWidth: this.width
	    };
	  },
	  created: function created() {
	    if (!~[this.activeValue, this.inactiveValue].indexOf(this.value)) {
	      this.$emit('input', this.inactiveValue);
	    }
	  },

	  computed: {
	    checked: function checked() {
	      return this.value === this.activeValue;
	    },
	    switchDisabled: function switchDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    }
	  },
	  watch: {
	    checked: function checked() {
	      this.$refs.input.checked = this.checked;
	      if (this.activeColor || this.inactiveColor) {
	        this.setBackgroundColor();
	      }
	      if (this.validateEvent) {
	        this.dispatch('ElFormItem', 'el.form.change', [this.value]);
	      }
	    }
	  },
	  methods: {
	    handleChange: function handleChange(event) {
	      var _this = this;

	      var val = this.checked ? this.inactiveValue : this.activeValue;
	      this.$emit('input', val);
	      this.$emit('change', val);
	      this.$nextTick(function () {
	        // set input's checked property
	        // in case parent refuses to change component's value
	        if (_this.$refs.input) {
	          _this.$refs.input.checked = _this.checked;
	        }
	      });
	    },
	    setBackgroundColor: function setBackgroundColor() {
	      var newColor = this.checked ? this.activeColor : this.inactiveColor;
	      this.$refs.core.style.borderColor = newColor;
	      this.$refs.core.style.backgroundColor = newColor;
	    },
	    switchValue: function switchValue() {
	      !this.switchDisabled && this.handleChange();
	    },
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'on-color': 'on-color is renamed to active-color.',
	          'off-color': 'off-color is renamed to inactive-color.',
	          'on-text': 'on-text is renamed to active-text.',
	          'off-text': 'off-text is renamed to inactive-text.',
	          'on-value': 'on-value is renamed to active-value.',
	          'off-value': 'off-value is renamed to inactive-value.',
	          'on-icon-class': 'on-icon-class is renamed to active-icon-class.',
	          'off-icon-class': 'off-icon-class is renamed to inactive-icon-class.'
	        }
	      };
	    }
	  },
	  mounted: function mounted() {
	    /* istanbul ignore if */
	    this.coreWidth = this.width || 40;
	    if (this.activeColor || this.inactiveColor) {
	      this.setBackgroundColor();
	    }
	    this.$refs.input.checked = this.checked;
	  }
	});
	// CONCATENATED MODULE: ./packages/switch/src/component.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_switch_src_componentvue_type_script_lang_js_ = (switch_src_componentvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/switch/src/component.vue





	/* normalize component */

	var src_component_component = normalizeComponent(
	  packages_switch_src_componentvue_type_script_lang_js_,
	  componentvue_type_template_id_2dcd8fbb_render,
	  componentvue_type_template_id_2dcd8fbb_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	src_component_component.options.__file = "packages/switch/src/component.vue";
	/* harmony default export */ var switch_src_component = (src_component_component.exports);
	// CONCATENATED MODULE: ./packages/switch/index.js


	/* istanbul ignore next */
	switch_src_component.install = function (Vue) {
	  Vue.component(switch_src_component.name, switch_src_component);
	};

	/* harmony default export */ var packages_switch = (switch_src_component);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=template&id=0e4aade6&
	var selectvue_type_template_id_0e4aade6_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      directives: [
	        {
	          name: "clickoutside",
	          rawName: "v-clickoutside",
	          value: _vm.handleClose,
	          expression: "handleClose"
	        }
	      ],
	      staticClass: "el-select",
	      class: [_vm.selectSize ? "el-select--" + _vm.selectSize : ""],
	      on: {
	        click: function($event) {
	          $event.stopPropagation();
	          return _vm.toggleMenu($event)
	        }
	      }
	    },
	    [
	      _vm.multiple
	        ? _c(
	            "div",
	            {
	              ref: "tags",
	              staticClass: "el-select__tags",
	              style: { "max-width": _vm.inputWidth - 32 + "px", width: "100%" }
	            },
	            [
	              _vm.collapseTags && _vm.selected.length
	                ? _c(
	                    "span",
	                    [
	                      _c(
	                        "el-tag",
	                        {
	                          attrs: {
	                            closable: !_vm.selectDisabled,
	                            size: _vm.collapseTagSize,
	                            hit: _vm.selected[0].hitState,
	                            type: "info",
	                            "disable-transitions": ""
	                          },
	                          on: {
	                            close: function($event) {
	                              _vm.deleteTag($event, _vm.selected[0]);
	                            }
	                          }
	                        },
	                        [
	                          _c("span", { staticClass: "el-select__tags-text" }, [
	                            _vm._v(_vm._s(_vm.selected[0].currentLabel))
	                          ])
	                        ]
	                      ),
	                      _vm.selected.length > 1
	                        ? _c(
	                            "el-tag",
	                            {
	                              attrs: {
	                                closable: false,
	                                size: _vm.collapseTagSize,
	                                type: "info",
	                                "disable-transitions": ""
	                              }
	                            },
	                            [
	                              _c(
	                                "span",
	                                { staticClass: "el-select__tags-text" },
	                                [_vm._v("+ " + _vm._s(_vm.selected.length - 1))]
	                              )
	                            ]
	                          )
	                        : _vm._e()
	                    ],
	                    1
	                  )
	                : _vm._e(),
	              !_vm.collapseTags
	                ? _c(
	                    "transition-group",
	                    { on: { "after-leave": _vm.resetInputHeight } },
	                    _vm._l(_vm.selected, function(item) {
	                      return _c(
	                        "el-tag",
	                        {
	                          key: _vm.getValueKey(item),
	                          attrs: {
	                            closable: !_vm.selectDisabled,
	                            size: _vm.collapseTagSize,
	                            hit: item.hitState,
	                            type: "info",
	                            "disable-transitions": ""
	                          },
	                          on: {
	                            close: function($event) {
	                              _vm.deleteTag($event, item);
	                            }
	                          }
	                        },
	                        [
	                          _c("span", { staticClass: "el-select__tags-text" }, [
	                            _vm._v(_vm._s(item.currentLabel))
	                          ])
	                        ]
	                      )
	                    }),
	                    1
	                  )
	                : _vm._e(),
	              _vm.filterable
	                ? _c("input", {
	                    directives: [
	                      {
	                        name: "model",
	                        rawName: "v-model",
	                        value: _vm.query,
	                        expression: "query"
	                      }
	                    ],
	                    ref: "input",
	                    staticClass: "el-select__input",
	                    class: [_vm.selectSize ? "is-" + _vm.selectSize : ""],
	                    style: {
	                      "flex-grow": "1",
	                      width: _vm.inputLength / (_vm.inputWidth - 32) + "%",
	                      "max-width": _vm.inputWidth - 42 + "px"
	                    },
	                    attrs: {
	                      type: "text",
	                      disabled: _vm.selectDisabled,
	                      autocomplete: _vm.autoComplete || _vm.autocomplete
	                    },
	                    domProps: { value: _vm.query },
	                    on: {
	                      focus: _vm.handleFocus,
	                      blur: function($event) {
	                        _vm.softFocus = false;
	                      },
	                      keyup: _vm.managePlaceholder,
	                      keydown: [
	                        _vm.resetInputState,
	                        function($event) {
	                          if (
	                            !("button" in $event) &&
	                            _vm._k($event.keyCode, "down", 40, $event.key, [
	                              "Down",
	                              "ArrowDown"
	                            ])
	                          ) {
	                            return null
	                          }
	                          $event.preventDefault();
	                          _vm.handleNavigate("next");
	                        },
	                        function($event) {
	                          if (
	                            !("button" in $event) &&
	                            _vm._k($event.keyCode, "up", 38, $event.key, [
	                              "Up",
	                              "ArrowUp"
	                            ])
	                          ) {
	                            return null
	                          }
	                          $event.preventDefault();
	                          _vm.handleNavigate("prev");
	                        },
	                        function($event) {
	                          if (
	                            !("button" in $event) &&
	                            _vm._k(
	                              $event.keyCode,
	                              "enter",
	                              13,
	                              $event.key,
	                              "Enter"
	                            )
	                          ) {
	                            return null
	                          }
	                          $event.preventDefault();
	                          return _vm.selectOption($event)
	                        },
	                        function($event) {
	                          if (
	                            !("button" in $event) &&
	                            _vm._k($event.keyCode, "esc", 27, $event.key, [
	                              "Esc",
	                              "Escape"
	                            ])
	                          ) {
	                            return null
	                          }
	                          $event.stopPropagation();
	                          $event.preventDefault();
	                          _vm.visible = false;
	                        },
	                        function($event) {
	                          if (
	                            !("button" in $event) &&
	                            _vm._k(
	                              $event.keyCode,
	                              "delete",
	                              [8, 46],
	                              $event.key,
	                              ["Backspace", "Delete", "Del"]
	                            )
	                          ) {
	                            return null
	                          }
	                          return _vm.deletePrevTag($event)
	                        },
	                        function($event) {
	                          if (
	                            !("button" in $event) &&
	                            _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
	                          ) {
	                            return null
	                          }
	                          _vm.visible = false;
	                        }
	                      ],
	                      compositionstart: _vm.handleComposition,
	                      compositionupdate: _vm.handleComposition,
	                      compositionend: _vm.handleComposition,
	                      input: [
	                        function($event) {
	                          if ($event.target.composing) {
	                            return
	                          }
	                          _vm.query = $event.target.value;
	                        },
	                        _vm.debouncedQueryChange
	                      ]
	                    }
	                  })
	                : _vm._e()
	            ],
	            1
	          )
	        : _vm._e(),
	      _c(
	        "el-input",
	        {
	          ref: "reference",
	          class: { "is-focus": _vm.visible },
	          attrs: {
	            type: "text",
	            placeholder: _vm.currentPlaceholder,
	            name: _vm.name,
	            id: _vm.id,
	            autocomplete: _vm.autoComplete || _vm.autocomplete,
	            size: _vm.selectSize,
	            disabled: _vm.selectDisabled,
	            readonly: _vm.readonly,
	            "validate-event": false,
	            tabindex: _vm.multiple && _vm.filterable ? "-1" : null
	          },
	          on: {
	            focus: _vm.handleFocus,
	            blur: _vm.handleBlur,
	            input: _vm.debouncedOnInputChange,
	            compositionstart: _vm.handleComposition,
	            compositionupdate: _vm.handleComposition,
	            compositionend: _vm.handleComposition
	          },
	          nativeOn: {
	            keydown: [
	              function($event) {
	                if (
	                  !("button" in $event) &&
	                  _vm._k($event.keyCode, "down", 40, $event.key, [
	                    "Down",
	                    "ArrowDown"
	                  ])
	                ) {
	                  return null
	                }
	                $event.stopPropagation();
	                $event.preventDefault();
	                _vm.handleNavigate("next");
	              },
	              function($event) {
	                if (
	                  !("button" in $event) &&
	                  _vm._k($event.keyCode, "up", 38, $event.key, [
	                    "Up",
	                    "ArrowUp"
	                  ])
	                ) {
	                  return null
	                }
	                $event.stopPropagation();
	                $event.preventDefault();
	                _vm.handleNavigate("prev");
	              },
	              function($event) {
	                if (
	                  !("button" in $event) &&
	                  _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
	                ) {
	                  return null
	                }
	                $event.preventDefault();
	                return _vm.selectOption($event)
	              },
	              function($event) {
	                if (
	                  !("button" in $event) &&
	                  _vm._k($event.keyCode, "esc", 27, $event.key, [
	                    "Esc",
	                    "Escape"
	                  ])
	                ) {
	                  return null
	                }
	                $event.stopPropagation();
	                $event.preventDefault();
	                _vm.visible = false;
	              },
	              function($event) {
	                if (
	                  !("button" in $event) &&
	                  _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
	                ) {
	                  return null
	                }
	                _vm.visible = false;
	              }
	            ],
	            mouseenter: function($event) {
	              _vm.inputHovering = true;
	            },
	            mouseleave: function($event) {
	              _vm.inputHovering = false;
	            }
	          },
	          model: {
	            value: _vm.selectedLabel,
	            callback: function($$v) {
	              _vm.selectedLabel = $$v;
	            },
	            expression: "selectedLabel"
	          }
	        },
	        [
	          _vm.$slots.prefix
	            ? _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2)
	            : _vm._e(),
	          _c("template", { slot: "suffix" }, [
	            _c("i", {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: !_vm.showClose,
	                  expression: "!showClose"
	                }
	              ],
	              class: [
	                "el-select__caret",
	                "el-input__icon",
	                "el-icon-" + _vm.iconClass
	              ]
	            }),
	            _vm.showClose
	              ? _c("i", {
	                  staticClass:
	                    "el-select__caret el-input__icon el-icon-circle-close",
	                  on: { click: _vm.handleClearClick }
	                })
	              : _vm._e()
	          ])
	        ],
	        2
	      ),
	      _c(
	        "transition",
	        {
	          attrs: { name: "el-zoom-in-top" },
	          on: {
	            "before-enter": _vm.handleMenuEnter,
	            "after-leave": _vm.doDestroy
	          }
	        },
	        [
	          _c(
	            "el-select-menu",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: _vm.visible && _vm.emptyText !== false,
	                  expression: "visible && emptyText !== false"
	                }
	              ],
	              ref: "popper",
	              attrs: { "append-to-body": _vm.popperAppendToBody }
	            },
	            [
	              _c(
	                "el-scrollbar",
	                {
	                  directives: [
	                    {
	                      name: "show",
	                      rawName: "v-show",
	                      value: _vm.options.length > 0 && !_vm.loading,
	                      expression: "options.length > 0 && !loading"
	                    }
	                  ],
	                  ref: "scrollbar",
	                  class: {
	                    "is-empty":
	                      !_vm.allowCreate &&
	                      _vm.query &&
	                      _vm.filteredOptionsCount === 0
	                  },
	                  attrs: {
	                    tag: "ul",
	                    "wrap-class": "el-select-dropdown__wrap",
	                    "view-class": "el-select-dropdown__list"
	                  }
	                },
	                [
	                  _vm.showNewOption
	                    ? _c("el-option", {
	                        attrs: { value: _vm.query, created: "" }
	                      })
	                    : _vm._e(),
	                  _vm._t("default")
	                ],
	                2
	              ),
	              _vm.emptyText &&
	              (!_vm.allowCreate ||
	                _vm.loading ||
	                (_vm.allowCreate && _vm.options.length === 0))
	                ? [
	                    _vm.$slots.empty
	                      ? _vm._t("empty")
	                      : _c("p", { staticClass: "el-select-dropdown__empty" }, [
	                          _vm._v(
	                            "\n          " +
	                              _vm._s(_vm.emptyText) +
	                              "\n        "
	                          )
	                        ])
	                  ]
	                : _vm._e()
	            ],
	            2
	          )
	        ],
	        1
	      )
	    ],
	    1
	  )
	};
	var selectvue_type_template_id_0e4aade6_staticRenderFns = [];
	selectvue_type_template_id_0e4aade6_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=template&id=0e4aade6&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select-dropdown.vue?vue&type=template&id=06828748&
	var select_dropdownvue_type_template_id_06828748_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-select-dropdown el-popper",
	      class: [{ "is-multiple": _vm.$parent.multiple }, _vm.popperClass],
	      style: { minWidth: _vm.minWidth }
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var select_dropdownvue_type_template_id_06828748_staticRenderFns = [];
	select_dropdownvue_type_template_id_06828748_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue?vue&type=template&id=06828748&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select-dropdown.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var select_dropdownvue_type_script_lang_js_ = ({
	  name: 'ElSelectDropdown',

	  componentName: 'ElSelectDropdown',

	  mixins: [vue_popper_default.a],

	  props: {
	    placement: {
	      default: 'bottom-start'
	    },

	    boundariesPadding: {
	      default: 0
	    },

	    popperOptions: {
	      default: function _default() {
	        return {
	          gpuAcceleration: false
	        };
	      }
	    },

	    visibleArrow: {
	      default: true
	    },

	    appendToBody: {
	      type: Boolean,
	      default: true
	    }
	  },

	  data: function data() {
	    return {
	      minWidth: ''
	    };
	  },


	  computed: {
	    popperClass: function popperClass() {
	      return this.$parent.popperClass;
	    }
	  },

	  watch: {
	    '$parent.inputWidth': function $parentInputWidth() {
	      this.minWidth = this.$parent.$el.getBoundingClientRect().width + 'px';
	    }
	  },

	  mounted: function mounted() {
	    var _this = this;

	    this.referenceElm = this.$parent.$refs.reference.$el;
	    this.$parent.popperElm = this.popperElm = this.$el;
	    this.$on('updatePopper', function () {
	      if (_this.$parent.visible) _this.updatePopper();
	    });
	    this.$on('destroyPopper', this.destroyPopper);
	  }
	});
	// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_select_dropdownvue_type_script_lang_js_ = (select_dropdownvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue





	/* normalize component */

	var select_dropdown_component = normalizeComponent(
	  src_select_dropdownvue_type_script_lang_js_,
	  select_dropdownvue_type_template_id_06828748_render,
	  select_dropdownvue_type_template_id_06828748_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	select_dropdown_component.options.__file = "packages/select/src/select-dropdown.vue";
	/* harmony default export */ var select_dropdown = (select_dropdown_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=template&id=7a44c642&
	var optionvue_type_template_id_7a44c642_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "li",
	    {
	      directives: [
	        {
	          name: "show",
	          rawName: "v-show",
	          value: _vm.visible,
	          expression: "visible"
	        }
	      ],
	      staticClass: "el-select-dropdown__item",
	      class: {
	        selected: _vm.itemSelected,
	        "is-disabled": _vm.disabled || _vm.groupDisabled || _vm.limitReached,
	        hover: _vm.hover
	      },
	      on: {
	        mouseenter: _vm.hoverItem,
	        click: function($event) {
	          $event.stopPropagation();
	          return _vm.selectOptionClick($event)
	        }
	      }
	    },
	    [_vm._t("default", [_c("span", [_vm._v(_vm._s(_vm.currentLabel))])])],
	    2
	  )
	};
	var optionvue_type_template_id_7a44c642_staticRenderFns = [];
	optionvue_type_template_id_7a44c642_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=template&id=7a44c642&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=script&lang=js&
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//




	/* harmony default export */ var optionvue_type_script_lang_js_ = ({
	  mixins: [emitter_default.a],

	  name: 'ElOption',

	  componentName: 'ElOption',

	  inject: ['select'],

	  props: {
	    value: {
	      required: true
	    },
	    label: [String, Number],
	    created: Boolean,
	    disabled: {
	      type: Boolean,
	      default: false
	    }
	  },

	  data: function data() {
	    return {
	      index: -1,
	      groupDisabled: false,
	      visible: true,
	      hitState: false,
	      hover: false
	    };
	  },


	  computed: {
	    isObject: function isObject() {
	      return Object.prototype.toString.call(this.value).toLowerCase() === '[object object]';
	    },
	    currentLabel: function currentLabel() {
	      return this.label || (this.isObject ? '' : this.value);
	    },
	    currentValue: function currentValue() {
	      return this.value || this.label || '';
	    },
	    itemSelected: function itemSelected() {
	      if (!this.select.multiple) {
	        return this.isEqual(this.value, this.select.value);
	      } else {
	        return this.contains(this.select.value, this.value);
	      }
	    },
	    limitReached: function limitReached() {
	      if (this.select.multiple) {
	        return !this.itemSelected && (this.select.value || []).length >= this.select.multipleLimit && this.select.multipleLimit > 0;
	      } else {
	        return false;
	      }
	    }
	  },

	  watch: {
	    currentLabel: function currentLabel() {
	      if (!this.created && !this.select.remote) this.dispatch('ElSelect', 'setSelected');
	    },
	    value: function value(val, oldVal) {
	      var _select = this.select,
	          remote = _select.remote,
	          valueKey = _select.valueKey;

	      if (!this.created && !remote) {
	        if (valueKey && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && (typeof oldVal === 'undefined' ? 'undefined' : _typeof(oldVal)) === 'object' && val[valueKey] === oldVal[valueKey]) {
	          return;
	        }
	        this.dispatch('ElSelect', 'setSelected');
	      }
	    }
	  },

	  methods: {
	    isEqual: function isEqual(a, b) {
	      if (!this.isObject) {
	        return a === b;
	      } else {
	        var valueKey = this.select.valueKey;
	        return Object(util_["getValueByPath"])(a, valueKey) === Object(util_["getValueByPath"])(b, valueKey);
	      }
	    },
	    contains: function contains() {
	      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      var target = arguments[1];

	      if (!this.isObject) {
	        return arr && arr.indexOf(target) > -1;
	      } else {
	        var valueKey = this.select.valueKey;
	        return arr && arr.some(function (item) {
	          return Object(util_["getValueByPath"])(item, valueKey) === Object(util_["getValueByPath"])(target, valueKey);
	        });
	      }
	    },
	    handleGroupDisabled: function handleGroupDisabled(val) {
	      this.groupDisabled = val;
	    },
	    hoverItem: function hoverItem() {
	      if (!this.disabled && !this.groupDisabled) {
	        this.select.hoverIndex = this.select.options.indexOf(this);
	      }
	    },
	    selectOptionClick: function selectOptionClick() {
	      if (this.disabled !== true && this.groupDisabled !== true) {
	        this.dispatch('ElSelect', 'handleOptionClick', [this, true]);
	      }
	    },
	    queryChange: function queryChange(query) {
	      this.visible = new RegExp(Object(util_["escapeRegexpString"])(query), 'i').test(this.currentLabel) || this.created;
	      if (!this.visible) {
	        this.select.filteredOptionsCount--;
	      }
	    }
	  },

	  created: function created() {
	    this.select.options.push(this);
	    this.select.cachedOptions.push(this);
	    this.select.optionsCount++;
	    this.select.filteredOptionsCount++;

	    this.$on('queryChange', this.queryChange);
	    this.$on('handleGroupDisabled', this.handleGroupDisabled);
	  },
	  beforeDestroy: function beforeDestroy() {
	    var _select2 = this.select,
	        selected = _select2.selected,
	        multiple = _select2.multiple;

	    var selectedOptions = multiple ? selected : [selected];
	    var index = this.select.cachedOptions.indexOf(this);
	    var selectedIndex = selectedOptions.indexOf(this);

	    // if option is not selected, remove it from cache
	    if (index > -1 && selectedIndex < 0) {
	      this.select.cachedOptions.splice(index, 1);
	    }
	    this.select.onOptionDestroy(this.select.options.indexOf(this));
	  }
	});
	// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_optionvue_type_script_lang_js_ = (optionvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/select/src/option.vue





	/* normalize component */

	var option_component = normalizeComponent(
	  src_optionvue_type_script_lang_js_,
	  optionvue_type_template_id_7a44c642_render,
	  optionvue_type_template_id_7a44c642_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	option_component.options.__file = "packages/select/src/option.vue";
	/* harmony default export */ var src_option = (option_component.exports);
	// EXTERNAL MODULE: external "element-ui/lib/tag"
	var tag_ = __webpack_require__(30);
	var tag_default = /*#__PURE__*/__webpack_require__.n(tag_);

	// EXTERNAL MODULE: external "element-ui/lib/utils/resize-event"
	var resize_event_ = __webpack_require__(15);

	// EXTERNAL MODULE: external "element-ui/lib/utils/scroll-into-view"
	var scroll_into_view_ = __webpack_require__(27);
	var scroll_into_view_default = /*#__PURE__*/__webpack_require__.n(scroll_into_view_);

	// CONCATENATED MODULE: ./packages/select/src/navigation-mixin.js
	/* harmony default export */ var navigation_mixin = ({
	  data: function data() {
	    return {
	      hoverOption: -1
	    };
	  },


	  computed: {
	    optionsAllDisabled: function optionsAllDisabled() {
	      return this.options.filter(function (option) {
	        return option.visible;
	      }).every(function (option) {
	        return option.disabled;
	      });
	    }
	  },

	  watch: {
	    hoverIndex: function hoverIndex(val) {
	      var _this = this;

	      if (typeof val === 'number' && val > -1) {
	        this.hoverOption = this.options[val] || {};
	      }
	      this.options.forEach(function (option) {
	        option.hover = _this.hoverOption === option;
	      });
	    }
	  },

	  methods: {
	    navigateOptions: function navigateOptions(direction) {
	      var _this2 = this;

	      if (!this.visible) {
	        this.visible = true;
	        return;
	      }
	      if (this.options.length === 0 || this.filteredOptionsCount === 0) return;
	      if (!this.optionsAllDisabled) {
	        if (direction === 'next') {
	          this.hoverIndex++;
	          if (this.hoverIndex === this.options.length) {
	            this.hoverIndex = 0;
	          }
	        } else if (direction === 'prev') {
	          this.hoverIndex--;
	          if (this.hoverIndex < 0) {
	            this.hoverIndex = this.options.length - 1;
	          }
	        }
	        var option = this.options[this.hoverIndex];
	        if (option.disabled === true || option.groupDisabled === true || !option.visible) {
	          this.navigateOptions(direction);
	        }
	        this.$nextTick(function () {
	          return _this2.scrollToOption(_this2.hoverOption);
	        });
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

















	/* harmony default export */ var selectvue_type_script_lang_js_ = ({
	  mixins: [emitter_default.a, locale_default.a, focus_default()('reference'), navigation_mixin],

	  name: 'ElSelect',

	  componentName: 'ElSelect',

	  inject: {
	    elForm: {
	      default: ''
	    },

	    elFormItem: {
	      default: ''
	    }
	  },

	  provide: function provide() {
	    return {
	      'select': this
	    };
	  },


	  computed: {
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    readonly: function readonly() {
	      return !this.filterable || this.multiple || !Object(util_["isIE"])() && !Object(util_["isEdge"])() && !this.visible;
	    },
	    showClose: function showClose() {
	      var hasValue = this.multiple ? Array.isArray(this.value) && this.value.length > 0 : this.value !== undefined && this.value !== null && this.value !== '';
	      var criteria = this.clearable && !this.selectDisabled && this.inputHovering && hasValue;
	      return criteria;
	    },
	    iconClass: function iconClass() {
	      return this.remote && this.filterable ? '' : this.visible ? 'arrow-up is-reverse' : 'arrow-up';
	    },
	    debounce: function debounce() {
	      return this.remote ? 300 : 0;
	    },
	    emptyText: function emptyText() {
	      if (this.loading) {
	        return this.loadingText || this.t('el.select.loading');
	      } else {
	        if (this.remote && this.query === '' && this.options.length === 0) return false;
	        if (this.filterable && this.query && this.options.length > 0 && this.filteredOptionsCount === 0) {
	          return this.noMatchText || this.t('el.select.noMatch');
	        }
	        if (this.options.length === 0) {
	          return this.noDataText || this.t('el.select.noData');
	        }
	      }
	      return null;
	    },
	    showNewOption: function showNewOption() {
	      var _this = this;

	      var hasExistingOption = this.options.filter(function (option) {
	        return !option.created;
	      }).some(function (option) {
	        return option.currentLabel === _this.query;
	      });
	      return this.filterable && this.allowCreate && this.query !== '' && !hasExistingOption;
	    },
	    selectSize: function selectSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    selectDisabled: function selectDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    },
	    collapseTagSize: function collapseTagSize() {
	      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small';
	    },
	    propPlaceholder: function propPlaceholder() {
	      return typeof this.placeholder !== 'undefined' ? this.placeholder : this.t('el.select.placeholder');
	    }
	  },

	  components: {
	    ElInput: input_default.a,
	    ElSelectMenu: select_dropdown,
	    ElOption: src_option,
	    ElTag: tag_default.a,
	    ElScrollbar: scrollbar_default.a
	  },

	  directives: { Clickoutside: clickoutside_default.a },

	  props: {
	    name: String,
	    id: String,
	    value: {
	      required: true
	    },
	    autocomplete: {
	      type: String,
	      default: 'off'
	    },
	    /** @Deprecated in next major version */
	    autoComplete: {
	      type: String,
	      validator: function validator(val) {
	        return true;
	      }
	    },
	    automaticDropdown: Boolean,
	    size: String,
	    disabled: Boolean,
	    clearable: Boolean,
	    filterable: Boolean,
	    allowCreate: Boolean,
	    loading: Boolean,
	    popperClass: String,
	    remote: Boolean,
	    loadingText: String,
	    noMatchText: String,
	    noDataText: String,
	    remoteMethod: Function,
	    filterMethod: Function,
	    multiple: Boolean,
	    multipleLimit: {
	      type: Number,
	      default: 0
	    },
	    placeholder: {
	      type: String,
	      required: false
	    },
	    defaultFirstOption: Boolean,
	    reserveKeyword: Boolean,
	    valueKey: {
	      type: String,
	      default: 'value'
	    },
	    collapseTags: Boolean,
	    popperAppendToBody: {
	      type: Boolean,
	      default: true
	    }
	  },

	  data: function data() {
	    return {
	      options: [],
	      cachedOptions: [],
	      createdLabel: null,
	      createdSelected: false,
	      selected: this.multiple ? [] : {},
	      inputLength: 20,
	      inputWidth: 0,
	      initialInputHeight: 0,
	      cachedPlaceHolder: '',
	      optionsCount: 0,
	      filteredOptionsCount: 0,
	      visible: false,
	      softFocus: false,
	      selectedLabel: '',
	      hoverIndex: -1,
	      query: '',
	      previousQuery: null,
	      inputHovering: false,
	      currentPlaceholder: '',
	      menuVisibleOnFocus: false,
	      isOnComposition: false,
	      isSilentBlur: false
	    };
	  },


	  watch: {
	    selectDisabled: function selectDisabled() {
	      var _this2 = this;

	      this.$nextTick(function () {
	        _this2.resetInputHeight();
	      });
	    },
	    propPlaceholder: function propPlaceholder(val) {
	      this.cachedPlaceHolder = this.currentPlaceholder = val;
	    },
	    value: function value(val, oldVal) {
	      if (this.multiple) {
	        this.resetInputHeight();
	        if (val && val.length > 0 || this.$refs.input && this.query !== '') {
	          this.currentPlaceholder = '';
	        } else {
	          this.currentPlaceholder = this.cachedPlaceHolder;
	        }
	        if (this.filterable && !this.reserveKeyword) {
	          this.query = '';
	          this.handleQueryChange(this.query);
	        }
	      }
	      this.setSelected();
	      if (this.filterable && !this.multiple) {
	        this.inputLength = 20;
	      }
	      if (!Object(util_["valueEquals"])(val, oldVal)) {
	        this.dispatch('ElFormItem', 'el.form.change', val);
	      }
	    },
	    visible: function visible(val) {
	      var _this3 = this;

	      if (!val) {
	        this.broadcast('ElSelectDropdown', 'destroyPopper');
	        if (this.$refs.input) {
	          this.$refs.input.blur();
	        }
	        this.query = '';
	        this.previousQuery = null;
	        this.selectedLabel = '';
	        this.inputLength = 20;
	        this.menuVisibleOnFocus = false;
	        this.resetHoverIndex();
	        this.$nextTick(function () {
	          if (_this3.$refs.input && _this3.$refs.input.value === '' && _this3.selected.length === 0) {
	            _this3.currentPlaceholder = _this3.cachedPlaceHolder;
	          }
	        });
	        if (!this.multiple) {
	          if (this.selected) {
	            if (this.filterable && this.allowCreate && this.createdSelected && this.createdLabel) {
	              this.selectedLabel = this.createdLabel;
	            } else {
	              this.selectedLabel = this.selected.currentLabel;
	            }
	            if (this.filterable) this.query = this.selectedLabel;
	          }

	          if (this.filterable) {
	            this.currentPlaceholder = this.cachedPlaceHolder;
	          }
	        }
	      } else {
	        this.broadcast('ElSelectDropdown', 'updatePopper');
	        if (this.filterable) {
	          this.query = this.remote ? '' : this.selectedLabel;
	          this.handleQueryChange(this.query);
	          if (this.multiple) {
	            this.$refs.input.focus();
	          } else {
	            if (!this.remote) {
	              this.broadcast('ElOption', 'queryChange', '');
	              this.broadcast('ElOptionGroup', 'queryChange');
	            }

	            if (this.selectedLabel) {
	              this.currentPlaceholder = this.selectedLabel;
	              this.selectedLabel = '';
	            }
	          }
	        }
	      }
	      this.$emit('visible-change', val);
	    },
	    options: function options() {
	      var _this4 = this;

	      if (this.$isServer) return;
	      this.$nextTick(function () {
	        _this4.broadcast('ElSelectDropdown', 'updatePopper');
	      });
	      if (this.multiple) {
	        this.resetInputHeight();
	      }
	      var inputs = this.$el.querySelectorAll('input');
	      if ([].indexOf.call(inputs, document.activeElement) === -1) {
	        this.setSelected();
	      }
	      if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {
	        this.checkDefaultFirstOption();
	      }
	    }
	  },

	  methods: {
	    handleNavigate: function handleNavigate(direction) {
	      if (this.isOnComposition) return;

	      this.navigateOptions(direction);
	    },
	    handleComposition: function handleComposition(event) {
	      var _this5 = this;

	      var text = event.target.value;
	      if (event.type === 'compositionend') {
	        this.isOnComposition = false;
	        this.$nextTick(function (_) {
	          return _this5.handleQueryChange(text);
	        });
	      } else {
	        var lastCharacter = text[text.length - 1] || '';
	        this.isOnComposition = !Object(shared_["isKorean"])(lastCharacter);
	      }
	    },
	    handleQueryChange: function handleQueryChange(val) {
	      var _this6 = this;

	      if (this.previousQuery === val || this.isOnComposition) return;
	      if (this.previousQuery === null && (typeof this.filterMethod === 'function' || typeof this.remoteMethod === 'function')) {
	        this.previousQuery = val;
	        return;
	      }
	      this.previousQuery = val;
	      this.$nextTick(function () {
	        if (_this6.visible) _this6.broadcast('ElSelectDropdown', 'updatePopper');
	      });
	      this.hoverIndex = -1;
	      if (this.multiple && this.filterable) {
	        this.$nextTick(function () {
	          var length = _this6.$refs.input.value.length * 15 + 20;
	          _this6.inputLength = _this6.collapseTags ? Math.min(50, length) : length;
	          _this6.managePlaceholder();
	          _this6.resetInputHeight();
	        });
	      }
	      if (this.remote && typeof this.remoteMethod === 'function') {
	        this.hoverIndex = -1;
	        this.remoteMethod(val);
	      } else if (typeof this.filterMethod === 'function') {
	        this.filterMethod(val);
	        this.broadcast('ElOptionGroup', 'queryChange');
	      } else {
	        this.filteredOptionsCount = this.optionsCount;
	        this.broadcast('ElOption', 'queryChange', val);
	        this.broadcast('ElOptionGroup', 'queryChange');
	      }
	      if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {
	        this.checkDefaultFirstOption();
	      }
	    },
	    scrollToOption: function scrollToOption(option) {
	      var target = Array.isArray(option) && option[0] ? option[0].$el : option.$el;
	      if (this.$refs.popper && target) {
	        var menu = this.$refs.popper.$el.querySelector('.el-select-dropdown__wrap');
	        scroll_into_view_default()(menu, target);
	      }
	      this.$refs.scrollbar && this.$refs.scrollbar.handleScroll();
	    },
	    handleMenuEnter: function handleMenuEnter() {
	      var _this7 = this;

	      this.$nextTick(function () {
	        return _this7.scrollToOption(_this7.selected);
	      });
	    },
	    emitChange: function emitChange(val) {
	      if (!Object(util_["valueEquals"])(this.value, val)) {
	        this.$emit('change', val);
	      }
	    },
	    getOption: function getOption(value) {
	      var option = void 0;
	      var isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';
	      var isNull = Object.prototype.toString.call(value).toLowerCase() === '[object null]';
	      var isUndefined = Object.prototype.toString.call(value).toLowerCase() === '[object undefined]';

	      for (var i = this.cachedOptions.length - 1; i >= 0; i--) {
	        var cachedOption = this.cachedOptions[i];
	        var isEqual = isObject ? Object(util_["getValueByPath"])(cachedOption.value, this.valueKey) === Object(util_["getValueByPath"])(value, this.valueKey) : cachedOption.value === value;
	        if (isEqual) {
	          option = cachedOption;
	          break;
	        }
	      }
	      if (option) return option;
	      var label = !isObject && !isNull && !isUndefined ? String(value) : '';
	      var newOption = {
	        value: value,
	        currentLabel: label
	      };
	      if (this.multiple) {
	        newOption.hitState = false;
	      }
	      return newOption;
	    },
	    setSelected: function setSelected() {
	      var _this8 = this;

	      if (!this.multiple) {
	        var option = this.getOption(this.value);
	        if (option.created) {
	          this.createdLabel = option.currentLabel;
	          this.createdSelected = true;
	        } else {
	          this.createdSelected = false;
	        }
	        this.selectedLabel = option.currentLabel;
	        this.selected = option;
	        if (this.filterable) this.query = this.selectedLabel;
	        return;
	      }
	      var result = [];
	      if (Array.isArray(this.value)) {
	        this.value.forEach(function (value) {
	          result.push(_this8.getOption(value));
	        });
	      }
	      this.selected = result;
	      this.$nextTick(function () {
	        _this8.resetInputHeight();
	      });
	    },
	    handleFocus: function handleFocus(event) {
	      if (!this.softFocus) {
	        if (this.automaticDropdown || this.filterable) {
	          if (this.filterable && !this.visible) {
	            this.menuVisibleOnFocus = true;
	          }
	          this.visible = true;
	        }
	        this.$emit('focus', event);
	      } else {
	        this.softFocus = false;
	      }
	    },
	    blur: function blur() {
	      this.visible = false;
	      this.$refs.reference.blur();
	    },
	    handleBlur: function handleBlur(event) {
	      var _this9 = this;

	      setTimeout(function () {
	        if (_this9.isSilentBlur) {
	          _this9.isSilentBlur = false;
	        } else {
	          _this9.$emit('blur', event);
	        }
	      }, 50);
	      this.softFocus = false;
	    },
	    handleClearClick: function handleClearClick(event) {
	      this.deleteSelected(event);
	    },
	    doDestroy: function doDestroy() {
	      this.$refs.popper && this.$refs.popper.doDestroy();
	    },
	    handleClose: function handleClose() {
	      this.visible = false;
	    },
	    toggleLastOptionHitState: function toggleLastOptionHitState(hit) {
	      if (!Array.isArray(this.selected)) return;
	      var option = this.selected[this.selected.length - 1];
	      if (!option) return;

	      if (hit === true || hit === false) {
	        option.hitState = hit;
	        return hit;
	      }

	      option.hitState = !option.hitState;
	      return option.hitState;
	    },
	    deletePrevTag: function deletePrevTag(e) {
	      if (e.target.value.length <= 0 && !this.toggleLastOptionHitState()) {
	        var value = this.value.slice();
	        value.pop();
	        this.$emit('input', value);
	        this.emitChange(value);
	      }
	    },
	    managePlaceholder: function managePlaceholder() {
	      if (this.currentPlaceholder !== '') {
	        this.currentPlaceholder = this.$refs.input.value ? '' : this.cachedPlaceHolder;
	      }
	    },
	    resetInputState: function resetInputState(e) {
	      if (e.keyCode !== 8) this.toggleLastOptionHitState(false);
	      this.inputLength = this.$refs.input.value.length * 15 + 20;
	      this.resetInputHeight();
	    },
	    resetInputHeight: function resetInputHeight() {
	      var _this10 = this;

	      if (this.collapseTags && !this.filterable) return;
	      this.$nextTick(function () {
	        if (!_this10.$refs.reference) return;
	        var inputChildNodes = _this10.$refs.reference.$el.childNodes;
	        var input = [].filter.call(inputChildNodes, function (item) {
	          return item.tagName === 'INPUT';
	        })[0];
	        var tags = _this10.$refs.tags;
	        var tagsHeight = tags ? Math.round(tags.getBoundingClientRect().height) : 0;
	        var sizeInMap = _this10.initialInputHeight || 40;
	        input.style.height = _this10.selected.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tagsHeight + (tagsHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) + 'px';
	        if (_this10.visible && _this10.emptyText !== false) {
	          _this10.broadcast('ElSelectDropdown', 'updatePopper');
	        }
	      });
	    },
	    resetHoverIndex: function resetHoverIndex() {
	      var _this11 = this;

	      setTimeout(function () {
	        if (!_this11.multiple) {
	          _this11.hoverIndex = _this11.options.indexOf(_this11.selected);
	        } else {
	          if (_this11.selected.length > 0) {
	            _this11.hoverIndex = Math.min.apply(null, _this11.selected.map(function (item) {
	              return _this11.options.indexOf(item);
	            }));
	          } else {
	            _this11.hoverIndex = -1;
	          }
	        }
	      }, 300);
	    },
	    handleOptionSelect: function handleOptionSelect(option, byClick) {
	      var _this12 = this;

	      if (this.multiple) {
	        var value = (this.value || []).slice();
	        var optionIndex = this.getValueIndex(value, option.value);
	        if (optionIndex > -1) {
	          value.splice(optionIndex, 1);
	        } else if (this.multipleLimit <= 0 || value.length < this.multipleLimit) {
	          value.push(option.value);
	        }
	        this.$emit('input', value);
	        this.emitChange(value);
	        if (option.created) {
	          this.query = '';
	          this.handleQueryChange('');
	          this.inputLength = 20;
	        }
	        if (this.filterable) this.$refs.input.focus();
	      } else {
	        this.$emit('input', option.value);
	        this.emitChange(option.value);
	        this.visible = false;
	      }
	      this.isSilentBlur = byClick;
	      this.setSoftFocus();
	      if (this.visible) return;
	      this.$nextTick(function () {
	        _this12.scrollToOption(option);
	      });
	    },
	    setSoftFocus: function setSoftFocus() {
	      this.softFocus = true;
	      var input = this.$refs.input || this.$refs.reference;
	      if (input) {
	        input.focus();
	      }
	    },
	    getValueIndex: function getValueIndex() {
	      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      var value = arguments[1];

	      var isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';
	      if (!isObject) {
	        return arr.indexOf(value);
	      } else {
	        var valueKey = this.valueKey;
	        var index = -1;
	        arr.some(function (item, i) {
	          if (Object(util_["getValueByPath"])(item, valueKey) === Object(util_["getValueByPath"])(value, valueKey)) {
	            index = i;
	            return true;
	          }
	          return false;
	        });
	        return index;
	      }
	    },
	    toggleMenu: function toggleMenu() {
	      if (!this.selectDisabled) {
	        if (this.menuVisibleOnFocus) {
	          this.menuVisibleOnFocus = false;
	        } else {
	          this.visible = !this.visible;
	        }
	        if (this.visible) {
	          (this.$refs.input || this.$refs.reference).focus();
	        }
	      }
	    },
	    selectOption: function selectOption() {
	      if (!this.visible) {
	        this.toggleMenu();
	      } else {
	        if (this.options[this.hoverIndex]) {
	          this.handleOptionSelect(this.options[this.hoverIndex]);
	        }
	      }
	    },
	    deleteSelected: function deleteSelected(event) {
	      event.stopPropagation();
	      var value = this.multiple ? [] : '';
	      this.$emit('input', value);
	      this.emitChange(value);
	      this.visible = false;
	      this.$emit('clear');
	    },
	    deleteTag: function deleteTag(event, tag) {
	      var index = this.selected.indexOf(tag);
	      if (index > -1 && !this.selectDisabled) {
	        var value = this.value.slice();
	        value.splice(index, 1);
	        this.$emit('input', value);
	        this.emitChange(value);
	        this.$emit('remove-tag', tag.value);
	      }
	      event.stopPropagation();
	    },
	    onInputChange: function onInputChange() {
	      if (this.filterable && this.query !== this.selectedLabel) {
	        this.query = this.selectedLabel;
	        this.handleQueryChange(this.query);
	      }
	    },
	    onOptionDestroy: function onOptionDestroy(index) {
	      if (index > -1) {
	        this.optionsCount--;
	        this.filteredOptionsCount--;
	        this.options.splice(index, 1);
	      }
	    },
	    resetInputWidth: function resetInputWidth() {
	      this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;
	    },
	    handleResize: function handleResize() {
	      this.resetInputWidth();
	      if (this.multiple) this.resetInputHeight();
	    },
	    checkDefaultFirstOption: function checkDefaultFirstOption() {
	      this.hoverIndex = -1;
	      // highlight the created option
	      var hasCreated = false;
	      for (var i = this.options.length - 1; i >= 0; i--) {
	        if (this.options[i].created) {
	          hasCreated = true;
	          this.hoverIndex = i;
	          break;
	        }
	      }
	      if (hasCreated) return;
	      for (var _i = 0; _i !== this.options.length; ++_i) {
	        var option = this.options[_i];
	        if (this.query) {
	          // highlight first options that passes the filter
	          if (!option.disabled && !option.groupDisabled && option.visible) {
	            this.hoverIndex = _i;
	            break;
	          }
	        } else {
	          // highlight currently selected option
	          if (option.itemSelected) {
	            this.hoverIndex = _i;
	            break;
	          }
	        }
	      }
	    },
	    getValueKey: function getValueKey(item) {
	      if (Object.prototype.toString.call(item.value).toLowerCase() !== '[object object]') {
	        return item.value;
	      } else {
	        return Object(util_["getValueByPath"])(item.value, this.valueKey);
	      }
	    }
	  },

	  created: function created() {
	    var _this13 = this;

	    this.cachedPlaceHolder = this.currentPlaceholder = this.propPlaceholder;
	    if (this.multiple && !Array.isArray(this.value)) {
	      this.$emit('input', []);
	    }
	    if (!this.multiple && Array.isArray(this.value)) {
	      this.$emit('input', '');
	    }

	    this.debouncedOnInputChange = debounce_default()(this.debounce, function () {
	      _this13.onInputChange();
	    });

	    this.debouncedQueryChange = debounce_default()(this.debounce, function (e) {
	      _this13.handleQueryChange(e.target.value);
	    });

	    this.$on('handleOptionClick', this.handleOptionSelect);
	    this.$on('setSelected', this.setSelected);
	  },
	  mounted: function mounted() {
	    var _this14 = this;

	    if (this.multiple && Array.isArray(this.value) && this.value.length > 0) {
	      this.currentPlaceholder = '';
	    }
	    Object(resize_event_["addResizeListener"])(this.$el, this.handleResize);

	    var reference = this.$refs.reference;
	    if (reference && reference.$el) {
	      var sizeMap = {
	        medium: 36,
	        small: 32,
	        mini: 28
	      };
	      var input = reference.$el.querySelector('input');
	      this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];
	    }
	    if (this.remote && this.multiple) {
	      this.resetInputHeight();
	    }
	    this.$nextTick(function () {
	      if (reference && reference.$el) {
	        _this14.inputWidth = reference.$el.getBoundingClientRect().width;
	      }
	    });
	    this.setSelected();
	  },
	  beforeDestroy: function beforeDestroy() {
	    if (this.$el && this.handleResize) Object(resize_event_["removeResizeListener"])(this.$el, this.handleResize);
	  }
	});
	// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_selectvue_type_script_lang_js_ = (selectvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/select/src/select.vue





	/* normalize component */

	var select_component = normalizeComponent(
	  src_selectvue_type_script_lang_js_,
	  selectvue_type_template_id_0e4aade6_render,
	  selectvue_type_template_id_0e4aade6_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	select_component.options.__file = "packages/select/src/select.vue";
	/* harmony default export */ var src_select = (select_component.exports);
	// CONCATENATED MODULE: ./packages/select/index.js


	/* istanbul ignore next */
	src_select.install = function (Vue) {
	  Vue.component(src_select.name, src_select);
	};

	/* harmony default export */ var packages_select = (src_select);
	// CONCATENATED MODULE: ./packages/option/index.js


	/* istanbul ignore next */
	src_option.install = function (Vue) {
	  Vue.component(src_option.name, src_option);
	};

	/* harmony default export */ var packages_option = (src_option);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option-group.vue?vue&type=template&id=6685e5de&
	var option_groupvue_type_template_id_6685e5de_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "ul",
	    {
	      directives: [
	        {
	          name: "show",
	          rawName: "v-show",
	          value: _vm.visible,
	          expression: "visible"
	        }
	      ],
	      staticClass: "el-select-group__wrap"
	    },
	    [
	      _c("li", { staticClass: "el-select-group__title" }, [
	        _vm._v(_vm._s(_vm.label))
	      ]),
	      _c("li", [
	        _c("ul", { staticClass: "el-select-group" }, [_vm._t("default")], 2)
	      ])
	    ]
	  )
	};
	var option_groupvue_type_template_id_6685e5de_staticRenderFns = [];
	option_groupvue_type_template_id_6685e5de_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/select/src/option-group.vue?vue&type=template&id=6685e5de&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option-group.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var option_groupvue_type_script_lang_js_ = ({
	  mixins: [emitter_default.a],

	  name: 'ElOptionGroup',

	  componentName: 'ElOptionGroup',

	  props: {
	    label: String,
	    disabled: {
	      type: Boolean,
	      default: false
	    }
	  },

	  data: function data() {
	    return {
	      visible: true
	    };
	  },


	  watch: {
	    disabled: function disabled(val) {
	      this.broadcast('ElOption', 'handleGroupDisabled', val);
	    }
	  },

	  methods: {
	    queryChange: function queryChange() {
	      this.visible = this.$children && Array.isArray(this.$children) && this.$children.some(function (option) {
	        return option.visible === true;
	      });
	    }
	  },

	  created: function created() {
	    this.$on('queryChange', this.queryChange);
	  },
	  mounted: function mounted() {
	    if (this.disabled) {
	      this.broadcast('ElOption', 'handleGroupDisabled', this.disabled);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/select/src/option-group.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_option_groupvue_type_script_lang_js_ = (option_groupvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/select/src/option-group.vue





	/* normalize component */

	var option_group_component = normalizeComponent(
	  src_option_groupvue_type_script_lang_js_,
	  option_groupvue_type_template_id_6685e5de_render,
	  option_groupvue_type_template_id_6685e5de_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	option_group_component.options.__file = "packages/select/src/option-group.vue";
	/* harmony default export */ var option_group = (option_group_component.exports);
	// CONCATENATED MODULE: ./packages/option-group/index.js


	/* istanbul ignore next */
	option_group.install = function (Vue) {
	  Vue.component(option_group.name, option_group);
	};

	/* harmony default export */ var packages_option_group = (option_group);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button.vue?vue&type=template&id=ca859fb4&
	var buttonvue_type_template_id_ca859fb4_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "button",
	    {
	      staticClass: "el-button",
	      class: [
	        _vm.type ? "el-button--" + _vm.type : "",
	        _vm.buttonSize ? "el-button--" + _vm.buttonSize : "",
	        {
	          "is-disabled": _vm.buttonDisabled,
	          "is-loading": _vm.loading,
	          "is-plain": _vm.plain,
	          "is-round": _vm.round,
	          "is-circle": _vm.circle
	        }
	      ],
	      attrs: {
	        disabled: _vm.buttonDisabled || _vm.loading,
	        autofocus: _vm.autofocus,
	        type: _vm.nativeType
	      },
	      on: { click: _vm.handleClick }
	    },
	    [
	      _vm.loading ? _c("i", { staticClass: "el-icon-loading" }) : _vm._e(),
	      _vm.icon && !_vm.loading ? _c("i", { class: _vm.icon }) : _vm._e(),
	      _vm.$slots.default ? _c("span", [_vm._t("default")], 2) : _vm._e()
	    ]
	  )
	};
	var buttonvue_type_template_id_ca859fb4_staticRenderFns = [];
	buttonvue_type_template_id_ca859fb4_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/button/src/button.vue?vue&type=template&id=ca859fb4&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var buttonvue_type_script_lang_js_ = ({
	  name: 'ElButton',

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  props: {
	    type: {
	      type: String,
	      default: 'default'
	    },
	    size: String,
	    icon: {
	      type: String,
	      default: ''
	    },
	    nativeType: {
	      type: String,
	      default: 'button'
	    },
	    loading: Boolean,
	    disabled: Boolean,
	    plain: Boolean,
	    autofocus: Boolean,
	    round: Boolean,
	    circle: Boolean
	  },

	  computed: {
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    buttonSize: function buttonSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    buttonDisabled: function buttonDisabled() {
	      return this.$options.propsData.hasOwnProperty('disabled') ? this.disabled : (this.elForm || {}).disabled;
	    }
	  },

	  methods: {
	    handleClick: function handleClick(evt) {
	      this.$emit('click', evt);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/button/src/button.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_buttonvue_type_script_lang_js_ = (buttonvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/button/src/button.vue





	/* normalize component */

	var button_component = normalizeComponent(
	  src_buttonvue_type_script_lang_js_,
	  buttonvue_type_template_id_ca859fb4_render,
	  buttonvue_type_template_id_ca859fb4_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	button_component.options.__file = "packages/button/src/button.vue";
	/* harmony default export */ var src_button = (button_component.exports);
	// CONCATENATED MODULE: ./packages/button/index.js


	/* istanbul ignore next */
	src_button.install = function (Vue) {
	  Vue.component(src_button.name, src_button);
	};

	/* harmony default export */ var packages_button = (src_button);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button-group.vue?vue&type=template&id=3d8661d0&
	var button_groupvue_type_template_id_3d8661d0_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-button-group" }, [_vm._t("default")], 2)
	};
	var button_groupvue_type_template_id_3d8661d0_staticRenderFns = [];
	button_groupvue_type_template_id_3d8661d0_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/button/src/button-group.vue?vue&type=template&id=3d8661d0&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button-group.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//

	/* harmony default export */ var button_groupvue_type_script_lang_js_ = ({
	  name: 'ElButtonGroup'
	});
	// CONCATENATED MODULE: ./packages/button/src/button-group.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_button_groupvue_type_script_lang_js_ = (button_groupvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/button/src/button-group.vue





	/* normalize component */

	var button_group_component = normalizeComponent(
	  src_button_groupvue_type_script_lang_js_,
	  button_groupvue_type_template_id_3d8661d0_render,
	  button_groupvue_type_template_id_3d8661d0_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	button_group_component.options.__file = "packages/button/src/button-group.vue";
	/* harmony default export */ var button_group = (button_group_component.exports);
	// CONCATENATED MODULE: ./packages/button-group/index.js


	/* istanbul ignore next */
	button_group.install = function (Vue) {
	  Vue.component(button_group.name, button_group);
	};

	/* harmony default export */ var packages_button_group = (button_group);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/table.vue?vue&type=template&id=493fe34e&
	var tablevue_type_template_id_493fe34e_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-table",
	      class: [
	        {
	          "el-table--fit": _vm.fit,
	          "el-table--striped": _vm.stripe,
	          "el-table--border": _vm.border || _vm.isGroup,
	          "el-table--hidden": _vm.isHidden,
	          "el-table--group": _vm.isGroup,
	          "el-table--fluid-height": _vm.maxHeight,
	          "el-table--scrollable-x": _vm.layout.scrollX,
	          "el-table--scrollable-y": _vm.layout.scrollY,
	          "el-table--enable-row-hover": !_vm.store.states.isComplex,
	          "el-table--enable-row-transition":
	            (_vm.store.states.data || []).length !== 0 &&
	            (_vm.store.states.data || []).length < 100
	        },
	        _vm.tableSize ? "el-table--" + _vm.tableSize : ""
	      ],
	      on: {
	        mouseleave: function($event) {
	          _vm.handleMouseLeave($event);
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        { ref: "hiddenColumns", staticClass: "hidden-columns" },
	        [_vm._t("default")],
	        2
	      ),
	      _vm.showHeader
	        ? _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "mousewheel",
	                  rawName: "v-mousewheel",
	                  value: _vm.handleHeaderFooterMousewheel,
	                  expression: "handleHeaderFooterMousewheel"
	                }
	              ],
	              ref: "headerWrapper",
	              staticClass: "el-table__header-wrapper"
	            },
	            [
	              _c("table-header", {
	                ref: "tableHeader",
	                style: {
	                  width: _vm.layout.bodyWidth ? _vm.layout.bodyWidth + "px" : ""
	                },
	                attrs: {
	                  store: _vm.store,
	                  border: _vm.border,
	                  "default-sort": _vm.defaultSort
	                }
	              })
	            ],
	            1
	          )
	        : _vm._e(),
	      _c(
	        "div",
	        {
	          ref: "bodyWrapper",
	          staticClass: "el-table__body-wrapper",
	          class: [
	            _vm.layout.scrollX
	              ? "is-scrolling-" + _vm.scrollPosition
	              : "is-scrolling-none"
	          ],
	          style: [_vm.bodyHeight]
	        },
	        [
	          _c("table-body", {
	            style: {
	              width: _vm.bodyWidth
	            },
	            attrs: {
	              context: _vm.context,
	              store: _vm.store,
	              stripe: _vm.stripe,
	              "row-class-name": _vm.rowClassName,
	              "row-style": _vm.rowStyle,
	              highlight: _vm.highlightCurrentRow
	            }
	          }),
	          !_vm.data || _vm.data.length === 0
	            ? _c(
	                "div",
	                {
	                  ref: "emptyBlock",
	                  staticClass: "el-table__empty-block",
	                  style: _vm.emptyBlockStyle
	                },
	                [
	                  _c(
	                    "span",
	                    { staticClass: "el-table__empty-text" },
	                    [
	                      _vm._t("empty", [
	                        _vm._v(
	                          _vm._s(_vm.emptyText || _vm.t("el.table.emptyText"))
	                        )
	                      ])
	                    ],
	                    2
	                  )
	                ]
	              )
	            : _vm._e(),
	          _vm.$slots.append
	            ? _c(
	                "div",
	                {
	                  ref: "appendWrapper",
	                  staticClass: "el-table__append-wrapper"
	                },
	                [_vm._t("append")],
	                2
	              )
	            : _vm._e()
	        ],
	        1
	      ),
	      _vm.showSummary
	        ? _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: _vm.data && _vm.data.length > 0,
	                  expression: "data && data.length > 0"
	                },
	                {
	                  name: "mousewheel",
	                  rawName: "v-mousewheel",
	                  value: _vm.handleHeaderFooterMousewheel,
	                  expression: "handleHeaderFooterMousewheel"
	                }
	              ],
	              ref: "footerWrapper",
	              staticClass: "el-table__footer-wrapper"
	            },
	            [
	              _c("table-footer", {
	                style: {
	                  width: _vm.layout.bodyWidth ? _vm.layout.bodyWidth + "px" : ""
	                },
	                attrs: {
	                  store: _vm.store,
	                  border: _vm.border,
	                  "sum-text": _vm.sumText || _vm.t("el.table.sumText"),
	                  "summary-method": _vm.summaryMethod,
	                  "default-sort": _vm.defaultSort
	                }
	              })
	            ],
	            1
	          )
	        : _vm._e(),
	      _vm.fixedColumns.length > 0
	        ? _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "mousewheel",
	                  rawName: "v-mousewheel",
	                  value: _vm.handleFixedMousewheel,
	                  expression: "handleFixedMousewheel"
	                }
	              ],
	              ref: "fixedWrapper",
	              staticClass: "el-table__fixed",
	              style: [
	                {
	                  width: _vm.layout.fixedWidth
	                    ? _vm.layout.fixedWidth + "px"
	                    : ""
	                },
	                _vm.fixedHeight
	              ]
	            },
	            [
	              _vm.showHeader
	                ? _c(
	                    "div",
	                    {
	                      ref: "fixedHeaderWrapper",
	                      staticClass: "el-table__fixed-header-wrapper"
	                    },
	                    [
	                      _c("table-header", {
	                        ref: "fixedTableHeader",
	                        style: {
	                          width: _vm.bodyWidth
	                        },
	                        attrs: {
	                          fixed: "left",
	                          border: _vm.border,
	                          store: _vm.store
	                        }
	                      })
	                    ],
	                    1
	                  )
	                : _vm._e(),
	              _c(
	                "div",
	                {
	                  ref: "fixedBodyWrapper",
	                  staticClass: "el-table__fixed-body-wrapper",
	                  style: [
	                    {
	                      top: _vm.layout.headerHeight + "px"
	                    },
	                    _vm.fixedBodyHeight
	                  ]
	                },
	                [
	                  _c("table-body", {
	                    style: {
	                      width: _vm.bodyWidth
	                    },
	                    attrs: {
	                      fixed: "left",
	                      store: _vm.store,
	                      stripe: _vm.stripe,
	                      highlight: _vm.highlightCurrentRow,
	                      "row-class-name": _vm.rowClassName,
	                      "row-style": _vm.rowStyle
	                    }
	                  }),
	                  _vm.$slots.append
	                    ? _c("div", {
	                        staticClass: "el-table__append-gutter",
	                        style: { height: _vm.layout.appendHeight + "px" }
	                      })
	                    : _vm._e()
	                ],
	                1
	              ),
	              _vm.showSummary
	                ? _c(
	                    "div",
	                    {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.data && _vm.data.length > 0,
	                          expression: "data && data.length > 0"
	                        }
	                      ],
	                      ref: "fixedFooterWrapper",
	                      staticClass: "el-table__fixed-footer-wrapper"
	                    },
	                    [
	                      _c("table-footer", {
	                        style: {
	                          width: _vm.bodyWidth
	                        },
	                        attrs: {
	                          fixed: "left",
	                          border: _vm.border,
	                          "sum-text": _vm.sumText || _vm.t("el.table.sumText"),
	                          "summary-method": _vm.summaryMethod,
	                          store: _vm.store
	                        }
	                      })
	                    ],
	                    1
	                  )
	                : _vm._e()
	            ]
	          )
	        : _vm._e(),
	      _vm.rightFixedColumns.length > 0
	        ? _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "mousewheel",
	                  rawName: "v-mousewheel",
	                  value: _vm.handleFixedMousewheel,
	                  expression: "handleFixedMousewheel"
	                }
	              ],
	              ref: "rightFixedWrapper",
	              staticClass: "el-table__fixed-right",
	              style: [
	                {
	                  width: _vm.layout.rightFixedWidth
	                    ? _vm.layout.rightFixedWidth + "px"
	                    : "",
	                  right: _vm.layout.scrollY
	                    ? (_vm.border
	                        ? _vm.layout.gutterWidth
	                        : _vm.layout.gutterWidth || 0) + "px"
	                    : ""
	                },
	                _vm.fixedHeight
	              ]
	            },
	            [
	              _vm.showHeader
	                ? _c(
	                    "div",
	                    {
	                      ref: "rightFixedHeaderWrapper",
	                      staticClass: "el-table__fixed-header-wrapper"
	                    },
	                    [
	                      _c("table-header", {
	                        ref: "rightFixedTableHeader",
	                        style: {
	                          width: _vm.bodyWidth
	                        },
	                        attrs: {
	                          fixed: "right",
	                          border: _vm.border,
	                          store: _vm.store
	                        }
	                      })
	                    ],
	                    1
	                  )
	                : _vm._e(),
	              _c(
	                "div",
	                {
	                  ref: "rightFixedBodyWrapper",
	                  staticClass: "el-table__fixed-body-wrapper",
	                  style: [
	                    {
	                      top: _vm.layout.headerHeight + "px"
	                    },
	                    _vm.fixedBodyHeight
	                  ]
	                },
	                [
	                  _c("table-body", {
	                    style: {
	                      width: _vm.bodyWidth
	                    },
	                    attrs: {
	                      fixed: "right",
	                      store: _vm.store,
	                      stripe: _vm.stripe,
	                      "row-class-name": _vm.rowClassName,
	                      "row-style": _vm.rowStyle,
	                      highlight: _vm.highlightCurrentRow
	                    }
	                  }),
	                  _vm.$slots.append
	                    ? _c("div", {
	                        staticClass: "el-table__append-gutter",
	                        style: { height: _vm.layout.appendHeight + "px" }
	                      })
	                    : _vm._e()
	                ],
	                1
	              ),
	              _vm.showSummary
	                ? _c(
	                    "div",
	                    {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.data && _vm.data.length > 0,
	                          expression: "data && data.length > 0"
	                        }
	                      ],
	                      ref: "rightFixedFooterWrapper",
	                      staticClass: "el-table__fixed-footer-wrapper"
	                    },
	                    [
	                      _c("table-footer", {
	                        style: {
	                          width: _vm.bodyWidth
	                        },
	                        attrs: {
	                          fixed: "right",
	                          border: _vm.border,
	                          "sum-text": _vm.sumText || _vm.t("el.table.sumText"),
	                          "summary-method": _vm.summaryMethod,
	                          store: _vm.store
	                        }
	                      })
	                    ],
	                    1
	                  )
	                : _vm._e()
	            ]
	          )
	        : _vm._e(),
	      _vm.rightFixedColumns.length > 0
	        ? _c("div", {
	            ref: "rightFixedPatch",
	            staticClass: "el-table__fixed-right-patch",
	            style: {
	              width: _vm.layout.scrollY ? _vm.layout.gutterWidth + "px" : "0",
	              height: _vm.layout.headerHeight + "px"
	            }
	          })
	        : _vm._e(),
	      _c("div", {
	        directives: [
	          {
	            name: "show",
	            rawName: "v-show",
	            value: _vm.resizeProxyVisible,
	            expression: "resizeProxyVisible"
	          }
	        ],
	        ref: "resizeProxy",
	        staticClass: "el-table__column-resize-proxy"
	      })
	    ]
	  )
	};
	var tablevue_type_template_id_493fe34e_staticRenderFns = [];
	tablevue_type_template_id_493fe34e_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/table/src/table.vue?vue&type=template&id=493fe34e&

	// EXTERNAL MODULE: external "element-ui/lib/checkbox"
	var checkbox_ = __webpack_require__(14);
	var checkbox_default = /*#__PURE__*/__webpack_require__.n(checkbox_);

	// EXTERNAL MODULE: external "throttle-debounce"
	var external_throttle_debounce_ = __webpack_require__(36);

	// EXTERNAL MODULE: external "normalize-wheel"
	var external_normalize_wheel_ = __webpack_require__(39);
	var external_normalize_wheel_default = /*#__PURE__*/__webpack_require__.n(external_normalize_wheel_);

	// CONCATENATED MODULE: ./src/directives/mousewheel.js


	var isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;

	var mousewheel_mousewheel = function mousewheel(element, callback) {
	  if (element && element.addEventListener) {
	    element.addEventListener(isFirefox ? 'DOMMouseScroll' : 'mousewheel', function (event) {
	      var normalized = external_normalize_wheel_default()(event);
	      callback && callback.apply(this, [event, normalized]);
	    });
	  }
	};

	/* harmony default export */ var directives_mousewheel = ({
	  bind: function bind(el, binding) {
	    mousewheel_mousewheel(el, binding.value);
	  }
	});
	// EXTERNAL MODULE: external "vue"
	var external_vue_ = __webpack_require__(6);
	var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

	// CONCATENATED MODULE: ./packages/table/src/util.js
	var util_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



	var getCell = function getCell(event) {
	  var cell = event.target;

	  while (cell && cell.tagName.toUpperCase() !== 'HTML') {
	    if (cell.tagName.toUpperCase() === 'TD') {
	      return cell;
	    }
	    cell = cell.parentNode;
	  }

	  return null;
	};

	var util_isObject = function isObject(obj) {
	  return obj !== null && (typeof obj === 'undefined' ? 'undefined' : util_typeof(obj)) === 'object';
	};

	var util_orderBy = function orderBy(array, sortKey, reverse, sortMethod, sortBy) {
	  if (!sortKey && !sortMethod && (!sortBy || Array.isArray(sortBy) && !sortBy.length)) {
	    return array;
	  }
	  if (typeof reverse === 'string') {
	    reverse = reverse === 'descending' ? -1 : 1;
	  } else {
	    reverse = reverse && reverse < 0 ? -1 : 1;
	  }
	  var getKey = sortMethod ? null : function (value, index) {
	    if (sortBy) {
	      if (!Array.isArray(sortBy)) {
	        sortBy = [sortBy];
	      }
	      return sortBy.map(function (by) {
	        if (typeof by === 'string') {
	          return Object(util_["getValueByPath"])(value, by);
	        } else {
	          return by(value, index, array);
	        }
	      });
	    }
	    if (sortKey !== '$key') {
	      if (util_isObject(value) && '$value' in value) value = value.$value;
	    }
	    return [util_isObject(value) ? Object(util_["getValueByPath"])(value, sortKey) : value];
	  };
	  var compare = function compare(a, b) {
	    if (sortMethod) {
	      return sortMethod(a.value, b.value);
	    }
	    for (var i = 0, len = a.key.length; i < len; i++) {
	      if (a.key[i] < b.key[i]) {
	        return -1;
	      }
	      if (a.key[i] > b.key[i]) {
	        return 1;
	      }
	    }
	    return 0;
	  };
	  return array.map(function (value, index) {
	    return {
	      value: value,
	      index: index,
	      key: getKey ? getKey(value, index) : null
	    };
	  }).sort(function (a, b) {
	    var order = compare(a, b);
	    if (!order) {
	      // make stable https://en.wikipedia.org/wiki/Sorting_algorithm#Stability
	      order = a.index - b.index;
	    }
	    return order * reverse;
	  }).map(function (item) {
	    return item.value;
	  });
	};

	var getColumnById = function getColumnById(table, columnId) {
	  var column = null;
	  table.columns.forEach(function (item) {
	    if (item.id === columnId) {
	      column = item;
	    }
	  });
	  return column;
	};

	var getColumnByKey = function getColumnByKey(table, columnKey) {
	  var column = null;
	  for (var i = 0; i < table.columns.length; i++) {
	    var item = table.columns[i];
	    if (item.columnKey === columnKey) {
	      column = item;
	      break;
	    }
	  }
	  return column;
	};

	var getColumnByCell = function getColumnByCell(table, cell) {
	  var matches = (cell.className || '').match(/el-table_[^\s]+/gm);
	  if (matches) {
	    return getColumnById(table, matches[0]);
	  }
	  return null;
	};

	var getRowIdentity = function getRowIdentity(row, rowKey) {
	  if (!row) throw new Error('row is required when get row identity');
	  if (typeof rowKey === 'string') {
	    if (rowKey.indexOf('.') < 0) {
	      return row[rowKey];
	    }
	    var key = rowKey.split('.');
	    var current = row;
	    for (var i = 0; i < key.length; i++) {
	      current = current[key[i]];
	    }
	    return current;
	  } else if (typeof rowKey === 'function') {
	    return rowKey.call(null, row);
	  }
	};

	var getKeysMap = function getKeysMap(array, rowKey) {
	  var arrayMap = {};
	  (array || []).forEach(function (row, index) {
	    arrayMap[getRowIdentity(row, rowKey)] = { row: row, index: index };
	  });
	  return arrayMap;
	};

	function hasOwn(obj, key) {
	  return Object.prototype.hasOwnProperty.call(obj, key);
	}

	function mergeOptions(defaults, config) {
	  var options = {};
	  var key = void 0;
	  for (key in defaults) {
	    options[key] = defaults[key];
	  }
	  for (key in config) {
	    if (hasOwn(config, key)) {
	      var value = config[key];
	      if (typeof value !== 'undefined') {
	        options[key] = value;
	      }
	    }
	  }
	  return options;
	}

	function parseWidth(width) {
	  if (width !== undefined) {
	    width = parseInt(width, 10);
	    if (isNaN(width)) {
	      width = null;
	    }
	  }
	  return width;
	}

	function parseMinWidth(minWidth) {
	  if (typeof minWidth !== 'undefined') {
	    minWidth = parseWidth(minWidth);
	    if (isNaN(minWidth)) {
	      minWidth = 80;
	    }
	  }
	  return minWidth;
	}
	function parseHeight(height) {
	  if (typeof height === 'number') {
	    return height;
	  }
	  if (typeof height === 'string') {
	    if (/^\d+(?:px)?$/.test(height)) {
	      return parseInt(height, 10);
	    } else {
	      return height;
	    }
	  }
	  return null;
	}

	// https://github.com/reduxjs/redux/blob/master/src/compose.js
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}

	function toggleRowStatus(statusArr, row, newVal) {
	  var changed = false;
	  var index = statusArr.indexOf(row);
	  var included = index !== -1;

	  var addRow = function addRow() {
	    statusArr.push(row);
	    changed = true;
	  };
	  var removeRow = function removeRow() {
	    statusArr.splice(index, 1);
	    changed = true;
	  };

	  if (typeof newVal === 'boolean') {
	    if (newVal && !included) {
	      addRow();
	    } else if (!newVal && included) {
	      removeRow();
	    }
	  } else {
	    if (included) {
	      removeRow();
	    } else {
	      addRow();
	    }
	  }
	  return changed;
	}

	function walkTreeNode(root, cb) {
	  var childrenKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'children';
	  var lazyKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'hasChildren';

	  var isNil = function isNil(array) {
	    return !(Array.isArray(array) && array.length);
	  };

	  function _walker(parent, children, level) {
	    cb(parent, children, level);
	    children.forEach(function (item) {
	      if (item[lazyKey]) {
	        cb(item, null, level + 1);
	        return;
	      }
	      var children = item[childrenKey];
	      if (!isNil(children)) {
	        _walker(item, children, level + 1);
	      }
	    });
	  }

	  root.forEach(function (item) {
	    if (item[lazyKey]) {
	      cb(item, null, 0);
	      return;
	    }
	    var children = item[childrenKey];
	    if (!isNil(children)) {
	      _walker(item, children, 0);
	    }
	  });
	}

	var objectEquals = function objectEquals(objectA, objectB) {
	  // 取对象a和b的属性名
	  var aProps = Object.getOwnPropertyNames(objectA);
	  var bProps = Object.getOwnPropertyNames(objectB);
	  // 判断属性名的length是否一致
	  if (aProps.length !== bProps.length) {
	    return false;
	  }
	  // 循环取出属性名，再判断属性值是否一致
	  for (var i = 0; i < aProps.length; i++) {
	    var propName = aProps[i];
	    if (objectA[propName] !== objectB[propName]) {
	      return false;
	    }
	  }
	  return true;
	};
	// CONCATENATED MODULE: ./packages/table/src/store/expand.js


	/* harmony default export */ var expand = ({
	  data: function data() {
	    return {
	      states: {
	        defaultExpandAll: false,
	        expandRows: []
	      }
	    };
	  },


	  methods: {
	    updateExpandRows: function updateExpandRows() {
	      var _states = this.states,
	          _states$data = _states.data,
	          data = _states$data === undefined ? [] : _states$data,
	          rowKey = _states.rowKey,
	          defaultExpandAll = _states.defaultExpandAll,
	          expandRows = _states.expandRows;

	      if (defaultExpandAll) {
	        this.states.expandRows = data.slice();
	      } else if (rowKey) {
	        // TODO：这里的代码可以优化
	        var expandRowsMap = getKeysMap(expandRows, rowKey);
	        this.states.expandRows = data.reduce(function (prev, row) {
	          var rowId = getRowIdentity(row, rowKey);
	          var rowInfo = expandRowsMap[rowId];
	          if (rowInfo) {
	            prev.push(row);
	          }
	          return prev;
	        }, []);
	      } else {
	        this.states.expandRows = [];
	      }
	    },
	    toggleRowExpansion: function toggleRowExpansion(row, expanded) {
	      var changed = toggleRowStatus(this.states.expandRows, row, expanded);
	      if (changed) {
	        this.table.$emit('expand-change', row, this.states.expandRows.slice());
	        this.scheduleLayout();
	      }
	    },
	    setExpandRowKeys: function setExpandRowKeys(rowKeys) {
	      this.assertRowKey();
	      // TODO：这里的代码可以优化
	      var _states2 = this.states,
	          data = _states2.data,
	          rowKey = _states2.rowKey;

	      var keysMap = getKeysMap(data, rowKey);
	      this.states.expandRows = rowKeys.reduce(function (prev, cur) {
	        var info = keysMap[cur];
	        if (info) {
	          prev.push(info.row);
	        }
	        return prev;
	      }, []);
	    },
	    isRowExpanded: function isRowExpanded(row) {
	      var _states3 = this.states,
	          _states3$expandRows = _states3.expandRows,
	          expandRows = _states3$expandRows === undefined ? [] : _states3$expandRows,
	          rowKey = _states3.rowKey;

	      if (rowKey) {
	        var expandMap = getKeysMap(expandRows, rowKey);
	        return !!expandMap[getRowIdentity(row, rowKey)];
	      }
	      return expandRows.indexOf(row) !== -1;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/store/current.js



	/* harmony default export */ var store_current = ({
	  data: function data() {
	    return {
	      states: {
	        // 不可响应的，设置 currentRowKey 时，data 不一定存在，也许无法算出正确的 currentRow
	        // 把该值缓存一下，当用户点击修改 currentRow 时，把该值重置为 null
	        _currentRowKey: null,
	        currentRow: null
	      }
	    };
	  },


	  methods: {
	    setCurrentRowKey: function setCurrentRowKey(key) {
	      this.assertRowKey();
	      this.states._currentRowKey = key;
	      this.setCurrentRowByKey(key);
	    },
	    restoreCurrentRowKey: function restoreCurrentRowKey() {
	      this.states._currentRowKey = null;
	    },
	    setCurrentRowByKey: function setCurrentRowByKey(key) {
	      var states = this.states;
	      var _states$data = states.data,
	          data = _states$data === undefined ? [] : _states$data,
	          rowKey = states.rowKey;

	      var currentRow = null;
	      if (rowKey) {
	        currentRow = Object(util_["arrayFind"])(data, function (item) {
	          return getRowIdentity(item, rowKey) === key;
	        });
	      }
	      states.currentRow = currentRow;
	    },
	    updateCurrentRow: function updateCurrentRow(currentRow) {
	      var states = this.states,
	          table = this.table;

	      var oldCurrentRow = states.currentRow;
	      if (currentRow && currentRow !== oldCurrentRow) {
	        states.currentRow = currentRow;
	        table.$emit('current-change', currentRow, oldCurrentRow);
	        return;
	      }
	      if (!currentRow && oldCurrentRow) {
	        states.currentRow = null;
	        table.$emit('current-change', null, oldCurrentRow);
	      }
	    },
	    updateCurrentRowData: function updateCurrentRowData() {
	      var states = this.states,
	          table = this.table;
	      var rowKey = states.rowKey,
	          _currentRowKey = states._currentRowKey;
	      // data 为 null 时，解构时的默认值会被忽略

	      var data = states.data || [];
	      var oldCurrentRow = states.currentRow;

	      // 当 currentRow 不在 data 中时尝试更新数据
	      if (data.indexOf(oldCurrentRow) === -1 && oldCurrentRow) {
	        if (rowKey) {
	          var currentRowKey = getRowIdentity(oldCurrentRow, rowKey);
	          this.setCurrentRowByKey(currentRowKey);
	        } else {
	          states.currentRow = null;
	        }
	        if (states.currentRow === null) {
	          table.$emit('current-change', null, oldCurrentRow);
	        }
	      } else if (_currentRowKey) {
	        // 把初始时下设置的 rowKey 转化成 rowData
	        this.setCurrentRowByKey(_currentRowKey);
	        this.restoreCurrentRowKey();
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/store/tree.js
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



	/* harmony default export */ var tree = ({
	  data: function data() {
	    return {
	      states: {
	        // defaultExpandAll 存在于 expand.js 中，这里不重复添加
	        // 在展开行中，expandRowKeys 会被转化成 expandRows，expandRowKeys 这个属性只是记录了 TreeTable 行的展开
	        // TODO: 拆分为独立的 TreeTable，统一用法
	        expandRowKeys: [],
	        treeData: {},
	        indent: 16,
	        lazy: false,
	        lazyTreeNodeMap: {},
	        lazyColumnIdentifier: 'hasChildren',
	        childrenColumnName: 'children'
	      }
	    };
	  },


	  computed: {
	    // 嵌入型的数据，watch 无法是检测到变化 https://github.com/ElemeFE/element/issues/14998
	    // TODO: 使用 computed 解决该问题，是否会造成性能问题？
	    // @return { id: { level, children } }
	    normalizedData: function normalizedData() {
	      if (!this.states.rowKey) return {};
	      var data = this.states.data || [];
	      return this.normalize(data);
	    },

	    // @return { id: { children } }
	    // 针对懒加载的情形，不处理嵌套数据
	    normalizedLazyNode: function normalizedLazyNode() {
	      var _states = this.states,
	          rowKey = _states.rowKey,
	          lazyTreeNodeMap = _states.lazyTreeNodeMap,
	          lazyColumnIdentifier = _states.lazyColumnIdentifier;

	      var keys = Object.keys(lazyTreeNodeMap);
	      var res = {};
	      if (!keys.length) return res;
	      keys.forEach(function (key) {
	        if (lazyTreeNodeMap[key].length) {
	          var item = { children: [] };
	          lazyTreeNodeMap[key].forEach(function (row) {
	            var currentRowKey = getRowIdentity(row, rowKey);
	            item.children.push(currentRowKey);
	            if (row[lazyColumnIdentifier] && !res[currentRowKey]) {
	              res[currentRowKey] = { children: [] };
	            }
	          });
	          res[key] = item;
	        }
	      });
	      return res;
	    }
	  },

	  watch: {
	    normalizedData: 'updateTreeData',
	    normalizedLazyNode: 'updateTreeData'
	  },

	  methods: {
	    normalize: function normalize(data) {
	      var _states2 = this.states,
	          childrenColumnName = _states2.childrenColumnName,
	          lazyColumnIdentifier = _states2.lazyColumnIdentifier,
	          rowKey = _states2.rowKey,
	          lazy = _states2.lazy;

	      var res = {};
	      walkTreeNode(data, function (parent, children, level) {
	        var parentId = getRowIdentity(parent, rowKey);
	        if (Array.isArray(children)) {
	          res[parentId] = {
	            children: children.map(function (row) {
	              return getRowIdentity(row, rowKey);
	            }),
	            level: level
	          };
	        } else if (lazy) {
	          // 当 children 不存在且 lazy 为 true，该节点即为懒加载的节点
	          res[parentId] = {
	            children: [],
	            lazy: true,
	            level: level
	          };
	        }
	      }, childrenColumnName, lazyColumnIdentifier);
	      return res;
	    },
	    updateTreeData: function updateTreeData() {
	      var nested = this.normalizedData;
	      var normalizedLazyNode = this.normalizedLazyNode;
	      var keys = Object.keys(nested);
	      var newTreeData = {};
	      if (keys.length) {
	        var _states3 = this.states,
	            oldTreeData = _states3.treeData,
	            defaultExpandAll = _states3.defaultExpandAll,
	            expandRowKeys = _states3.expandRowKeys,
	            lazy = _states3.lazy;

	        var rootLazyRowKeys = [];
	        var getExpanded = function getExpanded(oldValue, key) {
	          var included = defaultExpandAll || expandRowKeys && expandRowKeys.indexOf(key) !== -1;
	          return !!(oldValue && oldValue.expanded || included);
	        };
	        // 合并 expanded 与 display，确保数据刷新后，状态不变
	        keys.forEach(function (key) {
	          var oldValue = oldTreeData[key];
	          var newValue = _extends({}, nested[key]);
	          newValue.expanded = getExpanded(oldValue, key);
	          if (newValue.lazy) {
	            var _ref = oldValue || {},
	                _ref$loaded = _ref.loaded,
	                loaded = _ref$loaded === undefined ? false : _ref$loaded,
	                _ref$loading = _ref.loading,
	                loading = _ref$loading === undefined ? false : _ref$loading;

	            newValue.loaded = !!loaded;
	            newValue.loading = !!loading;
	            rootLazyRowKeys.push(key);
	          }
	          newTreeData[key] = newValue;
	        });
	        // 根据懒加载数据更新 treeData
	        var lazyKeys = Object.keys(normalizedLazyNode);
	        if (lazy && lazyKeys.length && rootLazyRowKeys.length) {
	          lazyKeys.forEach(function (key) {
	            var oldValue = oldTreeData[key];
	            var lazyNodeChildren = normalizedLazyNode[key].children;
	            if (rootLazyRowKeys.indexOf(key) !== -1) {
	              // 懒加载的 root 节点，更新一下原有的数据，原来的 children 一定是空数组
	              if (newTreeData[key].children.length !== 0) {
	                throw new Error('[ElTable]children must be an empty array.');
	              }
	              newTreeData[key].children = lazyNodeChildren;
	            } else {
	              var _ref2 = oldValue || {},
	                  _ref2$loaded = _ref2.loaded,
	                  loaded = _ref2$loaded === undefined ? false : _ref2$loaded,
	                  _ref2$loading = _ref2.loading,
	                  loading = _ref2$loading === undefined ? false : _ref2$loading;

	              newTreeData[key] = {
	                lazy: true,
	                loaded: !!loaded,
	                loading: !!loading,
	                expanded: getExpanded(oldValue, key),
	                children: lazyNodeChildren,
	                level: ''
	              };
	            }
	          });
	        }
	      }
	      this.states.treeData = newTreeData;
	      this.updateTableScrollY();
	    },
	    updateTreeExpandKeys: function updateTreeExpandKeys(value) {
	      this.states.expandRowKeys = value;
	      this.updateTreeData();
	    },
	    toggleTreeExpansion: function toggleTreeExpansion(row, expanded) {
	      this.assertRowKey();

	      var _states4 = this.states,
	          rowKey = _states4.rowKey,
	          treeData = _states4.treeData;

	      var id = getRowIdentity(row, rowKey);
	      var data = id && treeData[id];
	      if (id && data && 'expanded' in data) {
	        var oldExpanded = data.expanded;
	        expanded = typeof expanded === 'undefined' ? !data.expanded : expanded;
	        treeData[id].expanded = expanded;
	        if (oldExpanded !== expanded) {
	          this.table.$emit('expand-change', row, expanded);
	        }
	        this.updateTableScrollY();
	      }
	    },
	    loadOrToggle: function loadOrToggle(row) {
	      this.assertRowKey();
	      var _states5 = this.states,
	          lazy = _states5.lazy,
	          treeData = _states5.treeData,
	          rowKey = _states5.rowKey;

	      var id = getRowIdentity(row, rowKey);
	      var data = treeData[id];
	      if (lazy && data && 'loaded' in data && !data.loaded) {
	        this.loadData(row, id, data);
	      } else {
	        this.toggleTreeExpansion(row);
	      }
	    },
	    loadData: function loadData(row, key, treeNode) {
	      var _this = this;

	      var load = this.table.load;
	      var rawTreeData = this.states.treeData;

	      if (load && !rawTreeData[key].loaded) {
	        rawTreeData[key].loading = true;
	        load(row, treeNode, function (data) {
	          if (!Array.isArray(data)) {
	            throw new Error('[ElTable] data must be an array');
	          }
	          var _states6 = _this.states,
	              lazyTreeNodeMap = _states6.lazyTreeNodeMap,
	              treeData = _states6.treeData;

	          treeData[key].loading = false;
	          treeData[key].loaded = true;
	          treeData[key].expanded = true;
	          if (data.length) {
	            _this.$set(lazyTreeNodeMap, key, data);
	          }
	          _this.table.$emit('expand-change', row, true);
	        });
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/store/watcher.js







	var watcher_sortData = function sortData(data, states) {
	  var sortingColumn = states.sortingColumn;
	  if (!sortingColumn || typeof sortingColumn.sortable === 'string') {
	    return data;
	  }
	  return util_orderBy(data, states.sortProp, states.sortOrder, sortingColumn.sortMethod, sortingColumn.sortBy);
	};

	var doFlattenColumns = function doFlattenColumns(columns) {
	  var result = [];
	  columns.forEach(function (column) {
	    if (column.children) {
	      result.push.apply(result, doFlattenColumns(column.children));
	    } else {
	      result.push(column);
	    }
	  });
	  return result;
	};

	/* harmony default export */ var watcher = (external_vue_default.a.extend({
	  data: function data() {
	    return {
	      states: {
	        // 3.0 版本后要求必须设置该属性
	        rowKey: null,

	        // 渲染的数据来源，是对 table 中的 data 过滤排序后的结果
	        data: [],

	        // 是否包含固定列
	        isComplex: false,

	        // 列
	        _columns: [], // 不可响应的
	        originColumns: [],
	        columns: [],
	        fixedColumns: [],
	        rightFixedColumns: [],
	        leafColumns: [],
	        fixedLeafColumns: [],
	        rightFixedLeafColumns: [],
	        leafColumnsLength: 0,
	        fixedLeafColumnsLength: 0,
	        rightFixedLeafColumnsLength: 0,

	        // 选择
	        isAllSelected: false,
	        selection: [],
	        reserveSelection: false,
	        selectOnIndeterminate: false,
	        selectable: null,

	        // 过滤
	        filters: {}, // 不可响应的
	        filteredData: null,

	        // 排序
	        sortingColumn: null,
	        sortProp: null,
	        sortOrder: null,

	        hoverRow: null
	      }
	    };
	  },


	  mixins: [expand, store_current, tree],

	  methods: {
	    // 检查 rowKey 是否存在
	    assertRowKey: function assertRowKey() {
	      var rowKey = this.states.rowKey;
	      if (!rowKey) throw new Error('[ElTable] prop row-key is required');
	    },


	    // 更新列
	    updateColumns: function updateColumns() {
	      var states = this.states;
	      var _columns = states._columns || [];
	      states.fixedColumns = _columns.filter(function (column) {
	        return column.fixed === true || column.fixed === 'left';
	      });
	      states.rightFixedColumns = _columns.filter(function (column) {
	        return column.fixed === 'right';
	      });

	      if (states.fixedColumns.length > 0 && _columns[0] && _columns[0].type === 'selection' && !_columns[0].fixed) {
	        _columns[0].fixed = true;
	        states.fixedColumns.unshift(_columns[0]);
	      }

	      var notFixedColumns = _columns.filter(function (column) {
	        return !column.fixed;
	      });
	      states.originColumns = [].concat(states.fixedColumns).concat(notFixedColumns).concat(states.rightFixedColumns);

	      var leafColumns = doFlattenColumns(notFixedColumns);
	      var fixedLeafColumns = doFlattenColumns(states.fixedColumns);
	      var rightFixedLeafColumns = doFlattenColumns(states.rightFixedColumns);

	      states.leafColumnsLength = leafColumns.length;
	      states.fixedLeafColumnsLength = fixedLeafColumns.length;
	      states.rightFixedLeafColumnsLength = rightFixedLeafColumns.length;

	      states.columns = [].concat(fixedLeafColumns).concat(leafColumns).concat(rightFixedLeafColumns);
	      states.isComplex = states.fixedColumns.length > 0 || states.rightFixedColumns.length > 0;
	    },


	    // 更新 DOM
	    scheduleLayout: function scheduleLayout(needUpdateColumns) {
	      if (needUpdateColumns) {
	        this.updateColumns();
	      }
	      this.table.debouncedUpdateLayout();
	    },


	    // 选择
	    isSelected: function isSelected(row) {
	      var _states$selection = this.states.selection,
	          selection = _states$selection === undefined ? [] : _states$selection;

	      return selection.indexOf(row) > -1;
	    },
	    clearSelection: function clearSelection() {
	      var states = this.states;
	      states.isAllSelected = false;
	      var oldSelection = states.selection;
	      if (oldSelection.length) {
	        states.selection = [];
	        this.table.$emit('selection-change', []);
	      }
	    },
	    cleanSelection: function cleanSelection() {
	      var states = this.states;
	      var data = states.data,
	          rowKey = states.rowKey,
	          selection = states.selection;

	      var deleted = void 0;
	      if (rowKey) {
	        deleted = [];
	        var selectedMap = getKeysMap(selection, rowKey);
	        var dataMap = getKeysMap(data, rowKey);
	        for (var key in selectedMap) {
	          if (selectedMap.hasOwnProperty(key) && !dataMap[key]) {
	            deleted.push(selectedMap[key].row);
	          }
	        }
	      } else {
	        deleted = selection.filter(function (item) {
	          return data.indexOf(item) === -1;
	        });
	      }
	      if (deleted.length) {
	        var newSelection = selection.filter(function (item) {
	          return deleted.indexOf(item) === -1;
	        });
	        states.selection = newSelection;
	        this.table.$emit('selection-change', newSelection.slice());
	      }
	    },
	    toggleRowSelection: function toggleRowSelection(row, selected) {
	      var emitChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

	      var changed = toggleRowStatus(this.states.selection, row, selected);
	      if (changed) {
	        var newSelection = (this.states.selection || []).slice();
	        // 调用 API 修改选中值，不触发 select 事件
	        if (emitChange) {
	          this.table.$emit('select', newSelection, row);
	        }
	        this.table.$emit('selection-change', newSelection);
	      }
	    },
	    _toggleAllSelection: function _toggleAllSelection() {
	      var states = this.states;
	      var _states$data = states.data,
	          data = _states$data === undefined ? [] : _states$data,
	          selection = states.selection;
	      // when only some rows are selected (but not all), select or deselect all of them
	      // depending on the value of selectOnIndeterminate

	      var value = states.selectOnIndeterminate ? !states.isAllSelected : !(states.isAllSelected || selection.length);
	      states.isAllSelected = value;

	      var selectionChanged = false;
	      data.forEach(function (row, index) {
	        if (states.selectable) {
	          if (states.selectable.call(null, row, index) && toggleRowStatus(selection, row, value)) {
	            selectionChanged = true;
	          }
	        } else {
	          if (toggleRowStatus(selection, row, value)) {
	            selectionChanged = true;
	          }
	        }
	      });

	      if (selectionChanged) {
	        this.table.$emit('selection-change', selection ? selection.slice() : []);
	      }
	      this.table.$emit('select-all', selection);
	    },
	    updateSelectionByRowKey: function updateSelectionByRowKey() {
	      var states = this.states;
	      var selection = states.selection,
	          rowKey = states.rowKey,
	          data = states.data;

	      var selectedMap = getKeysMap(selection, rowKey);
	      data.forEach(function (row) {
	        var rowId = getRowIdentity(row, rowKey);
	        var rowInfo = selectedMap[rowId];
	        if (rowInfo) {
	          selection[rowInfo.index] = row;
	        }
	      });
	    },
	    updateAllSelected: function updateAllSelected() {
	      var states = this.states;
	      var selection = states.selection,
	          rowKey = states.rowKey,
	          selectable = states.selectable;
	      // data 为 null 时，解构时的默认值会被忽略

	      var data = states.data || [];
	      if (data.length === 0) {
	        states.isAllSelected = false;
	        return;
	      }

	      var selectedMap = void 0;
	      if (rowKey) {
	        selectedMap = getKeysMap(selection, rowKey);
	      }
	      var isSelected = function isSelected(row) {
	        if (selectedMap) {
	          return !!selectedMap[getRowIdentity(row, rowKey)];
	        } else {
	          return selection.indexOf(row) !== -1;
	        }
	      };
	      var isAllSelected = true;
	      var selectedCount = 0;
	      for (var i = 0, j = data.length; i < j; i++) {
	        var item = data[i];
	        var isRowSelectable = selectable && selectable.call(null, item, i);
	        if (!isSelected(item)) {
	          if (!selectable || isRowSelectable) {
	            isAllSelected = false;
	            break;
	          }
	        } else {
	          selectedCount++;
	        }
	      }

	      if (selectedCount === 0) isAllSelected = false;
	      states.isAllSelected = isAllSelected;
	    },


	    // 过滤与排序
	    updateFilters: function updateFilters(columns, values) {
	      if (!Array.isArray(columns)) {
	        columns = [columns];
	      }
	      var states = this.states;
	      var filters = {};
	      columns.forEach(function (col) {
	        states.filters[col.id] = values;
	        filters[col.columnKey || col.id] = values;
	      });

	      return filters;
	    },
	    updateSort: function updateSort(column, prop, order) {
	      if (this.states.sortingColumn && this.states.sortingColumn !== column) {
	        this.states.sortingColumn.order = null;
	      }
	      this.states.sortingColumn = column;
	      this.states.sortProp = prop;
	      this.states.sortOrder = order;
	    },
	    execFilter: function execFilter() {
	      var _this = this;

	      var states = this.states;
	      var _data = states._data,
	          filters = states.filters;

	      var data = _data;

	      Object.keys(filters).forEach(function (columnId) {
	        var values = states.filters[columnId];
	        if (!values || values.length === 0) return;
	        var column = getColumnById(_this.states, columnId);
	        if (column && column.filterMethod) {
	          data = data.filter(function (row) {
	            return values.some(function (value) {
	              return column.filterMethod.call(null, value, row, column);
	            });
	          });
	        }
	      });

	      states.filteredData = data;
	    },
	    execSort: function execSort() {
	      var states = this.states;
	      states.data = watcher_sortData(states.filteredData, states);
	    },


	    // 根据 filters 与 sort 去过滤 data
	    execQuery: function execQuery(ignore) {
	      if (!(ignore && ignore.filter)) {
	        this.execFilter();
	      }
	      this.execSort();
	    },
	    clearFilter: function clearFilter(columnKeys) {
	      var states = this.states;
	      var _table$$refs = this.table.$refs,
	          tableHeader = _table$$refs.tableHeader,
	          fixedTableHeader = _table$$refs.fixedTableHeader,
	          rightFixedTableHeader = _table$$refs.rightFixedTableHeader;


	      var panels = {};
	      if (tableHeader) panels = merge_default()(panels, tableHeader.filterPanels);
	      if (fixedTableHeader) panels = merge_default()(panels, fixedTableHeader.filterPanels);
	      if (rightFixedTableHeader) panels = merge_default()(panels, rightFixedTableHeader.filterPanels);

	      var keys = Object.keys(panels);
	      if (!keys.length) return;

	      if (typeof columnKeys === 'string') {
	        columnKeys = [columnKeys];
	      }

	      if (Array.isArray(columnKeys)) {
	        var columns = columnKeys.map(function (key) {
	          return getColumnByKey(states, key);
	        });
	        keys.forEach(function (key) {
	          var column = columns.find(function (col) {
	            return col.id === key;
	          });
	          if (column) {
	            // TODO: 优化这里的代码
	            panels[key].filteredValue = [];
	          }
	        });
	        this.commit('filterChange', {
	          column: columns,
	          values: [],
	          silent: true,
	          multi: true
	        });
	      } else {
	        keys.forEach(function (key) {
	          // TODO: 优化这里的代码
	          panels[key].filteredValue = [];
	        });

	        states.filters = {};
	        this.commit('filterChange', {
	          column: {},
	          values: [],
	          silent: true
	        });
	      }
	    },
	    clearSort: function clearSort() {
	      var states = this.states;
	      if (!states.sortingColumn) return;

	      this.updateSort(null, null, null);
	      this.commit('changeSortCondition', {
	        silent: true
	      });
	    },


	    // 适配层，expand-row-keys 在 Expand 与 TreeTable 中都有使用
	    setExpandRowKeysAdapter: function setExpandRowKeysAdapter(val) {
	      // 这里会触发额外的计算，但为了兼容性，暂时这么做
	      this.setExpandRowKeys(val);
	      this.updateTreeExpandKeys(val);
	    },


	    // 展开行与 TreeTable 都要使用
	    toggleRowExpansionAdapter: function toggleRowExpansionAdapter(row, expanded) {
	      var hasExpandColumn = this.states.columns.some(function (_ref) {
	        var type = _ref.type;
	        return type === 'expand';
	      });
	      if (hasExpandColumn) {
	        this.toggleRowExpansion(row, expanded);
	      } else {
	        this.toggleTreeExpansion(row, expanded);
	      }
	    }
	  }
	}));
	// CONCATENATED MODULE: ./packages/table/src/store/index.js




	watcher.prototype.mutations = {
	  setData: function setData(states, data) {
	    var dataInstanceChanged = states._data !== data;
	    states._data = data;

	    this.execQuery();
	    // 数据变化，更新部分数据。
	    // 没有使用 computed，而是手动更新部分数据 https://github.com/vuejs/vue/issues/6660#issuecomment-331417140
	    this.updateCurrentRowData();
	    this.updateExpandRows();
	    if (states.reserveSelection) {
	      this.assertRowKey();
	      this.updateSelectionByRowKey();
	    } else {
	      if (dataInstanceChanged) {
	        this.clearSelection();
	      } else {
	        this.cleanSelection();
	      }
	    }
	    this.updateAllSelected();

	    this.updateTableScrollY();
	  },
	  insertColumn: function insertColumn(states, column, index, parent) {
	    var array = states._columns;
	    if (parent) {
	      array = parent.children;
	      if (!array) array = parent.children = [];
	    }

	    if (typeof index !== 'undefined') {
	      array.splice(index, 0, column);
	    } else {
	      array.push(column);
	    }

	    if (column.type === 'selection') {
	      states.selectable = column.selectable;
	      states.reserveSelection = column.reserveSelection;
	    }

	    if (this.table.$ready) {
	      this.updateColumns(); // hack for dynamics insert column
	      this.scheduleLayout();
	    }
	  },
	  removeColumn: function removeColumn(states, column, parent) {
	    var array = states._columns;
	    if (parent) {
	      array = parent.children;
	      if (!array) array = parent.children = [];
	    }
	    if (array) {
	      array.splice(array.indexOf(column), 1);
	    }

	    if (this.table.$ready) {
	      this.updateColumns(); // hack for dynamics remove column
	      this.scheduleLayout();
	    }
	  },
	  sort: function sort(states, options) {
	    var prop = options.prop,
	        order = options.order,
	        init = options.init;

	    if (prop) {
	      var column = Object(util_["arrayFind"])(states.columns, function (column) {
	        return column.property === prop;
	      });
	      if (column) {
	        column.order = order;
	        this.updateSort(column, prop, order);
	        this.commit('changeSortCondition', { init: init });
	      }
	    }
	  },
	  changeSortCondition: function changeSortCondition(states, options) {
	    // 修复 pr https://github.com/ElemeFE/element/pull/15012 导致的 bug
	    var column = states.sortingColumn,
	        prop = states.sortProp,
	        order = states.sortOrder;

	    if (order === null) {
	      states.sortingColumn = null;
	      states.sortProp = null;
	    }
	    var ingore = { filter: true };
	    this.execQuery(ingore);

	    if (!options || !(options.silent || options.init)) {
	      this.table.$emit('sort-change', {
	        column: column,
	        prop: prop,
	        order: order
	      });
	    }

	    this.updateTableScrollY();
	  },
	  filterChange: function filterChange(states, options) {
	    var column = options.column,
	        values = options.values,
	        silent = options.silent;

	    var newFilters = this.updateFilters(column, values);

	    this.execQuery();

	    if (!silent) {
	      this.table.$emit('filter-change', newFilters);
	    }

	    this.updateTableScrollY();
	  },
	  toggleAllSelection: function toggleAllSelection() {
	    this.toggleAllSelection();
	  },
	  rowSelectedChanged: function rowSelectedChanged(states, row) {
	    this.toggleRowSelection(row);
	    this.updateAllSelected();
	  },
	  setHoverRow: function setHoverRow(states, row) {
	    states.hoverRow = row;
	  },
	  setCurrentRow: function setCurrentRow(states, row) {
	    this.updateCurrentRow(row);
	  }
	};

	watcher.prototype.commit = function (name) {
	  var mutations = this.mutations;
	  if (mutations[name]) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    mutations[name].apply(this, [this.states].concat(args));
	  } else {
	    throw new Error('Action not found: ' + name);
	  }
	};

	watcher.prototype.updateTableScrollY = function () {
	  external_vue_default.a.nextTick(this.table.updateScrollY);
	};

	/* harmony default export */ var src_store = (watcher);
	// CONCATENATED MODULE: ./packages/table/src/store/helper.js



	function createStore(table) {
	  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	  if (!table) {
	    throw new Error('Table is required.');
	  }

	  var store = new src_store();
	  store.table = table;
	  // fix https://github.com/ElemeFE/element/issues/14075
	  // related pr https://github.com/ElemeFE/element/pull/14146
	  store.toggleAllSelection = debounce_default()(10, store._toggleAllSelection);
	  Object.keys(initialState).forEach(function (key) {
	    store.states[key] = initialState[key];
	  });
	  return store;
	}

	function mapStates(mapper) {
	  var res = {};
	  Object.keys(mapper).forEach(function (key) {
	    var value = mapper[key];
	    var fn = void 0;
	    if (typeof value === 'string') {
	      fn = function fn() {
	        return this.store.states[value];
	      };
	    } else if (typeof value === 'function') {
	      fn = function fn() {
	        return value.call(this, this.store.states);
	      };
	    } else {
	      console.error('invalid value type');
	    }
	    if (fn) {
	      res[key] = fn;
	    }
	  });
	  return res;
	}	// EXTERNAL MODULE: external "element-ui/lib/utils/scrollbar-width"
	var scrollbar_width_ = __webpack_require__(31);
	var scrollbar_width_default = /*#__PURE__*/__webpack_require__.n(scrollbar_width_);

	// CONCATENATED MODULE: ./packages/table/src/table-layout.js
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }





	var table_layout_TableLayout = function () {
	  function TableLayout(options) {
	    _classCallCheck(this, TableLayout);

	    this.observers = [];
	    this.table = null;
	    this.store = null;
	    this.columns = null;
	    this.fit = true;
	    this.showHeader = true;

	    this.height = null;
	    this.scrollX = false;
	    this.scrollY = false;
	    this.bodyWidth = null;
	    this.fixedWidth = null;
	    this.rightFixedWidth = null;
	    this.tableHeight = null;
	    this.headerHeight = 44; // Table Header Height
	    this.appendHeight = 0; // Append Slot Height
	    this.footerHeight = 44; // Table Footer Height
	    this.viewportHeight = null; // Table Height - Scroll Bar Height
	    this.bodyHeight = null; // Table Height - Table Header Height
	    this.fixedBodyHeight = null; // Table Height - Table Header Height - Scroll Bar Height
	    this.gutterWidth = scrollbar_width_default()();

	    for (var name in options) {
	      if (options.hasOwnProperty(name)) {
	        this[name] = options[name];
	      }
	    }

	    if (!this.table) {
	      throw new Error('table is required for Table Layout');
	    }
	    if (!this.store) {
	      throw new Error('store is required for Table Layout');
	    }
	  }

	  TableLayout.prototype.updateScrollY = function updateScrollY() {
	    var height = this.height;
	    if (height === null) return false;
	    var bodyWrapper = this.table.bodyWrapper;
	    if (this.table.$el && bodyWrapper) {
	      var body = bodyWrapper.querySelector('.el-table__body');
	      var prevScrollY = this.scrollY;
	      var scrollY = body.offsetHeight > this.bodyHeight;
	      this.scrollY = scrollY;
	      return prevScrollY !== scrollY;
	    }
	    return false;
	  };

	  TableLayout.prototype.setHeight = function setHeight(value) {
	    var _this = this;

	    var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'height';

	    if (external_vue_default.a.prototype.$isServer) return;
	    var el = this.table.$el;
	    value = parseHeight(value);
	    this.height = value;

	    if (!el && (value || value === 0)) return external_vue_default.a.nextTick(function () {
	      return _this.setHeight(value, prop);
	    });

	    if (typeof value === 'number') {
	      el.style[prop] = value + 'px';
	      this.updateElsHeight();
	    } else if (typeof value === 'string') {
	      el.style[prop] = value;
	      this.updateElsHeight();
	    }
	  };

	  TableLayout.prototype.setMaxHeight = function setMaxHeight(value) {
	    this.setHeight(value, 'max-height');
	  };

	  TableLayout.prototype.getFlattenColumns = function getFlattenColumns() {
	    var flattenColumns = [];
	    var columns = this.table.columns;
	    columns.forEach(function (column) {
	      if (column.isColumnGroup) {
	        flattenColumns.push.apply(flattenColumns, column.columns);
	      } else {
	        flattenColumns.push(column);
	      }
	    });

	    return flattenColumns;
	  };

	  TableLayout.prototype.updateElsHeight = function updateElsHeight() {
	    var _this2 = this;

	    if (!this.table.$ready) return external_vue_default.a.nextTick(function () {
	      return _this2.updateElsHeight();
	    });
	    var _table$$refs = this.table.$refs,
	        headerWrapper = _table$$refs.headerWrapper,
	        appendWrapper = _table$$refs.appendWrapper,
	        footerWrapper = _table$$refs.footerWrapper;

	    this.appendHeight = appendWrapper ? appendWrapper.offsetHeight : 0;

	    if (this.showHeader && !headerWrapper) return;

	    // fix issue (https://github.com/ElemeFE/element/pull/16956)
	    var headerTrElm = headerWrapper ? headerWrapper.querySelector('.el-table__header tr') : null;
	    var noneHeader = this.headerDisplayNone(headerTrElm);

	    var headerHeight = this.headerHeight = !this.showHeader ? 0 : headerWrapper.offsetHeight;
	    if (this.showHeader && !noneHeader && headerWrapper.offsetWidth > 0 && (this.table.columns || []).length > 0 && headerHeight < 2) {
	      return external_vue_default.a.nextTick(function () {
	        return _this2.updateElsHeight();
	      });
	    }
	    var tableHeight = this.tableHeight = this.table.$el.clientHeight;
	    var footerHeight = this.footerHeight = footerWrapper ? footerWrapper.offsetHeight : 0;
	    if (this.height !== null) {
	      this.bodyHeight = tableHeight - headerHeight - footerHeight + (footerWrapper ? 1 : 0);
	    }
	    this.fixedBodyHeight = this.scrollX ? this.bodyHeight - this.gutterWidth : this.bodyHeight;

	    var noData = !(this.store.states.data && this.store.states.data.length);
	    this.viewportHeight = this.scrollX ? tableHeight - (noData ? 0 : this.gutterWidth) : tableHeight;
	    this.updateScrollY();
	    this.notifyObservers('scrollable');
	  };

	  TableLayout.prototype.headerDisplayNone = function headerDisplayNone(elm) {
	    if (!elm) return true;
	    var headerChild = elm;
	    while (headerChild.tagName !== 'DIV') {
	      if (getComputedStyle(headerChild).display === 'none') {
	        return true;
	      }
	      headerChild = headerChild.parentElement;
	    }
	    return false;
	  };

	  TableLayout.prototype.updateColumnsWidth = function updateColumnsWidth() {
	    if (external_vue_default.a.prototype.$isServer) return;
	    var fit = this.fit;
	    var bodyWidth = this.table.$el.clientWidth;
	    var bodyMinWidth = 0;

	    var flattenColumns = this.getFlattenColumns();
	    var flexColumns = flattenColumns.filter(function (column) {
	      return typeof column.width !== 'number';
	    });

	    flattenColumns.forEach(function (column) {
	      // Clean those columns whose width changed from flex to unflex
	      if (typeof column.width === 'number' && column.realWidth) column.realWidth = null;
	    });

	    if (flexColumns.length > 0 && fit) {
	      flattenColumns.forEach(function (column) {
	        bodyMinWidth += column.width || column.minWidth || 80;
	      });

	      var scrollYWidth = this.scrollY ? this.gutterWidth : 0;

	      if (bodyMinWidth <= bodyWidth - scrollYWidth) {
	        // DON'T HAVE SCROLL BAR
	        this.scrollX = false;

	        var totalFlexWidth = bodyWidth - scrollYWidth - bodyMinWidth;

	        if (flexColumns.length === 1) {
	          flexColumns[0].realWidth = (flexColumns[0].minWidth || 80) + totalFlexWidth;
	        } else {
	          var allColumnsWidth = flexColumns.reduce(function (prev, column) {
	            return prev + (column.minWidth || 80);
	          }, 0);
	          var flexWidthPerPixel = totalFlexWidth / allColumnsWidth;
	          var noneFirstWidth = 0;

	          flexColumns.forEach(function (column, index) {
	            if (index === 0) return;
	            var flexWidth = Math.floor((column.minWidth || 80) * flexWidthPerPixel);
	            noneFirstWidth += flexWidth;
	            column.realWidth = (column.minWidth || 80) + flexWidth;
	          });

	          flexColumns[0].realWidth = (flexColumns[0].minWidth || 80) + totalFlexWidth - noneFirstWidth;
	        }
	      } else {
	        // HAVE HORIZONTAL SCROLL BAR
	        this.scrollX = true;
	        flexColumns.forEach(function (column) {
	          column.realWidth = column.minWidth;
	        });
	      }

	      this.bodyWidth = Math.max(bodyMinWidth, bodyWidth);
	      this.table.resizeState.width = this.bodyWidth;
	    } else {
	      flattenColumns.forEach(function (column) {
	        if (!column.width && !column.minWidth) {
	          column.realWidth = 80;
	        } else {
	          column.realWidth = column.width || column.minWidth;
	        }

	        bodyMinWidth += column.realWidth;
	      });
	      this.scrollX = bodyMinWidth > bodyWidth;

	      this.bodyWidth = bodyMinWidth;
	    }

	    var fixedColumns = this.store.states.fixedColumns;

	    if (fixedColumns.length > 0) {
	      var fixedWidth = 0;
	      fixedColumns.forEach(function (column) {
	        fixedWidth += column.realWidth || column.width;
	      });

	      this.fixedWidth = fixedWidth;
	    }

	    var rightFixedColumns = this.store.states.rightFixedColumns;
	    if (rightFixedColumns.length > 0) {
	      var rightFixedWidth = 0;
	      rightFixedColumns.forEach(function (column) {
	        rightFixedWidth += column.realWidth || column.width;
	      });

	      this.rightFixedWidth = rightFixedWidth;
	    }

	    this.notifyObservers('columns');
	  };

	  TableLayout.prototype.addObserver = function addObserver(observer) {
	    this.observers.push(observer);
	  };

	  TableLayout.prototype.removeObserver = function removeObserver(observer) {
	    var index = this.observers.indexOf(observer);
	    if (index !== -1) {
	      this.observers.splice(index, 1);
	    }
	  };

	  TableLayout.prototype.notifyObservers = function notifyObservers(event) {
	    var _this3 = this;

	    var observers = this.observers;
	    observers.forEach(function (observer) {
	      switch (event) {
	        case 'columns':
	          observer.onColumnsChange(_this3);
	          break;
	        case 'scrollable':
	          observer.onScrollableChange(_this3);
	          break;
	        default:
	          throw new Error('Table Layout don\'t have event ' + event + '.');
	      }
	    });
	  };

	  return TableLayout;
	}();

	/* harmony default export */ var table_layout = (table_layout_TableLayout);
	// CONCATENATED MODULE: ./packages/table/src/layout-observer.js
	/* harmony default export */ var layout_observer = ({
	  created: function created() {
	    this.tableLayout.addObserver(this);
	  },
	  destroyed: function destroyed() {
	    this.tableLayout.removeObserver(this);
	  },


	  computed: {
	    tableLayout: function tableLayout() {
	      var layout = this.layout;
	      if (!layout && this.table) {
	        layout = this.table.layout;
	      }
	      if (!layout) {
	        throw new Error('Can not find table layout.');
	      }
	      return layout;
	    }
	  },

	  mounted: function mounted() {
	    this.onColumnsChange(this.tableLayout);
	    this.onScrollableChange(this.tableLayout);
	  },
	  updated: function updated() {
	    if (this.__updated__) return;
	    this.onColumnsChange(this.tableLayout);
	    this.onScrollableChange(this.tableLayout);
	    this.__updated__ = true;
	  },


	  methods: {
	    onColumnsChange: function onColumnsChange(layout) {
	      var cols = this.$el.querySelectorAll('colgroup > col');
	      if (!cols.length) return;
	      var flattenColumns = layout.getFlattenColumns();
	      var columnsMap = {};
	      flattenColumns.forEach(function (column) {
	        columnsMap[column.id] = column;
	      });
	      for (var i = 0, j = cols.length; i < j; i++) {
	        var col = cols[i];
	        var name = col.getAttribute('name');
	        var column = columnsMap[name];
	        if (column) {
	          col.setAttribute('width', column.realWidth || column.width);
	        }
	      }
	    },
	    onScrollableChange: function onScrollableChange(layout) {
	      var cols = this.$el.querySelectorAll('colgroup > col[name=gutter]');
	      for (var i = 0, j = cols.length; i < j; i++) {
	        var col = cols[i];
	        col.setAttribute('width', layout.scrollY ? layout.gutterWidth : '0');
	      }
	      var ths = this.$el.querySelectorAll('th.gutter');
	      for (var _i = 0, _j = ths.length; _i < _j; _i++) {
	        var th = ths[_i];
	        th.style.width = layout.scrollY ? layout.gutterWidth + 'px' : '0';
	        th.style.display = layout.scrollY ? '' : 'none';
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/table-row.js
	var table_row_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };


	/* harmony default export */ var table_row = ({
	  name: 'ElTableRow',
	  props: ['columns', 'row', 'index', 'isSelected', 'isExpanded', 'store', 'context', 'firstDefaultColumnIndex', 'treeRowData', 'treeIndent', 'columnsHidden', 'getSpan', 'getColspanRealWidth', 'getCellStyle', 'getCellClass', 'handleCellMouseLeave', 'handleCellMouseEnter', 'fixed'],
	  components: {
	    ElCheckbox: checkbox_default.a
	  },
	  render: function render() {
	    var _this = this;

	    var h = arguments[0];
	    var columns = this.columns,
	        row = this.row,
	        $index = this.index,
	        store = this.store,
	        context = this.context,
	        firstDefaultColumnIndex = this.firstDefaultColumnIndex,
	        treeRowData = this.treeRowData,
	        treeIndent = this.treeIndent,
	        _columnsHidden = this.columnsHidden,
	        columnsHidden = _columnsHidden === undefined ? [] : _columnsHidden,
	        isSelected = this.isSelected,
	        isExpanded = this.isExpanded;


	    return h('tr', [columns.map(function (column, cellIndex) {
	      var _getSpan = _this.getSpan(row, column, $index, cellIndex),
	          rowspan = _getSpan.rowspan,
	          colspan = _getSpan.colspan;

	      if (!rowspan || !colspan) {
	        return null;
	      }
	      var columnData = table_row_extends({}, column);
	      columnData.realWidth = _this.getColspanRealWidth(columns, colspan, cellIndex);
	      var data = {
	        store: store,
	        isSelected: isSelected,
	        isExpanded: isExpanded,
	        _self: context,
	        column: columnData,
	        row: row,
	        $index: $index
	      };
	      if (cellIndex === firstDefaultColumnIndex && treeRowData) {
	        data.treeNode = {
	          indent: treeRowData.level * treeIndent,
	          level: treeRowData.level
	        };
	        if (typeof treeRowData.expanded === 'boolean') {
	          data.treeNode.expanded = treeRowData.expanded;
	          // 表明是懒加载
	          if ('loading' in treeRowData) {
	            data.treeNode.loading = treeRowData.loading;
	          }
	          if ('noLazyChildren' in treeRowData) {
	            data.treeNode.noLazyChildren = treeRowData.noLazyChildren;
	          }
	        }
	      }
	      return h(
	        'td',
	        {
	          style: _this.getCellStyle($index, cellIndex, row, column),
	          'class': _this.getCellClass($index, cellIndex, row, column),
	          attrs: { rowspan: rowspan,
	            colspan: colspan
	          },
	          on: {
	            'mouseenter': function mouseenter($event) {
	              return _this.handleCellMouseEnter($event, row);
	            },
	            'mouseleave': _this.handleCellMouseLeave
	          }
	        },
	        [column.renderCell.call(_this._renderProxy, _this.$createElement, data, columnsHidden[cellIndex])]
	      );
	    })]);
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/table-body.js
	var table_body_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var table_body_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };











	/* harmony default export */ var table_body = ({
	  name: 'ElTableBody',

	  mixins: [layout_observer],

	  components: {
	    ElCheckbox: checkbox_default.a,
	    ElTooltip: tooltip_default.a,
	    TableRow: table_row
	  },

	  props: {
	    store: {
	      required: true
	    },
	    stripe: Boolean,
	    context: {},
	    rowClassName: [String, Function],
	    rowStyle: [Object, Function],
	    fixed: String,
	    highlight: Boolean
	  },

	  render: function render(h) {
	    var _this = this;

	    var data = this.data || [];
	    return h(
	      'table',
	      {
	        'class': 'el-table__body',
	        attrs: { cellspacing: '0',
	          cellpadding: '0',
	          border: '0' }
	      },
	      [h('colgroup', [this.columns.map(function (column) {
	        return h('col', {
	          attrs: { name: column.id },
	          key: column.id });
	      })]), h('tbody', [data.reduce(function (acc, row) {
	        return acc.concat(_this.wrappedRowRender(row, acc.length));
	      }, []), h('el-tooltip', {
	        attrs: { effect: this.table.tooltipEffect, placement: 'top', content: this.tooltipContent },
	        ref: 'tooltip' })])]
	    );
	  },


	  computed: table_body_extends({
	    table: function table() {
	      return this.$parent;
	    }
	  }, mapStates({
	    data: 'data',
	    columns: 'columns',
	    treeIndent: 'indent',
	    leftFixedLeafCount: 'fixedLeafColumnsLength',
	    rightFixedLeafCount: 'rightFixedLeafColumnsLength',
	    columnsCount: function columnsCount(states) {
	      return states.columns.length;
	    },
	    leftFixedCount: function leftFixedCount(states) {
	      return states.fixedColumns.length;
	    },
	    rightFixedCount: function rightFixedCount(states) {
	      return states.rightFixedColumns.length;
	    },
	    hasExpandColumn: function hasExpandColumn(states) {
	      return states.columns.some(function (_ref) {
	        var type = _ref.type;
	        return type === 'expand';
	      });
	    }
	  }), {
	    columnsHidden: function columnsHidden() {
	      var _this2 = this;

	      return this.columns.map(function (column, index) {
	        return _this2.isColumnHidden(index);
	      });
	    },
	    firstDefaultColumnIndex: function firstDefaultColumnIndex() {
	      return Object(util_["arrayFindIndex"])(this.columns, function (_ref2) {
	        var type = _ref2.type;
	        return type === 'default';
	      });
	    }
	  }),

	  watch: {
	    // don't trigger getter of currentRow in getCellClass. see https://jsfiddle.net/oe2b4hqt/
	    // update DOM manually. see https://github.com/ElemeFE/element/pull/13954/files#diff-9b450c00d0a9dec0ffad5a3176972e40
	    'store.states.hoverRow': function storeStatesHoverRow(newVal, oldVal) {
	      var _this3 = this;

	      if (!this.store.states.isComplex || this.$isServer) return;
	      var raf = window.requestAnimationFrame;
	      if (!raf) {
	        raf = function raf(fn) {
	          return setTimeout(fn, 16);
	        };
	      }
	      raf(function () {
	        var rows = _this3.$el.querySelectorAll('.el-table__row');
	        var oldRow = rows[oldVal];
	        var newRow = rows[newVal];
	        if (oldRow) {
	          Object(dom_["removeClass"])(oldRow, 'hover-row');
	        }
	        if (newRow) {
	          Object(dom_["addClass"])(newRow, 'hover-row');
	        }
	      });
	    }
	  },

	  data: function data() {
	    return {
	      tooltipContent: ''
	    };
	  },
	  created: function created() {
	    this.activateTooltip = debounce_default()(50, function (tooltip) {
	      return tooltip.handleShowPopper();
	    });
	  },


	  methods: {
	    getKeyOfRow: function getKeyOfRow(row, index) {
	      var rowKey = this.table.rowKey;
	      if (rowKey) {
	        return getRowIdentity(row, rowKey);
	      }
	      return index;
	    },
	    isColumnHidden: function isColumnHidden(index) {
	      if (this.fixed === true || this.fixed === 'left') {
	        return index >= this.leftFixedLeafCount;
	      } else if (this.fixed === 'right') {
	        return index < this.columnsCount - this.rightFixedLeafCount;
	      } else {
	        return index < this.leftFixedLeafCount || index >= this.columnsCount - this.rightFixedLeafCount;
	      }
	    },
	    getSpan: function getSpan(row, column, rowIndex, columnIndex) {
	      var rowspan = 1;
	      var colspan = 1;
	      var fn = this.table.spanMethod;
	      if (typeof fn === 'function') {
	        var result = fn({
	          row: row,
	          column: column,
	          rowIndex: rowIndex,
	          columnIndex: columnIndex
	        });
	        if (Array.isArray(result)) {
	          rowspan = result[0];
	          colspan = result[1];
	        } else if ((typeof result === 'undefined' ? 'undefined' : table_body_typeof(result)) === 'object') {
	          rowspan = result.rowspan;
	          colspan = result.colspan;
	        }
	      }
	      return { rowspan: rowspan, colspan: colspan };
	    },
	    getRowStyle: function getRowStyle(row, rowIndex) {
	      var rowStyle = this.table.rowStyle;
	      if (typeof rowStyle === 'function') {
	        return rowStyle.call(null, {
	          row: row,
	          rowIndex: rowIndex
	        });
	      }
	      return rowStyle || null;
	    },
	    getRowClass: function getRowClass(row, rowIndex) {
	      var selection = this.store.states.selection;
	      var classes = ['el-table__row'];
	      if (this.table.highlightCurrentRow && row === this.store.states.currentRow) {
	        classes.push('current-row');
	      }

	      if (this.table.highlightSelectionRow) {
	        for (var i = 0; i < selection.length; i++) {
	          if (objectEquals(row, selection[i])) {
	            classes.push('selection-row');
	          }
	        }	      }

	      if (this.stripe && rowIndex % 2 === 1) {
	        classes.push('el-table__row--striped');
	      }
	      var rowClassName = this.table.rowClassName;
	      if (typeof rowClassName === 'string') {
	        classes.push(rowClassName);
	      } else if (typeof rowClassName === 'function') {
	        classes.push(rowClassName.call(null, {
	          row: row,
	          rowIndex: rowIndex
	        }));
	      }

	      if (this.store.states.expandRows.indexOf(row) > -1) {
	        classes.push('expanded');
	      }

	      return classes;
	    },
	    getCellStyle: function getCellStyle(rowIndex, columnIndex, row, column) {
	      var cellStyle = this.table.cellStyle;
	      if (typeof cellStyle === 'function') {
	        return cellStyle.call(null, {
	          rowIndex: rowIndex,
	          columnIndex: columnIndex,
	          row: row,
	          column: column
	        });
	      }
	      return cellStyle;
	    },
	    getCellClass: function getCellClass(rowIndex, columnIndex, row, column) {
	      var classes = [column.id, column.align, column.className];

	      if (this.isColumnHidden(columnIndex)) {
	        classes.push('is-hidden');
	      }

	      var cellClassName = this.table.cellClassName;
	      if (typeof cellClassName === 'string') {
	        classes.push(cellClassName);
	      } else if (typeof cellClassName === 'function') {
	        classes.push(cellClassName.call(null, {
	          rowIndex: rowIndex,
	          columnIndex: columnIndex,
	          row: row,
	          column: column
	        }));
	      }

	      classes.push('el-table__cell');

	      return classes.join(' ');
	    },
	    getColspanRealWidth: function getColspanRealWidth(columns, colspan, index) {
	      if (colspan < 1) {
	        return columns[index].realWidth;
	      }
	      var widthArr = columns.map(function (_ref3) {
	        var realWidth = _ref3.realWidth;
	        return realWidth;
	      }).slice(index, index + colspan);
	      return widthArr.reduce(function (acc, width) {
	        return acc + width;
	      }, -1);
	    },
	    handleCellMouseEnter: function handleCellMouseEnter(event, row) {
	      var table = this.table;
	      var cell = getCell(event);

	      if (cell) {
	        var column = getColumnByCell(table, cell);
	        var hoverState = table.hoverState = { cell: cell, column: column, row: row };
	        table.$emit('cell-mouse-enter', hoverState.row, hoverState.column, hoverState.cell, event);
	      }

	      // 判断是否text-overflow, 如果是就显示tooltip
	      var cellChild = event.target.querySelector('.cell');
	      if (!(Object(dom_["hasClass"])(cellChild, 'el-tooltip') && cellChild.childNodes.length)) {
	        return;
	      }
	      // use range width instead of scrollWidth to determine whether the text is overflowing
	      // to address a potential FireFox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1074543#c3
	      var range = document.createRange();
	      range.setStart(cellChild, 0);
	      range.setEnd(cellChild, cellChild.childNodes.length);
	      var rangeWidth = range.getBoundingClientRect().width;
	      var padding = (parseInt(Object(dom_["getStyle"])(cellChild, 'paddingLeft'), 10) || 0) + (parseInt(Object(dom_["getStyle"])(cellChild, 'paddingRight'), 10) || 0);
	      if ((rangeWidth + padding > cellChild.offsetWidth || cellChild.scrollWidth > cellChild.offsetWidth) && this.$refs.tooltip) {
	        var tooltip = this.$refs.tooltip;
	        // TODO 会引起整个 Table 的重新渲染，需要优化
	        this.tooltipContent = cell.innerText || cell.textContent;
	        tooltip.referenceElm = cell;
	        tooltip.$refs.popper && (tooltip.$refs.popper.style.display = 'none');
	        tooltip.doDestroy();
	        tooltip.setExpectedState(true);
	        this.activateTooltip(tooltip);
	      }
	    },
	    handleCellMouseLeave: function handleCellMouseLeave(event) {
	      var tooltip = this.$refs.tooltip;
	      if (tooltip) {
	        tooltip.setExpectedState(false);
	        tooltip.handleClosePopper();
	      }
	      var cell = getCell(event);
	      if (!cell) return;

	      var oldHoverState = this.table.hoverState || {};
	      this.table.$emit('cell-mouse-leave', oldHoverState.row, oldHoverState.column, oldHoverState.cell, event);
	    },


	    handleMouseEnter: debounce_default()(30, function (index) {
	      this.store.commit('setHoverRow', index);
	    }),

	    handleMouseLeave: debounce_default()(30, function () {
	      this.store.commit('setHoverRow', null);
	    }),

	    handleContextMenu: function handleContextMenu(event, row) {
	      this.handleEvent(event, row, 'contextmenu');
	    },
	    handleDoubleClick: function handleDoubleClick(event, row) {
	      this.handleEvent(event, row, 'dblclick');
	    },
	    handleClick: function handleClick(event, row) {
	      this.store.commit('setCurrentRow', row);
	      this.handleEvent(event, row, 'click');
	    },
	    handleEvent: function handleEvent(event, row, name) {
	      var table = this.table;
	      var cell = getCell(event);
	      var column = void 0;
	      if (cell) {
	        column = getColumnByCell(table, cell);
	        if (column) {
	          table.$emit('cell-' + name, row, column, cell, event);
	        }
	      }
	      table.$emit('row-' + name, row, column, event);
	    },
	    rowRender: function rowRender(row, $index, treeRowData) {
	      var _this4 = this;

	      var h = this.$createElement;
	      var treeIndent = this.treeIndent,
	          columns = this.columns,
	          firstDefaultColumnIndex = this.firstDefaultColumnIndex;

	      var rowClasses = this.getRowClass(row, $index);
	      var display = true;
	      if (treeRowData) {
	        rowClasses.push('el-table__row--level-' + treeRowData.level);
	        display = treeRowData.display;
	      }
	      // 指令 v-show 会覆盖 row-style 中 display
	      // 使用 :style 代替 v-show https://github.com/ElemeFE/element/issues/16995
	      var displayStyle = display ? null : {
	        display: 'none'
	      };
	      return h(table_row, {
	        style: [displayStyle, this.getRowStyle(row, $index)],
	        'class': rowClasses,
	        key: this.getKeyOfRow(row, $index),
	        nativeOn: {
	          'dblclick': function dblclick($event) {
	            return _this4.handleDoubleClick($event, row);
	          },
	          'click': function click($event) {
	            return _this4.handleClick($event, row);
	          },
	          'contextmenu': function contextmenu($event) {
	            return _this4.handleContextMenu($event, row);
	          },
	          'mouseenter': function mouseenter(_) {
	            return _this4.handleMouseEnter($index);
	          },
	          'mouseleave': this.handleMouseLeave
	        },
	        attrs: {
	          columns: columns,
	          row: row,
	          index: $index,
	          store: this.store,
	          context: this.context || this.table.$vnode.context,
	          firstDefaultColumnIndex: firstDefaultColumnIndex,
	          treeRowData: treeRowData,
	          treeIndent: treeIndent,
	          columnsHidden: this.columnsHidden,
	          getSpan: this.getSpan,
	          getColspanRealWidth: this.getColspanRealWidth,
	          getCellStyle: this.getCellStyle,
	          getCellClass: this.getCellClass,
	          handleCellMouseEnter: this.handleCellMouseEnter,
	          handleCellMouseLeave: this.handleCellMouseLeave,
	          isSelected: this.store.isSelected(row),
	          isExpanded: this.store.states.expandRows.indexOf(row) > -1,
	          fixed: this.fixed
	        }
	      });
	    },
	    wrappedRowRender: function wrappedRowRender(row, $index) {
	      var _this5 = this;

	      var h = this.$createElement;

	      var store = this.store;
	      var isRowExpanded = store.isRowExpanded,
	          assertRowKey = store.assertRowKey;
	      var _store$states = store.states,
	          treeData = _store$states.treeData,
	          lazyTreeNodeMap = _store$states.lazyTreeNodeMap,
	          childrenColumnName = _store$states.childrenColumnName,
	          rowKey = _store$states.rowKey;

	      if (this.hasExpandColumn && isRowExpanded(row)) {
	        var renderExpanded = this.table.renderExpanded;
	        var tr = this.rowRender(row, $index);
	        if (!renderExpanded) {
	          console.error('[Element Error]renderExpanded is required.');
	          return tr;
	        }
	        // 使用二维数组，避免修改 $index
	        return [[tr, h(
	          'tr',
	          { key: 'expanded-row__' + tr.key },
	          [h(
	            'td',
	            {
	              attrs: { colspan: this.columnsCount },
	              'class': 'el-table__cell el-table__expanded-cell' },
	            [renderExpanded(this.$createElement, { row: row, $index: $index, store: this.store })]
	          )]
	        )]];
	      } else if (Object.keys(treeData).length) {
	        assertRowKey();
	        // TreeTable 时，rowKey 必须由用户设定，不使用 getKeyOfRow 计算
	        // 在调用 rowRender 函数时，仍然会计算 rowKey，不太好的操作
	        var key = getRowIdentity(row, rowKey);
	        var cur = treeData[key];
	        var treeRowData = null;
	        if (cur) {
	          treeRowData = {
	            expanded: cur.expanded,
	            level: cur.level,
	            display: true
	          };
	          if (typeof cur.lazy === 'boolean') {
	            if (typeof cur.loaded === 'boolean' && cur.loaded) {
	              treeRowData.noLazyChildren = !(cur.children && cur.children.length);
	            }
	            treeRowData.loading = cur.loading;
	          }
	        }
	        var tmp = [this.rowRender(row, $index, treeRowData)];
	        // 渲染嵌套数据
	        if (cur) {
	          // currentRow 记录的是 index，所以还需主动增加 TreeTable 的 index
	          var i = 0;
	          var traverse = function traverse(children, parent) {
	            if (!(children && children.length && parent)) return;
	            children.forEach(function (node) {
	              // 父节点的 display 状态影响子节点的显示状态
	              var innerTreeRowData = {
	                display: parent.display && parent.expanded,
	                level: parent.level + 1
	              };
	              var childKey = getRowIdentity(node, rowKey);
	              if (childKey === undefined || childKey === null) {
	                throw new Error('for nested data item, row-key is required.');
	              }
	              cur = table_body_extends({}, treeData[childKey]);
	              // 对于当前节点，分成有无子节点两种情况。
	              // 如果包含子节点的，设置 expanded 属性。
	              // 对于它子节点的 display 属性由它本身的 expanded 与 display 共同决定。
	              if (cur) {
	                innerTreeRowData.expanded = cur.expanded;
	                // 懒加载的某些节点，level 未知
	                cur.level = cur.level || innerTreeRowData.level;
	                cur.display = !!(cur.expanded && innerTreeRowData.display);
	                if (typeof cur.lazy === 'boolean') {
	                  if (typeof cur.loaded === 'boolean' && cur.loaded) {
	                    innerTreeRowData.noLazyChildren = !(cur.children && cur.children.length);
	                  }
	                  innerTreeRowData.loading = cur.loading;
	                }
	              }
	              i++;
	              tmp.push(_this5.rowRender(node, $index + i, innerTreeRowData));
	              if (cur) {
	                var _nodes = lazyTreeNodeMap[childKey] || node[childrenColumnName];
	                traverse(_nodes, cur);
	              }
	            });
	          };
	          // 对于 root 节点，display 一定为 true
	          cur.display = true;
	          var nodes = lazyTreeNodeMap[key] || row[childrenColumnName];
	          traverse(nodes, cur);
	        }
	        return tmp;
	      } else {
	        return this.rowRender(row, $index);
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/filter-panel.vue?vue&type=template&id=7f2c919f&
	var filter_panelvue_type_template_id_7f2c919f_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("transition", { attrs: { name: "el-zoom-in-top" } }, [
	    _vm.multiple
	      ? _c(
	          "div",
	          {
	            directives: [
	              {
	                name: "clickoutside",
	                rawName: "v-clickoutside",
	                value: _vm.handleOutsideClick,
	                expression: "handleOutsideClick"
	              },
	              {
	                name: "show",
	                rawName: "v-show",
	                value: _vm.showPopper,
	                expression: "showPopper"
	              }
	            ],
	            staticClass: "el-table-filter"
	          },
	          [
	            _c(
	              "div",
	              { staticClass: "el-table-filter__content" },
	              [
	                _c(
	                  "el-scrollbar",
	                  { attrs: { "wrap-class": "el-table-filter__wrap" } },
	                  [
	                    _c(
	                      "el-checkbox-group",
	                      {
	                        staticClass: "el-table-filter__checkbox-group",
	                        model: {
	                          value: _vm.filteredValue,
	                          callback: function($$v) {
	                            _vm.filteredValue = $$v;
	                          },
	                          expression: "filteredValue"
	                        }
	                      },
	                      _vm._l(_vm.filters, function(filter) {
	                        return _c(
	                          "el-checkbox",
	                          { key: filter.value, attrs: { label: filter.value } },
	                          [_vm._v(_vm._s(filter.text))]
	                        )
	                      }),
	                      1
	                    )
	                  ],
	                  1
	                )
	              ],
	              1
	            ),
	            _c("div", { staticClass: "el-table-filter__bottom" }, [
	              _c(
	                "button",
	                {
	                  class: { "is-disabled": _vm.filteredValue.length === 0 },
	                  attrs: { disabled: _vm.filteredValue.length === 0 },
	                  on: { click: _vm.handleConfirm }
	                },
	                [_vm._v(_vm._s(_vm.t("el.table.confirmFilter")))]
	              ),
	              _c("button", { on: { click: _vm.handleReset } }, [
	                _vm._v(_vm._s(_vm.t("el.table.resetFilter")))
	              ])
	            ])
	          ]
	        )
	      : _c(
	          "div",
	          {
	            directives: [
	              {
	                name: "clickoutside",
	                rawName: "v-clickoutside",
	                value: _vm.handleOutsideClick,
	                expression: "handleOutsideClick"
	              },
	              {
	                name: "show",
	                rawName: "v-show",
	                value: _vm.showPopper,
	                expression: "showPopper"
	              }
	            ],
	            staticClass: "el-table-filter"
	          },
	          [
	            _c(
	              "ul",
	              { staticClass: "el-table-filter__list" },
	              [
	                _c(
	                  "li",
	                  {
	                    staticClass: "el-table-filter__list-item",
	                    class: {
	                      "is-active":
	                        _vm.filterValue === undefined ||
	                        _vm.filterValue === null
	                    },
	                    on: {
	                      click: function($event) {
	                        _vm.handleSelect(null);
	                      }
	                    }
	                  },
	                  [_vm._v(_vm._s(_vm.t("el.table.clearFilter")))]
	                ),
	                _vm._l(_vm.filters, function(filter) {
	                  return _c(
	                    "li",
	                    {
	                      key: filter.value,
	                      staticClass: "el-table-filter__list-item",
	                      class: { "is-active": _vm.isActive(filter) },
	                      attrs: { label: filter.value },
	                      on: {
	                        click: function($event) {
	                          _vm.handleSelect(filter.value);
	                        }
	                      }
	                    },
	                    [_vm._v(_vm._s(filter.text))]
	                  )
	                })
	              ],
	              2
	            )
	          ]
	        )
	  ])
	};
	var filter_panelvue_type_template_id_7f2c919f_staticRenderFns = [];
	filter_panelvue_type_template_id_7f2c919f_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/table/src/filter-panel.vue?vue&type=template&id=7f2c919f&

	// CONCATENATED MODULE: ./packages/table/src/dropdown.js

	var dropdowns = [];

	!external_vue_default.a.prototype.$isServer && document.addEventListener('click', function (event) {
	  dropdowns.forEach(function (dropdown) {
	    var target = event.target;
	    if (!dropdown || !dropdown.$el) return;
	    if (target === dropdown.$el || dropdown.$el.contains(target)) {
	      return;
	    }
	    dropdown.handleOutsideClick && dropdown.handleOutsideClick(event);
	  });
	});

	/* harmony default export */ var src_dropdown = ({
	  open: function open(instance) {
	    if (instance) {
	      dropdowns.push(instance);
	    }
	  },
	  close: function close(instance) {
	    var index = dropdowns.indexOf(instance);
	    if (index !== -1) {
	      dropdowns.splice(instance, 1);
	    }
	  }
	});
	// EXTERNAL MODULE: external "element-ui/lib/checkbox-group"
	var checkbox_group_ = __webpack_require__(32);
	var checkbox_group_default = /*#__PURE__*/__webpack_require__.n(checkbox_group_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/filter-panel.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//










	/* harmony default export */ var filter_panelvue_type_script_lang_js_ = ({
	  name: 'ElTableFilterPanel',

	  mixins: [vue_popper_default.a, locale_default.a],

	  directives: {
	    Clickoutside: clickoutside_default.a
	  },

	  components: {
	    ElCheckbox: checkbox_default.a,
	    ElCheckboxGroup: checkbox_group_default.a,
	    ElScrollbar: scrollbar_default.a
	  },

	  props: {
	    placement: {
	      type: String,
	      default: 'bottom-end'
	    }
	  },

	  methods: {
	    isActive: function isActive(filter) {
	      return filter.value === this.filterValue;
	    },
	    handleOutsideClick: function handleOutsideClick() {
	      var _this = this;

	      setTimeout(function () {
	        _this.showPopper = false;
	      }, 16);
	    },
	    handleConfirm: function handleConfirm() {
	      this.confirmFilter(this.filteredValue);
	      this.handleOutsideClick();
	    },
	    handleReset: function handleReset() {
	      this.filteredValue = [];
	      this.confirmFilter(this.filteredValue);
	      this.handleOutsideClick();
	    },
	    handleSelect: function handleSelect(filterValue) {
	      this.filterValue = filterValue;

	      if (typeof filterValue !== 'undefined' && filterValue !== null) {
	        this.confirmFilter(this.filteredValue);
	      } else {
	        this.confirmFilter([]);
	      }

	      this.handleOutsideClick();
	    },
	    confirmFilter: function confirmFilter(filteredValue) {
	      this.table.store.commit('filterChange', {
	        column: this.column,
	        values: filteredValue
	      });
	      this.table.store.updateAllSelected();
	    }
	  },

	  data: function data() {
	    return {
	      table: null,
	      cell: null,
	      column: null
	    };
	  },


	  computed: {
	    filters: function filters() {
	      return this.column && this.column.filters;
	    },


	    filterValue: {
	      get: function get() {
	        return (this.column.filteredValue || [])[0];
	      },
	      set: function set(value) {
	        if (this.filteredValue) {
	          if (typeof value !== 'undefined' && value !== null) {
	            this.filteredValue.splice(0, 1, value);
	          } else {
	            this.filteredValue.splice(0, 1);
	          }
	        }
	      }
	    },

	    filteredValue: {
	      get: function get() {
	        if (this.column) {
	          return this.column.filteredValue || [];
	        }
	        return [];
	      },
	      set: function set(value) {
	        if (this.column) {
	          this.column.filteredValue = value;
	        }
	      }
	    },

	    multiple: function multiple() {
	      if (this.column) {
	        return this.column.filterMultiple;
	      }
	      return true;
	    }
	  },

	  mounted: function mounted() {
	    var _this2 = this;

	    this.popperElm = this.$el;
	    this.referenceElm = this.cell;
	    this.table.bodyWrapper.addEventListener('scroll', function () {
	      _this2.updatePopper();
	    });

	    this.$watch('showPopper', function (value) {
	      if (_this2.column) _this2.column.filterOpened = value;
	      if (value) {
	        src_dropdown.open(_this2);
	      } else {
	        src_dropdown.close(_this2);
	      }
	    });
	  },

	  watch: {
	    showPopper: function showPopper(val) {
	      if (val === true && parseInt(this.popperJS._popper.style.zIndex, 10) < popup_["PopupManager"].zIndex) {
	        this.popperJS._popper.style.zIndex = popup_["PopupManager"].nextZIndex();
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/filter-panel.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_filter_panelvue_type_script_lang_js_ = (filter_panelvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/table/src/filter-panel.vue





	/* normalize component */

	var filter_panel_component = normalizeComponent(
	  src_filter_panelvue_type_script_lang_js_,
	  filter_panelvue_type_template_id_7f2c919f_render,
	  filter_panelvue_type_template_id_7f2c919f_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	filter_panel_component.options.__file = "packages/table/src/filter-panel.vue";
	/* harmony default export */ var filter_panel = (filter_panel_component.exports);
	// CONCATENATED MODULE: ./packages/table/src/table-header.js
	var table_header_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };








	var getAllColumns = function getAllColumns(columns) {
	  var result = [];
	  columns.forEach(function (column) {
	    if (column.children) {
	      result.push(column);
	      result.push.apply(result, getAllColumns(column.children));
	    } else {
	      result.push(column);
	    }
	  });
	  return result;
	};

	var convertToRows = function convertToRows(originColumns) {
	  var maxLevel = 1;
	  var traverse = function traverse(column, parent) {
	    if (parent) {
	      column.level = parent.level + 1;
	      if (maxLevel < column.level) {
	        maxLevel = column.level;
	      }
	    }
	    if (column.children) {
	      var colSpan = 0;
	      column.children.forEach(function (subColumn) {
	        traverse(subColumn, column);
	        colSpan += subColumn.colSpan;
	      });
	      column.colSpan = colSpan;
	    } else {
	      column.colSpan = 1;
	    }
	  };

	  originColumns.forEach(function (column) {
	    column.level = 1;
	    traverse(column);
	  });

	  var rows = [];
	  for (var i = 0; i < maxLevel; i++) {
	    rows.push([]);
	  }

	  var allColumns = getAllColumns(originColumns);

	  allColumns.forEach(function (column) {
	    if (!column.children) {
	      column.rowSpan = maxLevel - column.level + 1;
	    } else {
	      column.rowSpan = 1;
	    }
	    rows[column.level - 1].push(column);
	  });

	  return rows;
	};

	/* harmony default export */ var table_header = ({
	  name: 'ElTableHeader',

	  mixins: [layout_observer],

	  render: function render(h) {
	    var _this = this;

	    var originColumns = this.store.states.originColumns;
	    var columnRows = convertToRows(originColumns, this.columns);
	    // 是否拥有多级表头
	    var isGroup = columnRows.length > 1;
	    if (isGroup) this.$parent.isGroup = true;
	    return h(
	      'table',
	      {
	        'class': 'el-table__header',
	        attrs: { cellspacing: '0',
	          cellpadding: '0',
	          border: '0' }
	      },
	      [h('colgroup', [this.columns.map(function (column) {
	        return h('col', {
	          attrs: { name: column.id },
	          key: column.id });
	      }), this.hasGutter ? h('col', {
	        attrs: { name: 'gutter' }
	      }) : '']), h(
	        'thead',
	        { 'class': [{ 'is-group': isGroup, 'has-gutter': this.hasGutter }] },
	        [this._l(columnRows, function (columns, rowIndex) {
	          return h(
	            'tr',
	            {
	              style: _this.getHeaderRowStyle(rowIndex),
	              'class': _this.getHeaderRowClass(rowIndex)
	            },
	            [columns.map(function (column, cellIndex) {
	              return h(
	                'th',
	                {
	                  attrs: {
	                    colspan: column.colSpan,
	                    rowspan: column.rowSpan
	                  },
	                  on: {
	                    'mousemove': function mousemove($event) {
	                      return _this.handleMouseMove($event, column);
	                    },
	                    'mouseout': _this.handleMouseOut,
	                    'mousedown': function mousedown($event) {
	                      return _this.handleMouseDown($event, column);
	                    },
	                    'click': function click($event) {
	                      return _this.handleHeaderClick($event, column);
	                    },
	                    'contextmenu': function contextmenu($event) {
	                      return _this.handleHeaderContextMenu($event, column);
	                    }
	                  },

	                  style: _this.getHeaderCellStyle(rowIndex, cellIndex, columns, column),
	                  'class': _this.getHeaderCellClass(rowIndex, cellIndex, columns, column),
	                  key: column.id },
	                [h(
	                  'div',
	                  { 'class': ['cell', column.filteredValue && column.filteredValue.length > 0 ? 'highlight' : '', column.labelClassName] },
	                  [column.renderHeader ? column.renderHeader.call(_this._renderProxy, h, { column: column, $index: cellIndex, store: _this.store, _self: _this.$parent.$vnode.context }) : column.label, column.sortable ? h(
	                    'span',
	                    {
	                      'class': 'caret-wrapper',
	                      on: {
	                        'click': function click($event) {
	                          return _this.handleSortClick($event, column);
	                        }
	                      }
	                    },
	                    [h('i', { 'class': 'sort-caret ascending',
	                      on: {
	                        'click': function click($event) {
	                          return _this.handleSortClick($event, column, 'ascending');
	                        }
	                      }
	                    }), h('i', { 'class': 'sort-caret descending',
	                      on: {
	                        'click': function click($event) {
	                          return _this.handleSortClick($event, column, 'descending');
	                        }
	                      }
	                    })]
	                  ) : '', column.filterable ? h(
	                    'span',
	                    {
	                      'class': 'el-table__column-filter-trigger',
	                      on: {
	                        'click': function click($event) {
	                          return _this.handleFilterClick($event, column);
	                        }
	                      }
	                    },
	                    [h('i', { 'class': ['el-icon-arrow-down', column.filterOpened ? 'el-icon-arrow-up' : ''] })]
	                  ) : '']
	                )]
	              );
	            }), _this.hasGutter ? h('th', { 'class': 'el-table__cell gutter' }) : '']
	          );
	        })]
	      )]
	    );
	  },


	  props: {
	    fixed: String,
	    store: {
	      required: true
	    },
	    border: Boolean,
	    defaultSort: {
	      type: Object,
	      default: function _default() {
	        return {
	          prop: '',
	          order: ''
	        };
	      }
	    }
	  },

	  components: {
	    ElCheckbox: checkbox_default.a
	  },

	  computed: table_header_extends({
	    table: function table() {
	      return this.$parent;
	    },
	    hasGutter: function hasGutter() {
	      return !this.fixed && this.tableLayout.gutterWidth;
	    }
	  }, mapStates({
	    columns: 'columns',
	    isAllSelected: 'isAllSelected',
	    leftFixedLeafCount: 'fixedLeafColumnsLength',
	    rightFixedLeafCount: 'rightFixedLeafColumnsLength',
	    columnsCount: function columnsCount(states) {
	      return states.columns.length;
	    },
	    leftFixedCount: function leftFixedCount(states) {
	      return states.fixedColumns.length;
	    },
	    rightFixedCount: function rightFixedCount(states) {
	      return states.rightFixedColumns.length;
	    }
	  })),

	  created: function created() {
	    this.filterPanels = {};
	  },
	  mounted: function mounted() {
	    var _this2 = this;

	    // nextTick 是有必要的 https://github.com/ElemeFE/element/pull/11311
	    this.$nextTick(function () {
	      var _defaultSort = _this2.defaultSort,
	          prop = _defaultSort.prop,
	          order = _defaultSort.order;

	      var init = true;
	      _this2.store.commit('sort', { prop: prop, order: order, init: init });
	    });
	  },
	  beforeDestroy: function beforeDestroy() {
	    var panels = this.filterPanels;
	    for (var prop in panels) {
	      if (panels.hasOwnProperty(prop) && panels[prop]) {
	        panels[prop].$destroy(true);
	      }
	    }
	  },


	  methods: {
	    isCellHidden: function isCellHidden(index, columns) {
	      var start = 0;
	      for (var i = 0; i < index; i++) {
	        start += columns[i].colSpan;
	      }
	      var after = start + columns[index].colSpan - 1;
	      if (this.fixed === true || this.fixed === 'left') {
	        return after >= this.leftFixedLeafCount;
	      } else if (this.fixed === 'right') {
	        return start < this.columnsCount - this.rightFixedLeafCount;
	      } else {
	        return after < this.leftFixedLeafCount || start >= this.columnsCount - this.rightFixedLeafCount;
	      }
	    },
	    getHeaderRowStyle: function getHeaderRowStyle(rowIndex) {
	      var headerRowStyle = this.table.headerRowStyle;
	      if (typeof headerRowStyle === 'function') {
	        return headerRowStyle.call(null, { rowIndex: rowIndex });
	      }
	      return headerRowStyle;
	    },
	    getHeaderRowClass: function getHeaderRowClass(rowIndex) {
	      var classes = [];

	      var headerRowClassName = this.table.headerRowClassName;
	      if (typeof headerRowClassName === 'string') {
	        classes.push(headerRowClassName);
	      } else if (typeof headerRowClassName === 'function') {
	        classes.push(headerRowClassName.call(null, { rowIndex: rowIndex }));
	      }

	      return classes.join(' ');
	    },
	    getHeaderCellStyle: function getHeaderCellStyle(rowIndex, columnIndex, row, column) {
	      var headerCellStyle = this.table.headerCellStyle;
	      if (typeof headerCellStyle === 'function') {
	        return headerCellStyle.call(null, {
	          rowIndex: rowIndex,
	          columnIndex: columnIndex,
	          row: row,
	          column: column
	        });
	      }
	      return headerCellStyle;
	    },
	    getHeaderCellClass: function getHeaderCellClass(rowIndex, columnIndex, row, column) {
	      var classes = [column.id, column.order, column.headerAlign, column.className, column.labelClassName];

	      if (rowIndex === 0 && this.isCellHidden(columnIndex, row)) {
	        classes.push('is-hidden');
	      }

	      if (!column.children) {
	        classes.push('is-leaf');
	      }

	      if (column.sortable) {
	        classes.push('is-sortable');
	      }

	      var headerCellClassName = this.table.headerCellClassName;
	      if (typeof headerCellClassName === 'string') {
	        classes.push(headerCellClassName);
	      } else if (typeof headerCellClassName === 'function') {
	        classes.push(headerCellClassName.call(null, {
	          rowIndex: rowIndex,
	          columnIndex: columnIndex,
	          row: row,
	          column: column
	        }));
	      }

	      classes.push('el-table__cell');

	      return classes.join(' ');
	    },
	    toggleAllSelection: function toggleAllSelection() {
	      this.store.commit('toggleAllSelection');
	    },
	    handleFilterClick: function handleFilterClick(event, column) {
	      event.stopPropagation();
	      var target = event.target;
	      var cell = target.tagName === 'TH' ? target : target.parentNode;
	      if (Object(dom_["hasClass"])(cell, 'noclick')) return;
	      cell = cell.querySelector('.el-table__column-filter-trigger') || cell;
	      var table = this.$parent;

	      var filterPanel = this.filterPanels[column.id];

	      if (filterPanel && column.filterOpened) {
	        filterPanel.showPopper = false;
	        return;
	      }

	      if (!filterPanel) {
	        filterPanel = new external_vue_default.a(filter_panel);
	        this.filterPanels[column.id] = filterPanel;
	        if (column.filterPlacement) {
	          filterPanel.placement = column.filterPlacement;
	        }
	        filterPanel.table = table;
	        filterPanel.cell = cell;
	        filterPanel.column = column;
	        !this.$isServer && filterPanel.$mount(document.createElement('div'));
	      }

	      setTimeout(function () {
	        filterPanel.showPopper = true;
	      }, 16);
	    },
	    handleHeaderClick: function handleHeaderClick(event, column) {
	      if (!column.filters && column.sortable) {
	        this.handleSortClick(event, column);
	      } else if (column.filterable && !column.sortable) {
	        this.handleFilterClick(event, column);
	      }

	      this.$parent.$emit('header-click', column, event);
	    },
	    handleHeaderContextMenu: function handleHeaderContextMenu(event, column) {
	      this.$parent.$emit('header-contextmenu', column, event);
	    },
	    handleMouseDown: function handleMouseDown(event, column) {
	      var _this3 = this;

	      if (this.$isServer) return;
	      if (column.children && column.children.length > 0) return;
	      /* istanbul ignore if */
	      if (this.draggingColumn && this.border) {
	        this.dragging = true;

	        this.$parent.resizeProxyVisible = true;

	        var table = this.$parent;
	        var tableEl = table.$el;
	        var tableLeft = tableEl.getBoundingClientRect().left;
	        var columnEl = this.$el.querySelector('th.' + column.id);
	        var columnRect = columnEl.getBoundingClientRect();
	        var minLeft = columnRect.left - tableLeft + 30;

	        Object(dom_["addClass"])(columnEl, 'noclick');

	        this.dragState = {
	          startMouseLeft: event.clientX,
	          startLeft: columnRect.right - tableLeft,
	          startColumnLeft: columnRect.left - tableLeft,
	          tableLeft: tableLeft
	        };

	        var resizeProxy = table.$refs.resizeProxy;
	        resizeProxy.style.left = this.dragState.startLeft + 'px';

	        document.onselectstart = function () {
	          return false;
	        };
	        document.ondragstart = function () {
	          return false;
	        };

	        var handleMouseMove = function handleMouseMove(event) {
	          var deltaLeft = event.clientX - _this3.dragState.startMouseLeft;
	          var proxyLeft = _this3.dragState.startLeft + deltaLeft;

	          resizeProxy.style.left = Math.max(minLeft, proxyLeft) + 'px';
	        };

	        var handleMouseUp = function handleMouseUp() {
	          if (_this3.dragging) {
	            var _dragState = _this3.dragState,
	                startColumnLeft = _dragState.startColumnLeft,
	                startLeft = _dragState.startLeft;

	            var finalLeft = parseInt(resizeProxy.style.left, 10);
	            var columnWidth = finalLeft - startColumnLeft;
	            column.width = column.realWidth = columnWidth;
	            table.$emit('header-dragend', column.width, startLeft - startColumnLeft, column, event);

	            _this3.store.scheduleLayout();

	            document.body.style.cursor = '';
	            _this3.dragging = false;
	            _this3.draggingColumn = null;
	            _this3.dragState = {};

	            table.resizeProxyVisible = false;
	          }

	          document.removeEventListener('mousemove', handleMouseMove);
	          document.removeEventListener('mouseup', handleMouseUp);
	          document.onselectstart = null;
	          document.ondragstart = null;

	          setTimeout(function () {
	            Object(dom_["removeClass"])(columnEl, 'noclick');
	          }, 0);
	        };

	        document.addEventListener('mousemove', handleMouseMove);
	        document.addEventListener('mouseup', handleMouseUp);
	      }
	    },
	    handleMouseMove: function handleMouseMove(event, column) {
	      if (column.children && column.children.length > 0) return;
	      var target = event.target;
	      while (target && target.tagName !== 'TH') {
	        target = target.parentNode;
	      }

	      if (!column || !column.resizable) return;

	      if (!this.dragging && this.border) {
	        var rect = target.getBoundingClientRect();

	        var bodyStyle = document.body.style;
	        if (rect.width > 12 && rect.right - event.pageX < 8) {
	          bodyStyle.cursor = 'col-resize';
	          if (Object(dom_["hasClass"])(target, 'is-sortable')) {
	            target.style.cursor = 'col-resize';
	          }
	          this.draggingColumn = column;
	        } else if (!this.dragging) {
	          bodyStyle.cursor = '';
	          if (Object(dom_["hasClass"])(target, 'is-sortable')) {
	            target.style.cursor = 'pointer';
	          }
	          this.draggingColumn = null;
	        }
	      }
	    },
	    handleMouseOut: function handleMouseOut() {
	      if (this.$isServer) return;
	      document.body.style.cursor = '';
	    },
	    toggleOrder: function toggleOrder(_ref) {
	      var order = _ref.order,
	          sortOrders = _ref.sortOrders;

	      if (order === '') return sortOrders[0];
	      var index = sortOrders.indexOf(order || null);
	      return sortOrders[index > sortOrders.length - 2 ? 0 : index + 1];
	    },
	    handleSortClick: function handleSortClick(event, column, givenOrder) {
	      event.stopPropagation();
	      var order = column.order === givenOrder ? null : givenOrder || this.toggleOrder(column);

	      var target = event.target;
	      while (target && target.tagName !== 'TH') {
	        target = target.parentNode;
	      }

	      if (target && target.tagName === 'TH') {
	        if (Object(dom_["hasClass"])(target, 'noclick')) {
	          Object(dom_["removeClass"])(target, 'noclick');
	          return;
	        }
	      }

	      if (!column.sortable) return;

	      var states = this.store.states;
	      var sortProp = states.sortProp;
	      var sortOrder = void 0;
	      var sortingColumn = states.sortingColumn;

	      if (sortingColumn !== column || sortingColumn === column && sortingColumn.order === null) {
	        if (sortingColumn) {
	          sortingColumn.order = null;
	        }
	        states.sortingColumn = column;
	        sortProp = column.property;
	      }

	      if (!order) {
	        sortOrder = column.order = null;
	      } else {
	        sortOrder = column.order = order;
	      }

	      states.sortProp = sortProp;
	      states.sortOrder = sortOrder;

	      this.store.commit('changeSortCondition');
	    }
	  },

	  data: function data() {
	    return {
	      draggingColumn: null,
	      dragging: false,
	      dragState: {}
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/table-footer.js
	var table_footer_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };




	/* harmony default export */ var table_footer = ({
	  name: 'ElTableFooter',

	  mixins: [layout_observer],

	  render: function render(h) {
	    var _this = this;

	    var sums = [];
	    if (this.summaryMethod) {
	      sums = this.summaryMethod({ columns: this.columns, data: this.store.states.data });
	    } else {
	      this.columns.forEach(function (column, index) {
	        if (index === 0) {
	          sums[index] = _this.sumText;
	          return;
	        }
	        var values = _this.store.states.data.map(function (item) {
	          return Number(item[column.property]);
	        });
	        var precisions = [];
	        var notNumber = true;
	        values.forEach(function (value) {
	          if (!isNaN(value)) {
	            notNumber = false;
	            var decimal = ('' + value).split('.')[1];
	            precisions.push(decimal ? decimal.length : 0);
	          }
	        });
	        var precision = Math.max.apply(null, precisions);
	        if (!notNumber) {
	          sums[index] = values.reduce(function (prev, curr) {
	            var value = Number(curr);
	            if (!isNaN(value)) {
	              return parseFloat((prev + curr).toFixed(Math.min(precision, 20)));
	            } else {
	              return prev;
	            }
	          }, 0);
	        } else {
	          sums[index] = '';
	        }
	      });
	    }

	    return h(
	      'table',
	      {
	        'class': 'el-table__footer',
	        attrs: { cellspacing: '0',
	          cellpadding: '0',
	          border: '0' }
	      },
	      [h('colgroup', [this.columns.map(function (column) {
	        return h('col', {
	          attrs: { name: column.id },
	          key: column.id });
	      }), this.hasGutter ? h('col', {
	        attrs: { name: 'gutter' }
	      }) : '']), h(
	        'tbody',
	        { 'class': [{ 'has-gutter': this.hasGutter }] },
	        [h('tr', [this.columns.map(function (column, cellIndex) {
	          return h(
	            'td',
	            {
	              key: cellIndex,
	              attrs: { colspan: column.colSpan,
	                rowspan: column.rowSpan
	              },
	              'class': [].concat(_this.getRowClasses(column, cellIndex), ['el-table__cell']) },
	            [h(
	              'div',
	              { 'class': ['cell', column.labelClassName] },
	              [sums[cellIndex]]
	            )]
	          );
	        }), this.hasGutter ? h('th', { 'class': 'el-table__cell gutter' }) : ''])]
	      )]
	    );
	  },


	  props: {
	    fixed: String,
	    store: {
	      required: true
	    },
	    summaryMethod: Function,
	    sumText: String,
	    border: Boolean,
	    defaultSort: {
	      type: Object,
	      default: function _default() {
	        return {
	          prop: '',
	          order: ''
	        };
	      }
	    }
	  },

	  computed: table_footer_extends({
	    table: function table() {
	      return this.$parent;
	    },
	    hasGutter: function hasGutter() {
	      return !this.fixed && this.tableLayout.gutterWidth;
	    }
	  }, mapStates({
	    columns: 'columns',
	    isAllSelected: 'isAllSelected',
	    leftFixedLeafCount: 'fixedLeafColumnsLength',
	    rightFixedLeafCount: 'rightFixedLeafColumnsLength',
	    columnsCount: function columnsCount(states) {
	      return states.columns.length;
	    },
	    leftFixedCount: function leftFixedCount(states) {
	      return states.fixedColumns.length;
	    },
	    rightFixedCount: function rightFixedCount(states) {
	      return states.rightFixedColumns.length;
	    }
	  })),

	  methods: {
	    isCellHidden: function isCellHidden(index, columns, column) {
	      if (this.fixed === true || this.fixed === 'left') {
	        return index >= this.leftFixedLeafCount;
	      } else if (this.fixed === 'right') {
	        var before = 0;
	        for (var i = 0; i < index; i++) {
	          before += columns[i].colSpan;
	        }
	        return before < this.columnsCount - this.rightFixedLeafCount;
	      } else if (!this.fixed && column.fixed) {
	        // hide cell when footer instance is not fixed and column is fixed
	        return true;
	      } else {
	        return index < this.leftFixedCount || index >= this.columnsCount - this.rightFixedCount;
	      }
	    },
	    getRowClasses: function getRowClasses(column, cellIndex) {
	      var classes = [column.id, column.align, column.labelClassName];
	      if (column.className) {
	        classes.push(column.className);
	      }
	      if (this.isCellHidden(cellIndex, this.columns, column)) {
	        classes.push('is-hidden');
	      }
	      if (!column.children) {
	        classes.push('is-leaf');
	      }
	      return classes;
	    }
	  }
	});
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/table.vue?vue&type=script&lang=js&
	var tablevue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//














	var tableIdSeed = 1;

	/* harmony default export */ var tablevue_type_script_lang_js_ = ({
	  name: 'ElTable',

	  mixins: [locale_default.a, migrating_default.a],

	  directives: {
	    Mousewheel: directives_mousewheel
	  },

	  props: {
	    data: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },

	    size: String,

	    width: [String, Number],

	    height: [String, Number],

	    maxHeight: [String, Number],

	    fit: {
	      type: Boolean,
	      default: true
	    },

	    stripe: Boolean,

	    border: Boolean,

	    rowKey: [String, Function],

	    context: {},

	    showHeader: {
	      type: Boolean,
	      default: true
	    },

	    showSummary: Boolean,

	    sumText: String,

	    summaryMethod: Function,

	    rowClassName: [String, Function],

	    rowStyle: [Object, Function],

	    cellClassName: [String, Function],

	    cellStyle: [Object, Function],

	    headerRowClassName: [String, Function],

	    headerRowStyle: [Object, Function],

	    headerCellClassName: [String, Function],

	    headerCellStyle: [Object, Function],

	    highlightCurrentRow: Boolean,

	    highlightSelectionRow: {
	      type: Boolean,
	      default: false
	    },

	    currentRowKey: [String, Number],

	    emptyText: String,

	    expandRowKeys: Array,

	    defaultExpandAll: Boolean,

	    defaultSort: Object,

	    tooltipEffect: String,

	    spanMethod: Function,

	    selectOnIndeterminate: {
	      type: Boolean,
	      default: true
	    },

	    indent: {
	      type: Number,
	      default: 16
	    },

	    treeProps: {
	      type: Object,
	      default: function _default() {
	        return {
	          hasChildren: 'hasChildren',
	          children: 'children'
	        };
	      }
	    },

	    lazy: Boolean,

	    load: Function
	  },

	  components: {
	    TableHeader: table_header,
	    TableFooter: table_footer,
	    TableBody: table_body,
	    ElCheckbox: checkbox_default.a
	  },

	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        events: {
	          expand: 'expand is renamed to expand-change'
	        }
	      };
	    },
	    setCurrentRow: function setCurrentRow(row) {
	      this.store.commit('setCurrentRow', row);
	    },
	    toggleRowSelection: function toggleRowSelection(row, selected) {
	      this.store.toggleRowSelection(row, selected, false);
	      this.store.updateAllSelected();
	    },
	    toggleRowExpansion: function toggleRowExpansion(row, expanded) {
	      this.store.toggleRowExpansionAdapter(row, expanded);
	    },
	    clearSelection: function clearSelection() {
	      this.store.clearSelection();
	    },
	    clearFilter: function clearFilter(columnKeys) {
	      this.store.clearFilter(columnKeys);
	    },
	    clearSort: function clearSort() {
	      this.store.clearSort();
	    },
	    handleMouseLeave: function handleMouseLeave() {
	      this.store.commit('setHoverRow', null);
	      if (this.hoverState) this.hoverState = null;
	    },
	    updateScrollY: function updateScrollY() {
	      var changed = this.layout.updateScrollY();
	      if (changed) {
	        this.layout.notifyObservers('scrollable');
	        this.layout.updateColumnsWidth();
	      }
	    },
	    handleFixedMousewheel: function handleFixedMousewheel(event, data) {
	      var bodyWrapper = this.bodyWrapper;
	      if (Math.abs(data.spinY) > 0) {
	        var currentScrollTop = bodyWrapper.scrollTop;
	        if (data.pixelY < 0 && currentScrollTop !== 0) {
	          event.preventDefault();
	        }
	        if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {
	          event.preventDefault();
	        }
	        bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);
	      } else {
	        bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);
	      }
	    },
	    handleHeaderFooterMousewheel: function handleHeaderFooterMousewheel(event, data) {
	      var pixelX = data.pixelX,
	          pixelY = data.pixelY;

	      if (Math.abs(pixelX) >= Math.abs(pixelY)) {
	        this.bodyWrapper.scrollLeft += data.pixelX / 5;
	      }
	    },


	    // TODO 使用 CSS transform
	    syncPostion: function syncPostion() {
	      var _bodyWrapper = this.bodyWrapper,
	          scrollLeft = _bodyWrapper.scrollLeft,
	          scrollTop = _bodyWrapper.scrollTop,
	          offsetWidth = _bodyWrapper.offsetWidth,
	          scrollWidth = _bodyWrapper.scrollWidth;
	      var _$refs = this.$refs,
	          headerWrapper = _$refs.headerWrapper,
	          footerWrapper = _$refs.footerWrapper,
	          fixedBodyWrapper = _$refs.fixedBodyWrapper,
	          rightFixedBodyWrapper = _$refs.rightFixedBodyWrapper;

	      if (headerWrapper) headerWrapper.scrollLeft = scrollLeft;
	      if (footerWrapper) footerWrapper.scrollLeft = scrollLeft;
	      if (fixedBodyWrapper) fixedBodyWrapper.scrollTop = scrollTop;
	      if (rightFixedBodyWrapper) rightFixedBodyWrapper.scrollTop = scrollTop;
	      var maxScrollLeftPosition = scrollWidth - offsetWidth - 1;
	      if (scrollLeft >= maxScrollLeftPosition) {
	        this.scrollPosition = 'right';
	      } else if (scrollLeft === 0) {
	        this.scrollPosition = 'left';
	      } else {
	        this.scrollPosition = 'middle';
	      }
	    },


	    throttleSyncPostion: Object(external_throttle_debounce_["throttle"])(16, function () {
	      this.syncPostion();
	    }),

	    onScroll: function onScroll(evt) {
	      var raf = window.requestAnimationFrame;
	      if (!raf) {
	        this.throttleSyncPostion();
	      } else {
	        raf(this.syncPostion);
	      }
	    },
	    bindEvents: function bindEvents() {
	      this.bodyWrapper.addEventListener('scroll', this.onScroll, { passive: true });
	      if (this.fit) {
	        Object(resize_event_["addResizeListener"])(this.$el, this.resizeListener);
	      }
	    },
	    unbindEvents: function unbindEvents() {
	      this.bodyWrapper.removeEventListener('scroll', this.onScroll, { passive: true });
	      if (this.fit) {
	        Object(resize_event_["removeResizeListener"])(this.$el, this.resizeListener);
	      }
	    },
	    resizeListener: function resizeListener() {
	      if (!this.$ready) return;
	      var shouldUpdateLayout = false;
	      var el = this.$el;
	      var _resizeState = this.resizeState,
	          oldWidth = _resizeState.width,
	          oldHeight = _resizeState.height;


	      var width = el.offsetWidth;
	      if (oldWidth !== width) {
	        shouldUpdateLayout = true;
	      }

	      var height = el.offsetHeight;
	      if ((this.height || this.shouldUpdateHeight) && oldHeight !== height) {
	        shouldUpdateLayout = true;
	      }

	      if (shouldUpdateLayout) {
	        this.resizeState.width = width;
	        this.resizeState.height = height;
	        this.doLayout();
	      }
	    },
	    doLayout: function doLayout() {
	      if (this.shouldUpdateHeight) {
	        this.layout.updateElsHeight();
	      }
	      this.layout.updateColumnsWidth();
	    },
	    sort: function sort(prop, order) {
	      this.store.commit('sort', { prop: prop, order: order });
	    },
	    toggleAllSelection: function toggleAllSelection() {
	      this.store.commit('toggleAllSelection');
	    }
	  },

	  computed: tablevue_type_script_lang_js_extends({
	    tableSize: function tableSize() {
	      return this.size || (this.$ELEMENT || {}).size;
	    },
	    bodyWrapper: function bodyWrapper() {
	      return this.$refs.bodyWrapper;
	    },
	    shouldUpdateHeight: function shouldUpdateHeight() {
	      return this.height || this.maxHeight || this.fixedColumns.length > 0 || this.rightFixedColumns.length > 0;
	    },
	    bodyWidth: function bodyWidth() {
	      var _layout = this.layout,
	          bodyWidth = _layout.bodyWidth,
	          scrollY = _layout.scrollY,
	          gutterWidth = _layout.gutterWidth;

	      return bodyWidth ? bodyWidth - (scrollY ? gutterWidth : 0) + 'px' : '';
	    },
	    bodyHeight: function bodyHeight() {
	      var _layout2 = this.layout,
	          _layout2$headerHeight = _layout2.headerHeight,
	          headerHeight = _layout2$headerHeight === undefined ? 0 : _layout2$headerHeight,
	          bodyHeight = _layout2.bodyHeight,
	          _layout2$footerHeight = _layout2.footerHeight,
	          footerHeight = _layout2$footerHeight === undefined ? 0 : _layout2$footerHeight;

	      if (this.height) {
	        return {
	          height: bodyHeight ? bodyHeight + 'px' : ''
	        };
	      } else if (this.maxHeight) {
	        var maxHeight = parseHeight(this.maxHeight);
	        if (typeof maxHeight === 'number') {
	          return {
	            'max-height': maxHeight - footerHeight - (this.showHeader ? headerHeight : 0) + 'px'
	          };
	        }
	      }
	      return {};
	    },
	    fixedBodyHeight: function fixedBodyHeight() {
	      if (this.height) {
	        return {
	          height: this.layout.fixedBodyHeight ? this.layout.fixedBodyHeight + 'px' : ''
	        };
	      } else if (this.maxHeight) {
	        var maxHeight = parseHeight(this.maxHeight);
	        if (typeof maxHeight === 'number') {
	          maxHeight = this.layout.scrollX ? maxHeight - this.layout.gutterWidth : maxHeight;
	          if (this.showHeader) {
	            maxHeight -= this.layout.headerHeight;
	          }
	          maxHeight -= this.layout.footerHeight;
	          return {
	            'max-height': maxHeight + 'px'
	          };
	        }
	      }
	      return {};
	    },
	    fixedHeight: function fixedHeight() {
	      if (this.maxHeight) {
	        if (this.showSummary) {
	          return {
	            bottom: 0
	          };
	        }
	        return {
	          bottom: this.layout.scrollX && this.data.length ? this.layout.gutterWidth + 'px' : ''
	        };
	      } else {
	        if (this.showSummary) {
	          return {
	            height: this.layout.tableHeight ? this.layout.tableHeight + 'px' : ''
	          };
	        }
	        return {
	          height: this.layout.viewportHeight ? this.layout.viewportHeight + 'px' : ''
	        };
	      }
	    },
	    emptyBlockStyle: function emptyBlockStyle() {
	      if (this.data && this.data.length) return null;
	      var height = '100%';
	      if (this.layout.appendHeight) {
	        height = 'calc(100% - ' + this.layout.appendHeight + 'px)';
	      }
	      return {
	        width: this.bodyWidth,
	        height: height
	      };
	    }
	  }, mapStates({
	    selection: 'selection',
	    columns: 'columns',
	    tableData: 'data',
	    fixedColumns: 'fixedColumns',
	    rightFixedColumns: 'rightFixedColumns'
	  })),

	  watch: {
	    height: {
	      immediate: true,
	      handler: function handler(value) {
	        this.layout.setHeight(value);
	      }
	    },

	    maxHeight: {
	      immediate: true,
	      handler: function handler(value) {
	        this.layout.setMaxHeight(value);
	      }
	    },

	    currentRowKey: {
	      immediate: true,
	      handler: function handler(value) {
	        if (!this.rowKey) return;
	        this.store.setCurrentRowKey(value);
	      }
	    },

	    data: {
	      immediate: true,
	      handler: function handler(value) {
	        this.store.commit('setData', value);
	      }
	    },

	    expandRowKeys: {
	      immediate: true,
	      handler: function handler(newVal) {
	        if (newVal) {
	          this.store.setExpandRowKeysAdapter(newVal);
	        }
	      }
	    }
	  },

	  created: function created() {
	    var _this = this;

	    this.tableId = 'el-table_' + tableIdSeed++;
	    this.debouncedUpdateLayout = Object(external_throttle_debounce_["debounce"])(50, function () {
	      return _this.doLayout();
	    });
	  },
	  mounted: function mounted() {
	    var _this2 = this;

	    this.bindEvents();
	    this.store.updateColumns();
	    this.doLayout();

	    this.resizeState = {
	      width: this.$el.offsetWidth,
	      height: this.$el.offsetHeight
	    };

	    // init filters
	    this.store.states.columns.forEach(function (column) {
	      if (column.filteredValue && column.filteredValue.length) {
	        _this2.store.commit('filterChange', {
	          column: column,
	          values: column.filteredValue,
	          silent: true
	        });
	      }
	    });

	    this.$ready = true;
	  },
	  destroyed: function destroyed() {
	    this.unbindEvents();
	  },
	  data: function data() {
	    var _treeProps = this.treeProps,
	        _treeProps$hasChildre = _treeProps.hasChildren,
	        hasChildren = _treeProps$hasChildre === undefined ? 'hasChildren' : _treeProps$hasChildre,
	        _treeProps$children = _treeProps.children,
	        children = _treeProps$children === undefined ? 'children' : _treeProps$children;

	    this.store = createStore(this, {
	      rowKey: this.rowKey,
	      defaultExpandAll: this.defaultExpandAll,
	      selectOnIndeterminate: this.selectOnIndeterminate,
	      // TreeTable 的相关配置
	      indent: this.indent,
	      lazy: this.lazy,
	      lazyColumnIdentifier: hasChildren,
	      childrenColumnName: children
	    });
	    var layout = new table_layout({
	      store: this.store,
	      table: this,
	      fit: this.fit,
	      showHeader: this.showHeader
	    });
	    return {
	      layout: layout,
	      isHidden: false,
	      renderExpanded: null,
	      resizeProxyVisible: false,
	      resizeState: {
	        width: null,
	        height: null
	      },
	      // 是否拥有多级表头
	      isGroup: false,
	      scrollPosition: 'left'
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/table/src/table.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_tablevue_type_script_lang_js_ = (tablevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/table/src/table.vue





	/* normalize component */

	var table_component = normalizeComponent(
	  src_tablevue_type_script_lang_js_,
	  tablevue_type_template_id_493fe34e_render,
	  tablevue_type_template_id_493fe34e_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	table_component.options.__file = "packages/table/src/table.vue";
	/* harmony default export */ var src_table = (table_component.exports);
	// CONCATENATED MODULE: ./packages/table/index.js


	/* istanbul ignore next */
	src_table.install = function (Vue) {
	  Vue.component(src_table.name, src_table);
	};

	/* harmony default export */ var packages_table = (src_table);
	// CONCATENATED MODULE: ./packages/table/src/config.js


	var cellStarts = {
	  default: {
	    order: ''
	  },
	  selection: {
	    width: 48,
	    minWidth: 48,
	    realWidth: 48,
	    order: '',
	    className: 'el-table-column--selection'
	  },
	  expand: {
	    width: 48,
	    minWidth: 48,
	    realWidth: 48,
	    order: ''
	  },
	  index: {
	    width: 48,
	    minWidth: 48,
	    realWidth: 48,
	    order: ''
	  }
	};

	// 这些选项不应该被覆盖
	var cellForced = {
	  selection: {
	    renderHeader: function renderHeader(h, _ref) {
	      var store = _ref.store;

	      return h('el-checkbox', {
	        attrs: {
	          disabled: store.states.data && store.states.data.length === 0,
	          indeterminate: store.states.selection.length > 0 && !this.isAllSelected,

	          value: this.isAllSelected },
	        on: {
	          'input': this.toggleAllSelection
	        }
	      });
	    },
	    renderCell: function renderCell(h, _ref2) {
	      var row = _ref2.row,
	          column = _ref2.column,
	          isSelected = _ref2.isSelected,
	          store = _ref2.store,
	          $index = _ref2.$index;

	      return h('el-checkbox', {
	        nativeOn: {
	          'click': function click(event) {
	            return event.stopPropagation();
	          }
	        },
	        attrs: {
	          value: isSelected,
	          disabled: column.selectable ? !column.selectable.call(null, row, $index) : false
	        },
	        on: {
	          'input': function input() {
	            store.commit('rowSelectedChanged', row);
	          }
	        }
	      });
	    },
	    sortable: false,
	    resizable: false
	  },
	  index: {
	    renderHeader: function renderHeader(h, _ref3) {
	      var column = _ref3.column;

	      return column.label || '#';
	    },
	    renderCell: function renderCell(h, _ref4) {
	      var $index = _ref4.$index,
	          column = _ref4.column;

	      var i = $index + 1;
	      var index = column.index;

	      if (typeof index === 'number') {
	        i = $index + index;
	      } else if (typeof index === 'function') {
	        i = index($index);
	      }

	      return h('div', [i]);
	    },
	    sortable: false
	  },
	  expand: {
	    renderHeader: function renderHeader(h, _ref5) {
	      var column = _ref5.column;

	      return column.label || '';
	    },
	    renderCell: function renderCell(h, _ref6) {
	      var row = _ref6.row,
	          store = _ref6.store,
	          isExpanded = _ref6.isExpanded;

	      var classes = ['el-table__expand-icon'];
	      if (isExpanded) {
	        classes.push('el-table__expand-icon--expanded');
	      }
	      var callback = function callback(e) {
	        e.stopPropagation();
	        store.toggleRowExpansion(row);
	      };
	      return h(
	        'div',
	        { 'class': classes,
	          on: {
	            'click': callback
	          }
	        },
	        [h('i', { 'class': 'el-icon el-icon-arrow-right' })]
	      );
	    },
	    sortable: false,
	    resizable: false,
	    className: 'el-table__expand-column'
	  }
	};

	function defaultRenderCell(h, _ref7) {
	  var row = _ref7.row,
	      column = _ref7.column,
	      $index = _ref7.$index;

	  var property = column.property;
	  var value = property && Object(util_["getPropByPath"])(row, property).v;
	  if (column && column.formatter) {
	    return column.formatter(row, column, value, $index);
	  }
	  return value;
	}

	function treeCellPrefix(h, _ref8) {
	  var row = _ref8.row,
	      treeNode = _ref8.treeNode,
	      store = _ref8.store;

	  if (!treeNode) return null;
	  var ele = [];
	  var callback = function callback(e) {
	    e.stopPropagation();
	    store.loadOrToggle(row);
	  };
	  if (treeNode.indent) {
	    ele.push(h('span', { 'class': 'el-table__indent', style: { 'padding-left': treeNode.indent + 'px' } }));
	  }
	  if (typeof treeNode.expanded === 'boolean' && !treeNode.noLazyChildren) {
	    var expandClasses = ['el-table__expand-icon', treeNode.expanded ? 'el-table__expand-icon--expanded' : ''];
	    var iconClasses = ['el-icon-arrow-right'];
	    if (treeNode.loading) {
	      iconClasses = ['el-icon-loading'];
	    }
	    ele.push(h(
	      'div',
	      { 'class': expandClasses,
	        on: {
	          'click': callback
	        }
	      },
	      [h('i', { 'class': iconClasses })]
	    ));
	  } else {
	    ele.push(h('span', { 'class': 'el-table__placeholder' }));
	  }
	  return ele;
	}
	// CONCATENATED MODULE: ./packages/table/src/table-column.js
	var table_column_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };





	var columnIdSeed = 1;

	/* harmony default export */ var table_column = ({
	  name: 'ElTableColumn',

	  props: {
	    type: {
	      type: String,
	      default: 'default'
	    },
	    label: String,
	    className: String,
	    labelClassName: String,
	    property: String,
	    prop: String,
	    width: {},
	    minWidth: {},
	    renderHeader: Function,
	    sortable: {
	      type: [Boolean, String],
	      default: false
	    },
	    sortMethod: Function,
	    sortBy: [String, Function, Array],
	    resizable: {
	      type: Boolean,
	      default: true
	    },
	    columnKey: String,
	    align: String,
	    headerAlign: String,
	    showTooltipWhenOverflow: Boolean,
	    showOverflowTooltip: Boolean,
	    fixed: [Boolean, String],
	    formatter: Function,
	    selectable: Function,
	    reserveSelection: Boolean,
	    filterMethod: Function,
	    filteredValue: Array,
	    filters: Array,
	    filterPlacement: String,
	    filterMultiple: {
	      type: Boolean,
	      default: true
	    },
	    index: [Number, Function],
	    sortOrders: {
	      type: Array,
	      default: function _default() {
	        return ['ascending', 'descending', null];
	      },
	      validator: function validator(val) {
	        return val.every(function (order) {
	          return ['ascending', 'descending', null].indexOf(order) > -1;
	        });
	      }
	    }
	  },

	  data: function data() {
	    return {
	      isSubColumn: false,
	      columns: []
	    };
	  },


	  computed: {
	    owner: function owner() {
	      var parent = this.$parent;
	      while (parent && !parent.tableId) {
	        parent = parent.$parent;
	      }
	      return parent;
	    },
	    columnOrTableParent: function columnOrTableParent() {
	      var parent = this.$parent;
	      while (parent && !parent.tableId && !parent.columnId) {
	        parent = parent.$parent;
	      }
	      return parent;
	    },
	    realWidth: function realWidth() {
	      return parseWidth(this.width);
	    },
	    realMinWidth: function realMinWidth() {
	      return parseMinWidth(this.minWidth);
	    },
	    realAlign: function realAlign() {
	      return this.align ? 'is-' + this.align : null;
	    },
	    realHeaderAlign: function realHeaderAlign() {
	      return this.headerAlign ? 'is-' + this.headerAlign : this.realAlign;
	    }
	  },

	  methods: {
	    getPropsData: function getPropsData() {
	      var _this = this;

	      for (var _len = arguments.length, props = Array(_len), _key = 0; _key < _len; _key++) {
	        props[_key] = arguments[_key];
	      }

	      return props.reduce(function (prev, cur) {
	        if (Array.isArray(cur)) {
	          cur.forEach(function (key) {
	            prev[key] = _this[key];
	          });
	        }
	        return prev;
	      }, {});
	    },
	    getColumnElIndex: function getColumnElIndex(children, child) {
	      return [].indexOf.call(children, child);
	    },
	    setColumnWidth: function setColumnWidth(column) {
	      if (this.realWidth) {
	        column.width = this.realWidth;
	      }
	      if (this.realMinWidth) {
	        column.minWidth = this.realMinWidth;
	      }
	      if (!column.minWidth) {
	        column.minWidth = 80;
	      }
	      column.realWidth = column.width === undefined ? column.minWidth : column.width;
	      return column;
	    },
	    setColumnForcedProps: function setColumnForcedProps(column) {
	      // 对于特定类型的 column，某些属性不允许设置
	      var type = column.type;
	      var source = cellForced[type] || {};
	      Object.keys(source).forEach(function (prop) {
	        var value = source[prop];
	        if (value !== undefined) {
	          column[prop] = prop === 'className' ? column[prop] + ' ' + value : value;
	        }
	      });
	      return column;
	    },
	    setColumnRenders: function setColumnRenders(column) {
	      var _this2 = this;

	      this.$createElement;

	      // renderHeader 属性不推荐使用。
	      if (this.renderHeader) {
	        console.warn('[Element Warn][TableColumn]Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.');
	      } else if (column.type !== 'selection') {
	        column.renderHeader = function (h, scope) {
	          var renderHeader = _this2.$scopedSlots.header;
	          return renderHeader ? renderHeader(scope) : column.label;
	        };
	      }

	      var originRenderCell = column.renderCell;
	      // TODO: 这里的实现调整
	      if (column.type === 'expand') {
	        // 对于展开行，renderCell 不允许配置的。在上一步中已经设置过，这里需要简单封装一下。
	        column.renderCell = function (h, data) {
	          return h(
	            'div',
	            { 'class': 'cell' },
	            [originRenderCell(h, data)]
	          );
	        };
	        this.owner.renderExpanded = function (h, data) {
	          return _this2.$scopedSlots.default ? _this2.$scopedSlots.default(data) : _this2.$slots.default;
	        };
	      } else {
	        originRenderCell = originRenderCell || defaultRenderCell;
	        // 对 renderCell 进行包装
	        column.renderCell = function (h, data) {
	          var children = null;
	          if (_this2.$scopedSlots.default) {
	            children = _this2.$scopedSlots.default(data);
	          } else {
	            children = originRenderCell(h, data);
	          }
	          var prefix = treeCellPrefix(h, data);
	          var props = {
	            class: 'cell',
	            style: {}
	          };
	          if (column.showOverflowTooltip) {
	            props.class += ' el-tooltip';
	            props.style = { width: (data.column.realWidth || data.column.width) - 1 + 'px' };
	          }
	          return h(
	            'div',
	            props,
	            [prefix, children]
	          );
	        };
	      }
	      return column;
	    },
	    registerNormalWatchers: function registerNormalWatchers() {
	      var _this3 = this;

	      var props = ['label', 'property', 'filters', 'filterMultiple', 'sortable', 'index', 'formatter', 'className', 'labelClassName', 'showOverflowTooltip'];
	      // 一些属性具有别名
	      var aliases = {
	        prop: 'property',
	        realAlign: 'align',
	        realHeaderAlign: 'headerAlign',
	        realWidth: 'width'
	      };
	      var allAliases = props.reduce(function (prev, cur) {
	        prev[cur] = cur;
	        return prev;
	      }, aliases);

	      Object.keys(allAliases).forEach(function (key) {
	        var columnKey = aliases[key];

	        _this3.$watch(key, function (newVal) {
	          _this3.columnConfig[columnKey] = newVal;
	        });
	      });
	    },
	    registerComplexWatchers: function registerComplexWatchers() {
	      var _this4 = this;

	      var props = ['fixed'];
	      var aliases = {
	        realWidth: 'width',
	        realMinWidth: 'minWidth'
	      };
	      var allAliases = props.reduce(function (prev, cur) {
	        prev[cur] = cur;
	        return prev;
	      }, aliases);

	      Object.keys(allAliases).forEach(function (key) {
	        var columnKey = aliases[key];

	        _this4.$watch(key, function (newVal) {
	          _this4.columnConfig[columnKey] = newVal;
	          var updateColumns = columnKey === 'fixed';
	          _this4.owner.store.scheduleLayout(updateColumns);
	        });
	      });
	    }
	  },

	  components: {
	    ElCheckbox: checkbox_default.a
	  },

	  beforeCreate: function beforeCreate() {
	    this.row = {};
	    this.column = {};
	    this.$index = 0;
	    this.columnId = '';
	  },
	  created: function created() {
	    var parent = this.columnOrTableParent;
	    this.isSubColumn = this.owner !== parent;
	    this.columnId = (parent.tableId || parent.columnId) + '_column_' + columnIdSeed++;

	    var type = this.type || 'default';
	    var sortable = this.sortable === '' ? true : this.sortable;
	    var defaults = table_column_extends({}, cellStarts[type], {
	      id: this.columnId,
	      type: type,
	      property: this.prop || this.property,
	      align: this.realAlign,
	      headerAlign: this.realHeaderAlign,
	      showOverflowTooltip: this.showOverflowTooltip || this.showTooltipWhenOverflow,
	      // filter 相关属性
	      filterable: this.filters || this.filterMethod,
	      filteredValue: [],
	      filterPlacement: '',
	      isColumnGroup: false,
	      filterOpened: false,
	      // sort 相关属性
	      sortable: sortable,
	      // index 列
	      index: this.index
	    });

	    var basicProps = ['columnKey', 'label', 'className', 'labelClassName', 'type', 'renderHeader', 'formatter', 'fixed', 'resizable'];
	    var sortProps = ['sortMethod', 'sortBy', 'sortOrders'];
	    var selectProps = ['selectable', 'reserveSelection'];
	    var filterProps = ['filterMethod', 'filters', 'filterMultiple', 'filterOpened', 'filteredValue', 'filterPlacement'];

	    var column = this.getPropsData(basicProps, sortProps, selectProps, filterProps);
	    column = mergeOptions(defaults, column);

	    // 注意 compose 中函数执行的顺序是从右到左
	    var chains = compose(this.setColumnRenders, this.setColumnWidth, this.setColumnForcedProps);
	    column = chains(column);

	    this.columnConfig = column;

	    // 注册 watcher
	    this.registerNormalWatchers();
	    this.registerComplexWatchers();
	  },
	  mounted: function mounted() {
	    var owner = this.owner;
	    var parent = this.columnOrTableParent;
	    var children = this.isSubColumn ? parent.$el.children : parent.$refs.hiddenColumns.children;
	    var columnIndex = this.getColumnElIndex(children, this.$el);

	    owner.store.commit('insertColumn', this.columnConfig, columnIndex, this.isSubColumn ? parent.columnConfig : null);
	  },
	  destroyed: function destroyed() {
	    if (!this.$parent) return;
	    var parent = this.$parent;
	    this.owner.store.commit('removeColumn', this.columnConfig, this.isSubColumn ? parent.columnConfig : null);
	  },
	  render: function render(h) {
	    // slots 也要渲染，需要计算合并表头
	    return h('div', this.$slots.default);
	  }
	});
	// CONCATENATED MODULE: ./packages/table-column/index.js


	/* istanbul ignore next */
	table_column.install = function (Vue) {
	  Vue.component(table_column.name, table_column);
	};

	/* harmony default export */ var packages_table_column = (table_column);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/picker.vue?vue&type=template&id=79ae069f&
	var pickervue_type_template_id_79ae069f_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return !_vm.ranged
	    ? _c(
	        "el-input",
	        _vm._b(
	          {
	            directives: [
	              {
	                name: "clickoutside",
	                rawName: "v-clickoutside",
	                value: _vm.handleClose,
	                expression: "handleClose"
	              }
	            ],
	            ref: "reference",
	            staticClass: "el-date-editor",
	            class: "el-date-editor--" + _vm.type,
	            attrs: {
	              readonly:
	                !_vm.editable ||
	                _vm.readonly ||
	                _vm.type === "dates" ||
	                _vm.type === "week" ||
	                _vm.type === "years" ||
	                _vm.type === "months",
	              disabled: _vm.pickerDisabled,
	              size: _vm.pickerSize,
	              name: _vm.name,
	              placeholder: _vm.placeholder,
	              value: _vm.displayValue,
	              validateEvent: false
	            },
	            on: {
	              focus: _vm.handleFocus,
	              input: function(value) {
	                return (_vm.userInput = value)
	              },
	              change: _vm.handleChange
	            },
	            nativeOn: {
	              keydown: function($event) {
	                return _vm.handleKeydown($event)
	              },
	              mouseenter: function($event) {
	                return _vm.handleMouseEnter($event)
	              },
	              mouseleave: function($event) {
	                _vm.showClose = false;
	              }
	            }
	          },
	          "el-input",
	          _vm.firstInputId,
	          false
	        ),
	        [
	          _c("i", {
	            staticClass: "el-input__icon",
	            class: _vm.triggerClass,
	            attrs: { slot: "prefix" },
	            on: { click: _vm.handleFocus },
	            slot: "prefix"
	          }),
	          _vm.haveTrigger
	            ? _c("i", {
	                staticClass: "el-input__icon",
	                class: [_vm.showClose ? "" + _vm.clearIcon : ""],
	                attrs: { slot: "suffix" },
	                on: { click: _vm.handleClickIcon },
	                slot: "suffix"
	              })
	            : _vm._e()
	        ]
	      )
	    : _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "clickoutside",
	              rawName: "v-clickoutside",
	              value: _vm.handleClose,
	              expression: "handleClose"
	            }
	          ],
	          ref: "reference",
	          staticClass: "el-date-editor el-range-editor el-input__inner",
	          class: [
	            "el-date-editor--" + _vm.type,
	            _vm.pickerSize ? "el-range-editor--" + _vm.pickerSize : "",
	            _vm.pickerDisabled ? "is-disabled" : "",
	            _vm.pickerVisible ? "is-active" : ""
	          ],
	          on: {
	            click: _vm.handleRangeClick,
	            mouseenter: _vm.handleMouseEnter,
	            mouseleave: function($event) {
	              _vm.showClose = false;
	            },
	            keydown: _vm.handleKeydown
	          }
	        },
	        [
	          _c("i", {
	            class: ["el-input__icon", "el-range__icon", _vm.triggerClass]
	          }),
	          _c(
	            "input",
	            _vm._b(
	              {
	                staticClass: "el-range-input",
	                attrs: {
	                  autocomplete: "off",
	                  placeholder: _vm.startPlaceholder,
	                  disabled: _vm.pickerDisabled,
	                  readonly: !_vm.editable || _vm.readonly,
	                  name: _vm.name && _vm.name[0]
	                },
	                domProps: { value: _vm.displayValue && _vm.displayValue[0] },
	                on: {
	                  input: _vm.handleStartInput,
	                  change: _vm.handleStartChange,
	                  focus: _vm.handleFocus
	                }
	              },
	              "input",
	              _vm.firstInputId,
	              false
	            )
	          ),
	          _vm._t("range-separator", [
	            _c("span", { staticClass: "el-range-separator" }, [
	              _vm._v(_vm._s(_vm.rangeSeparator))
	            ])
	          ]),
	          _c(
	            "input",
	            _vm._b(
	              {
	                staticClass: "el-range-input",
	                attrs: {
	                  autocomplete: "off",
	                  placeholder: _vm.endPlaceholder,
	                  disabled: _vm.pickerDisabled,
	                  readonly: !_vm.editable || _vm.readonly,
	                  name: _vm.name && _vm.name[1]
	                },
	                domProps: { value: _vm.displayValue && _vm.displayValue[1] },
	                on: {
	                  input: _vm.handleEndInput,
	                  change: _vm.handleEndChange,
	                  focus: _vm.handleFocus
	                }
	              },
	              "input",
	              _vm.secondInputId,
	              false
	            )
	          ),
	          _vm.haveTrigger
	            ? _c("i", {
	                staticClass: "el-input__icon el-range__close-icon",
	                class: [_vm.showClose ? "" + _vm.clearIcon : ""],
	                on: { click: _vm.handleClickIcon }
	              })
	            : _vm._e()
	        ],
	        2
	      )
	};
	var pickervue_type_template_id_79ae069f_staticRenderFns = [];
	pickervue_type_template_id_79ae069f_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/picker.vue?vue&type=template&id=79ae069f&

	// EXTERNAL MODULE: external "element-ui/lib/utils/date-util"
	var date_util_ = __webpack_require__(0);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/picker.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//









	var NewPopper = {
	  props: {
	    appendToBody: vue_popper_default.a.props.appendToBody,
	    offset: vue_popper_default.a.props.offset,
	    boundariesPadding: vue_popper_default.a.props.boundariesPadding,
	    arrowOffset: vue_popper_default.a.props.arrowOffset,
	    transformOrigin: vue_popper_default.a.props.transformOrigin
	  },
	  methods: vue_popper_default.a.methods,
	  data: function data() {
	    return merge_default()({ visibleArrow: true }, vue_popper_default.a.data);
	  },

	  beforeDestroy: vue_popper_default.a.beforeDestroy
	};

	var DEFAULT_FORMATS = {
	  date: 'yyyy-MM-dd',
	  month: 'yyyy-MM',
	  months: 'yyyy-MM',
	  datetime: 'yyyy-MM-dd HH:mm:ss',
	  time: 'HH:mm:ss',
	  week: 'yyyywWW',
	  timerange: 'HH:mm:ss',
	  daterange: 'yyyy-MM-dd',
	  monthrange: 'yyyy-MM',
	  datetimerange: 'yyyy-MM-dd HH:mm:ss',
	  year: 'yyyy',
	  years: 'yyyy'
	};
	var HAVE_TRIGGER_TYPES = ['date', 'datetime', 'time', 'time-select', 'week', 'month', 'year', 'daterange', 'monthrange', 'timerange', 'datetimerange', 'dates', 'months', 'years'];
	var pickervue_type_script_lang_js_DATE_FORMATTER = function DATE_FORMATTER(value, format) {
	  if (format === 'timestamp') return value.getTime();
	  return Object(date_util_["formatDate"])(value, format);
	};
	var pickervue_type_script_lang_js_DATE_PARSER = function DATE_PARSER(text, format) {
	  if (format === 'timestamp') return new Date(Number(text));
	  return Object(date_util_["parseDate"])(text, format);
	};
	var RANGE_FORMATTER = function RANGE_FORMATTER(value, format) {
	  if (Array.isArray(value) && value.length === 2) {
	    var start = value[0];
	    var end = value[1];

	    if (start && end) {
	      return [pickervue_type_script_lang_js_DATE_FORMATTER(start, format), pickervue_type_script_lang_js_DATE_FORMATTER(end, format)];
	    }
	  }
	  return '';
	};
	var RANGE_PARSER = function RANGE_PARSER(array, format, separator) {
	  if (!Array.isArray(array)) {
	    array = array.split(separator);
	  }
	  if (array.length === 2) {
	    var range1 = array[0];
	    var range2 = array[1];

	    return [pickervue_type_script_lang_js_DATE_PARSER(range1, format), pickervue_type_script_lang_js_DATE_PARSER(range2, format)];
	  }
	  return [];
	};
	var TYPE_VALUE_RESOLVER_MAP = {
	  default: {
	    formatter: function formatter(value) {
	      if (!value) return '';
	      return '' + value;
	    },
	    parser: function parser(text) {
	      if (text === undefined || text === '') return null;
	      return text;
	    }
	  },
	  week: {
	    formatter: function formatter(value, format) {
	      var week = Object(date_util_["getWeekNumber"])(value);
	      var month = value.getMonth();
	      var trueDate = new Date(value);
	      if (week === 1 && month === 11) {
	        trueDate.setHours(0, 0, 0, 0);
	        trueDate.setDate(trueDate.getDate() + 3 - (trueDate.getDay() + 6) % 7);
	      }
	      var date = Object(date_util_["formatDate"])(trueDate, format);

	      date = /WW/.test(date) ? date.replace(/WW/, week < 10 ? '0' + week : week) : date.replace(/W/, week);
	      return date;
	    },
	    parser: function parser(text, format) {
	      // parse as if a normal date
	      return TYPE_VALUE_RESOLVER_MAP.date.parser(text, format);
	    }
	  },
	  date: {
	    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
	    parser: pickervue_type_script_lang_js_DATE_PARSER
	  },
	  datetime: {
	    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
	    parser: pickervue_type_script_lang_js_DATE_PARSER
	  },
	  daterange: {
	    formatter: RANGE_FORMATTER,
	    parser: RANGE_PARSER
	  },
	  monthrange: {
	    formatter: RANGE_FORMATTER,
	    parser: RANGE_PARSER
	  },
	  datetimerange: {
	    formatter: RANGE_FORMATTER,
	    parser: RANGE_PARSER
	  },
	  timerange: {
	    formatter: RANGE_FORMATTER,
	    parser: RANGE_PARSER
	  },
	  time: {
	    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
	    parser: pickervue_type_script_lang_js_DATE_PARSER
	  },
	  month: {
	    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
	    parser: pickervue_type_script_lang_js_DATE_PARSER
	  },
	  year: {
	    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
	    parser: pickervue_type_script_lang_js_DATE_PARSER
	  },
	  number: {
	    formatter: function formatter(value) {
	      if (!value) return '';
	      return '' + value;
	    },
	    parser: function parser(text) {
	      var result = Number(text);

	      if (!isNaN(text)) {
	        return result;
	      } else {
	        return null;
	      }
	    }
	  },
	  dates: {
	    formatter: function formatter(value, format) {
	      return value.map(function (date) {
	        return pickervue_type_script_lang_js_DATE_FORMATTER(date, format);
	      });
	    },
	    parser: function parser(value, format) {
	      return (typeof value === 'string' ? value.split(', ') : value).map(function (date) {
	        return date instanceof Date ? date : pickervue_type_script_lang_js_DATE_PARSER(date, format);
	      });
	    }
	  },
	  months: {
	    formatter: function formatter(value, format) {
	      return value.map(function (date) {
	        return pickervue_type_script_lang_js_DATE_FORMATTER(date, format);
	      });
	    },
	    parser: function parser(value, format) {
	      return (typeof value === 'string' ? value.split(', ') : value).map(function (date) {
	        return date instanceof Date ? date : pickervue_type_script_lang_js_DATE_PARSER(date, format);
	      });
	    }
	  },
	  years: {
	    formatter: function formatter(value, format) {
	      return value.map(function (date) {
	        return pickervue_type_script_lang_js_DATE_FORMATTER(date, format);
	      });
	    },
	    parser: function parser(value, format) {
	      return (typeof value === 'string' ? value.split(', ') : value).map(function (date) {
	        return date instanceof Date ? date : pickervue_type_script_lang_js_DATE_PARSER(date, format);
	      });
	    }
	  }
	};
	var PLACEMENT_MAP = {
	  left: 'bottom-start',
	  center: 'bottom',
	  right: 'bottom-end'
	};

	var parseAsFormatAndType = function parseAsFormatAndType(value, customFormat, type) {
	  var rangeSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';

	  if (!value) return null;
	  var parser = (TYPE_VALUE_RESOLVER_MAP[type] || TYPE_VALUE_RESOLVER_MAP['default']).parser;
	  var format = customFormat || DEFAULT_FORMATS[type];
	  return parser(value, format, rangeSeparator);
	};

	var formatAsFormatAndType = function formatAsFormatAndType(value, customFormat, type) {
	  if (!value) return null;
	  var formatter = (TYPE_VALUE_RESOLVER_MAP[type] || TYPE_VALUE_RESOLVER_MAP['default']).formatter;
	  var format = customFormat || DEFAULT_FORMATS[type];
	  return formatter(value, format);
	};

	/*
	 * Considers:
	 *   1. Date object
	 *   2. date string
	 *   3. array of 1 or 2
	 */
	var valueEquals = function valueEquals(a, b) {
	  // considers Date object and string
	  var dateEquals = function dateEquals(a, b) {
	    var aIsDate = a instanceof Date;
	    var bIsDate = b instanceof Date;
	    if (aIsDate && bIsDate) {
	      return a.getTime() === b.getTime();
	    }
	    if (!aIsDate && !bIsDate) {
	      return a === b;
	    }
	    return false;
	  };

	  var aIsArray = a instanceof Array;
	  var bIsArray = b instanceof Array;
	  if (aIsArray && bIsArray) {
	    if (a.length !== b.length) {
	      return false;
	    }
	    return a.every(function (item, index) {
	      return dateEquals(item, b[index]);
	    });
	  }
	  if (!aIsArray && !bIsArray) {
	    return dateEquals(a, b);
	  }
	  return false;
	};

	var isString = function isString(val) {
	  return typeof val === 'string' || val instanceof String;
	};

	var pickervue_type_script_lang_js_validator = function validator(val) {
	  // either: String, Array of String, null / undefined
	  return val === null || val === undefined || isString(val) || Array.isArray(val) && val.length === 2 && val.every(isString);
	};

	/* harmony default export */ var pickervue_type_script_lang_js_ = ({
	  mixins: [emitter_default.a, NewPopper],

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  props: {
	    size: String,
	    format: String,
	    valueFormat: String,
	    readonly: Boolean,
	    placeholder: String,
	    startPlaceholder: String,
	    endPlaceholder: String,
	    prefixIcon: String,
	    clearIcon: {
	      type: String,
	      default: 'el-icon-circle-close'
	    },
	    name: {
	      default: '',
	      validator: pickervue_type_script_lang_js_validator
	    },
	    disabled: Boolean,
	    clearable: {
	      type: Boolean,
	      default: true
	    },
	    id: {
	      default: '',
	      validator: pickervue_type_script_lang_js_validator
	    },
	    popperClass: String,
	    editable: {
	      type: Boolean,
	      default: true
	    },
	    align: {
	      type: String,
	      default: 'left'
	    },
	    value: {},
	    defaultValue: {},
	    defaultTime: {},
	    rangeSeparator: {
	      default: '-'
	    },
	    pickerOptions: {},
	    unlinkPanels: Boolean,
	    validateEvent: {
	      type: Boolean,
	      default: true
	    }
	  },

	  components: { ElInput: input_default.a },

	  directives: { Clickoutside: clickoutside_default.a },

	  data: function data() {
	    return {
	      pickerVisible: false,
	      showClose: false,
	      userInput: null,
	      valueOnOpen: null, // value when picker opens, used to determine whether to emit change
	      unwatchPickerOptions: null
	    };
	  },


	  watch: {
	    pickerVisible: function pickerVisible(val) {
	      if (this.readonly || this.pickerDisabled) return;
	      if (val) {
	        this.showPicker();
	        this.valueOnOpen = Array.isArray(this.value) ? [].concat(this.value) : this.value;
	      } else {
	        this.hidePicker();
	        this.emitChange(this.value);
	        this.userInput = null;
	        if (this.validateEvent) {
	          this.dispatch('ElFormItem', 'el.form.blur');
	        }
	        this.$emit('blur', this);
	        this.blur();
	      }
	    },

	    parsedValue: {
	      immediate: true,
	      handler: function handler(val) {
	        if (this.picker) {
	          this.picker.value = val;
	        }
	      }
	    },
	    defaultValue: function defaultValue(val) {
	      // NOTE: should eventually move to jsx style picker + panel ?
	      if (this.picker) {
	        this.picker.defaultValue = val;
	      }
	    },
	    value: function value(val, oldVal) {
	      if (!valueEquals(val, oldVal) && !this.pickerVisible && this.validateEvent) {
	        this.dispatch('ElFormItem', 'el.form.change', val);
	      }
	    }
	  },

	  computed: {
	    ranged: function ranged() {
	      return this.type.indexOf('range') > -1;
	    },
	    reference: function reference() {
	      var reference = this.$refs.reference;
	      return reference.$el || reference;
	    },
	    refInput: function refInput() {
	      if (this.reference) {
	        return [].slice.call(this.reference.querySelectorAll('input'));
	      }
	      return [];
	    },
	    valueIsEmpty: function valueIsEmpty() {
	      var val = this.value;
	      if (Array.isArray(val)) {
	        for (var i = 0, len = val.length; i < len; i++) {
	          if (val[i]) {
	            return false;
	          }
	        }
	      } else {
	        if (val) {
	          return false;
	        }
	      }
	      return true;
	    },
	    triggerClass: function triggerClass() {
	      return this.prefixIcon || (this.type.indexOf('time') !== -1 ? 'el-icon-time' : 'el-icon-date');
	    },
	    selectionMode: function selectionMode() {
	      if (this.type === 'week') {
	        return 'week';
	      } else if (this.type === 'month') {
	        return 'month';
	      } else if (this.type === 'year') {
	        return 'year';
	      } else if (this.type === 'dates') {
	        return 'dates';
	      } else if (this.type === 'months') {
	        return 'months';
	      } else if (this.type === 'years') {
	        return 'years';
	      }

	      return 'day';
	    },
	    haveTrigger: function haveTrigger() {
	      if (typeof this.showTrigger !== 'undefined') {
	        return this.showTrigger;
	      }
	      return HAVE_TRIGGER_TYPES.indexOf(this.type) !== -1;
	    },
	    displayValue: function displayValue() {
	      var formattedValue = formatAsFormatAndType(this.parsedValue, this.format, this.type, this.rangeSeparator);
	      if (Array.isArray(this.userInput)) {
	        return [this.userInput[0] || formattedValue && formattedValue[0] || '', this.userInput[1] || formattedValue && formattedValue[1] || ''];
	      } else if (this.userInput !== null) {
	        return this.userInput;
	      } else if (formattedValue) {
	        return this.type === 'dates' || this.type === 'years' || this.type === 'months' ? formattedValue.join(', ') : formattedValue;
	      } else {
	        return '';
	      }
	    },
	    parsedValue: function parsedValue() {
	      if (!this.value) return this.value; // component value is not set
	      if (this.type === 'time-select') return this.value; // time-select does not require parsing, this might change in next major version

	      var valueIsDateObject = Object(date_util_["isDateObject"])(this.value) || Array.isArray(this.value) && this.value.every(date_util_["isDateObject"]);
	      if (valueIsDateObject) {
	        return this.value;
	      }

	      if (this.valueFormat) {
	        return parseAsFormatAndType(this.value, this.valueFormat, this.type, this.rangeSeparator) || this.value;
	      }

	      // NOTE: deal with common but incorrect usage, should remove in next major version
	      // user might provide string / timestamp without value-format, coerce them into date (or array of date)
	      return Array.isArray(this.value) ? this.value.map(function (val) {
	        return new Date(val);
	      }) : new Date(this.value);
	    },
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    pickerSize: function pickerSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    pickerDisabled: function pickerDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    },
	    firstInputId: function firstInputId() {
	      var obj = {};
	      var id = void 0;
	      if (this.ranged) {
	        id = this.id && this.id[0];
	      } else {
	        id = this.id;
	      }
	      if (id) obj.id = id;
	      return obj;
	    },
	    secondInputId: function secondInputId() {
	      var obj = {};
	      var id = void 0;
	      if (this.ranged) {
	        id = this.id && this.id[1];
	      }
	      if (id) obj.id = id;
	      return obj;
	    }
	  },

	  created: function created() {
	    // vue-popper
	    this.popperOptions = {
	      boundariesPadding: 0,
	      gpuAcceleration: false
	    };
	    this.placement = PLACEMENT_MAP[this.align] || PLACEMENT_MAP.left;

	    this.$on('fieldReset', this.handleFieldReset);
	  },


	  methods: {
	    focus: function focus() {
	      if (!this.ranged) {
	        this.$refs.reference.focus();
	      } else {
	        this.handleFocus();
	      }
	    },
	    blur: function blur() {
	      this.refInput.forEach(function (input) {
	        return input.blur();
	      });
	    },


	    // {parse, formatTo} Value deals maps component value with internal Date
	    parseValue: function parseValue(value) {
	      var isParsed = Object(date_util_["isDateObject"])(value) || Array.isArray(value) && value.every(date_util_["isDateObject"]);
	      if (this.valueFormat && !isParsed) {
	        return parseAsFormatAndType(value, this.valueFormat, this.type, this.rangeSeparator) || value;
	      } else {
	        return value;
	      }
	    },
	    formatToValue: function formatToValue(date) {
	      var isFormattable = Object(date_util_["isDateObject"])(date) || Array.isArray(date) && date.every(date_util_["isDateObject"]);
	      if (this.valueFormat && isFormattable) {
	        return formatAsFormatAndType(date, this.valueFormat, this.type, this.rangeSeparator);
	      } else {
	        return date;
	      }
	    },


	    // {parse, formatTo} String deals with user input
	    parseString: function parseString(value) {
	      var type = Array.isArray(value) ? this.type : this.type.replace('range', '');
	      return parseAsFormatAndType(value, this.format, type);
	    },
	    formatToString: function formatToString(value) {
	      var type = Array.isArray(value) ? this.type : this.type.replace('range', '');
	      return formatAsFormatAndType(value, this.format, type);
	    },
	    handleMouseEnter: function handleMouseEnter() {
	      if (this.readonly || this.pickerDisabled) return;
	      if (!this.valueIsEmpty && this.clearable) {
	        this.showClose = true;
	      }
	    },
	    handleChange: function handleChange() {
	      if (this.userInput) {
	        var value = this.parseString(this.displayValue);
	        if (value) {
	          this.picker.value = value;
	          if (this.isValidValue(value)) {
	            this.emitInput(value);
	            this.userInput = null;
	          }
	        }
	      }
	      if (this.userInput === '') {
	        this.emitInput(null);
	        this.emitChange(null);
	        this.userInput = null;
	      }
	    },
	    handleStartInput: function handleStartInput(event) {
	      if (this.userInput) {
	        this.userInput = [event.target.value, this.userInput[1]];
	      } else {
	        this.userInput = [event.target.value, null];
	      }
	    },
	    handleEndInput: function handleEndInput(event) {
	      if (this.userInput) {
	        this.userInput = [this.userInput[0], event.target.value];
	      } else {
	        this.userInput = [null, event.target.value];
	      }
	    },
	    handleStartChange: function handleStartChange(event) {
	      var value = this.parseString(this.userInput && this.userInput[0]);
	      if (value) {
	        this.userInput = [this.formatToString(value), this.displayValue[1]];
	        var newValue = [value, this.picker.value && this.picker.value[1]];
	        this.picker.value = newValue;
	        if (this.isValidValue(newValue)) {
	          this.emitInput(newValue);
	          this.userInput = null;
	        }
	      }
	    },
	    handleEndChange: function handleEndChange(event) {
	      var value = this.parseString(this.userInput && this.userInput[1]);
	      if (value) {
	        this.userInput = [this.displayValue[0], this.formatToString(value)];
	        var newValue = [this.picker.value && this.picker.value[0], value];
	        this.picker.value = newValue;
	        if (this.isValidValue(newValue)) {
	          this.emitInput(newValue);
	          this.userInput = null;
	        }
	      }
	    },
	    handleClickIcon: function handleClickIcon(event) {
	      if (this.readonly || this.pickerDisabled) return;
	      if (this.showClose) {
	        this.valueOnOpen = this.value;
	        event.stopPropagation();
	        this.emitInput(null);
	        this.emitChange(null);
	        this.showClose = false;
	        if (this.picker && typeof this.picker.handleClear === 'function') {
	          this.picker.handleClear();
	        }
	      } else {
	        this.pickerVisible = !this.pickerVisible;
	      }
	    },
	    handleClose: function handleClose() {
	      if (!this.pickerVisible) return;
	      this.pickerVisible = false;

	      if (this.type === 'dates' || this.type === 'years' || this.type === 'months') {
	        // restore to former value
	        var oldValue = parseAsFormatAndType(this.valueOnOpen, this.valueFormat, this.type, this.rangeSeparator) || this.valueOnOpen;
	        this.emitInput(oldValue);
	      }
	    },
	    handleFieldReset: function handleFieldReset(initialValue) {
	      this.userInput = initialValue === '' ? null : initialValue;
	    },
	    handleFocus: function handleFocus() {
	      var type = this.type;

	      if (HAVE_TRIGGER_TYPES.indexOf(type) !== -1 && !this.pickerVisible) {
	        this.pickerVisible = true;
	      }
	      this.$emit('focus', this);
	    },
	    handleKeydown: function handleKeydown(event) {
	      var _this = this;

	      var keyCode = event.keyCode;

	      // ESC
	      if (keyCode === 27) {
	        this.pickerVisible = false;
	        event.stopPropagation();
	        return;
	      }

	      // Tab
	      if (keyCode === 9) {
	        if (!this.ranged) {
	          this.handleChange();
	          this.pickerVisible = this.picker.visible = false;
	          this.blur();
	          event.stopPropagation();
	        } else {
	          // user may change focus between two input
	          setTimeout(function () {
	            if (_this.refInput.indexOf(document.activeElement) === -1) {
	              _this.pickerVisible = false;
	              _this.blur();
	              event.stopPropagation();
	            }
	          }, 0);
	        }
	        return;
	      }

	      // Enter
	      if (keyCode === 13) {
	        if (this.userInput === '' || this.isValidValue(this.parseString(this.displayValue))) {
	          this.handleChange();
	          this.pickerVisible = this.picker.visible = false;
	          this.blur();
	        }
	        event.stopPropagation();
	        return;
	      }

	      // if user is typing, do not let picker handle key input
	      if (this.userInput) {
	        event.stopPropagation();
	        return;
	      }

	      // delegate other keys to panel
	      if (this.picker && this.picker.handleKeydown) {
	        this.picker.handleKeydown(event);
	      }
	    },
	    handleRangeClick: function handleRangeClick() {
	      var type = this.type;

	      if (HAVE_TRIGGER_TYPES.indexOf(type) !== -1 && !this.pickerVisible) {
	        this.pickerVisible = true;
	      }
	      this.$emit('focus', this);
	    },
	    hidePicker: function hidePicker() {
	      if (this.picker) {
	        this.picker.resetView && this.picker.resetView();
	        this.pickerVisible = this.picker.visible = false;
	        this.destroyPopper();
	      }
	    },
	    showPicker: function showPicker() {
	      var _this2 = this;

	      if (this.$isServer) return;
	      if (!this.picker) {
	        this.mountPicker();
	      }
	      this.pickerVisible = this.picker.visible = true;

	      this.updatePopper();

	      this.picker.value = this.parsedValue;
	      this.picker.resetView && this.picker.resetView();

	      this.$nextTick(function () {
	        _this2.picker.adjustSpinners && _this2.picker.adjustSpinners();
	      });
	    },
	    mountPicker: function mountPicker() {
	      var _this3 = this;

	      this.picker = new external_vue_default.a(this.panel).$mount();
	      this.picker.defaultValue = this.defaultValue;
	      this.picker.defaultTime = this.defaultTime;
	      this.picker.popperClass = this.popperClass;
	      this.popperElm = this.picker.$el;
	      this.picker.width = this.reference.getBoundingClientRect().width;
	      this.picker.showTime = this.type === 'datetime' || this.type === 'datetimerange';
	      this.picker.selectionMode = this.selectionMode;
	      this.picker.unlinkPanels = this.unlinkPanels;
	      this.picker.arrowControl = this.arrowControl || this.timeArrowControl || false;
	      this.$watch('format', function (format) {
	        _this3.picker.format = format;
	      });

	      var updateOptions = function updateOptions() {
	        var options = _this3.pickerOptions;

	        if (options && options.selectableRange) {
	          var ranges = options.selectableRange;
	          var parser = TYPE_VALUE_RESOLVER_MAP.datetimerange.parser;
	          var format = DEFAULT_FORMATS.timerange;

	          ranges = Array.isArray(ranges) ? ranges : [ranges];
	          _this3.picker.selectableRange = ranges.map(function (range) {
	            return parser(range, format, _this3.rangeSeparator);
	          });
	        }

	        for (var option in options) {
	          if (options.hasOwnProperty(option) &&
	          // 忽略 time-picker 的该配置项
	          option !== 'selectableRange') {
	            _this3.picker[option] = options[option];
	          }
	        }

	        // main format must prevail over undocumented pickerOptions.format
	        if (_this3.format) {
	          _this3.picker.format = _this3.format;
	        }
	      };
	      updateOptions();
	      this.unwatchPickerOptions = this.$watch('pickerOptions', function () {
	        return updateOptions();
	      }, { deep: true });
	      this.$el.appendChild(this.picker.$el);
	      this.picker.resetView && this.picker.resetView();

	      this.picker.$on('dodestroy', this.doDestroy);
	      this.picker.$on('pick', function () {
	        var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	        var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	        _this3.userInput = null;
	        _this3.pickerVisible = _this3.picker.visible = visible;
	        _this3.emitInput(date);
	        _this3.picker.resetView && _this3.picker.resetView();
	      });

	      this.picker.$on('select-range', function (start, end, pos) {
	        if (_this3.refInput.length === 0) return;
	        if (!pos || pos === 'min') {
	          _this3.refInput[0].setSelectionRange(start, end);
	          _this3.refInput[0].focus();
	        } else if (pos === 'max') {
	          _this3.refInput[1].setSelectionRange(start, end);
	          _this3.refInput[1].focus();
	        }
	      });
	    },
	    unmountPicker: function unmountPicker() {
	      if (this.picker) {
	        this.picker.$destroy();
	        this.picker.$off();
	        if (typeof this.unwatchPickerOptions === 'function') {
	          this.unwatchPickerOptions();
	        }
	        this.picker.$el.parentNode.removeChild(this.picker.$el);
	      }
	    },
	    emitChange: function emitChange(val) {
	      // determine user real change only
	      if (!valueEquals(val, this.valueOnOpen)) {
	        this.$emit('change', val);
	        this.valueOnOpen = val;
	        if (this.validateEvent) {
	          this.dispatch('ElFormItem', 'el.form.change', val);
	        }
	      }
	    },
	    emitInput: function emitInput(val) {
	      var formatted = this.formatToValue(val);
	      if (!valueEquals(this.value, formatted)) {
	        this.$emit('input', formatted);
	      }
	    },
	    isValidValue: function isValidValue(value) {
	      if (!this.picker) {
	        this.mountPicker();
	      }
	      if (this.picker.isValidValue) {
	        return value && this.picker.isValidValue(value);
	      } else {
	        return true;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/picker.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_pickervue_type_script_lang_js_ = (pickervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/picker.vue





	/* normalize component */

	var picker_component = normalizeComponent(
	  src_pickervue_type_script_lang_js_,
	  pickervue_type_template_id_79ae069f_render,
	  pickervue_type_template_id_79ae069f_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	picker_component.options.__file = "packages/date-picker/src/picker.vue";
	/* harmony default export */ var picker = (picker_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date.vue?vue&type=template&id=2440d4ea&
	var datevue_type_template_id_2440d4ea_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-zoom-in-top" },
	      on: { "after-enter": _vm.handleEnter, "after-leave": _vm.handleLeave }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-picker-panel el-date-picker el-popper",
	          class: [
	            {
	              "has-sidebar": _vm.$slots.sidebar || _vm.shortcuts,
	              "has-time": _vm.showTime
	            },
	            _vm.popperClass
	          ]
	        },
	        [
	          _c(
	            "div",
	            { staticClass: "el-picker-panel__body-wrapper" },
	            [
	              _vm._t("sidebar"),
	              _vm.shortcuts
	                ? _c(
	                    "div",
	                    { staticClass: "el-picker-panel__sidebar" },
	                    _vm._l(_vm.shortcuts, function(shortcut, key) {
	                      return _c(
	                        "button",
	                        {
	                          key: key,
	                          staticClass: "el-picker-panel__shortcut",
	                          attrs: { type: "button" },
	                          on: {
	                            click: function($event) {
	                              _vm.handleShortcutClick(shortcut);
	                            }
	                          }
	                        },
	                        [_vm._v(_vm._s(shortcut.text))]
	                      )
	                    }),
	                    0
	                  )
	                : _vm._e(),
	              _c("div", { staticClass: "el-picker-panel__body" }, [
	                _vm.showTime
	                  ? _c("div", { staticClass: "el-date-picker__time-header" }, [
	                      _c(
	                        "span",
	                        { staticClass: "el-date-picker__editor-wrap" },
	                        [
	                          _c("el-input", {
	                            attrs: {
	                              placeholder: _vm.t("el.datepicker.selectDate"),
	                              value: _vm.visibleDate,
	                              size: "small"
	                            },
	                            on: {
	                              input: function(val) {
	                                return (_vm.userInputDate = val)
	                              },
	                              change: _vm.handleVisibleDateChange
	                            }
	                          })
	                        ],
	                        1
	                      ),
	                      _c(
	                        "span",
	                        {
	                          directives: [
	                            {
	                              name: "clickoutside",
	                              rawName: "v-clickoutside",
	                              value: _vm.handleTimePickClose,
	                              expression: "handleTimePickClose"
	                            }
	                          ],
	                          staticClass: "el-date-picker__editor-wrap"
	                        },
	                        [
	                          _c("el-input", {
	                            ref: "input",
	                            attrs: {
	                              placeholder: _vm.t("el.datepicker.selectTime"),
	                              value: _vm.visibleTime,
	                              size: "small"
	                            },
	                            on: {
	                              focus: function($event) {
	                                _vm.timePickerVisible = true;
	                              },
	                              input: function(val) {
	                                return (_vm.userInputTime = val)
	                              },
	                              change: _vm.handleVisibleTimeChange
	                            }
	                          }),
	                          _c("time-picker", {
	                            ref: "timepicker",
	                            attrs: {
	                              "time-arrow-control": _vm.arrowControl,
	                              visible: _vm.timePickerVisible
	                            },
	                            on: {
	                              pick: _vm.handleTimePick,
	                              mounted: _vm.proxyTimePickerDataProperties
	                            }
	                          })
	                        ],
	                        1
	                      )
	                    ])
	                  : _vm._e(),
	                _c(
	                  "div",
	                  {
	                    directives: [
	                      {
	                        name: "show",
	                        rawName: "v-show",
	                        value: _vm.currentView !== "time",
	                        expression: "currentView !== 'time'"
	                      }
	                    ],
	                    staticClass: "el-date-picker__header",
	                    class: {
	                      "el-date-picker__header--bordered":
	                        _vm.currentView === "year" ||
	                        _vm.currentView === "month"
	                    }
	                  },
	                  [
	                    _c("button", {
	                      staticClass:
	                        "el-picker-panel__icon-btn el-date-picker__prev-btn el-icon-d-arrow-left",
	                      attrs: {
	                        type: "button",
	                        "aria-label": _vm.t("el.datepicker.prevYear")
	                      },
	                      on: { click: _vm.prevYear }
	                    }),
	                    _c("button", {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.currentView === "date",
	                          expression: "currentView === 'date'"
	                        }
	                      ],
	                      staticClass:
	                        "el-picker-panel__icon-btn el-date-picker__prev-btn el-icon-arrow-left",
	                      attrs: {
	                        type: "button",
	                        "aria-label": _vm.t("el.datepicker.prevMonth")
	                      },
	                      on: { click: _vm.prevMonth }
	                    }),
	                    _c(
	                      "span",
	                      {
	                        staticClass: "el-date-picker__header-label",
	                        attrs: { role: "button" },
	                        on: { click: _vm.showYearPicker }
	                      },
	                      [_vm._v(_vm._s(_vm.yearLabel))]
	                    ),
	                    _c(
	                      "span",
	                      {
	                        directives: [
	                          {
	                            name: "show",
	                            rawName: "v-show",
	                            value: _vm.currentView === "date",
	                            expression: "currentView === 'date'"
	                          }
	                        ],
	                        staticClass: "el-date-picker__header-label",
	                        class: { active: _vm.currentView === "month" },
	                        attrs: { role: "button" },
	                        on: { click: _vm.showMonthPicker }
	                      },
	                      [
	                        _vm._v(
	                          _vm._s(_vm.t("el.datepicker.month" + (_vm.month + 1)))
	                        )
	                      ]
	                    ),
	                    _c("button", {
	                      staticClass:
	                        "el-picker-panel__icon-btn el-date-picker__next-btn el-icon-d-arrow-right",
	                      attrs: {
	                        type: "button",
	                        "aria-label": _vm.t("el.datepicker.nextYear")
	                      },
	                      on: { click: _vm.nextYear }
	                    }),
	                    _c("button", {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.currentView === "date",
	                          expression: "currentView === 'date'"
	                        }
	                      ],
	                      staticClass:
	                        "el-picker-panel__icon-btn el-date-picker__next-btn el-icon-arrow-right",
	                      attrs: {
	                        type: "button",
	                        "aria-label": _vm.t("el.datepicker.nextMonth")
	                      },
	                      on: { click: _vm.nextMonth }
	                    })
	                  ]
	                ),
	                _c(
	                  "div",
	                  { staticClass: "el-picker-panel__content" },
	                  [
	                    _c("date-table", {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.currentView === "date",
	                          expression: "currentView === 'date'"
	                        }
	                      ],
	                      attrs: {
	                        "selection-mode": _vm.selectionMode,
	                        "first-day-of-week": _vm.firstDayOfWeek,
	                        value: _vm.value,
	                        "default-value": _vm.defaultValue
	                          ? new Date(_vm.defaultValue)
	                          : null,
	                        date: _vm.date,
	                        "cell-class-name": _vm.cellClassName,
	                        "disabled-date": _vm.disabledDate
	                      },
	                      on: { pick: _vm.handleDatePick }
	                    }),
	                    _c("year-table", {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.currentView === "year",
	                          expression: "currentView === 'year'"
	                        }
	                      ],
	                      attrs: {
	                        "selection-mode": _vm.selectionMode,
	                        value: _vm.value,
	                        "default-value": _vm.defaultValue
	                          ? new Date(_vm.defaultValue)
	                          : null,
	                        date: _vm.date,
	                        "disabled-date": _vm.disabledDate
	                      },
	                      on: { pick: _vm.handleYearPick }
	                    }),
	                    _c("month-table", {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.currentView === "month",
	                          expression: "currentView === 'month'"
	                        }
	                      ],
	                      attrs: {
	                        "selection-mode": _vm.selectionMode,
	                        value: _vm.value,
	                        "default-value": _vm.defaultValue
	                          ? new Date(_vm.defaultValue)
	                          : null,
	                        date: _vm.date,
	                        "disabled-date": _vm.disabledDate
	                      },
	                      on: { pick: _vm.handleMonthPick }
	                    })
	                  ],
	                  1
	                )
	              ])
	            ],
	            2
	          ),
	          _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value:
	                    _vm.footerVisible &&
	                    (_vm.currentView === "date" ||
	                      _vm.currentView === "month" ||
	                      _vm.currentView === "year"),
	                  expression:
	                    "footerVisible && (currentView === 'date' || currentView === 'month' || currentView === 'year')"
	                }
	              ],
	              staticClass: "el-picker-panel__footer"
	            },
	            [
	              _c(
	                "el-button",
	                {
	                  directives: [
	                    {
	                      name: "show",
	                      rawName: "v-show",
	                      value:
	                        _vm.selectionMode !== "dates" &&
	                        _vm.selectionMode !== "months" &&
	                        _vm.selectionMode !== "years",
	                      expression:
	                        "selectionMode !== 'dates' && selectionMode !== 'months' && selectionMode !== 'years'"
	                    }
	                  ],
	                  staticClass: "el-picker-panel__link-btn",
	                  attrs: { size: "mini", type: "text" },
	                  on: { click: _vm.changeToNow }
	                },
	                [
	                  _vm._v(
	                    "\n        " +
	                      _vm._s(_vm.t("el.datepicker.now")) +
	                      "\n      "
	                  )
	                ]
	              ),
	              _c(
	                "el-button",
	                {
	                  staticClass: "el-picker-panel__link-btn",
	                  attrs: { plain: "", size: "mini" },
	                  on: { click: _vm.confirm }
	                },
	                [
	                  _vm._v(
	                    "\n        " +
	                      _vm._s(_vm.t("el.datepicker.confirm")) +
	                      "\n      "
	                  )
	                ]
	              )
	            ],
	            1
	          )
	        ]
	      )
	    ]
	  )
	};
	var datevue_type_template_id_2440d4ea_staticRenderFns = [];
	datevue_type_template_id_2440d4ea_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/panel/date.vue?vue&type=template&id=2440d4ea&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time.vue?vue&type=template&id=3d939089&
	var timevue_type_template_id_3d939089_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-zoom-in-top" },
	      on: {
	        "after-leave": function($event) {
	          _vm.$emit("dodestroy");
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-time-panel el-popper",
	          class: _vm.popperClass
	        },
	        [
	          _c(
	            "div",
	            {
	              staticClass: "el-time-panel__content",
	              class: { "has-seconds": _vm.showSeconds }
	            },
	            [
	              _c("time-spinner", {
	                ref: "spinner",
	                attrs: {
	                  "arrow-control": _vm.useArrow,
	                  "show-seconds": _vm.showSeconds,
	                  "am-pm-mode": _vm.amPmMode,
	                  date: _vm.date
	                },
	                on: {
	                  change: _vm.handleChange,
	                  "select-range": _vm.setSelectionRange
	                }
	              })
	            ],
	            1
	          ),
	          _c("div", { staticClass: "el-time-panel__footer" }, [
	            _c(
	              "button",
	              {
	                staticClass: "el-time-panel__btn cancel",
	                attrs: { type: "button" },
	                on: { click: _vm.handleCancel }
	              },
	              [_vm._v(_vm._s(_vm.t("el.datepicker.cancel")))]
	            ),
	            _c(
	              "button",
	              {
	                staticClass: "el-time-panel__btn",
	                class: { confirm: !_vm.disabled },
	                attrs: { type: "button" },
	                on: {
	                  click: function($event) {
	                    _vm.handleConfirm();
	                  }
	                }
	              },
	              [_vm._v(_vm._s(_vm.t("el.datepicker.confirm")))]
	            )
	          ])
	        ]
	      )
	    ]
	  )
	};
	var timevue_type_template_id_3d939089_staticRenderFns = [];
	timevue_type_template_id_3d939089_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time.vue?vue&type=template&id=3d939089&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/time-spinner.vue?vue&type=template&id=1facadeb&
	var time_spinnervue_type_template_id_1facadeb_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-time-spinner",
	      class: { "has-seconds": _vm.showSeconds }
	    },
	    [
	      !_vm.arrowControl
	        ? [
	            _c(
	              "el-scrollbar",
	              {
	                ref: "hours",
	                staticClass: "el-time-spinner__wrapper",
	                attrs: {
	                  "wrap-style": "max-height: inherit;",
	                  "view-class": "el-time-spinner__list",
	                  noresize: "",
	                  tag: "ul"
	                },
	                nativeOn: {
	                  mouseenter: function($event) {
	                    _vm.emitSelectRange("hours");
	                  },
	                  mousemove: function($event) {
	                    _vm.adjustCurrentSpinner("hours");
	                  }
	                }
	              },
	              _vm._l(_vm.hoursList, function(disabled, hour) {
	                return _c(
	                  "li",
	                  {
	                    key: hour,
	                    staticClass: "el-time-spinner__item",
	                    class: { active: hour === _vm.hours, disabled: disabled },
	                    on: {
	                      click: function($event) {
	                        _vm.handleClick("hours", {
	                          value: hour,
	                          disabled: disabled
	                        });
	                      }
	                    }
	                  },
	                  [
	                    _vm._v(
	                      _vm._s(
	                        ("0" + (_vm.amPmMode ? hour % 12 || 12 : hour)).slice(
	                          -2
	                        )
	                      ) + _vm._s(_vm.amPm(hour))
	                    )
	                  ]
	                )
	              }),
	              0
	            ),
	            _c(
	              "el-scrollbar",
	              {
	                ref: "minutes",
	                staticClass: "el-time-spinner__wrapper",
	                attrs: {
	                  "wrap-style": "max-height: inherit;",
	                  "view-class": "el-time-spinner__list",
	                  noresize: "",
	                  tag: "ul"
	                },
	                nativeOn: {
	                  mouseenter: function($event) {
	                    _vm.emitSelectRange("minutes");
	                  },
	                  mousemove: function($event) {
	                    _vm.adjustCurrentSpinner("minutes");
	                  }
	                }
	              },
	              _vm._l(_vm.minutesList, function(enabled, key) {
	                return _c(
	                  "li",
	                  {
	                    key: key,
	                    staticClass: "el-time-spinner__item",
	                    class: { active: key === _vm.minutes, disabled: !enabled },
	                    on: {
	                      click: function($event) {
	                        _vm.handleClick("minutes", {
	                          value: key,
	                          disabled: false
	                        });
	                      }
	                    }
	                  },
	                  [_vm._v(_vm._s(("0" + key).slice(-2)))]
	                )
	              }),
	              0
	            ),
	            _c(
	              "el-scrollbar",
	              {
	                directives: [
	                  {
	                    name: "show",
	                    rawName: "v-show",
	                    value: _vm.showSeconds,
	                    expression: "showSeconds"
	                  }
	                ],
	                ref: "seconds",
	                staticClass: "el-time-spinner__wrapper",
	                attrs: {
	                  "wrap-style": "max-height: inherit;",
	                  "view-class": "el-time-spinner__list",
	                  noresize: "",
	                  tag: "ul"
	                },
	                nativeOn: {
	                  mouseenter: function($event) {
	                    _vm.emitSelectRange("seconds");
	                  },
	                  mousemove: function($event) {
	                    _vm.adjustCurrentSpinner("seconds");
	                  }
	                }
	              },
	              _vm._l(60, function(second, key) {
	                return _c(
	                  "li",
	                  {
	                    key: key,
	                    staticClass: "el-time-spinner__item",
	                    class: { active: key === _vm.seconds },
	                    on: {
	                      click: function($event) {
	                        _vm.handleClick("seconds", {
	                          value: key,
	                          disabled: false
	                        });
	                      }
	                    }
	                  },
	                  [_vm._v(_vm._s(("0" + key).slice(-2)))]
	                )
	              }),
	              0
	            )
	          ]
	        : _vm._e(),
	      _vm.arrowControl
	        ? [
	            _c(
	              "div",
	              {
	                staticClass: "el-time-spinner__wrapper is-arrow",
	                on: {
	                  mouseenter: function($event) {
	                    _vm.emitSelectRange("hours");
	                  }
	                }
	              },
	              [
	                _c("i", {
	                  directives: [
	                    {
	                      name: "repeat-click",
	                      rawName: "v-repeat-click",
	                      value: _vm.decrease,
	                      expression: "decrease"
	                    }
	                  ],
	                  staticClass: "el-time-spinner__arrow el-icon-arrow-up"
	                }),
	                _c("i", {
	                  directives: [
	                    {
	                      name: "repeat-click",
	                      rawName: "v-repeat-click",
	                      value: _vm.increase,
	                      expression: "increase"
	                    }
	                  ],
	                  staticClass: "el-time-spinner__arrow el-icon-arrow-down"
	                }),
	                _c(
	                  "ul",
	                  { ref: "hours", staticClass: "el-time-spinner__list" },
	                  _vm._l(_vm.arrowHourList, function(hour, key) {
	                    return _c(
	                      "li",
	                      {
	                        key: key,
	                        staticClass: "el-time-spinner__item",
	                        class: {
	                          active: hour === _vm.hours,
	                          disabled: _vm.hoursList[hour]
	                        }
	                      },
	                      [
	                        _vm._v(
	                          _vm._s(
	                            hour === undefined
	                              ? ""
	                              : (
	                                  "0" + (_vm.amPmMode ? hour % 12 || 12 : hour)
	                                ).slice(-2) + _vm.amPm(hour)
	                          )
	                        )
	                      ]
	                    )
	                  }),
	                  0
	                )
	              ]
	            ),
	            _c(
	              "div",
	              {
	                staticClass: "el-time-spinner__wrapper is-arrow",
	                on: {
	                  mouseenter: function($event) {
	                    _vm.emitSelectRange("minutes");
	                  }
	                }
	              },
	              [
	                _c("i", {
	                  directives: [
	                    {
	                      name: "repeat-click",
	                      rawName: "v-repeat-click",
	                      value: _vm.decrease,
	                      expression: "decrease"
	                    }
	                  ],
	                  staticClass: "el-time-spinner__arrow el-icon-arrow-up"
	                }),
	                _c("i", {
	                  directives: [
	                    {
	                      name: "repeat-click",
	                      rawName: "v-repeat-click",
	                      value: _vm.increase,
	                      expression: "increase"
	                    }
	                  ],
	                  staticClass: "el-time-spinner__arrow el-icon-arrow-down"
	                }),
	                _c(
	                  "ul",
	                  { ref: "minutes", staticClass: "el-time-spinner__list" },
	                  _vm._l(_vm.arrowMinuteList, function(minute, key) {
	                    return _c(
	                      "li",
	                      {
	                        key: key,
	                        staticClass: "el-time-spinner__item",
	                        class: { active: minute === _vm.minutes }
	                      },
	                      [
	                        _vm._v(
	                          "\n          " +
	                            _vm._s(
	                              minute === undefined
	                                ? ""
	                                : ("0" + minute).slice(-2)
	                            ) +
	                            "\n        "
	                        )
	                      ]
	                    )
	                  }),
	                  0
	                )
	              ]
	            ),
	            _vm.showSeconds
	              ? _c(
	                  "div",
	                  {
	                    staticClass: "el-time-spinner__wrapper is-arrow",
	                    on: {
	                      mouseenter: function($event) {
	                        _vm.emitSelectRange("seconds");
	                      }
	                    }
	                  },
	                  [
	                    _c("i", {
	                      directives: [
	                        {
	                          name: "repeat-click",
	                          rawName: "v-repeat-click",
	                          value: _vm.decrease,
	                          expression: "decrease"
	                        }
	                      ],
	                      staticClass: "el-time-spinner__arrow el-icon-arrow-up"
	                    }),
	                    _c("i", {
	                      directives: [
	                        {
	                          name: "repeat-click",
	                          rawName: "v-repeat-click",
	                          value: _vm.increase,
	                          expression: "increase"
	                        }
	                      ],
	                      staticClass: "el-time-spinner__arrow el-icon-arrow-down"
	                    }),
	                    _c(
	                      "ul",
	                      { ref: "seconds", staticClass: "el-time-spinner__list" },
	                      _vm._l(_vm.arrowSecondList, function(second, key) {
	                        return _c(
	                          "li",
	                          {
	                            key: key,
	                            staticClass: "el-time-spinner__item",
	                            class: { active: second === _vm.seconds }
	                          },
	                          [
	                            _vm._v(
	                              "\n          " +
	                                _vm._s(
	                                  second === undefined
	                                    ? ""
	                                    : ("0" + second).slice(-2)
	                                ) +
	                                "\n        "
	                            )
	                          ]
	                        )
	                      }),
	                      0
	                    )
	                  ]
	                )
	              : _vm._e()
	          ]
	        : _vm._e()
	    ],
	    2
	  )
	};
	var time_spinnervue_type_template_id_1facadeb_staticRenderFns = [];
	time_spinnervue_type_template_id_1facadeb_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/basic/time-spinner.vue?vue&type=template&id=1facadeb&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/time-spinner.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var time_spinnervue_type_script_lang_js_ = ({
	  components: { ElScrollbar: scrollbar_default.a },

	  directives: {
	    repeatClick: repeat_click
	  },

	  props: {
	    date: {},
	    defaultValue: {}, // reserved for future use
	    showSeconds: {
	      type: Boolean,
	      default: true
	    },
	    arrowControl: Boolean,
	    amPmMode: {
	      type: String,
	      default: '' // 'a': am/pm; 'A': AM/PM
	    }
	  },

	  computed: {
	    hours: function hours() {
	      return this.date.getHours();
	    },
	    minutes: function minutes() {
	      return this.date.getMinutes();
	    },
	    seconds: function seconds() {
	      return this.date.getSeconds();
	    },
	    hoursList: function hoursList() {
	      return Object(date_util_["getRangeHours"])(this.selectableRange);
	    },
	    minutesList: function minutesList() {
	      return Object(date_util_["getRangeMinutes"])(this.selectableRange, this.hours);
	    },
	    arrowHourList: function arrowHourList() {
	      var hours = this.hours;
	      return [hours > 0 ? hours - 1 : undefined, hours, hours < 23 ? hours + 1 : undefined];
	    },
	    arrowMinuteList: function arrowMinuteList() {
	      var minutes = this.minutes;
	      return [minutes > 0 ? minutes - 1 : undefined, minutes, minutes < 59 ? minutes + 1 : undefined];
	    },
	    arrowSecondList: function arrowSecondList() {
	      var seconds = this.seconds;
	      return [seconds > 0 ? seconds - 1 : undefined, seconds, seconds < 59 ? seconds + 1 : undefined];
	    }
	  },

	  data: function data() {
	    return {
	      selectableRange: [],
	      currentScrollbar: null
	    };
	  },
	  mounted: function mounted() {
	    var _this = this;

	    this.$nextTick(function () {
	      !_this.arrowControl && _this.bindScrollEvent();
	    });
	  },


	  methods: {
	    increase: function increase() {
	      this.scrollDown(1);
	    },
	    decrease: function decrease() {
	      this.scrollDown(-1);
	    },
	    modifyDateField: function modifyDateField(type, value) {
	      switch (type) {
	        case 'hours':
	          this.$emit('change', Object(date_util_["modifyTime"])(this.date, value, this.minutes, this.seconds));break;
	        case 'minutes':
	          this.$emit('change', Object(date_util_["modifyTime"])(this.date, this.hours, value, this.seconds));break;
	        case 'seconds':
	          this.$emit('change', Object(date_util_["modifyTime"])(this.date, this.hours, this.minutes, value));break;
	      }
	    },
	    handleClick: function handleClick(type, _ref) {
	      var value = _ref.value,
	          disabled = _ref.disabled;

	      if (!disabled) {
	        this.modifyDateField(type, value);
	        this.emitSelectRange(type);
	        this.adjustSpinner(type, value);
	      }
	    },
	    emitSelectRange: function emitSelectRange(type) {
	      if (type === 'hours') {
	        this.$emit('select-range', 0, 2);
	      } else if (type === 'minutes') {
	        this.$emit('select-range', 3, 5);
	      } else if (type === 'seconds') {
	        this.$emit('select-range', 6, 8);
	      }
	      this.currentScrollbar = type;
	    },
	    bindScrollEvent: function bindScrollEvent() {
	      var _this2 = this;

	      var bindFunction = function bindFunction(type) {
	        _this2.$refs[type].wrap.onscroll = function (e) {
	          // TODO: scroll is emitted when set scrollTop programatically
	          // should find better solutions in the future!
	          _this2.handleScroll(type, e);
	        };
	      };
	      bindFunction('hours');
	      bindFunction('minutes');
	      bindFunction('seconds');
	    },
	    handleScroll: function handleScroll(type) {
	      var value = Math.min(Math.round((this.$refs[type].wrap.scrollTop - (this.scrollBarHeight(type) * 0.5 - 10) / this.typeItemHeight(type) + 3) / this.typeItemHeight(type)), type === 'hours' ? 23 : 59);
	      this.modifyDateField(type, value);
	    },


	    // NOTE: used by datetime / date-range panel
	    //       renamed from adjustScrollTop
	    //       should try to refactory it
	    adjustSpinners: function adjustSpinners() {
	      this.adjustSpinner('hours', this.hours);
	      this.adjustSpinner('minutes', this.minutes);
	      this.adjustSpinner('seconds', this.seconds);
	    },
	    adjustCurrentSpinner: function adjustCurrentSpinner(type) {
	      this.adjustSpinner(type, this[type]);
	    },
	    adjustSpinner: function adjustSpinner(type, value) {
	      if (this.arrowControl) return;
	      var el = this.$refs[type].wrap;
	      if (el) {
	        el.scrollTop = Math.max(0, value * this.typeItemHeight(type));
	      }
	    },
	    scrollDown: function scrollDown(step) {
	      var _this3 = this;

	      if (!this.currentScrollbar) {
	        this.emitSelectRange('hours');
	      }

	      var label = this.currentScrollbar;
	      var hoursList = this.hoursList;
	      var now = this[label];

	      if (this.currentScrollbar === 'hours') {
	        var total = Math.abs(step);
	        step = step > 0 ? 1 : -1;
	        var length = hoursList.length;
	        while (length-- && total) {
	          now = (now + step + hoursList.length) % hoursList.length;
	          if (hoursList[now]) {
	            continue;
	          }
	          total--;
	        }
	        if (hoursList[now]) return;
	      } else {
	        now = (now + step + 60) % 60;
	      }

	      this.modifyDateField(label, now);
	      this.adjustSpinner(label, now);
	      this.$nextTick(function () {
	        return _this3.emitSelectRange(_this3.currentScrollbar);
	      });
	    },
	    amPm: function amPm(hour) {
	      var shouldShowAmPm = this.amPmMode.toLowerCase() === 'a';
	      if (!shouldShowAmPm) return '';
	      var isCapital = this.amPmMode === 'A';
	      var content = hour < 12 ? ' am' : ' pm';
	      if (isCapital) content = content.toUpperCase();
	      return content;
	    },
	    typeItemHeight: function typeItemHeight(type) {
	      return this.$refs[type].$el.querySelector('li').offsetHeight;
	    },
	    scrollBarHeight: function scrollBarHeight(type) {
	      return this.$refs[type].$el.offsetHeight;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/time-spinner.vue?vue&type=script&lang=js&
	 /* harmony default export */ var basic_time_spinnervue_type_script_lang_js_ = (time_spinnervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/time-spinner.vue





	/* normalize component */

	var time_spinner_component = normalizeComponent(
	  basic_time_spinnervue_type_script_lang_js_,
	  time_spinnervue_type_template_id_1facadeb_render,
	  time_spinnervue_type_template_id_1facadeb_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	time_spinner_component.options.__file = "packages/date-picker/src/basic/time-spinner.vue";
	/* harmony default export */ var time_spinner = (time_spinner_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var timevue_type_script_lang_js_ = ({
	  mixins: [locale_default.a],

	  components: {
	    TimeSpinner: time_spinner
	  },

	  props: {
	    visible: Boolean,
	    timeArrowControl: Boolean
	  },

	  watch: {
	    visible: function visible(val) {
	      var _this = this;

	      if (val) {
	        this.oldValue = this.value;
	        this.$nextTick(function () {
	          return _this.$refs.spinner.emitSelectRange('hours');
	        });
	      } else {
	        this.needInitAdjust = true;
	      }
	    },
	    value: function value(newVal) {
	      var _this2 = this;

	      var date = void 0;
	      if (newVal instanceof Date) {
	        date = Object(date_util_["limitTimeRange"])(newVal, this.selectableRange, this.format);
	      } else if (!newVal) {
	        date = this.defaultValue ? new Date(this.defaultValue) : new Date();
	      }

	      this.date = date;
	      if (this.visible && this.needInitAdjust) {
	        this.$nextTick(function (_) {
	          return _this2.adjustSpinners();
	        });
	        this.needInitAdjust = false;
	      }
	    },
	    selectableRange: function selectableRange(val) {
	      this.$refs.spinner.selectableRange = val;
	    },
	    defaultValue: function defaultValue(val) {
	      if (!Object(date_util_["isDate"])(this.value)) {
	        this.date = val ? new Date(val) : new Date();
	      }
	    }
	  },

	  data: function data() {
	    return {
	      popperClass: '',
	      format: 'HH:mm:ss',
	      value: '',
	      defaultValue: null,
	      date: new Date(),
	      oldValue: new Date(),
	      selectableRange: [],
	      selectionRange: [0, 2],
	      disabled: false,
	      arrowControl: false,
	      needInitAdjust: true
	    };
	  },


	  computed: {
	    showSeconds: function showSeconds() {
	      return (this.format || '').indexOf('ss') !== -1;
	    },
	    useArrow: function useArrow() {
	      return this.arrowControl || this.timeArrowControl || false;
	    },
	    amPmMode: function amPmMode() {
	      if ((this.format || '').indexOf('A') !== -1) return 'A';
	      if ((this.format || '').indexOf('a') !== -1) return 'a';
	      return '';
	    }
	  },

	  methods: {
	    handleCancel: function handleCancel() {
	      this.$emit('pick', this.oldValue, false);
	    },
	    handleChange: function handleChange(date) {
	      // this.visible avoids edge cases, when use scrolls during panel closing animation
	      if (this.visible) {
	        this.date = Object(date_util_["clearMilliseconds"])(date);
	        // if date is out of range, do not emit
	        if (this.isValidValue(this.date)) {
	          this.$emit('pick', this.date, true);
	        }
	      }
	    },
	    setSelectionRange: function setSelectionRange(start, end) {
	      this.$emit('select-range', start, end);
	      this.selectionRange = [start, end];
	    },
	    handleConfirm: function handleConfirm() {
	      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	      var first = arguments[1];

	      if (first) return;
	      var date = Object(date_util_["clearMilliseconds"])(Object(date_util_["limitTimeRange"])(this.date, this.selectableRange, this.format));
	      this.$emit('pick', date, visible, first);
	    },
	    handleKeydown: function handleKeydown(event) {
	      var keyCode = event.keyCode;
	      var mapping = { 38: -1, 40: 1, 37: -1, 39: 1 };

	      // Left or Right
	      if (keyCode === 37 || keyCode === 39) {
	        var step = mapping[keyCode];
	        this.changeSelectionRange(step);
	        event.preventDefault();
	        return;
	      }

	      // Up or Down
	      if (keyCode === 38 || keyCode === 40) {
	        var _step = mapping[keyCode];
	        this.$refs.spinner.scrollDown(_step);
	        event.preventDefault();
	        return;
	      }
	    },
	    isValidValue: function isValidValue(date) {
	      return Object(date_util_["timeWithinRange"])(date, this.selectableRange, this.format);
	    },
	    adjustSpinners: function adjustSpinners() {
	      return this.$refs.spinner.adjustSpinners();
	    },
	    changeSelectionRange: function changeSelectionRange(step) {
	      var list = [0, 3].concat(this.showSeconds ? [6] : []);
	      var mapping = ['hours', 'minutes'].concat(this.showSeconds ? ['seconds'] : []);
	      var index = list.indexOf(this.selectionRange[0]);
	      var next = (index + step + list.length) % list.length;
	      this.$refs.spinner.emitSelectRange(mapping[next]);
	    }
	  },

	  mounted: function mounted() {
	    var _this3 = this;

	    this.$nextTick(function () {
	      return _this3.handleConfirm(true, true);
	    });
	    this.$emit('mounted');
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time.vue?vue&type=script&lang=js&
	 /* harmony default export */ var panel_timevue_type_script_lang_js_ = (timevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time.vue





	/* normalize component */

	var time_component = normalizeComponent(
	  panel_timevue_type_script_lang_js_,
	  timevue_type_template_id_3d939089_render,
	  timevue_type_template_id_3d939089_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	time_component.options.__file = "packages/date-picker/src/panel/time.vue";
	/* harmony default export */ var panel_time = (time_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/year-table.vue?vue&type=template&id=c86ab5e0&
	var year_tablevue_type_template_id_c86ab5e0_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "table",
	    { staticClass: "el-year-table", on: { click: _vm.handleYearTableClick } },
	    [
	      _c("tbody", [
	        _c("tr", [
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 0)
	            },
	            [_c("a", { staticClass: "cell" }, [_vm._v(_vm._s(_vm.startYear))])]
	          ),
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 1)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 1))
	              ])
	            ]
	          ),
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 2)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 2))
	              ])
	            ]
	          ),
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 3)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 3))
	              ])
	            ]
	          )
	        ]),
	        _c("tr", [
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 4)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 4))
	              ])
	            ]
	          ),
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 5)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 5))
	              ])
	            ]
	          ),
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 6)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 6))
	              ])
	            ]
	          ),
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 7)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 7))
	              ])
	            ]
	          )
	        ]),
	        _c("tr", [
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 8)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 8))
	              ])
	            ]
	          ),
	          _c(
	            "td",
	            {
	              staticClass: "available",
	              class: _vm.getCellStyle(_vm.startYear + 9)
	            },
	            [
	              _c("a", { staticClass: "cell" }, [
	                _vm._v(_vm._s(_vm.startYear + 9))
	              ])
	            ]
	          ),
	          _c("td"),
	          _c("td")
	        ])
	      ])
	    ]
	  )
	};
	var year_tablevue_type_template_id_c86ab5e0_staticRenderFns = [];
	year_tablevue_type_template_id_c86ab5e0_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/basic/year-table.vue?vue&type=template&id=c86ab5e0&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/year-table.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	var year_tablevue_type_script_lang_js_datesInYear = function datesInYear(year) {
	  var numOfDays = Object(date_util_["getDayCountOfYear"])(year);
	  var firstDay = new Date(year, 0, 1);
	  return Object(date_util_["range"])(numOfDays).map(function (n) {
	    return Object(date_util_["nextDate"])(firstDay, n);
	  });
	};

	/* harmony default export */ var year_tablevue_type_script_lang_js_ = ({
	  props: {
	    disabledDate: {},
	    value: {},
	    defaultValue: {
	      validator: function validator(val) {
	        // null or valid Date Object
	        return val === null || val instanceof Date && Object(date_util_["isDate"])(val);
	      }
	    },
	    date: {},
	    selectionMode: {}
	  },

	  computed: {
	    startYear: function startYear() {
	      return Math.floor(this.date.getFullYear() / 10) * 10;
	    }
	  },

	  methods: {
	    getCellStyle: function getCellStyle(year) {
	      var style = {};
	      var today = new Date();

	      style.disabled = typeof this.disabledDate === 'function' ? year_tablevue_type_script_lang_js_datesInYear(year).every(this.disabledDate) : false;
	      style.current = Object(util_["arrayFindIndex"])(Object(util_["coerceTruthyValueToArray"])(this.value), function (date) {
	        return date.getFullYear() === year;
	      }) >= 0;
	      style.today = today.getFullYear() === year;
	      style.default = this.defaultValue && this.defaultValue.getFullYear() === year;

	      return style;
	    },
	    handleYearTableClick: function handleYearTableClick(event) {
	      var target = event.target;
	      if (target.tagName === 'A') {
	        if (Object(dom_["hasClass"])(target.parentNode, 'disabled')) return;
	        var year = target.textContent || target.innerText;
	        if (this.selectionMode === 'years') {
	          var value = this.value || [];
	          var idx = Object(util_["arrayFindIndex"])(value, function (date) {
	            return date.getFullYear() === Number(year);
	          });
	          var newValue = idx > -1 ? [].concat(value.slice(0, idx), value.slice(idx + 1)) : [].concat(value, [new Date(year)]);
	          this.$emit('pick', newValue);
	        } else {
	          this.$emit('pick', Number(year));
	        }
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/year-table.vue?vue&type=script&lang=js&
	 /* harmony default export */ var basic_year_tablevue_type_script_lang_js_ = (year_tablevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/year-table.vue





	/* normalize component */

	var year_table_component = normalizeComponent(
	  basic_year_tablevue_type_script_lang_js_,
	  year_tablevue_type_template_id_c86ab5e0_render,
	  year_tablevue_type_template_id_c86ab5e0_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	year_table_component.options.__file = "packages/date-picker/src/basic/year-table.vue";
	/* harmony default export */ var year_table = (year_table_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/month-table.vue?vue&type=template&id=654d4f42&
	var month_tablevue_type_template_id_654d4f42_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "table",
	    {
	      staticClass: "el-month-table",
	      on: { click: _vm.handleMonthTableClick, mousemove: _vm.handleMouseMove }
	    },
	    [
	      _c(
	        "tbody",
	        _vm._l(_vm.rows, function(row, key) {
	          return _c(
	            "tr",
	            { key: key },
	            _vm._l(row, function(cell, key) {
	              return _c("td", { key: key, class: _vm.getCellStyle(cell) }, [
	                _c("div", [
	                  _c("a", { staticClass: "cell" }, [
	                    _vm._v(
	                      _vm._s(
	                        _vm.t("el.datepicker.months." + _vm.months[cell.text])
	                      )
	                    )
	                  ])
	                ])
	              ])
	            }),
	            0
	          )
	        }),
	        0
	      )
	    ]
	  )
	};
	var month_tablevue_type_template_id_654d4f42_staticRenderFns = [];
	month_tablevue_type_template_id_654d4f42_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/basic/month-table.vue?vue&type=template&id=654d4f42&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/month-table.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	var month_tablevue_type_script_lang_js_datesInMonth = function datesInMonth(year, month) {
	  var numOfDays = Object(date_util_["getDayCountOfMonth"])(year, month);
	  var firstDay = new Date(year, month, 1);
	  return Object(date_util_["range"])(numOfDays).map(function (n) {
	    return Object(date_util_["nextDate"])(firstDay, n);
	  });
	};

	var clearDate = function clearDate(date) {
	  return new Date(date.getFullYear(), date.getMonth());
	};

	var getMonthTimestamp = function getMonthTimestamp(time) {
	  if (typeof time === 'number' || typeof time === 'string') {
	    return clearDate(new Date(time)).getTime();
	  } else if (time instanceof Date) {
	    return clearDate(time).getTime();
	  } else {
	    return NaN;
	  }
	};

	// remove the first element that satisfies `pred` from arr
	// return a new array if modification occurs
	// return the original array otherwise
	var month_tablevue_type_script_lang_js_removeFromArray = function removeFromArray(arr, pred) {
	  var idx = typeof pred === 'function' ? Object(util_["arrayFindIndex"])(arr, pred) : arr.indexOf(pred);
	  return idx >= 0 ? [].concat(arr.slice(0, idx), arr.slice(idx + 1)) : arr;
	};
	/* harmony default export */ var month_tablevue_type_script_lang_js_ = ({
	  props: {
	    disabledDate: {},
	    value: {},
	    selectionMode: {
	      default: 'month'
	    },
	    minDate: {},

	    maxDate: {},
	    defaultValue: {
	      validator: function validator(val) {
	        // null or valid Date Object
	        return val === null || Object(date_util_["isDate"])(val) || Array.isArray(val) && val.every(date_util_["isDate"]);
	      }
	    },
	    date: {},
	    rangeState: {
	      default: function _default() {
	        return {
	          endDate: null,
	          selecting: false
	        };
	      }
	    }
	  },

	  mixins: [locale_default.a],

	  watch: {
	    'rangeState.endDate': function rangeStateEndDate(newVal) {
	      this.markRange(this.minDate, newVal);
	    },
	    minDate: function minDate(newVal, oldVal) {
	      if (getMonthTimestamp(newVal) !== getMonthTimestamp(oldVal)) {
	        this.markRange(this.minDate, this.maxDate);
	      }
	    },
	    maxDate: function maxDate(newVal, oldVal) {
	      if (getMonthTimestamp(newVal) !== getMonthTimestamp(oldVal)) {
	        this.markRange(this.minDate, this.maxDate);
	      }
	    }
	  },

	  data: function data() {
	    return {
	      months: ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'],
	      tableRows: [[], [], []],
	      lastRow: null,
	      lastColumn: null
	    };
	  },


	  methods: {
	    cellMatchesDate: function cellMatchesDate(cell, date) {
	      var value = new Date(date);
	      return this.date.getFullYear() === value.getFullYear() && Number(cell.text) === value.getMonth();
	    },
	    getCellStyle: function getCellStyle(cell) {
	      var _this = this;

	      var style = {};
	      var year = this.date.getFullYear();
	      var today = new Date();
	      var month = cell.text;
	      var defaultValue = this.defaultValue ? Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue] : [];
	      style.disabled = typeof this.disabledDate === 'function' ? month_tablevue_type_script_lang_js_datesInMonth(year, month).every(this.disabledDate) : false;
	      style.current = Object(util_["arrayFindIndex"])(Object(util_["coerceTruthyValueToArray"])(this.value), function (date) {
	        return date.getFullYear() === year && date.getMonth() === month;
	      }) >= 0;
	      style.today = today.getFullYear() === year && today.getMonth() === month;
	      style.default = defaultValue.some(function (date) {
	        return _this.cellMatchesDate(cell, date);
	      });

	      if (cell.inRange) {
	        style['in-range'] = true;

	        if (cell.start) {
	          style['start-date'] = true;
	        }

	        if (cell.end) {
	          style['end-date'] = true;
	        }
	      }
	      return style;
	    },
	    getMonthOfCell: function getMonthOfCell(month) {
	      var year = this.date.getFullYear();
	      return new Date(year, month, 1);
	    },
	    markRange: function markRange(minDate, maxDate) {
	      minDate = getMonthTimestamp(minDate);
	      maxDate = getMonthTimestamp(maxDate) || minDate;
	      var _ref = [Math.min(minDate, maxDate), Math.max(minDate, maxDate)];
	      minDate = _ref[0];
	      maxDate = _ref[1];

	      var rows = this.rows;
	      for (var i = 0, k = rows.length; i < k; i++) {
	        var row = rows[i];
	        for (var j = 0, l = row.length; j < l; j++) {

	          var cell = row[j];
	          var index = i * 4 + j;
	          var time = new Date(this.date.getFullYear(), index).getTime();

	          cell.inRange = minDate && time >= minDate && time <= maxDate;
	          cell.start = minDate && time === minDate;
	          cell.end = maxDate && time === maxDate;
	        }
	      }
	    },
	    handleMouseMove: function handleMouseMove(event) {
	      if (!this.rangeState.selecting) return;

	      var target = event.target;
	      if (target.tagName === 'A') {
	        target = target.parentNode.parentNode;
	      }
	      if (target.tagName === 'DIV') {
	        target = target.parentNode;
	      }
	      if (target.tagName !== 'TD') return;

	      var row = target.parentNode.rowIndex;
	      var column = target.cellIndex;
	      // can not select disabled date
	      if (this.rows[row][column].disabled) return;

	      // only update rangeState when mouse moves to a new cell
	      // this avoids frequent Date object creation and improves performance
	      if (row !== this.lastRow || column !== this.lastColumn) {
	        this.lastRow = row;
	        this.lastColumn = column;
	        this.$emit('changerange', {
	          minDate: this.minDate,
	          maxDate: this.maxDate,
	          rangeState: {
	            selecting: true,
	            endDate: this.getMonthOfCell(row * 4 + column)
	          }
	        });
	      }
	    },
	    handleMonthTableClick: function handleMonthTableClick(event) {
	      var target = event.target;
	      if (target.tagName === 'A') {
	        target = target.parentNode.parentNode;
	      }
	      if (target.tagName === 'DIV') {
	        target = target.parentNode;
	      }
	      if (target.tagName !== 'TD') return;
	      if (Object(dom_["hasClass"])(target, 'disabled')) return;
	      var column = target.cellIndex;
	      var row = target.parentNode.rowIndex;
	      var month = row * 4 + column;
	      var newDate = this.getMonthOfCell(month);
	      if (this.selectionMode === 'range') {
	        if (!this.rangeState.selecting) {
	          this.$emit('pick', { minDate: newDate, maxDate: null });
	          this.rangeState.selecting = true;
	        } else {
	          if (newDate >= this.minDate) {
	            this.$emit('pick', { minDate: this.minDate, maxDate: newDate });
	          } else {
	            this.$emit('pick', { minDate: newDate, maxDate: this.minDate });
	          }
	          this.rangeState.selecting = false;
	        }
	      } else if (this.selectionMode === 'months') {
	        var value = this.value || [];
	        var year = this.date.getFullYear();
	        var newValue = Object(util_["arrayFindIndex"])(value, function (date) {
	          return date.getFullYear() === year && date.getMonth() === month;
	        }) >= 0 ? month_tablevue_type_script_lang_js_removeFromArray(value, function (date) {
	          return date.getTime() === newDate.getTime();
	        }) : [].concat(value, [newDate]);
	        this.$emit('pick', newValue);
	      } else {
	        this.$emit('pick', month);
	      }
	    }
	  },

	  computed: {
	    rows: function rows() {
	      var _this2 = this;

	      // TODO: refactory rows / getCellClasses
	      var rows = this.tableRows;
	      var disabledDate = this.disabledDate;
	      var selectedDate = [];
	      var now = getMonthTimestamp(new Date());

	      for (var i = 0; i < 3; i++) {
	        var row = rows[i];

	        var _loop = function _loop(j) {
	          var cell = row[j];
	          if (!cell) {
	            cell = { row: i, column: j, type: 'normal', inRange: false, start: false, end: false };
	          }

	          cell.type = 'normal';

	          var index = i * 4 + j;
	          var time = new Date(_this2.date.getFullYear(), index).getTime();
	          cell.inRange = time >= getMonthTimestamp(_this2.minDate) && time <= getMonthTimestamp(_this2.maxDate);
	          cell.start = _this2.minDate && time === getMonthTimestamp(_this2.minDate);
	          cell.end = _this2.maxDate && time === getMonthTimestamp(_this2.maxDate);
	          var isToday = time === now;

	          if (isToday) {
	            cell.type = 'today';
	          }
	          cell.text = index;
	          var cellDate = new Date(time);
	          cell.disabled = typeof disabledDate === 'function' && disabledDate(cellDate);
	          cell.selected = Object(util_["arrayFind"])(selectedDate, function (date) {
	            return date.getTime() === cellDate.getTime();
	          });

	          _this2.$set(row, j, cell);
	        };

	        for (var j = 0; j < 4; j++) {
	          _loop(j);
	        }
	      }
	      return rows;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/month-table.vue?vue&type=script&lang=js&
	 /* harmony default export */ var basic_month_tablevue_type_script_lang_js_ = (month_tablevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/month-table.vue





	/* normalize component */

	var month_table_component = normalizeComponent(
	  basic_month_tablevue_type_script_lang_js_,
	  month_tablevue_type_template_id_654d4f42_render,
	  month_tablevue_type_template_id_654d4f42_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	month_table_component.options.__file = "packages/date-picker/src/basic/month-table.vue";
	/* harmony default export */ var month_table = (month_table_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/date-table.vue?vue&type=template&id=5d1f3341&
	var date_tablevue_type_template_id_5d1f3341_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "table",
	    {
	      staticClass: "el-date-table",
	      class: { "is-week-mode": _vm.selectionMode === "week" },
	      attrs: { cellspacing: "0", cellpadding: "0" },
	      on: { click: _vm.handleClick, mousemove: _vm.handleMouseMove }
	    },
	    [
	      _c(
	        "tbody",
	        [
	          _c(
	            "tr",
	            [
	              _vm.showWeekNumber
	                ? _c("th", [_vm._v(_vm._s(_vm.t("el.datepicker.week")))])
	                : _vm._e(),
	              _vm._l(_vm.WEEKS, function(week, key) {
	                return _c("th", { key: key }, [
	                  _vm._v(_vm._s(_vm.t("el.datepicker.weeks." + week)))
	                ])
	              })
	            ],
	            2
	          ),
	          _vm._l(_vm.rows, function(row, key) {
	            return _c(
	              "tr",
	              {
	                key: key,
	                staticClass: "el-date-table__row",
	                class: { current: _vm.isWeekActive(row[1]) }
	              },
	              _vm._l(row, function(cell, key) {
	                return _c("td", { key: key, class: _vm.getCellClasses(cell) }, [
	                  _c("div", [
	                    _c("span", [
	                      _vm._v("\n          " + _vm._s(cell.text) + "\n        ")
	                    ])
	                  ])
	                ])
	              }),
	              0
	            )
	          })
	        ],
	        2
	      )
	    ]
	  )
	};
	var date_tablevue_type_template_id_5d1f3341_staticRenderFns = [];
	date_tablevue_type_template_id_5d1f3341_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/basic/date-table.vue?vue&type=template&id=5d1f3341&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/date-table.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	var _WEEKS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
	var date_tablevue_type_script_lang_js_getDateTimestamp = function getDateTimestamp(time) {
	  if (typeof time === 'number' || typeof time === 'string') {
	    return Object(date_util_["clearTime"])(new Date(time)).getTime();
	  } else if (time instanceof Date) {
	    return Object(date_util_["clearTime"])(time).getTime();
	  } else {
	    return NaN;
	  }
	};

	// remove the first element that satisfies `pred` from arr
	// return a new array if modification occurs
	// return the original array otherwise
	var date_tablevue_type_script_lang_js_removeFromArray = function removeFromArray(arr, pred) {
	  var idx = typeof pred === 'function' ? Object(util_["arrayFindIndex"])(arr, pred) : arr.indexOf(pred);
	  return idx >= 0 ? [].concat(arr.slice(0, idx), arr.slice(idx + 1)) : arr;
	};

	/* harmony default export */ var date_tablevue_type_script_lang_js_ = ({
	  mixins: [locale_default.a],

	  props: {
	    firstDayOfWeek: {
	      default: 7,
	      type: Number,
	      validator: function validator(val) {
	        return val >= 1 && val <= 7;
	      }
	    },

	    value: {},

	    defaultValue: {
	      validator: function validator(val) {
	        // either: null, valid Date object, Array of valid Date objects
	        return val === null || Object(date_util_["isDate"])(val) || Array.isArray(val) && val.every(date_util_["isDate"]);
	      }
	    },

	    date: {},

	    selectionMode: {
	      default: 'day'
	    },

	    showWeekNumber: {
	      type: Boolean,
	      default: false
	    },

	    disabledDate: {},

	    cellClassName: {},

	    minDate: {},

	    maxDate: {},

	    rangeState: {
	      default: function _default() {
	        return {
	          endDate: null,
	          selecting: false
	        };
	      }
	    }
	  },

	  computed: {
	    offsetDay: function offsetDay() {
	      var week = this.firstDayOfWeek;
	      // 周日为界限，左右偏移的天数，3217654 例如周一就是 -1，目的是调整前两行日期的位置
	      return week > 3 ? 7 - week : -week;
	    },
	    WEEKS: function WEEKS() {
	      var week = this.firstDayOfWeek;
	      return _WEEKS.concat(_WEEKS).slice(week, week + 7);
	    },
	    year: function year() {
	      return this.date.getFullYear();
	    },
	    month: function month() {
	      return this.date.getMonth();
	    },
	    startDate: function startDate() {
	      return Object(date_util_["getStartDateOfMonth"])(this.year, this.month);
	    },
	    rows: function rows() {
	      var _this = this;

	      // TODO: refactory rows / getCellClasses
	      var date = new Date(this.year, this.month, 1);
	      var day = Object(date_util_["getFirstDayOfMonth"])(date); // day of first day
	      var dateCountOfMonth = Object(date_util_["getDayCountOfMonth"])(date.getFullYear(), date.getMonth());
	      var dateCountOfLastMonth = Object(date_util_["getDayCountOfMonth"])(date.getFullYear(), date.getMonth() === 0 ? 11 : date.getMonth() - 1);

	      day = day === 0 ? 7 : day;

	      var offset = this.offsetDay;
	      var rows = this.tableRows;
	      var count = 1;

	      var startDate = this.startDate;
	      var disabledDate = this.disabledDate;
	      var cellClassName = this.cellClassName;
	      var selectedDate = this.selectionMode === 'dates' ? Object(util_["coerceTruthyValueToArray"])(this.value) : [];
	      var now = date_tablevue_type_script_lang_js_getDateTimestamp(new Date());

	      for (var i = 0; i < 6; i++) {
	        var row = rows[i];

	        if (this.showWeekNumber) {
	          if (!row[0]) {
	            row[0] = { type: 'week', text: Object(date_util_["getWeekNumber"])(Object(date_util_["nextDate"])(startDate, i * 7 + 1)) };
	          }
	        }

	        var _loop = function _loop(j) {
	          var cell = row[_this.showWeekNumber ? j + 1 : j];
	          if (!cell) {
	            cell = { row: i, column: j, type: 'normal', inRange: false, start: false, end: false };
	          }

	          cell.type = 'normal';

	          var index = i * 7 + j;
	          var time = Object(date_util_["nextDate"])(startDate, index - offset).getTime();
	          cell.inRange = time >= date_tablevue_type_script_lang_js_getDateTimestamp(_this.minDate) && time <= date_tablevue_type_script_lang_js_getDateTimestamp(_this.maxDate);
	          cell.start = _this.minDate && time === date_tablevue_type_script_lang_js_getDateTimestamp(_this.minDate);
	          cell.end = _this.maxDate && time === date_tablevue_type_script_lang_js_getDateTimestamp(_this.maxDate);
	          var isToday = time === now;

	          if (isToday) {
	            cell.type = 'today';
	          }

	          if (i >= 0 && i <= 1) {
	            var numberOfDaysFromPreviousMonth = day + offset < 0 ? 7 + day + offset : day + offset;

	            if (j + i * 7 >= numberOfDaysFromPreviousMonth) {
	              cell.text = count++;
	            } else {
	              cell.text = dateCountOfLastMonth - (numberOfDaysFromPreviousMonth - j % 7) + 1 + i * 7;
	              cell.type = 'prev-month';
	            }
	          } else {
	            if (count <= dateCountOfMonth) {
	              cell.text = count++;
	            } else {
	              cell.text = count++ - dateCountOfMonth;
	              cell.type = 'next-month';
	            }
	          }

	          var cellDate = new Date(time);
	          cell.disabled = typeof disabledDate === 'function' && disabledDate(cellDate);
	          cell.selected = Object(util_["arrayFind"])(selectedDate, function (date) {
	            return date.getTime() === cellDate.getTime();
	          });
	          cell.customClass = typeof cellClassName === 'function' && cellClassName(cellDate);
	          _this.$set(row, _this.showWeekNumber ? j + 1 : j, cell);
	        };

	        for (var j = 0; j < 7; j++) {
	          _loop(j);
	        }

	        if (this.selectionMode === 'week') {
	          var start = this.showWeekNumber ? 1 : 0;
	          var end = this.showWeekNumber ? 7 : 6;
	          var isWeekActive = this.isWeekActive(row[start + 1]);

	          row[start].inRange = isWeekActive;
	          row[start].start = isWeekActive;
	          row[end].inRange = isWeekActive;
	          row[end].end = isWeekActive;
	        }
	      }

	      return rows;
	    }
	  },

	  watch: {
	    'rangeState.endDate': function rangeStateEndDate(newVal) {
	      this.markRange(this.minDate, newVal);
	    },
	    minDate: function minDate(newVal, oldVal) {
	      if (date_tablevue_type_script_lang_js_getDateTimestamp(newVal) !== date_tablevue_type_script_lang_js_getDateTimestamp(oldVal)) {
	        this.markRange(this.minDate, this.maxDate);
	      }
	    },
	    maxDate: function maxDate(newVal, oldVal) {
	      if (date_tablevue_type_script_lang_js_getDateTimestamp(newVal) !== date_tablevue_type_script_lang_js_getDateTimestamp(oldVal)) {
	        this.markRange(this.minDate, this.maxDate);
	      }
	    }
	  },

	  data: function data() {
	    return {
	      tableRows: [[], [], [], [], [], []],
	      lastRow: null,
	      lastColumn: null
	    };
	  },


	  methods: {
	    cellMatchesDate: function cellMatchesDate(cell, date) {
	      var value = new Date(date);
	      return this.year === value.getFullYear() && this.month === value.getMonth() && Number(cell.text) === value.getDate();
	    },
	    getCellClasses: function getCellClasses(cell) {
	      var _this2 = this;

	      var selectionMode = this.selectionMode;
	      var defaultValue = this.defaultValue ? Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue] : [];

	      var classes = [];
	      if ((cell.type === 'normal' || cell.type === 'today') && !cell.disabled) {
	        classes.push('available');
	        if (cell.type === 'today') {
	          classes.push('today');
	        }
	      } else {
	        classes.push(cell.type);
	      }

	      if (cell.type === 'normal' && defaultValue.some(function (date) {
	        return _this2.cellMatchesDate(cell, date);
	      })) {
	        classes.push('default');
	      }

	      if (selectionMode === 'day' && (cell.type === 'normal' || cell.type === 'today') && this.cellMatchesDate(cell, this.value)) {
	        classes.push('current');
	      }

	      if (cell.inRange && (cell.type === 'normal' || cell.type === 'today' || this.selectionMode === 'week')) {
	        classes.push('in-range');

	        if (cell.start) {
	          classes.push('start-date');
	        }

	        if (cell.end) {
	          classes.push('end-date');
	        }
	      }

	      if (cell.disabled) {
	        classes.push('disabled');
	      }

	      if (cell.selected) {
	        classes.push('selected');
	      }

	      if (cell.customClass) {
	        classes.push(cell.customClass);
	      }

	      return classes.join(' ');
	    },
	    getDateOfCell: function getDateOfCell(row, column) {
	      var offsetFromStart = row * 7 + (column - (this.showWeekNumber ? 1 : 0)) - this.offsetDay;
	      return Object(date_util_["nextDate"])(this.startDate, offsetFromStart);
	    },
	    isWeekActive: function isWeekActive(cell) {
	      if (this.selectionMode !== 'week') return false;
	      var newDate = new Date(this.year, this.month, 1);
	      var year = newDate.getFullYear();
	      var month = newDate.getMonth();

	      if (cell.type === 'prev-month') {
	        newDate.setMonth(month === 0 ? 11 : month - 1);
	        newDate.setFullYear(month === 0 ? year - 1 : year);
	      }

	      if (cell.type === 'next-month') {
	        newDate.setMonth(month === 11 ? 0 : month + 1);
	        newDate.setFullYear(month === 11 ? year + 1 : year);
	      }

	      newDate.setDate(parseInt(cell.text, 10));

	      if (Object(date_util_["isDate"])(this.value)) {
	        var dayOffset = (this.value.getDay() - this.firstDayOfWeek + 7) % 7 - 1;
	        var weekDate = Object(date_util_["prevDate"])(this.value, dayOffset);
	        return weekDate.getTime() === newDate.getTime();
	      }
	      return false;
	    },
	    markRange: function markRange(minDate, maxDate) {
	      minDate = date_tablevue_type_script_lang_js_getDateTimestamp(minDate);
	      maxDate = date_tablevue_type_script_lang_js_getDateTimestamp(maxDate) || minDate;
	      var _ref = [Math.min(minDate, maxDate), Math.max(minDate, maxDate)];
	      minDate = _ref[0];
	      maxDate = _ref[1];


	      var startDate = this.startDate;
	      var rows = this.rows;
	      for (var i = 0, k = rows.length; i < k; i++) {
	        var row = rows[i];
	        for (var j = 0, l = row.length; j < l; j++) {
	          if (this.showWeekNumber && j === 0) continue;

	          var _cell = row[j];
	          var index = i * 7 + j + (this.showWeekNumber ? -1 : 0);
	          var time = Object(date_util_["nextDate"])(startDate, index - this.offsetDay).getTime();

	          _cell.inRange = minDate && time >= minDate && time <= maxDate;
	          _cell.start = minDate && time === minDate;
	          _cell.end = maxDate && time === maxDate;
	        }
	      }
	    },
	    handleMouseMove: function handleMouseMove(event) {
	      if (!this.rangeState.selecting) return;

	      var target = event.target;
	      if (target.tagName === 'SPAN') {
	        target = target.parentNode.parentNode;
	      }
	      if (target.tagName === 'DIV') {
	        target = target.parentNode;
	      }
	      if (target.tagName !== 'TD') return;

	      var row = target.parentNode.rowIndex - 1;
	      var column = target.cellIndex;

	      // can not select disabled date
	      if (this.rows[row][column].disabled) return;

	      // only update rangeState when mouse moves to a new cell
	      // this avoids frequent Date object creation and improves performance
	      if (row !== this.lastRow || column !== this.lastColumn) {
	        this.lastRow = row;
	        this.lastColumn = column;
	        this.$emit('changerange', {
	          minDate: this.minDate,
	          maxDate: this.maxDate,
	          rangeState: {
	            selecting: true,
	            endDate: this.getDateOfCell(row, column)
	          }
	        });
	      }
	    },
	    handleClick: function handleClick(event) {
	      var target = event.target;
	      if (target.tagName === 'SPAN') {
	        target = target.parentNode.parentNode;
	      }
	      if (target.tagName === 'DIV') {
	        target = target.parentNode;
	      }

	      if (target.tagName !== 'TD') return;

	      var row = target.parentNode.rowIndex - 1;
	      var column = this.selectionMode === 'week' ? 1 : target.cellIndex;
	      var cell = this.rows[row][column];

	      if (cell.disabled || cell.type === 'week') return;

	      var newDate = this.getDateOfCell(row, column);

	      if (this.selectionMode === 'range') {
	        if (!this.rangeState.selecting) {
	          this.$emit('pick', { minDate: newDate, maxDate: null });
	          this.rangeState.selecting = true;
	        } else {
	          if (newDate >= this.minDate) {
	            this.$emit('pick', { minDate: this.minDate, maxDate: newDate });
	          } else {
	            this.$emit('pick', { minDate: newDate, maxDate: this.minDate });
	          }
	          this.rangeState.selecting = false;
	        }
	      } else if (this.selectionMode === 'day') {
	        this.$emit('pick', newDate);
	      } else if (this.selectionMode === 'week') {
	        var weekNumber = Object(date_util_["getWeekNumber"])(newDate);
	        var value = newDate.getFullYear() + 'w' + weekNumber;
	        this.$emit('pick', {
	          year: newDate.getFullYear(),
	          week: weekNumber,
	          value: value,
	          date: newDate
	        });
	      } else if (this.selectionMode === 'dates') {
	        var _value = this.value || [];
	        var newValue = cell.selected ? date_tablevue_type_script_lang_js_removeFromArray(_value, function (date) {
	          return date.getTime() === newDate.getTime();
	        }) : [].concat(_value, [newDate]);
	        this.$emit('pick', newValue);
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/date-table.vue?vue&type=script&lang=js&
	 /* harmony default export */ var basic_date_tablevue_type_script_lang_js_ = (date_tablevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/basic/date-table.vue





	/* normalize component */

	var date_table_component = normalizeComponent(
	  basic_date_tablevue_type_script_lang_js_,
	  date_tablevue_type_template_id_5d1f3341_render,
	  date_tablevue_type_template_id_5d1f3341_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	date_table_component.options.__file = "packages/date-picker/src/basic/date-table.vue";
	/* harmony default export */ var date_table = (date_table_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//











	/* harmony default export */ var datevue_type_script_lang_js_ = ({
	  mixins: [locale_default.a],

	  directives: { Clickoutside: clickoutside_default.a },

	  watch: {
	    showTime: function showTime(val) {
	      var _this = this;

	      /* istanbul ignore if */
	      if (!val) return;
	      this.$nextTick(function (_) {
	        var inputElm = _this.$refs.input.$el;
	        if (inputElm) {
	          _this.pickerWidth = inputElm.getBoundingClientRect().width + 10;
	        }
	      });
	    },
	    value: function value(val) {
	      if (this.selectionMode === 'dates' && this.value) return;
	      if (this.selectionMode === 'months' && this.value) return;
	      if (this.selectionMode === 'years' && this.value) return;
	      if (Object(date_util_["isDate"])(val)) {
	        this.date = new Date(val);
	      } else {
	        this.date = this.getDefaultValue();
	      }
	    },
	    defaultValue: function defaultValue(val) {
	      if (!Object(date_util_["isDate"])(this.value)) {
	        this.date = val ? new Date(val) : new Date();
	      }
	    },
	    timePickerVisible: function timePickerVisible(val) {
	      var _this2 = this;

	      if (val) this.$nextTick(function () {
	        return _this2.$refs.timepicker.adjustSpinners();
	      });
	    },
	    selectionMode: function selectionMode(newVal) {
	      if (newVal === 'month') {
	        /* istanbul ignore next */
	        if (this.currentView !== 'year' || this.currentView !== 'month') {
	          this.currentView = 'month';
	        }
	      } else if (newVal === 'dates') {
	        this.currentView = 'date';
	      } else if (newVal === 'years') {
	        this.currentView = 'year';
	      } else if (newVal === 'months') {
	        this.currentView = 'month';
	      }
	    }
	  },

	  methods: {
	    proxyTimePickerDataProperties: function proxyTimePickerDataProperties() {
	      var _this3 = this;

	      var format = function format(timeFormat) {
	        _this3.$refs.timepicker.format = timeFormat;
	      };
	      var value = function value(_value) {
	        _this3.$refs.timepicker.value = _value;
	      };
	      var date = function date(_date) {
	        _this3.$refs.timepicker.date = _date;
	      };
	      var selectableRange = function selectableRange(_selectableRange) {
	        _this3.$refs.timepicker.selectableRange = _selectableRange;
	      };

	      this.$watch('value', value);
	      this.$watch('date', date);
	      this.$watch('selectableRange', selectableRange);

	      format(this.timeFormat);
	      value(this.value);
	      date(this.date);
	      selectableRange(this.selectableRange);
	    },
	    handleClear: function handleClear() {
	      this.date = this.getDefaultValue();
	      this.$emit('pick', null);
	    },
	    emit: function emit(value) {
	      var _this4 = this;

	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      if (!value) {
	        this.$emit.apply(this, ['pick', value].concat(args));
	      } else if (Array.isArray(value)) {
	        var dates = value.map(function (date) {
	          return _this4.showTime ? Object(date_util_["clearMilliseconds"])(date) : Object(date_util_["clearTime"])(date);
	        });
	        this.$emit.apply(this, ['pick', dates].concat(args));
	      } else {
	        this.$emit.apply(this, ['pick', this.showTime ? Object(date_util_["clearMilliseconds"])(value) : Object(date_util_["clearTime"])(value)].concat(args));
	      }
	      this.userInputDate = null;
	      this.userInputTime = null;
	    },


	    // resetDate() {
	    //   this.date = new Date(this.date);
	    // },

	    showMonthPicker: function showMonthPicker() {
	      this.currentView = 'month';
	    },
	    showYearPicker: function showYearPicker() {
	      this.currentView = 'year';
	    },


	    // XXX: 没用到
	    // handleLabelClick() {
	    //   if (this.currentView === 'date') {
	    //     this.showMonthPicker();
	    //   } else if (this.currentView === 'month') {
	    //     this.showYearPicker();
	    //   }
	    // },

	    prevMonth: function prevMonth() {
	      this.date = Object(date_util_["prevMonth"])(this.date);
	    },
	    nextMonth: function nextMonth() {
	      this.date = Object(date_util_["nextMonth"])(this.date);
	    },
	    prevYear: function prevYear() {
	      if (this.currentView === 'year') {
	        this.date = Object(date_util_["prevYear"])(this.date, 10);
	      } else {
	        this.date = Object(date_util_["prevYear"])(this.date);
	      }
	    },
	    nextYear: function nextYear() {
	      if (this.currentView === 'year') {
	        this.date = Object(date_util_["nextYear"])(this.date, 10);
	      } else {
	        this.date = Object(date_util_["nextYear"])(this.date);
	      }
	    },
	    handleShortcutClick: function handleShortcutClick(shortcut) {
	      if (shortcut.onClick) {
	        shortcut.onClick(this);
	      }
	    },
	    handleTimePick: function handleTimePick(value, visible, first) {
	      if (Object(date_util_["isDate"])(value)) {
	        var newDate = this.value ? Object(date_util_["modifyTime"])(this.value, value.getHours(), value.getMinutes(), value.getSeconds()) : Object(date_util_["modifyWithTimeString"])(this.getDefaultValue(), this.defaultTime);
	        this.date = newDate;
	        this.emit(this.date, true);
	      } else {
	        this.emit(value, true);
	      }
	      if (!first) {
	        this.timePickerVisible = visible;
	      }
	    },
	    handleTimePickClose: function handleTimePickClose() {
	      this.timePickerVisible = false;
	    },
	    handleMonthPick: function handleMonthPick(month) {
	      if (this.selectionMode === 'month') {
	        this.date = Object(date_util_["modifyDate"])(this.date, this.year, month, 1);
	        this.emit(this.date);
	      } else if (this.selectionMode === 'months') {
	        this.emit(month, true);
	      } else {
	        this.date = Object(date_util_["changeYearMonthAndClampDate"])(this.date, this.year, month);
	        // TODO: should emit intermediate value ??
	        // this.emit(this.date);
	        this.currentView = 'date';
	      }
	    },
	    handleDatePick: function handleDatePick(value) {
	      if (this.selectionMode === 'day') {
	        var newDate = this.value ? Object(date_util_["modifyDate"])(this.value, value.getFullYear(), value.getMonth(), value.getDate()) : Object(date_util_["modifyWithTimeString"])(value, this.defaultTime);
	        // change default time while out of selectableRange
	        if (!this.checkDateWithinRange(newDate)) {
	          newDate = Object(date_util_["modifyDate"])(this.selectableRange[0][0], value.getFullYear(), value.getMonth(), value.getDate());
	        }
	        this.date = newDate;
	        this.emit(this.date, this.showTime);
	      } else if (this.selectionMode === 'week') {
	        this.emit(value.date);
	      } else if (this.selectionMode === 'dates') {
	        this.emit(value, true); // set false to keep panel open
	      }
	    },
	    handleYearPick: function handleYearPick(year) {
	      if (this.selectionMode === 'year') {
	        this.date = Object(date_util_["modifyDate"])(this.date, year, 0, 1);
	        this.emit(this.date);
	      } else if (this.selectionMode === 'years') {
	        this.emit(year, true);
	      } else {
	        this.date = Object(date_util_["changeYearMonthAndClampDate"])(this.date, year, this.month);
	        // TODO: should emit intermediate value ??
	        // this.emit(this.date, true);
	        this.currentView = 'month';
	      }
	    },
	    changeToNow: function changeToNow() {
	      // NOTE: not a permanent solution
	      //       consider disable "now" button in the future
	      if ((!this.disabledDate || !this.disabledDate(new Date())) && this.checkDateWithinRange(new Date())) {
	        this.date = new Date();
	        this.emit(this.date);
	      }
	    },
	    confirm: function confirm() {
	      if (this.selectionMode === 'dates' || this.selectionMode === 'months' || this.selectionMode === 'years') {
	        this.emit(this.value);
	      } else {
	        // value were emitted in handle{Date,Time}Pick, nothing to update here
	        // deal with the scenario where: user opens the picker, then confirm without doing anything
	        var value = this.value ? this.value : Object(date_util_["modifyWithTimeString"])(this.getDefaultValue(), this.defaultTime);
	        this.date = new Date(value); // refresh date
	        this.emit(value);
	      }
	    },
	    resetView: function resetView() {
	      if (this.selectionMode === 'month' || this.selectionMode === 'months') {
	        this.currentView = 'month';
	      } else if (this.selectionMode === 'year' || this.selectionMode === 'years') {
	        this.currentView = 'year';
	      } else {
	        this.currentView = 'date';
	      }
	    },
	    handleEnter: function handleEnter() {
	      document.body.addEventListener('keydown', this.handleKeydown);
	    },
	    handleLeave: function handleLeave() {
	      this.$emit('dodestroy');
	      document.body.removeEventListener('keydown', this.handleKeydown);
	    },
	    handleKeydown: function handleKeydown(event) {
	      var keyCode = event.keyCode;
	      var list = [38, 40, 37, 39];
	      if (this.visible && !this.timePickerVisible) {
	        if (list.indexOf(keyCode) !== -1) {
	          this.handleKeyControl(keyCode);
	          event.stopPropagation();
	          event.preventDefault();
	        }
	        if (keyCode === 13 && this.userInputDate === null && this.userInputTime === null) {
	          // Enter
	          this.emit(this.date, false);
	        }
	      }
	    },
	    handleKeyControl: function handleKeyControl(keyCode) {
	      var mapping = {
	        'year': {
	          38: -4, 40: 4, 37: -1, 39: 1, offset: function offset(date, step) {
	            return date.setFullYear(date.getFullYear() + step);
	          }
	        },
	        'month': {
	          38: -4, 40: 4, 37: -1, 39: 1, offset: function offset(date, step) {
	            return date.setMonth(date.getMonth() + step);
	          }
	        },
	        'week': {
	          38: -1, 40: 1, 37: -1, 39: 1, offset: function offset(date, step) {
	            return date.setDate(date.getDate() + step * 7);
	          }
	        },
	        'day': {
	          38: -7, 40: 7, 37: -1, 39: 1, offset: function offset(date, step) {
	            return date.setDate(date.getDate() + step);
	          }
	        }
	      };
	      var mode = this.selectionMode;
	      var year = 3.1536e10;
	      var now = this.date.getTime();
	      var newDate = new Date(this.date.getTime());
	      while (Math.abs(now - newDate.getTime()) <= year) {
	        var map = mapping[mode];
	        map.offset(newDate, map[keyCode]);
	        if (typeof this.disabledDate === 'function' && this.disabledDate(newDate)) {
	          continue;
	        }
	        this.date = newDate;
	        this.$emit('pick', newDate, true);
	        break;
	      }
	    },
	    handleVisibleTimeChange: function handleVisibleTimeChange(value) {
	      var time = Object(date_util_["parseDate"])(value, this.timeFormat);
	      if (time && this.checkDateWithinRange(time)) {
	        this.date = Object(date_util_["modifyDate"])(time, this.year, this.month, this.monthDate);
	        this.userInputTime = null;
	        this.$refs.timepicker.value = this.date;
	        this.timePickerVisible = false;
	        this.emit(this.date, true);
	      }
	    },
	    handleVisibleDateChange: function handleVisibleDateChange(value) {
	      var date = Object(date_util_["parseDate"])(value, this.dateFormat);
	      if (date) {
	        if (typeof this.disabledDate === 'function' && this.disabledDate(date)) {
	          return;
	        }
	        this.date = Object(date_util_["modifyTime"])(date, this.date.getHours(), this.date.getMinutes(), this.date.getSeconds());
	        this.userInputDate = null;
	        this.resetView();
	        this.emit(this.date, true);
	      }
	    },
	    isValidValue: function isValidValue(value) {
	      return value && !isNaN(value) && (typeof this.disabledDate === 'function' ? !this.disabledDate(value) : true) && this.checkDateWithinRange(value);
	    },
	    getDefaultValue: function getDefaultValue() {
	      // if default-value is set, return it
	      // otherwise, return now (the moment this method gets called)
	      return this.defaultValue ? new Date(this.defaultValue) : new Date();
	    },
	    checkDateWithinRange: function checkDateWithinRange(date) {
	      return this.selectableRange.length > 0 ? Object(date_util_["timeWithinRange"])(date, this.selectableRange, this.format || 'HH:mm:ss') : true;
	    }
	  },

	  components: {
	    TimePicker: panel_time, YearTable: year_table, MonthTable: month_table, DateTable: date_table, ElInput: input_default.a, ElButton: button_default.a
	  },

	  data: function data() {
	    return {
	      popperClass: '',
	      date: new Date(),
	      value: '',
	      defaultValue: null, // use getDefaultValue() for time computation
	      defaultTime: null,
	      showTime: false,
	      selectionMode: 'day',
	      shortcuts: '',
	      visible: false,
	      currentView: 'date',
	      disabledDate: '',
	      cellClassName: '',
	      selectableRange: [],
	      firstDayOfWeek: 7,
	      showWeekNumber: false,
	      timePickerVisible: false,
	      format: '',
	      arrowControl: false,
	      userInputDate: null,
	      userInputTime: null
	    };
	  },


	  computed: {
	    year: function year() {
	      return this.date.getFullYear();
	    },
	    month: function month() {
	      return this.date.getMonth();
	    },
	    week: function week() {
	      return Object(date_util_["getWeekNumber"])(this.date);
	    },
	    monthDate: function monthDate() {
	      return this.date.getDate();
	    },
	    footerVisible: function footerVisible() {
	      return this.showTime || this.selectionMode === 'dates' || this.selectionMode === 'months' || this.selectionMode === 'years';
	    },
	    visibleTime: function visibleTime() {
	      if (this.userInputTime !== null) {
	        return this.userInputTime;
	      } else {
	        return Object(date_util_["formatDate"])(this.value || this.defaultValue, this.timeFormat);
	      }
	    },
	    visibleDate: function visibleDate() {
	      if (this.userInputDate !== null) {
	        return this.userInputDate;
	      } else {
	        return Object(date_util_["formatDate"])(this.value || this.defaultValue, this.dateFormat);
	      }
	    },
	    yearLabel: function yearLabel() {
	      var yearTranslation = this.t('el.datepicker.year');
	      if (this.currentView === 'year') {
	        var startYear = Math.floor(this.year / 10) * 10;
	        if (yearTranslation) {
	          return startYear + ' ' + yearTranslation + ' - ' + (startYear + 9) + ' ' + yearTranslation;
	        }
	        return startYear + ' - ' + (startYear + 9);
	      }
	      return this.year + ' ' + yearTranslation;
	    },
	    timeFormat: function timeFormat() {
	      if (this.format) {
	        return Object(date_util_["extractTimeFormat"])(this.format);
	      } else {
	        return 'HH:mm:ss';
	      }
	    },
	    dateFormat: function dateFormat() {
	      if (this.format) {
	        return Object(date_util_["extractDateFormat"])(this.format);
	      } else {
	        return 'yyyy-MM-dd';
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/date.vue?vue&type=script&lang=js&
	 /* harmony default export */ var panel_datevue_type_script_lang_js_ = (datevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/date.vue





	/* normalize component */

	var date_component = normalizeComponent(
	  panel_datevue_type_script_lang_js_,
	  datevue_type_template_id_2440d4ea_render,
	  datevue_type_template_id_2440d4ea_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	date_component.options.__file = "packages/date-picker/src/panel/date.vue";
	/* harmony default export */ var panel_date = (date_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date-range.vue?vue&type=template&id=2652849a&
	var date_rangevue_type_template_id_2652849a_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-zoom-in-top" },
	      on: {
	        "after-leave": function($event) {
	          _vm.$emit("dodestroy");
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-picker-panel el-date-range-picker el-popper",
	          class: [
	            {
	              "has-sidebar": _vm.$slots.sidebar || _vm.shortcuts,
	              "has-time": _vm.showTime
	            },
	            _vm.popperClass
	          ]
	        },
	        [
	          _c(
	            "div",
	            { staticClass: "el-picker-panel__body-wrapper" },
	            [
	              _vm._t("sidebar"),
	              _vm.shortcuts
	                ? _c(
	                    "div",
	                    { staticClass: "el-picker-panel__sidebar" },
	                    _vm._l(_vm.shortcuts, function(shortcut, key) {
	                      return _c(
	                        "button",
	                        {
	                          key: key,
	                          staticClass: "el-picker-panel__shortcut",
	                          attrs: { type: "button" },
	                          on: {
	                            click: function($event) {
	                              _vm.handleShortcutClick(shortcut);
	                            }
	                          }
	                        },
	                        [_vm._v(_vm._s(shortcut.text))]
	                      )
	                    }),
	                    0
	                  )
	                : _vm._e(),
	              _c("div", { staticClass: "el-picker-panel__body" }, [
	                _vm.showTime
	                  ? _c(
	                      "div",
	                      { staticClass: "el-date-range-picker__time-header" },
	                      [
	                        _c(
	                          "span",
	                          { staticClass: "el-date-range-picker__editors-wrap" },
	                          [
	                            _c(
	                              "span",
	                              {
	                                staticClass:
	                                  "el-date-range-picker__time-picker-wrap"
	                              },
	                              [
	                                _c("el-input", {
	                                  ref: "minInput",
	                                  staticClass: "el-date-range-picker__editor",
	                                  attrs: {
	                                    size: "small",
	                                    disabled: _vm.rangeState.selecting,
	                                    placeholder: _vm.t(
	                                      "el.datepicker.startDate"
	                                    ),
	                                    value: _vm.minVisibleDate
	                                  },
	                                  on: {
	                                    input: function(val) {
	                                      return _vm.handleDateInput(val, "min")
	                                    },
	                                    change: function(val) {
	                                      return _vm.handleDateChange(val, "min")
	                                    }
	                                  }
	                                })
	                              ],
	                              1
	                            ),
	                            _c(
	                              "span",
	                              {
	                                directives: [
	                                  {
	                                    name: "clickoutside",
	                                    rawName: "v-clickoutside",
	                                    value: _vm.handleMinTimeClose,
	                                    expression: "handleMinTimeClose"
	                                  }
	                                ],
	                                staticClass:
	                                  "el-date-range-picker__time-picker-wrap"
	                              },
	                              [
	                                _c("el-input", {
	                                  staticClass: "el-date-range-picker__editor",
	                                  attrs: {
	                                    size: "small",
	                                    disabled: _vm.rangeState.selecting,
	                                    placeholder: _vm.t(
	                                      "el.datepicker.startTime"
	                                    ),
	                                    value: _vm.minVisibleTime
	                                  },
	                                  on: {
	                                    focus: function($event) {
	                                      _vm.minTimePickerVisible = true;
	                                    },
	                                    input: function(val) {
	                                      return _vm.handleTimeInput(val, "min")
	                                    },
	                                    change: function(val) {
	                                      return _vm.handleTimeChange(val, "min")
	                                    }
	                                  }
	                                }),
	                                _c("time-picker", {
	                                  ref: "minTimePicker",
	                                  attrs: {
	                                    "time-arrow-control": _vm.arrowControl,
	                                    visible: _vm.minTimePickerVisible
	                                  },
	                                  on: {
	                                    pick: _vm.handleMinTimePick,
	                                    mounted: function($event) {
	                                      _vm.$refs.minTimePicker.format =
	                                        _vm.timeFormat;
	                                    }
	                                  }
	                                })
	                              ],
	                              1
	                            )
	                          ]
	                        ),
	                        _c("span", { staticClass: "el-icon-arrow-right" }),
	                        _c(
	                          "span",
	                          {
	                            staticClass:
	                              "el-date-range-picker__editors-wrap is-right"
	                          },
	                          [
	                            _c(
	                              "span",
	                              {
	                                staticClass:
	                                  "el-date-range-picker__time-picker-wrap"
	                              },
	                              [
	                                _c("el-input", {
	                                  staticClass: "el-date-range-picker__editor",
	                                  attrs: {
	                                    size: "small",
	                                    disabled: _vm.rangeState.selecting,
	                                    placeholder: _vm.t("el.datepicker.endDate"),
	                                    value: _vm.maxVisibleDate,
	                                    readonly: !_vm.minDate
	                                  },
	                                  on: {
	                                    input: function(val) {
	                                      return _vm.handleDateInput(val, "max")
	                                    },
	                                    change: function(val) {
	                                      return _vm.handleDateChange(val, "max")
	                                    }
	                                  }
	                                })
	                              ],
	                              1
	                            ),
	                            _c(
	                              "span",
	                              {
	                                directives: [
	                                  {
	                                    name: "clickoutside",
	                                    rawName: "v-clickoutside",
	                                    value: _vm.handleMaxTimeClose,
	                                    expression: "handleMaxTimeClose"
	                                  }
	                                ],
	                                staticClass:
	                                  "el-date-range-picker__time-picker-wrap"
	                              },
	                              [
	                                _c("el-input", {
	                                  staticClass: "el-date-range-picker__editor",
	                                  attrs: {
	                                    size: "small",
	                                    disabled: _vm.rangeState.selecting,
	                                    placeholder: _vm.t("el.datepicker.endTime"),
	                                    value: _vm.maxVisibleTime,
	                                    readonly: !_vm.minDate
	                                  },
	                                  on: {
	                                    focus: function($event) {
	                                      _vm.minDate &&
	                                        (_vm.maxTimePickerVisible = true);
	                                    },
	                                    input: function(val) {
	                                      return _vm.handleTimeInput(val, "max")
	                                    },
	                                    change: function(val) {
	                                      return _vm.handleTimeChange(val, "max")
	                                    }
	                                  }
	                                }),
	                                _c("time-picker", {
	                                  ref: "maxTimePicker",
	                                  attrs: {
	                                    "time-arrow-control": _vm.arrowControl,
	                                    visible: _vm.maxTimePickerVisible
	                                  },
	                                  on: {
	                                    pick: _vm.handleMaxTimePick,
	                                    mounted: function($event) {
	                                      _vm.$refs.maxTimePicker.format =
	                                        _vm.timeFormat;
	                                    }
	                                  }
	                                })
	                              ],
	                              1
	                            )
	                          ]
	                        )
	                      ]
	                    )
	                  : _vm._e(),
	                _c(
	                  "div",
	                  {
	                    staticClass:
	                      "el-picker-panel__content el-date-range-picker__content is-left"
	                  },
	                  [
	                    _c("div", { staticClass: "el-date-range-picker__header" }, [
	                      _c("button", {
	                        staticClass:
	                          "el-picker-panel__icon-btn el-icon-d-arrow-left",
	                        attrs: { type: "button" },
	                        on: { click: _vm.leftPrevYear }
	                      }),
	                      _c("button", {
	                        staticClass:
	                          "el-picker-panel__icon-btn el-icon-arrow-left",
	                        attrs: { type: "button" },
	                        on: { click: _vm.leftPrevMonth }
	                      }),
	                      _vm.unlinkPanels
	                        ? _c("button", {
	                            staticClass:
	                              "el-picker-panel__icon-btn el-icon-d-arrow-right",
	                            class: { "is-disabled": !_vm.enableYearArrow },
	                            attrs: {
	                              type: "button",
	                              disabled: !_vm.enableYearArrow
	                            },
	                            on: { click: _vm.leftNextYear }
	                          })
	                        : _vm._e(),
	                      _vm.unlinkPanels
	                        ? _c("button", {
	                            staticClass:
	                              "el-picker-panel__icon-btn el-icon-arrow-right",
	                            class: { "is-disabled": !_vm.enableMonthArrow },
	                            attrs: {
	                              type: "button",
	                              disabled: !_vm.enableMonthArrow
	                            },
	                            on: { click: _vm.leftNextMonth }
	                          })
	                        : _vm._e(),
	                      _c("div", [_vm._v(_vm._s(_vm.leftLabel))])
	                    ]),
	                    _c("date-table", {
	                      attrs: {
	                        "selection-mode": "range",
	                        date: _vm.leftDate,
	                        "default-value": _vm.defaultValue,
	                        "min-date": _vm.minDate,
	                        "max-date": _vm.maxDate,
	                        "range-state": _vm.rangeState,
	                        "disabled-date": _vm.disabledDate,
	                        "cell-class-name": _vm.cellClassName,
	                        "first-day-of-week": _vm.firstDayOfWeek
	                      },
	                      on: {
	                        changerange: _vm.handleChangeRange,
	                        pick: _vm.handleRangePick
	                      }
	                    })
	                  ],
	                  1
	                ),
	                _c(
	                  "div",
	                  {
	                    staticClass:
	                      "el-picker-panel__content el-date-range-picker__content is-right"
	                  },
	                  [
	                    _c("div", { staticClass: "el-date-range-picker__header" }, [
	                      _vm.unlinkPanels
	                        ? _c("button", {
	                            staticClass:
	                              "el-picker-panel__icon-btn el-icon-d-arrow-left",
	                            class: { "is-disabled": !_vm.enableYearArrow },
	                            attrs: {
	                              type: "button",
	                              disabled: !_vm.enableYearArrow
	                            },
	                            on: { click: _vm.rightPrevYear }
	                          })
	                        : _vm._e(),
	                      _vm.unlinkPanels
	                        ? _c("button", {
	                            staticClass:
	                              "el-picker-panel__icon-btn el-icon-arrow-left",
	                            class: { "is-disabled": !_vm.enableMonthArrow },
	                            attrs: {
	                              type: "button",
	                              disabled: !_vm.enableMonthArrow
	                            },
	                            on: { click: _vm.rightPrevMonth }
	                          })
	                        : _vm._e(),
	                      _c("button", {
	                        staticClass:
	                          "el-picker-panel__icon-btn el-icon-d-arrow-right",
	                        attrs: { type: "button" },
	                        on: { click: _vm.rightNextYear }
	                      }),
	                      _c("button", {
	                        staticClass:
	                          "el-picker-panel__icon-btn el-icon-arrow-right",
	                        attrs: { type: "button" },
	                        on: { click: _vm.rightNextMonth }
	                      }),
	                      _c("div", [_vm._v(_vm._s(_vm.rightLabel))])
	                    ]),
	                    _c("date-table", {
	                      attrs: {
	                        "selection-mode": "range",
	                        date: _vm.rightDate,
	                        "default-value": _vm.defaultValue,
	                        "min-date": _vm.minDate,
	                        "max-date": _vm.maxDate,
	                        "range-state": _vm.rangeState,
	                        "disabled-date": _vm.disabledDate,
	                        "cell-class-name": _vm.cellClassName,
	                        "first-day-of-week": _vm.firstDayOfWeek
	                      },
	                      on: {
	                        changerange: _vm.handleChangeRange,
	                        pick: _vm.handleRangePick
	                      }
	                    })
	                  ],
	                  1
	                )
	              ])
	            ],
	            2
	          ),
	          _vm.showTime
	            ? _c(
	                "div",
	                { staticClass: "el-picker-panel__footer" },
	                [
	                  _c(
	                    "el-button",
	                    {
	                      staticClass: "el-picker-panel__link-btn",
	                      attrs: { size: "mini", type: "text" },
	                      on: { click: _vm.handleClear }
	                    },
	                    [
	                      _vm._v(
	                        "\n        " +
	                          _vm._s(_vm.t("el.datepicker.clear")) +
	                          "\n      "
	                      )
	                    ]
	                  ),
	                  _c(
	                    "el-button",
	                    {
	                      staticClass: "el-picker-panel__link-btn",
	                      attrs: {
	                        plain: "",
	                        size: "mini",
	                        disabled: _vm.btnDisabled
	                      },
	                      on: {
	                        click: function($event) {
	                          _vm.handleConfirm(false);
	                        }
	                      }
	                    },
	                    [
	                      _vm._v(
	                        "\n        " +
	                          _vm._s(_vm.t("el.datepicker.confirm")) +
	                          "\n      "
	                      )
	                    ]
	                  )
	                ],
	                1
	              )
	            : _vm._e()
	        ]
	      )
	    ]
	  )
	};
	var date_rangevue_type_template_id_2652849a_staticRenderFns = [];
	date_rangevue_type_template_id_2652849a_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/panel/date-range.vue?vue&type=template&id=2652849a&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date-range.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//









	var date_rangevue_type_script_lang_js_calcDefaultValue = function calcDefaultValue(defaultValue) {
	  if (Array.isArray(defaultValue)) {
	    return [new Date(defaultValue[0]), new Date(defaultValue[1])];
	  } else if (defaultValue) {
	    return [new Date(defaultValue), Object(date_util_["nextDate"])(new Date(defaultValue), 1)];
	  } else {
	    return [new Date(), Object(date_util_["nextDate"])(new Date(), 1)];
	  }
	};

	/* harmony default export */ var date_rangevue_type_script_lang_js_ = ({
	  mixins: [locale_default.a],

	  directives: { Clickoutside: clickoutside_default.a },

	  computed: {
	    btnDisabled: function btnDisabled() {
	      return !(this.minDate && this.maxDate && !this.selecting && this.isValidValue([this.minDate, this.maxDate]));
	    },
	    leftLabel: function leftLabel() {
	      return this.leftDate.getFullYear() + ' ' + this.t('el.datepicker.year') + ' ' + this.t('el.datepicker.month' + (this.leftDate.getMonth() + 1));
	    },
	    rightLabel: function rightLabel() {
	      return this.rightDate.getFullYear() + ' ' + this.t('el.datepicker.year') + ' ' + this.t('el.datepicker.month' + (this.rightDate.getMonth() + 1));
	    },
	    leftYear: function leftYear() {
	      return this.leftDate.getFullYear();
	    },
	    leftMonth: function leftMonth() {
	      return this.leftDate.getMonth();
	    },
	    leftMonthDate: function leftMonthDate() {
	      return this.leftDate.getDate();
	    },
	    rightYear: function rightYear() {
	      return this.rightDate.getFullYear();
	    },
	    rightMonth: function rightMonth() {
	      return this.rightDate.getMonth();
	    },
	    rightMonthDate: function rightMonthDate() {
	      return this.rightDate.getDate();
	    },
	    minVisibleDate: function minVisibleDate() {
	      if (this.dateUserInput.min !== null) return this.dateUserInput.min;
	      if (this.minDate) return Object(date_util_["formatDate"])(this.minDate, this.dateFormat);
	      return '';
	    },
	    maxVisibleDate: function maxVisibleDate() {
	      if (this.dateUserInput.max !== null) return this.dateUserInput.max;
	      if (this.maxDate || this.minDate) return Object(date_util_["formatDate"])(this.maxDate || this.minDate, this.dateFormat);
	      return '';
	    },
	    minVisibleTime: function minVisibleTime() {
	      if (this.timeUserInput.min !== null) return this.timeUserInput.min;
	      if (this.minDate) return Object(date_util_["formatDate"])(this.minDate, this.timeFormat);
	      return '';
	    },
	    maxVisibleTime: function maxVisibleTime() {
	      if (this.timeUserInput.max !== null) return this.timeUserInput.max;
	      if (this.maxDate || this.minDate) return Object(date_util_["formatDate"])(this.maxDate || this.minDate, this.timeFormat);
	      return '';
	    },
	    timeFormat: function timeFormat() {
	      if (this.format) {
	        return Object(date_util_["extractTimeFormat"])(this.format);
	      } else {
	        return 'HH:mm:ss';
	      }
	    },
	    dateFormat: function dateFormat() {
	      if (this.format) {
	        return Object(date_util_["extractDateFormat"])(this.format);
	      } else {
	        return 'yyyy-MM-dd';
	      }
	    },
	    enableMonthArrow: function enableMonthArrow() {
	      var nextMonth = (this.leftMonth + 1) % 12;
	      var yearOffset = this.leftMonth + 1 >= 12 ? 1 : 0;
	      return this.unlinkPanels && new Date(this.leftYear + yearOffset, nextMonth) < new Date(this.rightYear, this.rightMonth);
	    },
	    enableYearArrow: function enableYearArrow() {
	      return this.unlinkPanels && this.rightYear * 12 + this.rightMonth - (this.leftYear * 12 + this.leftMonth + 1) >= 12;
	    }
	  },

	  data: function data() {
	    return {
	      popperClass: '',
	      value: [],
	      defaultValue: null,
	      defaultTime: null,
	      minDate: '',
	      maxDate: '',
	      leftDate: new Date(),
	      rightDate: Object(date_util_["nextMonth"])(new Date()),
	      rangeState: {
	        endDate: null,
	        selecting: false,
	        row: null,
	        column: null
	      },
	      showTime: false,
	      shortcuts: '',
	      visible: '',
	      disabledDate: '',
	      cellClassName: '',
	      firstDayOfWeek: 7,
	      minTimePickerVisible: false,
	      maxTimePickerVisible: false,
	      format: '',
	      arrowControl: false,
	      unlinkPanels: false,
	      dateUserInput: {
	        min: null,
	        max: null
	      },
	      timeUserInput: {
	        min: null,
	        max: null
	      }
	    };
	  },


	  watch: {
	    minDate: function minDate(val) {
	      var _this = this;

	      this.dateUserInput.min = null;
	      this.timeUserInput.min = null;
	      this.$nextTick(function () {
	        if (_this.$refs.maxTimePicker && _this.maxDate && _this.maxDate < _this.minDate) {
	          var format = 'HH:mm:ss';
	          _this.$refs.maxTimePicker.selectableRange = [[Object(date_util_["parseDate"])(Object(date_util_["formatDate"])(_this.minDate, format), format), Object(date_util_["parseDate"])('23:59:59', format)]];
	        }
	      });
	      if (val && this.$refs.minTimePicker) {
	        this.$refs.minTimePicker.date = val;
	        this.$refs.minTimePicker.value = val;
	      }
	    },
	    maxDate: function maxDate(val) {
	      this.dateUserInput.max = null;
	      this.timeUserInput.max = null;
	      if (val && this.$refs.maxTimePicker) {
	        this.$refs.maxTimePicker.date = val;
	        this.$refs.maxTimePicker.value = val;
	      }
	    },
	    minTimePickerVisible: function minTimePickerVisible(val) {
	      var _this2 = this;

	      if (val) {
	        this.$nextTick(function () {
	          _this2.$refs.minTimePicker.date = _this2.minDate;
	          _this2.$refs.minTimePicker.value = _this2.minDate;
	          _this2.$refs.minTimePicker.adjustSpinners();
	        });
	      }
	    },
	    maxTimePickerVisible: function maxTimePickerVisible(val) {
	      var _this3 = this;

	      if (val) {
	        this.$nextTick(function () {
	          _this3.$refs.maxTimePicker.date = _this3.maxDate;
	          _this3.$refs.maxTimePicker.value = _this3.maxDate;
	          _this3.$refs.maxTimePicker.adjustSpinners();
	        });
	      }
	    },
	    value: function value(newVal) {
	      if (!newVal) {
	        this.minDate = null;
	        this.maxDate = null;
	      } else if (Array.isArray(newVal)) {
	        this.minDate = Object(date_util_["isDate"])(newVal[0]) ? new Date(newVal[0]) : null;
	        this.maxDate = Object(date_util_["isDate"])(newVal[1]) ? new Date(newVal[1]) : null;
	        if (this.minDate) {
	          this.leftDate = this.minDate;
	          if (this.unlinkPanels && this.maxDate) {
	            var minDateYear = this.minDate.getFullYear();
	            var minDateMonth = this.minDate.getMonth();
	            var maxDateYear = this.maxDate.getFullYear();
	            var maxDateMonth = this.maxDate.getMonth();
	            this.rightDate = minDateYear === maxDateYear && minDateMonth === maxDateMonth ? Object(date_util_["nextMonth"])(this.maxDate) : this.maxDate;
	          } else {
	            this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	          }
	        } else {
	          this.leftDate = date_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
	          this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	        }
	      }
	    },
	    defaultValue: function defaultValue(val) {
	      if (!Array.isArray(this.value)) {
	        var _calcDefaultValue = date_rangevue_type_script_lang_js_calcDefaultValue(val),
	            left = _calcDefaultValue[0],
	            right = _calcDefaultValue[1];

	        this.leftDate = left;
	        this.rightDate = val && val[1] && this.unlinkPanels ? right : Object(date_util_["nextMonth"])(this.leftDate);
	      }
	    }
	  },

	  methods: {
	    handleClear: function handleClear() {
	      this.minDate = null;
	      this.maxDate = null;
	      this.leftDate = date_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
	      this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	      this.$emit('pick', null);
	    },
	    handleChangeRange: function handleChangeRange(val) {
	      this.minDate = val.minDate;
	      this.maxDate = val.maxDate;
	      this.rangeState = val.rangeState;
	    },
	    handleDateInput: function handleDateInput(value, type) {
	      this.dateUserInput[type] = value;
	      if (value.length !== this.dateFormat.length) return;
	      var parsedValue = Object(date_util_["parseDate"])(value, this.dateFormat);

	      if (parsedValue) {
	        if (typeof this.disabledDate === 'function' && this.disabledDate(new Date(parsedValue))) {
	          return;
	        }
	        if (type === 'min') {
	          this.minDate = Object(date_util_["modifyDate"])(this.minDate || new Date(), parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
	          this.leftDate = new Date(parsedValue);
	          if (!this.unlinkPanels) {
	            this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	          }
	        } else {
	          this.maxDate = Object(date_util_["modifyDate"])(this.maxDate || new Date(), parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
	          this.rightDate = new Date(parsedValue);
	          if (!this.unlinkPanels) {
	            this.leftDate = Object(date_util_["prevMonth"])(parsedValue);
	          }
	        }
	      }
	    },
	    handleDateChange: function handleDateChange(value, type) {
	      var parsedValue = Object(date_util_["parseDate"])(value, this.dateFormat);
	      if (parsedValue) {
	        if (type === 'min') {
	          this.minDate = Object(date_util_["modifyDate"])(this.minDate, parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
	          if (this.minDate > this.maxDate) {
	            this.maxDate = this.minDate;
	          }
	        } else {
	          this.maxDate = Object(date_util_["modifyDate"])(this.maxDate, parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
	          if (this.maxDate < this.minDate) {
	            this.minDate = this.maxDate;
	          }
	        }
	      }
	    },
	    handleTimeInput: function handleTimeInput(value, type) {
	      var _this4 = this;

	      this.timeUserInput[type] = value;
	      if (value.length !== this.timeFormat.length) return;
	      var parsedValue = Object(date_util_["parseDate"])(value, this.timeFormat);

	      if (parsedValue) {
	        if (type === 'min') {
	          this.minDate = Object(date_util_["modifyTime"])(this.minDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
	          this.$nextTick(function (_) {
	            return _this4.$refs.minTimePicker.adjustSpinners();
	          });
	        } else {
	          this.maxDate = Object(date_util_["modifyTime"])(this.maxDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
	          this.$nextTick(function (_) {
	            return _this4.$refs.maxTimePicker.adjustSpinners();
	          });
	        }
	      }
	    },
	    handleTimeChange: function handleTimeChange(value, type) {
	      var parsedValue = Object(date_util_["parseDate"])(value, this.timeFormat);
	      if (parsedValue) {
	        if (type === 'min') {
	          this.minDate = Object(date_util_["modifyTime"])(this.minDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
	          if (this.minDate > this.maxDate) {
	            this.maxDate = this.minDate;
	          }
	          this.$refs.minTimePicker.value = this.minDate;
	          this.minTimePickerVisible = false;
	        } else {
	          this.maxDate = Object(date_util_["modifyTime"])(this.maxDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
	          if (this.maxDate < this.minDate) {
	            this.minDate = this.maxDate;
	          }
	          this.$refs.maxTimePicker.value = this.minDate;
	          this.maxTimePickerVisible = false;
	        }
	      }
	    },
	    handleRangePick: function handleRangePick(val) {
	      var _this5 = this;

	      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	      var defaultTime = this.defaultTime || [];
	      var minDate = Object(date_util_["modifyWithTimeString"])(val.minDate, defaultTime[0]);
	      var maxDate = Object(date_util_["modifyWithTimeString"])(val.maxDate, defaultTime[1]);

	      if (this.maxDate === maxDate && this.minDate === minDate) {
	        return;
	      }
	      this.onPick && this.onPick(val);
	      this.maxDate = maxDate;
	      this.minDate = minDate;

	      // workaround for https://github.com/ElemeFE/element/issues/7539, should remove this block when we don't have to care about Chromium 55 - 57
	      setTimeout(function () {
	        _this5.maxDate = maxDate;
	        _this5.minDate = minDate;
	      }, 10);
	      if (!close || this.showTime) return;
	      this.handleConfirm();
	    },
	    handleShortcutClick: function handleShortcutClick(shortcut) {
	      if (shortcut.onClick) {
	        shortcut.onClick(this);
	      }
	    },
	    handleMinTimePick: function handleMinTimePick(value, visible, first) {
	      this.minDate = this.minDate || new Date();
	      if (value) {
	        this.minDate = Object(date_util_["modifyTime"])(this.minDate, value.getHours(), value.getMinutes(), value.getSeconds());
	      }

	      if (!first) {
	        this.minTimePickerVisible = visible;
	      }

	      if (!this.maxDate || this.maxDate && this.maxDate.getTime() < this.minDate.getTime()) {
	        this.maxDate = new Date(this.minDate);
	      }
	    },
	    handleMinTimeClose: function handleMinTimeClose() {
	      this.minTimePickerVisible = false;
	    },
	    handleMaxTimePick: function handleMaxTimePick(value, visible, first) {
	      if (this.maxDate && value) {
	        this.maxDate = Object(date_util_["modifyTime"])(this.maxDate, value.getHours(), value.getMinutes(), value.getSeconds());
	      }

	      if (!first) {
	        this.maxTimePickerVisible = visible;
	      }

	      if (this.maxDate && this.minDate && this.minDate.getTime() > this.maxDate.getTime()) {
	        this.minDate = new Date(this.maxDate);
	      }
	    },
	    handleMaxTimeClose: function handleMaxTimeClose() {
	      this.maxTimePickerVisible = false;
	    },


	    // leftPrev*, rightNext* need to take care of `unlinkPanels`
	    leftPrevYear: function leftPrevYear() {
	      this.leftDate = Object(date_util_["prevYear"])(this.leftDate);
	      if (!this.unlinkPanels) {
	        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	      }
	    },
	    leftPrevMonth: function leftPrevMonth() {
	      this.leftDate = Object(date_util_["prevMonth"])(this.leftDate);
	      if (!this.unlinkPanels) {
	        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	      }
	    },
	    rightNextYear: function rightNextYear() {
	      if (!this.unlinkPanels) {
	        this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
	        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	      } else {
	        this.rightDate = Object(date_util_["nextYear"])(this.rightDate);
	      }
	    },
	    rightNextMonth: function rightNextMonth() {
	      if (!this.unlinkPanels) {
	        this.leftDate = Object(date_util_["nextMonth"])(this.leftDate);
	        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
	      } else {
	        this.rightDate = Object(date_util_["nextMonth"])(this.rightDate);
	      }
	    },


	    // leftNext*, rightPrev* are called when `unlinkPanels` is true
	    leftNextYear: function leftNextYear() {
	      this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
	    },
	    leftNextMonth: function leftNextMonth() {
	      this.leftDate = Object(date_util_["nextMonth"])(this.leftDate);
	    },
	    rightPrevYear: function rightPrevYear() {
	      this.rightDate = Object(date_util_["prevYear"])(this.rightDate);
	    },
	    rightPrevMonth: function rightPrevMonth() {
	      this.rightDate = Object(date_util_["prevMonth"])(this.rightDate);
	    },
	    handleConfirm: function handleConfirm() {
	      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	      if (this.isValidValue([this.minDate, this.maxDate])) {
	        this.$emit('pick', [this.minDate, this.maxDate], visible);
	      }
	    },
	    isValidValue: function isValidValue(value) {
	      return Array.isArray(value) && value && value[0] && value[1] && Object(date_util_["isDate"])(value[0]) && Object(date_util_["isDate"])(value[1]) && value[0].getTime() <= value[1].getTime() && (typeof this.disabledDate === 'function' ? !this.disabledDate(value[0]) && !this.disabledDate(value[1]) : true);
	    },
	    resetView: function resetView() {
	      // NOTE: this is a hack to reset {min, max}Date on picker open.
	      // TODO: correct way of doing so is to refactor {min, max}Date to be dependent on value and internal selection state
	      //       an alternative would be resetView whenever picker becomes visible, should also investigate date-panel's resetView
	      if (this.minDate && this.maxDate == null) this.rangeState.selecting = false;
	      this.minDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[0]) : null;
	      this.maxDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[1]) : null;
	    }
	  },

	  components: { TimePicker: panel_time, DateTable: date_table, ElInput: input_default.a, ElButton: button_default.a }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/date-range.vue?vue&type=script&lang=js&
	 /* harmony default export */ var panel_date_rangevue_type_script_lang_js_ = (date_rangevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/date-range.vue





	/* normalize component */

	var date_range_component = normalizeComponent(
	  panel_date_rangevue_type_script_lang_js_,
	  date_rangevue_type_template_id_2652849a_render,
	  date_rangevue_type_template_id_2652849a_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	date_range_component.options.__file = "packages/date-picker/src/panel/date-range.vue";
	/* harmony default export */ var date_range = (date_range_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/month-range.vue?vue&type=template&id=f2645fb8&
	var month_rangevue_type_template_id_f2645fb8_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-zoom-in-top" },
	      on: {
	        "after-leave": function($event) {
	          _vm.$emit("dodestroy");
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-picker-panel el-date-range-picker el-popper",
	          class: [
	            {
	              "has-sidebar": _vm.$slots.sidebar || _vm.shortcuts
	            },
	            _vm.popperClass
	          ]
	        },
	        [
	          _c(
	            "div",
	            { staticClass: "el-picker-panel__body-wrapper" },
	            [
	              _vm._t("sidebar"),
	              _vm.shortcuts
	                ? _c(
	                    "div",
	                    { staticClass: "el-picker-panel__sidebar" },
	                    _vm._l(_vm.shortcuts, function(shortcut, key) {
	                      return _c(
	                        "button",
	                        {
	                          key: key,
	                          staticClass: "el-picker-panel__shortcut",
	                          attrs: { type: "button" },
	                          on: {
	                            click: function($event) {
	                              _vm.handleShortcutClick(shortcut);
	                            }
	                          }
	                        },
	                        [_vm._v(_vm._s(shortcut.text))]
	                      )
	                    }),
	                    0
	                  )
	                : _vm._e(),
	              _c("div", { staticClass: "el-picker-panel__body" }, [
	                _c(
	                  "div",
	                  {
	                    staticClass:
	                      "el-picker-panel__content el-date-range-picker__content is-left"
	                  },
	                  [
	                    _c("div", { staticClass: "el-date-range-picker__header" }, [
	                      _c("button", {
	                        staticClass:
	                          "el-picker-panel__icon-btn el-icon-d-arrow-left",
	                        attrs: { type: "button" },
	                        on: { click: _vm.leftPrevYear }
	                      }),
	                      _vm.unlinkPanels
	                        ? _c("button", {
	                            staticClass:
	                              "el-picker-panel__icon-btn el-icon-d-arrow-right",
	                            class: { "is-disabled": !_vm.enableYearArrow },
	                            attrs: {
	                              type: "button",
	                              disabled: !_vm.enableYearArrow
	                            },
	                            on: { click: _vm.leftNextYear }
	                          })
	                        : _vm._e(),
	                      _c("div", [_vm._v(_vm._s(_vm.leftLabel))])
	                    ]),
	                    _c("month-table", {
	                      attrs: {
	                        "selection-mode": "range",
	                        date: _vm.leftDate,
	                        "default-value": _vm.defaultValue,
	                        "min-date": _vm.minDate,
	                        "max-date": _vm.maxDate,
	                        "range-state": _vm.rangeState,
	                        "disabled-date": _vm.disabledDate
	                      },
	                      on: {
	                        changerange: _vm.handleChangeRange,
	                        pick: _vm.handleRangePick
	                      }
	                    })
	                  ],
	                  1
	                ),
	                _c(
	                  "div",
	                  {
	                    staticClass:
	                      "el-picker-panel__content el-date-range-picker__content is-right"
	                  },
	                  [
	                    _c("div", { staticClass: "el-date-range-picker__header" }, [
	                      _vm.unlinkPanels
	                        ? _c("button", {
	                            staticClass:
	                              "el-picker-panel__icon-btn el-icon-d-arrow-left",
	                            class: { "is-disabled": !_vm.enableYearArrow },
	                            attrs: {
	                              type: "button",
	                              disabled: !_vm.enableYearArrow
	                            },
	                            on: { click: _vm.rightPrevYear }
	                          })
	                        : _vm._e(),
	                      _c("button", {
	                        staticClass:
	                          "el-picker-panel__icon-btn el-icon-d-arrow-right",
	                        attrs: { type: "button" },
	                        on: { click: _vm.rightNextYear }
	                      }),
	                      _c("div", [_vm._v(_vm._s(_vm.rightLabel))])
	                    ]),
	                    _c("month-table", {
	                      attrs: {
	                        "selection-mode": "range",
	                        date: _vm.rightDate,
	                        "default-value": _vm.defaultValue,
	                        "min-date": _vm.minDate,
	                        "max-date": _vm.maxDate,
	                        "range-state": _vm.rangeState,
	                        "disabled-date": _vm.disabledDate
	                      },
	                      on: {
	                        changerange: _vm.handleChangeRange,
	                        pick: _vm.handleRangePick
	                      }
	                    })
	                  ],
	                  1
	                )
	              ])
	            ],
	            2
	          )
	        ]
	      )
	    ]
	  )
	};
	var month_rangevue_type_template_id_f2645fb8_staticRenderFns = [];
	month_rangevue_type_template_id_f2645fb8_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/panel/month-range.vue?vue&type=template&id=f2645fb8&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/month-range.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//








	var month_rangevue_type_script_lang_js_calcDefaultValue = function calcDefaultValue(defaultValue) {
	  if (Array.isArray(defaultValue)) {
	    return [new Date(defaultValue[0]), new Date(defaultValue[1])];
	  } else if (defaultValue) {
	    return [new Date(defaultValue), Object(date_util_["nextMonth"])(new Date(defaultValue))];
	  } else {
	    return [new Date(), Object(date_util_["nextMonth"])(new Date())];
	  }
	};
	/* harmony default export */ var month_rangevue_type_script_lang_js_ = ({
	  mixins: [locale_default.a],

	  directives: { Clickoutside: clickoutside_default.a },

	  computed: {
	    btnDisabled: function btnDisabled() {
	      return !(this.minDate && this.maxDate && !this.selecting && this.isValidValue([this.minDate, this.maxDate]));
	    },
	    leftLabel: function leftLabel() {
	      return this.leftDate.getFullYear() + ' ' + this.t('el.datepicker.year');
	    },
	    rightLabel: function rightLabel() {
	      return this.rightDate.getFullYear() + ' ' + this.t('el.datepicker.year');
	    },
	    leftYear: function leftYear() {
	      return this.leftDate.getFullYear();
	    },
	    rightYear: function rightYear() {
	      return this.rightDate.getFullYear() === this.leftDate.getFullYear() ? this.leftDate.getFullYear() + 1 : this.rightDate.getFullYear();
	    },
	    enableYearArrow: function enableYearArrow() {
	      return this.unlinkPanels && this.rightYear > this.leftYear + 1;
	    }
	  },

	  data: function data() {
	    return {
	      popperClass: '',
	      value: [],
	      defaultValue: null,
	      defaultTime: null,
	      minDate: '',
	      maxDate: '',
	      leftDate: new Date(),
	      rightDate: Object(date_util_["nextYear"])(new Date()),
	      rangeState: {
	        endDate: null,
	        selecting: false,
	        row: null,
	        column: null
	      },
	      shortcuts: '',
	      visible: '',
	      disabledDate: '',
	      format: '',
	      arrowControl: false,
	      unlinkPanels: false
	    };
	  },


	  watch: {
	    value: function value(newVal) {
	      if (!newVal) {
	        this.minDate = null;
	        this.maxDate = null;
	      } else if (Array.isArray(newVal)) {
	        this.minDate = Object(date_util_["isDate"])(newVal[0]) ? new Date(newVal[0]) : null;
	        this.maxDate = Object(date_util_["isDate"])(newVal[1]) ? new Date(newVal[1]) : null;
	        if (this.minDate) {
	          this.leftDate = this.minDate;
	          if (this.unlinkPanels && this.maxDate) {
	            var minDateYear = this.minDate.getFullYear();
	            var maxDateYear = this.maxDate.getFullYear();
	            this.rightDate = minDateYear === maxDateYear ? Object(date_util_["nextYear"])(this.maxDate) : this.maxDate;
	          } else {
	            this.rightDate = Object(date_util_["nextYear"])(this.leftDate);
	          }
	        } else {
	          this.leftDate = month_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
	          this.rightDate = Object(date_util_["nextYear"])(this.leftDate);
	        }
	      }
	    },
	    defaultValue: function defaultValue(val) {
	      if (!Array.isArray(this.value)) {
	        var _calcDefaultValue = month_rangevue_type_script_lang_js_calcDefaultValue(val),
	            left = _calcDefaultValue[0],
	            right = _calcDefaultValue[1];

	        this.leftDate = left;
	        this.rightDate = val && val[1] && left.getFullYear() !== right.getFullYear() && this.unlinkPanels ? right : Object(date_util_["nextYear"])(this.leftDate);
	      }
	    }
	  },

	  methods: {
	    handleClear: function handleClear() {
	      this.minDate = null;
	      this.maxDate = null;
	      this.leftDate = month_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
	      this.rightDate = Object(date_util_["nextYear"])(this.leftDate);
	      this.$emit('pick', null);
	    },
	    handleChangeRange: function handleChangeRange(val) {
	      this.minDate = val.minDate;
	      this.maxDate = val.maxDate;
	      this.rangeState = val.rangeState;
	    },
	    handleRangePick: function handleRangePick(val) {
	      var _this = this;

	      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	      var defaultTime = this.defaultTime || [];
	      var minDate = Object(date_util_["modifyWithTimeString"])(val.minDate, defaultTime[0]);
	      var maxDate = Object(date_util_["modifyWithTimeString"])(val.maxDate, defaultTime[1]);
	      if (this.maxDate === maxDate && this.minDate === minDate) {
	        return;
	      }
	      this.onPick && this.onPick(val);
	      this.maxDate = maxDate;
	      this.minDate = minDate;

	      // workaround for https://github.com/ElemeFE/element/issues/7539, should remove this block when we don't have to care about Chromium 55 - 57
	      setTimeout(function () {
	        _this.maxDate = maxDate;
	        _this.minDate = minDate;
	      }, 10);
	      if (!close) return;
	      this.handleConfirm();
	    },
	    handleShortcutClick: function handleShortcutClick(shortcut) {
	      if (shortcut.onClick) {
	        shortcut.onClick(this);
	      }
	    },


	    // leftPrev*, rightNext* need to take care of `unlinkPanels`
	    leftPrevYear: function leftPrevYear() {
	      this.leftDate = Object(date_util_["prevYear"])(this.leftDate);
	      if (!this.unlinkPanels) {
	        this.rightDate = Object(date_util_["prevYear"])(this.rightDate);
	      }
	    },
	    rightNextYear: function rightNextYear() {
	      if (!this.unlinkPanels) {
	        this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
	      }
	      this.rightDate = Object(date_util_["nextYear"])(this.rightDate);
	    },


	    // leftNext*, rightPrev* are called when `unlinkPanels` is true
	    leftNextYear: function leftNextYear() {
	      this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
	    },
	    rightPrevYear: function rightPrevYear() {
	      this.rightDate = Object(date_util_["prevYear"])(this.rightDate);
	    },
	    handleConfirm: function handleConfirm() {
	      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	      if (this.isValidValue([this.minDate, this.maxDate])) {
	        this.$emit('pick', [this.minDate, this.maxDate], visible);
	      }
	    },
	    isValidValue: function isValidValue(value) {
	      return Array.isArray(value) && value && value[0] && value[1] && Object(date_util_["isDate"])(value[0]) && Object(date_util_["isDate"])(value[1]) && value[0].getTime() <= value[1].getTime() && (typeof this.disabledDate === 'function' ? !this.disabledDate(value[0]) && !this.disabledDate(value[1]) : true);
	    },
	    resetView: function resetView() {
	      // NOTE: this is a hack to reset {min, max}Date on picker open.
	      // TODO: correct way of doing so is to refactor {min, max}Date to be dependent on value and internal selection state
	      //       an alternative would be resetView whenever picker becomes visible, should also investigate date-panel's resetView
	      this.minDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[0]) : null;
	      this.maxDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[1]) : null;
	    }
	  },

	  components: { MonthTable: month_table, ElInput: input_default.a, ElButton: button_default.a }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/month-range.vue?vue&type=script&lang=js&
	 /* harmony default export */ var panel_month_rangevue_type_script_lang_js_ = (month_rangevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/month-range.vue





	/* normalize component */

	var month_range_component = normalizeComponent(
	  panel_month_rangevue_type_script_lang_js_,
	  month_rangevue_type_template_id_f2645fb8_render,
	  month_rangevue_type_template_id_f2645fb8_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	month_range_component.options.__file = "packages/date-picker/src/panel/month-range.vue";
	/* harmony default export */ var month_range = (month_range_component.exports);
	// CONCATENATED MODULE: ./packages/date-picker/src/picker/date-picker.js





	var date_picker_getPanel = function getPanel(type) {
	  if (type === 'daterange' || type === 'datetimerange') {
	    return date_range;
	  } else if (type === 'monthrange') {
	    return month_range;
	  }
	  return panel_date;
	};

	/* harmony default export */ var date_picker = ({
	  mixins: [picker],

	  name: 'ElDatePicker',

	  props: {
	    type: {
	      type: String,
	      default: 'date'
	    },
	    timeArrowControl: Boolean
	  },

	  watch: {
	    type: function type(_type) {
	      if (this.picker) {
	        this.unmountPicker();
	        this.panel = date_picker_getPanel(_type);
	        this.mountPicker();
	      } else {
	        this.panel = date_picker_getPanel(_type);
	      }
	    }
	  },

	  created: function created() {
	    this.panel = date_picker_getPanel(this.type);
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/index.js


	/* istanbul ignore next */
	date_picker.install = function install(Vue) {
	  Vue.component(date_picker.name, date_picker);
	};

	/* harmony default export */ var packages_date_picker = (date_picker);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-select.vue?vue&type=template&id=51ab9320&
	var time_selectvue_type_template_id_51ab9320_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-zoom-in-top" },
	      on: {
	        "before-enter": _vm.handleMenuEnter,
	        "after-leave": function($event) {
	          _vm.$emit("dodestroy");
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          ref: "popper",
	          staticClass: "el-picker-panel time-select el-popper",
	          class: _vm.popperClass,
	          style: { width: _vm.width + "px" }
	        },
	        [
	          _c(
	            "el-scrollbar",
	            {
	              attrs: { noresize: "", "wrap-class": "el-picker-panel__content" }
	            },
	            _vm._l(_vm.items, function(item) {
	              return _c(
	                "div",
	                {
	                  key: item.value,
	                  staticClass: "time-select-item",
	                  class: {
	                    selected: _vm.value === item.value,
	                    disabled: item.disabled,
	                    default: item.value === _vm.defaultValue
	                  },
	                  attrs: { disabled: item.disabled },
	                  on: {
	                    click: function($event) {
	                      _vm.handleClick(item);
	                    }
	                  }
	                },
	                [_vm._v(_vm._s(item.value))]
	              )
	            }),
	            0
	          )
	        ],
	        1
	      )
	    ]
	  )
	};
	var time_selectvue_type_template_id_51ab9320_staticRenderFns = [];
	time_selectvue_type_template_id_51ab9320_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-select.vue?vue&type=template&id=51ab9320&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-select.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//




	var parseTime = function parseTime(time) {
	  var values = (time || '').split(':');
	  if (values.length >= 2) {
	    var hours = parseInt(values[0], 10);
	    var minutes = parseInt(values[1], 10);

	    return {
	      hours: hours,
	      minutes: minutes
	    };
	  }
	  /* istanbul ignore next */
	  return null;
	};

	var compareTime = function compareTime(time1, time2) {
	  var value1 = parseTime(time1);
	  var value2 = parseTime(time2);

	  var minutes1 = value1.minutes + value1.hours * 60;
	  var minutes2 = value2.minutes + value2.hours * 60;

	  if (minutes1 === minutes2) {
	    return 0;
	  }

	  return minutes1 > minutes2 ? 1 : -1;
	};

	var formatTime = function formatTime(time) {
	  return (time.hours < 10 ? '0' + time.hours : time.hours) + ':' + (time.minutes < 10 ? '0' + time.minutes : time.minutes);
	};

	var nextTime = function nextTime(time, step) {
	  var timeValue = parseTime(time);
	  var stepValue = parseTime(step);

	  var next = {
	    hours: timeValue.hours,
	    minutes: timeValue.minutes
	  };

	  next.minutes += stepValue.minutes;
	  next.hours += stepValue.hours;

	  next.hours += Math.floor(next.minutes / 60);
	  next.minutes = next.minutes % 60;

	  return formatTime(next);
	};

	/* harmony default export */ var time_selectvue_type_script_lang_js_ = ({
	  components: { ElScrollbar: scrollbar_default.a },

	  watch: {
	    value: function value(val) {
	      var _this = this;

	      if (!val) return;
	      this.$nextTick(function () {
	        return _this.scrollToOption();
	      });
	    }
	  },

	  methods: {
	    handleClick: function handleClick(item) {
	      if (!item.disabled) {
	        this.$emit('pick', item.value);
	      }
	    },
	    handleClear: function handleClear() {
	      this.$emit('pick', null);
	    },
	    scrollToOption: function scrollToOption() {
	      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.selected';

	      var menu = this.$refs.popper.querySelector('.el-picker-panel__content');
	      scroll_into_view_default()(menu, menu.querySelector(selector));
	    },
	    handleMenuEnter: function handleMenuEnter() {
	      var _this2 = this;

	      var selected = this.items.map(function (item) {
	        return item.value;
	      }).indexOf(this.value) !== -1;
	      var hasDefault = this.items.map(function (item) {
	        return item.value;
	      }).indexOf(this.defaultValue) !== -1;
	      var option = selected && '.selected' || hasDefault && '.default' || '.time-select-item:not(.disabled)';
	      this.$nextTick(function () {
	        return _this2.scrollToOption(option);
	      });
	    },
	    scrollDown: function scrollDown(step) {
	      var items = this.items;
	      var length = items.length;
	      var total = items.length;
	      var index = items.map(function (item) {
	        return item.value;
	      }).indexOf(this.value);
	      while (total--) {
	        index = (index + step + length) % length;
	        if (!items[index].disabled) {
	          this.$emit('pick', items[index].value, true);
	          return;
	        }
	      }
	    },
	    isValidValue: function isValidValue(date) {
	      return this.items.filter(function (item) {
	        return !item.disabled;
	      }).map(function (item) {
	        return item.value;
	      }).indexOf(date) !== -1;
	    },
	    handleKeydown: function handleKeydown(event) {
	      var keyCode = event.keyCode;
	      if (keyCode === 38 || keyCode === 40) {
	        var mapping = { 40: 1, 38: -1 };
	        var offset = mapping[keyCode.toString()];
	        this.scrollDown(offset);
	        event.stopPropagation();
	        return;
	      }
	    }
	  },

	  data: function data() {
	    return {
	      popperClass: '',
	      start: '09:00',
	      end: '18:00',
	      step: '00:30',
	      value: '',
	      defaultValue: '',
	      visible: false,
	      minTime: '',
	      maxTime: '',
	      width: 0
	    };
	  },


	  computed: {
	    items: function items() {
	      var start = this.start;
	      var end = this.end;
	      var step = this.step;

	      var result = [];

	      if (start && end && step) {
	        var current = start;
	        while (compareTime(current, end) <= 0) {
	          result.push({
	            value: current,
	            disabled: compareTime(current, this.minTime || '-1:-1') <= 0 || compareTime(current, this.maxTime || '100:100') >= 0
	          });
	          current = nextTime(current, step);
	        }
	      }

	      return result;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-select.vue?vue&type=script&lang=js&
	 /* harmony default export */ var panel_time_selectvue_type_script_lang_js_ = (time_selectvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-select.vue





	/* normalize component */

	var time_select_component = normalizeComponent(
	  panel_time_selectvue_type_script_lang_js_,
	  time_selectvue_type_template_id_51ab9320_render,
	  time_selectvue_type_template_id_51ab9320_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	time_select_component.options.__file = "packages/date-picker/src/panel/time-select.vue";
	/* harmony default export */ var time_select = (time_select_component.exports);
	// CONCATENATED MODULE: ./packages/date-picker/src/picker/time-select.js



	/* harmony default export */ var picker_time_select = ({
	  mixins: [picker],

	  name: 'ElTimeSelect',

	  componentName: 'ElTimeSelect',

	  props: {
	    type: {
	      type: String,
	      default: 'time-select'
	    }
	  },

	  beforeCreate: function beforeCreate() {
	    this.panel = time_select;
	  }
	});
	// CONCATENATED MODULE: ./packages/time-select/index.js


	/* istanbul ignore next */
	picker_time_select.install = function (Vue) {
	  Vue.component(picker_time_select.name, picker_time_select);
	};

	/* harmony default export */ var packages_time_select = (picker_time_select);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-range.vue?vue&type=template&id=fb28660e&
	var time_rangevue_type_template_id_fb28660e_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-zoom-in-top" },
	      on: {
	        "after-leave": function($event) {
	          _vm.$emit("dodestroy");
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-time-range-picker el-picker-panel el-popper",
	          class: _vm.popperClass
	        },
	        [
	          _c("div", { staticClass: "el-time-range-picker__content" }, [
	            _c("div", { staticClass: "el-time-range-picker__cell" }, [
	              _c("div", { staticClass: "el-time-range-picker__header" }, [
	                _vm._v(_vm._s(_vm.t("el.datepicker.startTime")))
	              ]),
	              _c(
	                "div",
	                {
	                  staticClass:
	                    "el-time-range-picker__body el-time-panel__content",
	                  class: {
	                    "has-seconds": _vm.showSeconds,
	                    "is-arrow": _vm.arrowControl
	                  }
	                },
	                [
	                  _c("time-spinner", {
	                    ref: "minSpinner",
	                    attrs: {
	                      "show-seconds": _vm.showSeconds,
	                      "am-pm-mode": _vm.amPmMode,
	                      "arrow-control": _vm.arrowControl,
	                      date: _vm.minDate
	                    },
	                    on: {
	                      change: _vm.handleMinChange,
	                      "select-range": _vm.setMinSelectionRange
	                    }
	                  })
	                ],
	                1
	              )
	            ]),
	            _c("div", { staticClass: "el-time-range-picker__cell" }, [
	              _c("div", { staticClass: "el-time-range-picker__header" }, [
	                _vm._v(_vm._s(_vm.t("el.datepicker.endTime")))
	              ]),
	              _c(
	                "div",
	                {
	                  staticClass:
	                    "el-time-range-picker__body el-time-panel__content",
	                  class: {
	                    "has-seconds": _vm.showSeconds,
	                    "is-arrow": _vm.arrowControl
	                  }
	                },
	                [
	                  _c("time-spinner", {
	                    ref: "maxSpinner",
	                    attrs: {
	                      "show-seconds": _vm.showSeconds,
	                      "am-pm-mode": _vm.amPmMode,
	                      "arrow-control": _vm.arrowControl,
	                      date: _vm.maxDate
	                    },
	                    on: {
	                      change: _vm.handleMaxChange,
	                      "select-range": _vm.setMaxSelectionRange
	                    }
	                  })
	                ],
	                1
	              )
	            ])
	          ]),
	          _c("div", { staticClass: "el-time-panel__footer" }, [
	            _c(
	              "button",
	              {
	                staticClass: "el-time-panel__btn cancel",
	                attrs: { type: "button" },
	                on: {
	                  click: function($event) {
	                    _vm.handleCancel();
	                  }
	                }
	              },
	              [_vm._v(_vm._s(_vm.t("el.datepicker.cancel")))]
	            ),
	            _c(
	              "button",
	              {
	                staticClass: "el-time-panel__btn confirm",
	                attrs: { type: "button", disabled: _vm.btnDisabled },
	                on: {
	                  click: function($event) {
	                    _vm.handleConfirm();
	                  }
	                }
	              },
	              [_vm._v(_vm._s(_vm.t("el.datepicker.confirm")))]
	            )
	          ])
	        ]
	      )
	    ]
	  )
	};
	var time_rangevue_type_template_id_fb28660e_staticRenderFns = [];
	time_rangevue_type_template_id_fb28660e_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-range.vue?vue&type=template&id=fb28660e&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-range.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	var MIN_TIME = Object(date_util_["parseDate"])('00:00:00', 'HH:mm:ss');
	var MAX_TIME = Object(date_util_["parseDate"])('23:59:59', 'HH:mm:ss');

	var time_rangevue_type_script_lang_js_minTimeOfDay = function minTimeOfDay(date) {
	  return Object(date_util_["modifyDate"])(MIN_TIME, date.getFullYear(), date.getMonth(), date.getDate());
	};

	var time_rangevue_type_script_lang_js_maxTimeOfDay = function maxTimeOfDay(date) {
	  return Object(date_util_["modifyDate"])(MAX_TIME, date.getFullYear(), date.getMonth(), date.getDate());
	};

	// increase time by amount of milliseconds, but within the range of day
	var advanceTime = function advanceTime(date, amount) {
	  return new Date(Math.min(date.getTime() + amount, time_rangevue_type_script_lang_js_maxTimeOfDay(date).getTime()));
	};

	/* harmony default export */ var time_rangevue_type_script_lang_js_ = ({
	  mixins: [locale_default.a],

	  components: { TimeSpinner: time_spinner },

	  computed: {
	    showSeconds: function showSeconds() {
	      return (this.format || '').indexOf('ss') !== -1;
	    },
	    offset: function offset() {
	      return this.showSeconds ? 11 : 8;
	    },
	    spinner: function spinner() {
	      return this.selectionRange[0] < this.offset ? this.$refs.minSpinner : this.$refs.maxSpinner;
	    },
	    btnDisabled: function btnDisabled() {
	      return this.minDate.getTime() > this.maxDate.getTime();
	    },
	    amPmMode: function amPmMode() {
	      if ((this.format || '').indexOf('A') !== -1) return 'A';
	      if ((this.format || '').indexOf('a') !== -1) return 'a';
	      return '';
	    }
	  },

	  data: function data() {
	    return {
	      popperClass: '',
	      minDate: new Date(),
	      maxDate: new Date(),
	      value: [],
	      oldValue: [new Date(), new Date()],
	      defaultValue: null,
	      format: 'HH:mm:ss',
	      visible: false,
	      selectionRange: [0, 2],
	      arrowControl: false
	    };
	  },


	  watch: {
	    value: function value(_value) {
	      if (Array.isArray(_value)) {
	        this.minDate = new Date(_value[0]);
	        this.maxDate = new Date(_value[1]);
	      } else {
	        if (Array.isArray(this.defaultValue)) {
	          this.minDate = new Date(this.defaultValue[0]);
	          this.maxDate = new Date(this.defaultValue[1]);
	        } else if (this.defaultValue) {
	          this.minDate = new Date(this.defaultValue);
	          this.maxDate = advanceTime(new Date(this.defaultValue), 60 * 60 * 1000);
	        } else {
	          this.minDate = new Date();
	          this.maxDate = advanceTime(new Date(), 60 * 60 * 1000);
	        }
	      }
	    },
	    visible: function visible(val) {
	      var _this = this;

	      if (val) {
	        this.oldValue = this.value;
	        this.$nextTick(function () {
	          return _this.$refs.minSpinner.emitSelectRange('hours');
	        });
	      }
	    }
	  },

	  methods: {
	    handleClear: function handleClear() {
	      this.$emit('pick', null);
	    },
	    handleCancel: function handleCancel() {
	      this.$emit('pick', this.oldValue);
	    },
	    handleMinChange: function handleMinChange(date) {
	      this.minDate = Object(date_util_["clearMilliseconds"])(date);
	      this.handleChange();
	    },
	    handleMaxChange: function handleMaxChange(date) {
	      this.maxDate = Object(date_util_["clearMilliseconds"])(date);
	      this.handleChange();
	    },
	    handleChange: function handleChange() {
	      if (this.isValidValue([this.minDate, this.maxDate])) {
	        this.$refs.minSpinner.selectableRange = [[time_rangevue_type_script_lang_js_minTimeOfDay(this.minDate), this.maxDate]];
	        this.$refs.maxSpinner.selectableRange = [[this.minDate, time_rangevue_type_script_lang_js_maxTimeOfDay(this.maxDate)]];
	        this.$emit('pick', [this.minDate, this.maxDate], true);
	      }
	    },
	    setMinSelectionRange: function setMinSelectionRange(start, end) {
	      this.$emit('select-range', start, end, 'min');
	      this.selectionRange = [start, end];
	    },
	    setMaxSelectionRange: function setMaxSelectionRange(start, end) {
	      this.$emit('select-range', start, end, 'max');
	      this.selectionRange = [start + this.offset, end + this.offset];
	    },
	    handleConfirm: function handleConfirm() {
	      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	      var minSelectableRange = this.$refs.minSpinner.selectableRange;
	      var maxSelectableRange = this.$refs.maxSpinner.selectableRange;

	      this.minDate = Object(date_util_["limitTimeRange"])(this.minDate, minSelectableRange, this.format);
	      this.maxDate = Object(date_util_["limitTimeRange"])(this.maxDate, maxSelectableRange, this.format);

	      this.$emit('pick', [this.minDate, this.maxDate], visible);
	    },
	    adjustSpinners: function adjustSpinners() {
	      this.$refs.minSpinner.adjustSpinners();
	      this.$refs.maxSpinner.adjustSpinners();
	    },
	    changeSelectionRange: function changeSelectionRange(step) {
	      var list = this.showSeconds ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];
	      var mapping = ['hours', 'minutes'].concat(this.showSeconds ? ['seconds'] : []);
	      var index = list.indexOf(this.selectionRange[0]);
	      var next = (index + step + list.length) % list.length;
	      var half = list.length / 2;
	      if (next < half) {
	        this.$refs.minSpinner.emitSelectRange(mapping[next]);
	      } else {
	        this.$refs.maxSpinner.emitSelectRange(mapping[next - half]);
	      }
	    },
	    isValidValue: function isValidValue(date) {
	      return Array.isArray(date) && Object(date_util_["timeWithinRange"])(this.minDate, this.$refs.minSpinner.selectableRange) && Object(date_util_["timeWithinRange"])(this.maxDate, this.$refs.maxSpinner.selectableRange);
	    },
	    handleKeydown: function handleKeydown(event) {
	      var keyCode = event.keyCode;
	      var mapping = { 38: -1, 40: 1, 37: -1, 39: 1 };

	      // Left or Right
	      if (keyCode === 37 || keyCode === 39) {
	        var step = mapping[keyCode];
	        this.changeSelectionRange(step);
	        event.preventDefault();
	        return;
	      }

	      // Up or Down
	      if (keyCode === 38 || keyCode === 40) {
	        var _step = mapping[keyCode];
	        this.spinner.scrollDown(_step);
	        event.preventDefault();
	        return;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-range.vue?vue&type=script&lang=js&
	 /* harmony default export */ var panel_time_rangevue_type_script_lang_js_ = (time_rangevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-range.vue





	/* normalize component */

	var time_range_component = normalizeComponent(
	  panel_time_rangevue_type_script_lang_js_,
	  time_rangevue_type_template_id_fb28660e_render,
	  time_rangevue_type_template_id_fb28660e_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	time_range_component.options.__file = "packages/date-picker/src/panel/time-range.vue";
	/* harmony default export */ var time_range = (time_range_component.exports);
	// CONCATENATED MODULE: ./packages/date-picker/src/picker/time-picker.js




	/* harmony default export */ var time_picker = ({
	  mixins: [picker],

	  name: 'ElTimePicker',

	  props: {
	    isRange: Boolean,
	    arrowControl: Boolean
	  },

	  data: function data() {
	    return {
	      type: ''
	    };
	  },


	  watch: {
	    isRange: function isRange(_isRange) {
	      if (this.picker) {
	        this.unmountPicker();
	        this.type = _isRange ? 'timerange' : 'time';
	        this.panel = _isRange ? time_range : panel_time;
	        this.mountPicker();
	      } else {
	        this.type = _isRange ? 'timerange' : 'time';
	        this.panel = _isRange ? time_range : panel_time;
	      }
	    }
	  },

	  created: function created() {
	    this.type = this.isRange ? 'timerange' : 'time';
	    this.panel = this.isRange ? time_range : panel_time;
	  }
	});
	// CONCATENATED MODULE: ./packages/time-picker/index.js


	/* istanbul ignore next */
	time_picker.install = function (Vue) {
	  Vue.component(time_picker.name, time_picker);
	};

	/* harmony default export */ var packages_time_picker = (time_picker);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/popover/src/main.vue?vue&type=template&id=52060272&
	var mainvue_type_template_id_52060272_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "span",
	    [
	      _c(
	        "transition",
	        {
	          attrs: { name: _vm.transition },
	          on: {
	            "after-enter": _vm.handleAfterEnter,
	            "after-leave": _vm.handleAfterLeave
	          }
	        },
	        [
	          _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: !_vm.disabled && _vm.showPopper,
	                  expression: "!disabled && showPopper"
	                }
	              ],
	              ref: "popper",
	              staticClass: "el-popover el-popper",
	              class: [_vm.popperClass, _vm.content && "el-popover--plain"],
	              style: { width: _vm.width + "px" },
	              attrs: {
	                role: "tooltip",
	                id: _vm.tooltipId,
	                "aria-hidden":
	                  _vm.disabled || !_vm.showPopper ? "true" : "false"
	              }
	            },
	            [
	              _vm.title
	                ? _c("div", {
	                    staticClass: "el-popover__title",
	                    domProps: { textContent: _vm._s(_vm.title) }
	                  })
	                : _vm._e(),
	              _vm._t("default", [_vm._v(_vm._s(_vm.content))])
	            ],
	            2
	          )
	        ]
	      ),
	      _c(
	        "span",
	        { ref: "wrapper", staticClass: "el-popover__reference-wrapper" },
	        [_vm._t("reference")],
	        2
	      )
	    ],
	    1
	  )
	};
	var mainvue_type_template_id_52060272_staticRenderFns = [];
	mainvue_type_template_id_52060272_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/popover/src/main.vue?vue&type=template&id=52060272&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/popover/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	/* harmony default export */ var mainvue_type_script_lang_js_ = ({
	  name: 'ElPopover',

	  mixins: [vue_popper_default.a],

	  props: {
	    trigger: {
	      type: String,
	      default: 'click',
	      validator: function validator(value) {
	        return ['click', 'focus', 'hover', 'manual'].indexOf(value) > -1;
	      }
	    },
	    openDelay: {
	      type: Number,
	      default: 0
	    },
	    closeDelay: {
	      type: Number,
	      default: 200
	    },
	    title: String,
	    disabled: Boolean,
	    content: String,
	    reference: {},
	    popperClass: String,
	    width: {},
	    visibleArrow: {
	      default: true
	    },
	    arrowOffset: {
	      type: Number,
	      default: 0
	    },
	    transition: {
	      type: String,
	      default: 'fade-in-linear'
	    },
	    tabindex: {
	      type: Number,
	      default: 0
	    }
	  },

	  computed: {
	    tooltipId: function tooltipId() {
	      return 'el-popover-' + Object(util_["generateId"])();
	    }
	  },
	  watch: {
	    showPopper: function showPopper(val) {
	      if (this.disabled) {
	        return;
	      }
	      val ? this.$emit('show') : this.$emit('hide');
	    }
	  },

	  mounted: function mounted() {
	    var _this = this;

	    var reference = this.referenceElm = this.reference || this.$refs.reference;
	    var popper = this.popper || this.$refs.popper;

	    if (!reference && this.$refs.wrapper.children) {
	      reference = this.referenceElm = this.$refs.wrapper.children[0];
	    }
	    // 可访问性
	    if (reference) {
	      Object(dom_["addClass"])(reference, 'el-popover__reference');
	      reference.setAttribute('aria-describedby', this.tooltipId);
	      reference.setAttribute('tabindex', this.tabindex); // tab序列
	      popper.setAttribute('tabindex', 0);

	      if (this.trigger !== 'click') {
	        Object(dom_["on"])(reference, 'focusin', function () {
	          _this.handleFocus();
	          var instance = reference.__vue__;
	          if (instance && typeof instance.focus === 'function') {
	            instance.focus();
	          }
	        });
	        Object(dom_["on"])(popper, 'focusin', this.handleFocus);
	        Object(dom_["on"])(reference, 'focusout', this.handleBlur);
	        Object(dom_["on"])(popper, 'focusout', this.handleBlur);
	      }
	      Object(dom_["on"])(reference, 'keydown', this.handleKeydown);
	      Object(dom_["on"])(reference, 'click', this.handleClick);
	    }
	    if (this.trigger === 'click') {
	      Object(dom_["on"])(reference, 'click', this.doToggle);
	      Object(dom_["on"])(document, 'click', this.handleDocumentClick);
	    } else if (this.trigger === 'hover') {
	      Object(dom_["on"])(reference, 'mouseenter', this.handleMouseEnter);
	      Object(dom_["on"])(popper, 'mouseenter', this.handleMouseEnter);
	      Object(dom_["on"])(reference, 'mouseleave', this.handleMouseLeave);
	      Object(dom_["on"])(popper, 'mouseleave', this.handleMouseLeave);
	    } else if (this.trigger === 'focus') {
	      if (this.tabindex < 0) {
	        console.warn('[Element Warn][Popover]a negative taindex means that the element cannot be focused by tab key');
	      }
	      if (reference.querySelector('input, textarea')) {
	        Object(dom_["on"])(reference, 'focusin', this.doShow);
	        Object(dom_["on"])(reference, 'focusout', this.doClose);
	      } else {
	        Object(dom_["on"])(reference, 'mousedown', this.doShow);
	        Object(dom_["on"])(reference, 'mouseup', this.doClose);
	      }
	    }
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.cleanup();
	  },
	  deactivated: function deactivated() {
	    this.cleanup();
	  },


	  methods: {
	    doToggle: function doToggle() {
	      this.showPopper = !this.showPopper;
	    },
	    doShow: function doShow() {
	      this.showPopper = true;
	    },
	    doClose: function doClose() {
	      this.showPopper = false;
	    },
	    handleFocus: function handleFocus() {
	      Object(dom_["addClass"])(this.referenceElm, 'focusing');
	      if (this.trigger === 'click' || this.trigger === 'focus') this.showPopper = true;
	    },
	    handleClick: function handleClick() {
	      Object(dom_["removeClass"])(this.referenceElm, 'focusing');
	    },
	    handleBlur: function handleBlur() {
	      Object(dom_["removeClass"])(this.referenceElm, 'focusing');
	      if (this.trigger === 'click' || this.trigger === 'focus') this.showPopper = false;
	    },
	    handleMouseEnter: function handleMouseEnter() {
	      var _this2 = this;

	      clearTimeout(this._timer);
	      if (this.openDelay) {
	        this._timer = setTimeout(function () {
	          _this2.showPopper = true;
	        }, this.openDelay);
	      } else {
	        this.showPopper = true;
	      }
	    },
	    handleKeydown: function handleKeydown(ev) {
	      if (ev.keyCode === 27 && this.trigger !== 'manual') {
	        // esc
	        this.doClose();
	      }
	    },
	    handleMouseLeave: function handleMouseLeave() {
	      var _this3 = this;

	      clearTimeout(this._timer);
	      if (this.closeDelay) {
	        this._timer = setTimeout(function () {
	          _this3.showPopper = false;
	        }, this.closeDelay);
	      } else {
	        this.showPopper = false;
	      }
	    },
	    handleDocumentClick: function handleDocumentClick(e) {
	      var reference = this.reference || this.$refs.reference;
	      var popper = this.popper || this.$refs.popper;

	      if (!reference && this.$refs.wrapper.children) {
	        reference = this.referenceElm = this.$refs.wrapper.children[0];
	      }
	      if (!this.$el || !reference || this.$el.contains(e.target) || reference.contains(e.target) || !popper || popper.contains(e.target)) return;
	      this.showPopper = false;
	    },
	    handleAfterEnter: function handleAfterEnter() {
	      this.$emit('after-enter');
	    },
	    handleAfterLeave: function handleAfterLeave() {
	      this.$emit('after-leave');
	      this.doDestroy();
	    },
	    cleanup: function cleanup() {
	      if (this.openDelay || this.closeDelay) {
	        clearTimeout(this._timer);
	      }
	    }
	  },

	  destroyed: function destroyed() {
	    var reference = this.reference;

	    Object(dom_["off"])(reference, 'click', this.doToggle);
	    Object(dom_["off"])(reference, 'mouseup', this.doClose);
	    Object(dom_["off"])(reference, 'mousedown', this.doShow);
	    Object(dom_["off"])(reference, 'focusin', this.doShow);
	    Object(dom_["off"])(reference, 'focusout', this.doClose);
	    Object(dom_["off"])(reference, 'mousedown', this.doShow);
	    Object(dom_["off"])(reference, 'mouseup', this.doClose);
	    Object(dom_["off"])(reference, 'mouseleave', this.handleMouseLeave);
	    Object(dom_["off"])(reference, 'mouseenter', this.handleMouseEnter);
	    Object(dom_["off"])(document, 'click', this.handleDocumentClick);
	  }
	});
	// CONCATENATED MODULE: ./packages/popover/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/popover/src/main.vue





	/* normalize component */

	var main_component = normalizeComponent(
	  src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_52060272_render,
	  mainvue_type_template_id_52060272_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	main_component.options.__file = "packages/popover/src/main.vue";
	/* harmony default export */ var main = (main_component.exports);
	// CONCATENATED MODULE: ./packages/popover/src/directive.js
	var getReference = function getReference(el, binding, vnode) {
	  var _ref = binding.expression ? binding.value : binding.arg;
	  var popper = vnode.context.$refs[_ref];
	  if (popper) {
	    if (Array.isArray(popper)) {
	      popper[0].$refs.reference = el;
	    } else {
	      popper.$refs.reference = el;
	    }
	  }
	};

	/* harmony default export */ var directive = ({
	  bind: function bind(el, binding, vnode) {
	    getReference(el, binding, vnode);
	  },
	  inserted: function inserted(el, binding, vnode) {
	    getReference(el, binding, vnode);
	  }
	});
	// CONCATENATED MODULE: ./packages/popover/index.js




	external_vue_default.a.directive('popover', directive);

	/* istanbul ignore next */
	main.install = function (Vue) {
	  Vue.directive('popover', directive);
	  Vue.component(main.name, main);
	};
	main.directive = directive;

	/* harmony default export */ var popover = (main);
	// CONCATENATED MODULE: ./packages/tooltip/src/main.js






	/* harmony default export */ var src_main = ({
	  name: 'ElTooltip',

	  mixins: [vue_popper_default.a],

	  props: {
	    openDelay: {
	      type: Number,
	      default: 0
	    },
	    disabled: Boolean,
	    manual: Boolean,
	    effect: {
	      type: String,
	      default: 'dark'
	    },
	    arrowOffset: {
	      type: Number,
	      default: 0
	    },
	    popperClass: String,
	    content: String,
	    visibleArrow: {
	      default: true
	    },
	    transition: {
	      type: String,
	      default: 'el-fade-in-linear'
	    },
	    popperOptions: {
	      default: function _default() {
	        return {
	          boundariesPadding: 10,
	          gpuAcceleration: false
	        };
	      }
	    },
	    enterable: {
	      type: Boolean,
	      default: true
	    },
	    hideAfter: {
	      type: Number,
	      default: 0
	    },
	    tabindex: {
	      type: Number,
	      default: 0
	    }
	  },

	  data: function data() {
	    return {
	      tooltipId: 'el-tooltip-' + Object(util_["generateId"])(),
	      timeoutPending: null,
	      focusing: false
	    };
	  },
	  beforeCreate: function beforeCreate() {
	    var _this = this;

	    if (this.$isServer) return;

	    this.popperVM = new external_vue_default.a({
	      data: { node: '' },
	      render: function render(h) {
	        return this.node;
	      }
	    }).$mount();

	    this.debounceClose = debounce_default()(200, function () {
	      return _this.handleClosePopper();
	    });
	  },
	  render: function render(h) {
	    var _this2 = this;

	    if (this.popperVM) {
	      this.popperVM.node = h(
	        'transition',
	        {
	          attrs: {
	            name: this.transition
	          },
	          on: {
	            'afterLeave': this.doDestroy
	          }
	        },
	        [h(
	          'div',
	          {
	            on: {
	              'mouseleave': function mouseleave() {
	                _this2.setExpectedState(false);_this2.debounceClose();
	              },
	              'mouseenter': function mouseenter() {
	                _this2.setExpectedState(true);
	              }
	            },

	            ref: 'popper',
	            attrs: { role: 'tooltip',
	              id: this.tooltipId,
	              'aria-hidden': this.disabled || !this.showPopper ? 'true' : 'false'
	            },
	            directives: [{
	              name: 'show',
	              value: !this.disabled && this.showPopper
	            }],

	            'class': ['el-tooltip__popper', 'is-' + this.effect, this.popperClass] },
	          [this.$slots.content || this.content]
	        )]
	      );
	    }

	    var firstElement = this.getFirstElement();
	    if (!firstElement) return null;

	    var data = firstElement.data = firstElement.data || {};
	    data.staticClass = this.addTooltipClass(data.staticClass);

	    return firstElement;
	  },
	  mounted: function mounted() {
	    var _this3 = this;

	    this.referenceElm = this.$el;
	    if (this.$el.nodeType === 1) {
	      this.$el.setAttribute('aria-describedby', this.tooltipId);
	      this.$el.setAttribute('tabindex', this.tabindex);
	      Object(dom_["on"])(this.referenceElm, 'mouseenter', this.show);
	      Object(dom_["on"])(this.referenceElm, 'mouseleave', this.hide);
	      Object(dom_["on"])(this.referenceElm, 'focus', function () {
	        if (!_this3.$slots.default || !_this3.$slots.default.length) {
	          _this3.handleFocus();
	          return;
	        }
	        var instance = _this3.$slots.default[0].componentInstance;
	        if (instance && instance.focus) {
	          instance.focus();
	        } else {
	          _this3.handleFocus();
	        }
	      });
	      Object(dom_["on"])(this.referenceElm, 'blur', this.handleBlur);
	      Object(dom_["on"])(this.referenceElm, 'click', this.removeFocusing);
	    }
	    // fix issue https://github.com/ElemeFE/element/issues/14424
	    if (this.value && this.popperVM) {
	      this.popperVM.$nextTick(function () {
	        if (_this3.value) {
	          _this3.updatePopper();
	        }
	      });
	    }
	  },

	  watch: {
	    focusing: function focusing(val) {
	      if (val) {
	        Object(dom_["addClass"])(this.referenceElm, 'focusing');
	      } else {
	        Object(dom_["removeClass"])(this.referenceElm, 'focusing');
	      }
	    }
	  },
	  methods: {
	    show: function show() {
	      this.setExpectedState(true);
	      this.handleShowPopper();
	    },
	    hide: function hide() {
	      this.setExpectedState(false);
	      this.debounceClose();
	    },
	    handleFocus: function handleFocus() {
	      this.focusing = true;
	      this.show();
	    },
	    handleBlur: function handleBlur() {
	      this.focusing = false;
	      this.hide();
	    },
	    removeFocusing: function removeFocusing() {
	      this.focusing = false;
	    },
	    addTooltipClass: function addTooltipClass(prev) {
	      if (!prev) {
	        return 'el-tooltip';
	      } else {
	        return 'el-tooltip ' + prev.replace('el-tooltip', '');
	      }
	    },
	    handleShowPopper: function handleShowPopper() {
	      var _this4 = this;

	      if (!this.expectedState || this.manual) return;
	      clearTimeout(this.timeout);
	      this.timeout = setTimeout(function () {
	        _this4.showPopper = true;
	      }, this.openDelay);

	      if (this.hideAfter > 0) {
	        this.timeoutPending = setTimeout(function () {
	          _this4.showPopper = false;
	        }, this.hideAfter);
	      }
	    },
	    handleClosePopper: function handleClosePopper() {
	      if (this.enterable && this.expectedState || this.manual) return;
	      clearTimeout(this.timeout);

	      if (this.timeoutPending) {
	        clearTimeout(this.timeoutPending);
	      }
	      this.showPopper = false;

	      if (this.disabled) {
	        this.doDestroy();
	      }
	    },
	    setExpectedState: function setExpectedState(expectedState) {
	      if (expectedState === false) {
	        clearTimeout(this.timeoutPending);
	      }
	      this.expectedState = expectedState;
	    },
	    getFirstElement: function getFirstElement() {
	      var slots = this.$slots.default;
	      if (!Array.isArray(slots)) return null;
	      var element = null;
	      for (var index = 0; index < slots.length; index++) {
	        if (slots[index] && slots[index].tag) {
	          element = slots[index];
	          break;
	        }	      }
	      return element;
	    }
	  },

	  beforeDestroy: function beforeDestroy() {
	    this.popperVM && this.popperVM.$destroy();
	  },
	  destroyed: function destroyed() {
	    var reference = this.referenceElm;
	    if (reference.nodeType === 1) {
	      Object(dom_["off"])(reference, 'mouseenter', this.show);
	      Object(dom_["off"])(reference, 'mouseleave', this.hide);
	      Object(dom_["off"])(reference, 'focus', this.handleFocus);
	      Object(dom_["off"])(reference, 'blur', this.handleBlur);
	      Object(dom_["off"])(reference, 'click', this.removeFocusing);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/tooltip/index.js


	/* istanbul ignore next */
	src_main.install = function (Vue) {
	  Vue.component(src_main.name, src_main);
	};

	/* harmony default export */ var packages_tooltip = (src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/message-box/src/main.vue?vue&type=template&id=6b29b012&
	var mainvue_type_template_id_6b29b012_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("transition", { attrs: { name: "msgbox-fade" } }, [
	    _c(
	      "div",
	      {
	        directives: [
	          {
	            name: "show",
	            rawName: "v-show",
	            value: _vm.visible,
	            expression: "visible"
	          }
	        ],
	        staticClass: "el-message-box__wrapper",
	        attrs: {
	          tabindex: "-1",
	          role: "dialog",
	          "aria-modal": "true",
	          "aria-label": _vm.title || "dialog"
	        },
	        on: {
	          click: function($event) {
	            if ($event.target !== $event.currentTarget) {
	              return null
	            }
	            return _vm.handleWrapperClick($event)
	          }
	        }
	      },
	      [
	        _c(
	          "div",
	          {
	            staticClass: "el-message-box",
	            class: [_vm.customClass, _vm.center && "el-message-box--center"]
	          },
	          [
	            _vm.title !== null
	              ? _c("div", { staticClass: "el-message-box__header" }, [
	                  _c("div", { staticClass: "el-message-box__title" }, [
	                    _vm.icon && _vm.center
	                      ? _c("div", {
	                          class: ["el-message-box__status", _vm.icon]
	                        })
	                      : _vm._e(),
	                    _c("span", [_vm._v(_vm._s(_vm.title))])
	                  ]),
	                  _vm.showClose
	                    ? _c(
	                        "button",
	                        {
	                          staticClass: "el-message-box__headerbtn",
	                          attrs: { type: "button", "aria-label": "Close" },
	                          on: {
	                            click: function($event) {
	                              _vm.handleAction(
	                                _vm.distinguishCancelAndClose
	                                  ? "close"
	                                  : "cancel"
	                              );
	                            },
	                            keydown: function($event) {
	                              if (
	                                !("button" in $event) &&
	                                _vm._k(
	                                  $event.keyCode,
	                                  "enter",
	                                  13,
	                                  $event.key,
	                                  "Enter"
	                                )
	                              ) {
	                                return null
	                              }
	                              _vm.handleAction(
	                                _vm.distinguishCancelAndClose
	                                  ? "close"
	                                  : "cancel"
	                              );
	                            }
	                          }
	                        },
	                        [
	                          _c("i", {
	                            staticClass: "el-message-box__close el-icon-close"
	                          })
	                        ]
	                      )
	                    : _vm._e()
	                ])
	              : _vm._e(),
	            _c("div", { staticClass: "el-message-box__content" }, [
	              _c("div", { staticClass: "el-message-box__container" }, [
	                _vm.icon && !_vm.center && _vm.message !== ""
	                  ? _c("div", { class: ["el-message-box__status", _vm.icon] })
	                  : _vm._e(),
	                _vm.message !== ""
	                  ? _c(
	                      "div",
	                      { staticClass: "el-message-box__message" },
	                      [
	                        _vm._t("default", [
	                          !_vm.dangerouslyUseHTMLString
	                            ? _c("p", [_vm._v(_vm._s(_vm.message))])
	                            : _c("p", {
	                                domProps: { innerHTML: _vm._s(_vm.message) }
	                              })
	                        ])
	                      ],
	                      2
	                    )
	                  : _vm._e()
	              ]),
	              _c(
	                "div",
	                {
	                  directives: [
	                    {
	                      name: "show",
	                      rawName: "v-show",
	                      value: _vm.showInput,
	                      expression: "showInput"
	                    }
	                  ],
	                  staticClass: "el-message-box__input"
	                },
	                [
	                  _c("el-input", {
	                    ref: "input",
	                    attrs: {
	                      type: _vm.inputType,
	                      placeholder: _vm.inputPlaceholder
	                    },
	                    nativeOn: {
	                      keydown: function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k(
	                            $event.keyCode,
	                            "enter",
	                            13,
	                            $event.key,
	                            "Enter"
	                          )
	                        ) {
	                          return null
	                        }
	                        return _vm.handleInputEnter($event)
	                      }
	                    },
	                    model: {
	                      value: _vm.inputValue,
	                      callback: function($$v) {
	                        _vm.inputValue = $$v;
	                      },
	                      expression: "inputValue"
	                    }
	                  }),
	                  _c(
	                    "div",
	                    {
	                      staticClass: "el-message-box__errormsg",
	                      style: {
	                        visibility: !!_vm.editorErrorMessage
	                          ? "visible"
	                          : "hidden"
	                      }
	                    },
	                    [_vm._v(_vm._s(_vm.editorErrorMessage))]
	                  )
	                ],
	                1
	              )
	            ]),
	            _c(
	              "div",
	              { staticClass: "el-message-box__btns" },
	              [
	                _vm.showCancelButton
	                  ? _c(
	                      "el-button",
	                      {
	                        class: [_vm.cancelButtonClasses],
	                        attrs: {
	                          loading: _vm.cancelButtonLoading,
	                          round: _vm.roundButton,
	                          size: "small"
	                        },
	                        on: {
	                          keydown: function($event) {
	                            if (
	                              !("button" in $event) &&
	                              _vm._k(
	                                $event.keyCode,
	                                "enter",
	                                13,
	                                $event.key,
	                                "Enter"
	                              )
	                            ) {
	                              return null
	                            }
	                            _vm.handleAction("cancel");
	                          }
	                        },
	                        nativeOn: {
	                          click: function($event) {
	                            _vm.handleAction("cancel");
	                          }
	                        }
	                      },
	                      [
	                        _vm._v(
	                          "\n          " +
	                            _vm._s(
	                              _vm.cancelButtonText ||
	                                _vm.t("el.messagebox.cancel")
	                            ) +
	                            "\n        "
	                        )
	                      ]
	                    )
	                  : _vm._e(),
	                _c(
	                  "el-button",
	                  {
	                    directives: [
	                      {
	                        name: "show",
	                        rawName: "v-show",
	                        value: _vm.showConfirmButton,
	                        expression: "showConfirmButton"
	                      }
	                    ],
	                    ref: "confirm",
	                    class: [_vm.confirmButtonClasses],
	                    attrs: {
	                      loading: _vm.confirmButtonLoading,
	                      round: _vm.roundButton,
	                      size: "small"
	                    },
	                    on: {
	                      keydown: function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k(
	                            $event.keyCode,
	                            "enter",
	                            13,
	                            $event.key,
	                            "Enter"
	                          )
	                        ) {
	                          return null
	                        }
	                        _vm.handleAction("confirm");
	                      }
	                    },
	                    nativeOn: {
	                      click: function($event) {
	                        _vm.handleAction("confirm");
	                      }
	                    }
	                  },
	                  [
	                    _vm._v(
	                      "\n          " +
	                        _vm._s(
	                          _vm.confirmButtonText ||
	                            _vm.t("el.messagebox.confirm")
	                        ) +
	                        "\n        "
	                    )
	                  ]
	                )
	              ],
	              1
	            )
	          ]
	        )
	      ]
	    )
	  ])
	};
	var mainvue_type_template_id_6b29b012_staticRenderFns = [];
	mainvue_type_template_id_6b29b012_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/message-box/src/main.vue?vue&type=template&id=6b29b012&

	// EXTERNAL MODULE: external "element-ui/lib/locale"
	var lib_locale_ = __webpack_require__(12);
	var lib_locale_default = /*#__PURE__*/__webpack_require__.n(lib_locale_);

	// EXTERNAL MODULE: external "element-ui/lib/utils/aria-dialog"
	var aria_dialog_ = __webpack_require__(40);
	var aria_dialog_default = /*#__PURE__*/__webpack_require__.n(aria_dialog_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/message-box/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//









	var messageBox = void 0;
	var typeMap = {
	  success: 'success',
	  info: 'info',
	  warning: 'warning',
	  error: 'error'
	};

	/* harmony default export */ var message_box_src_mainvue_type_script_lang_js_ = ({
	  mixins: [popup_default.a, locale_default.a],

	  props: {
	    modal: {
	      default: true
	    },
	    lockScroll: {
	      default: true
	    },
	    showClose: {
	      type: Boolean,
	      default: true
	    },
	    closeOnClickModal: {
	      default: true
	    },
	    closeOnPressEscape: {
	      default: true
	    },
	    closeOnHashChange: {
	      default: true
	    },
	    center: {
	      default: false,
	      type: Boolean
	    },
	    roundButton: {
	      default: false,
	      type: Boolean
	    }
	  },

	  components: {
	    ElInput: input_default.a,
	    ElButton: button_default.a
	  },

	  computed: {
	    icon: function icon() {
	      var type = this.type,
	          iconClass = this.iconClass;

	      return iconClass || (type && typeMap[type] ? 'el-icon-' + typeMap[type] : '');
	    },
	    confirmButtonClasses: function confirmButtonClasses() {
	      return 'el-button--primary ' + this.confirmButtonClass;
	    },
	    cancelButtonClasses: function cancelButtonClasses() {
	      return '' + this.cancelButtonClass;
	    }
	  },

	  methods: {
	    getSafeClose: function getSafeClose() {
	      var _this = this;

	      var currentId = this.uid;
	      return function () {
	        _this.$nextTick(function () {
	          if (currentId === _this.uid) _this.doClose();
	        });
	      };
	    },
	    doClose: function doClose() {
	      var _this2 = this;

	      if (!this.visible) return;
	      this.visible = false;
	      this._closing = true;

	      this.onClose && this.onClose();
	      messageBox.closeDialog(); // 解绑
	      if (this.lockScroll) {
	        setTimeout(this.restoreBodyStyle, 200);
	      }
	      this.opened = false;
	      this.doAfterClose();
	      setTimeout(function () {
	        if (_this2.action) _this2.callback(_this2.action, _this2);
	      });
	    },
	    handleWrapperClick: function handleWrapperClick() {
	      if (this.closeOnClickModal) {
	        this.handleAction(this.distinguishCancelAndClose ? 'close' : 'cancel');
	      }
	    },
	    handleInputEnter: function handleInputEnter() {
	      if (this.inputType !== 'textarea') {
	        return this.handleAction('confirm');
	      }
	    },
	    handleAction: function handleAction(action) {
	      if (this.$type === 'prompt' && action === 'confirm' && !this.validate()) {
	        return;
	      }
	      this.action = action;
	      if (typeof this.beforeClose === 'function') {
	        this.close = this.getSafeClose();
	        this.beforeClose(action, this, this.close);
	      } else {
	        this.doClose();
	      }
	    },
	    validate: function validate() {
	      if (this.$type === 'prompt') {
	        var inputPattern = this.inputPattern;
	        if (inputPattern && !inputPattern.test(this.inputValue || '')) {
	          this.editorErrorMessage = this.inputErrorMessage || Object(lib_locale_["t"])('el.messagebox.error');
	          Object(dom_["addClass"])(this.getInputElement(), 'invalid');
	          return false;
	        }
	        var inputValidator = this.inputValidator;
	        if (typeof inputValidator === 'function') {
	          var validateResult = inputValidator(this.inputValue);
	          if (validateResult === false) {
	            this.editorErrorMessage = this.inputErrorMessage || Object(lib_locale_["t"])('el.messagebox.error');
	            Object(dom_["addClass"])(this.getInputElement(), 'invalid');
	            return false;
	          }
	          if (typeof validateResult === 'string') {
	            this.editorErrorMessage = validateResult;
	            Object(dom_["addClass"])(this.getInputElement(), 'invalid');
	            return false;
	          }
	        }
	      }
	      this.editorErrorMessage = '';
	      Object(dom_["removeClass"])(this.getInputElement(), 'invalid');
	      return true;
	    },
	    getFirstFocus: function getFirstFocus() {
	      var btn = this.$el.querySelector('.el-message-box__btns .el-button');
	      var title = this.$el.querySelector('.el-message-box__btns .el-message-box__title');
	      return btn || title;
	    },
	    getInputElement: function getInputElement() {
	      var inputRefs = this.$refs.input.$refs;
	      return inputRefs.input || inputRefs.textarea;
	    },
	    handleClose: function handleClose() {
	      this.handleAction('close');
	    }
	  },

	  watch: {
	    inputValue: {
	      immediate: true,
	      handler: function handler(val) {
	        var _this3 = this;

	        this.$nextTick(function (_) {
	          if (_this3.$type === 'prompt' && val !== null) {
	            _this3.validate();
	          }
	        });
	      }
	    },

	    visible: function visible(val) {
	      var _this4 = this;

	      if (val) {
	        this.uid++;
	        if (this.$type === 'alert' || this.$type === 'confirm') {
	          this.$nextTick(function () {
	            _this4.$refs.confirm.$el.focus();
	          });
	        }
	        this.focusAfterClosed = document.activeElement;
	        messageBox = new aria_dialog_default.a(this.$el, this.focusAfterClosed, this.getFirstFocus());
	      }

	      // prompt
	      if (this.$type !== 'prompt') return;
	      if (val) {
	        setTimeout(function () {
	          if (_this4.$refs.input && _this4.$refs.input.$el) {
	            _this4.getInputElement().focus();
	          }
	        }, 500);
	      } else {
	        this.editorErrorMessage = '';
	        Object(dom_["removeClass"])(this.getInputElement(), 'invalid');
	      }
	    }
	  },

	  mounted: function mounted() {
	    var _this5 = this;

	    this.$nextTick(function () {
	      if (_this5.closeOnHashChange) {
	        window.addEventListener('hashchange', _this5.close);
	      }
	    });
	  },
	  beforeDestroy: function beforeDestroy() {
	    if (this.closeOnHashChange) {
	      window.removeEventListener('hashchange', this.close);
	    }
	    setTimeout(function () {
	      messageBox.closeDialog();
	    });
	  },
	  data: function data() {
	    return {
	      uid: 1,
	      title: undefined,
	      message: '',
	      type: '',
	      iconClass: '',
	      customClass: '',
	      showInput: false,
	      inputValue: null,
	      inputPlaceholder: '',
	      inputType: 'text',
	      inputPattern: null,
	      inputValidator: null,
	      inputErrorMessage: '',
	      showConfirmButton: true,
	      showCancelButton: false,
	      action: '',
	      confirmButtonText: '',
	      cancelButtonText: '',
	      confirmButtonLoading: false,
	      cancelButtonLoading: false,
	      confirmButtonClass: '',
	      confirmButtonDisabled: false,
	      cancelButtonClass: '',
	      editorErrorMessage: null,
	      callback: null,
	      dangerouslyUseHTMLString: false,
	      focusAfterClosed: null,
	      isOnComposition: false,
	      distinguishCancelAndClose: false
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/message-box/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_message_box_src_mainvue_type_script_lang_js_ = (message_box_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/message-box/src/main.vue





	/* normalize component */

	var src_main_component = normalizeComponent(
	  packages_message_box_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_6b29b012_render,
	  mainvue_type_template_id_6b29b012_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	src_main_component.options.__file = "packages/message-box/src/main.vue";
	/* harmony default export */ var message_box_src_main = (src_main_component.exports);
	// EXTERNAL MODULE: external "element-ui/lib/utils/vdom"
	var vdom_ = __webpack_require__(22);

	// CONCATENATED MODULE: ./packages/message-box/src/main.js
	var main_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var main_defaults = {
	  title: null,
	  message: '',
	  type: '',
	  iconClass: '',
	  showInput: false,
	  showClose: true,
	  modalFade: true,
	  lockScroll: true,
	  closeOnClickModal: true,
	  closeOnPressEscape: true,
	  closeOnHashChange: true,
	  inputValue: null,
	  inputPlaceholder: '',
	  inputType: 'text',
	  inputPattern: null,
	  inputValidator: null,
	  inputErrorMessage: '',
	  showConfirmButton: true,
	  showCancelButton: false,
	  confirmButtonPosition: 'right',
	  confirmButtonHighlight: false,
	  cancelButtonHighlight: false,
	  confirmButtonText: '',
	  cancelButtonText: '',
	  confirmButtonClass: '',
	  cancelButtonClass: '',
	  customClass: '',
	  beforeClose: null,
	  dangerouslyUseHTMLString: false,
	  center: false,
	  roundButton: false,
	  distinguishCancelAndClose: false
	};






	var MessageBoxConstructor = external_vue_default.a.extend(message_box_src_main);

	var currentMsg = void 0,
	    main_instance = void 0;
	var msgQueue = [];

	var defaultCallback = function defaultCallback(action) {
	  if (currentMsg) {
	    var callback = currentMsg.callback;
	    if (typeof callback === 'function') {
	      if (main_instance.showInput) {
	        callback(main_instance.inputValue, action);
	      } else {
	        callback(action);
	      }
	    }
	    if (currentMsg.resolve) {
	      if (action === 'confirm') {
	        if (main_instance.showInput) {
	          currentMsg.resolve({ value: main_instance.inputValue, action: action });
	        } else {
	          currentMsg.resolve(action);
	        }
	      } else if (currentMsg.reject && (action === 'cancel' || action === 'close')) {
	        currentMsg.reject(action);
	      }
	    }
	  }
	};

	var initInstance = function initInstance() {
	  main_instance = new MessageBoxConstructor({
	    el: document.createElement('div')
	  });

	  main_instance.callback = defaultCallback;
	};

	var main_showNextMsg = function showNextMsg() {
	  if (!main_instance) {
	    initInstance();
	  }
	  main_instance.action = '';

	  if (!main_instance.visible || main_instance.closeTimer) {
	    if (msgQueue.length > 0) {
	      currentMsg = msgQueue.shift();

	      var options = currentMsg.options;
	      for (var prop in options) {
	        if (options.hasOwnProperty(prop)) {
	          main_instance[prop] = options[prop];
	        }
	      }
	      if (options.callback === undefined) {
	        main_instance.callback = defaultCallback;
	      }

	      var oldCb = main_instance.callback;
	      main_instance.callback = function (action, instance) {
	        oldCb(action, instance);
	        showNextMsg();
	      };
	      if (Object(vdom_["isVNode"])(main_instance.message)) {
	        main_instance.$slots.default = [main_instance.message];
	        main_instance.message = null;
	      } else {
	        delete main_instance.$slots.default;
	      }
	      ['modal', 'showClose', 'closeOnClickModal', 'closeOnPressEscape', 'closeOnHashChange'].forEach(function (prop) {
	        if (main_instance[prop] === undefined) {
	          main_instance[prop] = true;
	        }
	      });
	      document.body.appendChild(main_instance.$el);

	      external_vue_default.a.nextTick(function () {
	        main_instance.visible = true;
	      });
	    }
	  }
	};

	var main_MessageBox = function MessageBox(options, callback) {
	  if (external_vue_default.a.prototype.$isServer) return;
	  if (typeof options === 'string' || Object(vdom_["isVNode"])(options)) {
	    options = {
	      message: options
	    };
	    if (typeof arguments[1] === 'string') {
	      options.title = arguments[1];
	    }
	  } else if (options.callback && !callback) {
	    callback = options.callback;
	  }

	  if (typeof Promise !== 'undefined') {
	    return new Promise(function (resolve, reject) {
	      // eslint-disable-line
	      msgQueue.push({
	        options: merge_default()({}, main_defaults, MessageBox.defaults, options),
	        callback: callback,
	        resolve: resolve,
	        reject: reject
	      });

	      main_showNextMsg();
	    });
	  } else {
	    msgQueue.push({
	      options: merge_default()({}, main_defaults, MessageBox.defaults, options),
	      callback: callback
	    });

	    main_showNextMsg();
	  }
	};

	main_MessageBox.setDefaults = function (defaults) {
	  main_MessageBox.defaults = defaults;
	};

	main_MessageBox.alert = function (message, title, options) {
	  if ((typeof title === 'undefined' ? 'undefined' : main_typeof(title)) === 'object') {
	    options = title;
	    title = '';
	  } else if (title === undefined) {
	    title = '';
	  }
	  return main_MessageBox(merge_default()({
	    title: title,
	    message: message,
	    $type: 'alert',
	    closeOnPressEscape: false,
	    closeOnClickModal: false
	  }, options));
	};

	main_MessageBox.confirm = function (message, title, options) {
	  if ((typeof title === 'undefined' ? 'undefined' : main_typeof(title)) === 'object') {
	    options = title;
	    title = '';
	  } else if (title === undefined) {
	    title = '';
	  }
	  return main_MessageBox(merge_default()({
	    title: title,
	    message: message,
	    $type: 'confirm',
	    showCancelButton: true
	  }, options));
	};

	main_MessageBox.prompt = function (message, title, options) {
	  if ((typeof title === 'undefined' ? 'undefined' : main_typeof(title)) === 'object') {
	    options = title;
	    title = '';
	  } else if (title === undefined) {
	    title = '';
	  }
	  return main_MessageBox(merge_default()({
	    title: title,
	    message: message,
	    showCancelButton: true,
	    showInput: true,
	    $type: 'prompt'
	  }, options));
	};

	main_MessageBox.close = function () {
	  main_instance.doClose();
	  main_instance.visible = false;
	  msgQueue = [];
	  currentMsg = null;
	};

	/* harmony default export */ var packages_message_box_src_main = (main_MessageBox);

	// CONCATENATED MODULE: ./packages/message-box/index.js

	/* harmony default export */ var message_box = (packages_message_box_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb.vue?vue&type=template&id=4b464c06&
	var breadcrumbvue_type_template_id_4b464c06_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-breadcrumb",
	      attrs: { "aria-label": "Breadcrumb", role: "navigation" }
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var breadcrumbvue_type_template_id_4b464c06_staticRenderFns = [];
	breadcrumbvue_type_template_id_4b464c06_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb.vue?vue&type=template&id=4b464c06&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//

	/* harmony default export */ var breadcrumbvue_type_script_lang_js_ = ({
	  name: 'ElBreadcrumb',

	  props: {
	    separator: {
	      type: String,
	      default: '/'
	    },
	    separatorClass: {
	      type: String,
	      default: ''
	    }
	  },

	  provide: function provide() {
	    return {
	      elBreadcrumb: this
	    };
	  },
	  mounted: function mounted() {
	    var items = this.$el.querySelectorAll('.el-breadcrumb__item');
	    if (items.length) {
	      items[items.length - 1].setAttribute('aria-current', 'page');
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_breadcrumbvue_type_script_lang_js_ = (breadcrumbvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb.vue





	/* normalize component */

	var breadcrumb_component = normalizeComponent(
	  src_breadcrumbvue_type_script_lang_js_,
	  breadcrumbvue_type_template_id_4b464c06_render,
	  breadcrumbvue_type_template_id_4b464c06_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	breadcrumb_component.options.__file = "packages/breadcrumb/src/breadcrumb.vue";
	/* harmony default export */ var breadcrumb = (breadcrumb_component.exports);
	// CONCATENATED MODULE: ./packages/breadcrumb/index.js


	/* istanbul ignore next */
	breadcrumb.install = function (Vue) {
	  Vue.component(breadcrumb.name, breadcrumb);
	};

	/* harmony default export */ var packages_breadcrumb = (breadcrumb);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=template&id=fcf9eaac&
	var breadcrumb_itemvue_type_template_id_fcf9eaac_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("span", { staticClass: "el-breadcrumb__item" }, [
	    _c(
	      "span",
	      {
	        ref: "link",
	        class: ["el-breadcrumb__inner", _vm.to ? "is-link" : ""],
	        attrs: { role: "link" }
	      },
	      [_vm._t("default")],
	      2
	    ),
	    _vm.separatorClass
	      ? _c("i", {
	          staticClass: "el-breadcrumb__separator",
	          class: _vm.separatorClass
	        })
	      : _c(
	          "span",
	          {
	            staticClass: "el-breadcrumb__separator",
	            attrs: { role: "presentation" }
	          },
	          [_vm._v(_vm._s(_vm.separator))]
	        )
	  ])
	};
	var breadcrumb_itemvue_type_template_id_fcf9eaac_staticRenderFns = [];
	breadcrumb_itemvue_type_template_id_fcf9eaac_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=template&id=fcf9eaac&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var breadcrumb_itemvue_type_script_lang_js_ = ({
	  name: 'ElBreadcrumbItem',
	  props: {
	    to: {},
	    replace: Boolean
	  },
	  data: function data() {
	    return {
	      separator: '',
	      separatorClass: ''
	    };
	  },


	  inject: ['elBreadcrumb'],

	  mounted: function mounted() {
	    var _this = this;

	    this.separator = this.elBreadcrumb.separator;
	    this.separatorClass = this.elBreadcrumb.separatorClass;
	    var link = this.$refs.link;
	    link.setAttribute('role', 'link');
	    link.addEventListener('click', function (_) {
	      var to = _this.to,
	          $router = _this.$router;

	      if (!to || !$router) return;
	      _this.replace ? $router.replace(to) : $router.push(to);
	    });
	  }
	});
	// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_breadcrumb_itemvue_type_script_lang_js_ = (breadcrumb_itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb-item.vue





	/* normalize component */

	var breadcrumb_item_component = normalizeComponent(
	  src_breadcrumb_itemvue_type_script_lang_js_,
	  breadcrumb_itemvue_type_template_id_fcf9eaac_render,
	  breadcrumb_itemvue_type_template_id_fcf9eaac_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	breadcrumb_item_component.options.__file = "packages/breadcrumb/src/breadcrumb-item.vue";
	/* harmony default export */ var breadcrumb_item = (breadcrumb_item_component.exports);
	// CONCATENATED MODULE: ./packages/breadcrumb-item/index.js


	/* istanbul ignore next */
	breadcrumb_item.install = function (Vue) {
	  Vue.component(breadcrumb_item.name, breadcrumb_item);
	};

	/* harmony default export */ var packages_breadcrumb_item = (breadcrumb_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form.vue?vue&type=template&id=a1b5ff34&
	var formvue_type_template_id_a1b5ff34_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "form",
	    {
	      staticClass: "el-form",
	      class: [
	        _vm.labelPosition ? "el-form--label-" + _vm.labelPosition : "",
	        { "el-form--inline": _vm.inline }
	      ]
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var formvue_type_template_id_a1b5ff34_staticRenderFns = [];
	formvue_type_template_id_a1b5ff34_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/form/src/form.vue?vue&type=template&id=a1b5ff34&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var formvue_type_script_lang_js_ = ({
	  name: 'ElForm',

	  componentName: 'ElForm',

	  provide: function provide() {
	    return {
	      elForm: this
	    };
	  },


	  props: {
	    model: Object,
	    rules: Object,
	    labelPosition: String,
	    labelWidth: String,
	    labelSuffix: {
	      type: String,
	      default: ''
	    },
	    inline: Boolean,
	    inlineMessage: Boolean,
	    statusIcon: Boolean,
	    showMessage: {
	      type: Boolean,
	      default: true
	    },
	    size: String,
	    disabled: Boolean,
	    validateOnRuleChange: {
	      type: Boolean,
	      default: true
	    },
	    hideRequiredAsterisk: {
	      type: Boolean,
	      default: false
	    }
	  },
	  watch: {
	    rules: function rules() {
	      // remove then add event listeners on form-item after form rules change
	      this.fields.forEach(function (field) {
	        field.removeValidateEvents();
	        field.addValidateEvents();
	      });

	      if (this.validateOnRuleChange) {
	        this.validate(function () {});
	      }
	    }
	  },
	  computed: {
	    autoLabelWidth: function autoLabelWidth() {
	      if (!this.potentialLabelWidthArr.length) return 0;
	      var max = Math.max.apply(Math, this.potentialLabelWidthArr);
	      return max ? max + 'px' : '';
	    }
	  },
	  data: function data() {
	    return {
	      fields: [],
	      potentialLabelWidthArr: [] // use this array to calculate auto width
	    };
	  },
	  created: function created() {
	    var _this = this;

	    this.$on('el.form.addField', function (field) {
	      if (field) {
	        _this.fields.push(field);
	      }
	    });
	    /* istanbul ignore next */
	    this.$on('el.form.removeField', function (field) {
	      if (field.prop) {
	        _this.fields.splice(_this.fields.indexOf(field), 1);
	      }
	    });
	  },

	  methods: {
	    resetFields: function resetFields() {
	      if (!this.model) {
	        console.warn('[Element Warn][Form]model is required for resetFields to work.');
	        return;
	      }
	      this.fields.forEach(function (field) {
	        field.resetField();
	      });
	    },
	    clearValidate: function clearValidate() {
	      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

	      var fields = props.length ? typeof props === 'string' ? this.fields.filter(function (field) {
	        return props === field.prop;
	      }) : this.fields.filter(function (field) {
	        return props.indexOf(field.prop) > -1;
	      }) : this.fields;
	      fields.forEach(function (field) {
	        field.clearValidate();
	      });
	    },
	    validate: function validate(callback) {
	      var _this2 = this;

	      if (!this.model) {
	        console.warn('[Element Warn][Form]model is required for validate to work!');
	        return;
	      }

	      var promise = void 0;
	      // if no callback, return promise
	      if (typeof callback !== 'function' && window.Promise) {
	        promise = new window.Promise(function (resolve, reject) {
	          callback = function callback(valid, invalidFields) {
	            valid ? resolve(valid) : reject(invalidFields);
	          };
	        });
	      }

	      var valid = true;
	      var count = 0;
	      // 如果需要验证的fields为空，调用验证时立刻返回callback
	      if (this.fields.length === 0 && callback) {
	        callback(true);
	      }
	      var invalidFields = {};
	      this.fields.forEach(function (field) {
	        field.validate('', function (message, field) {
	          if (message) {
	            valid = false;
	          }
	          invalidFields = merge_default()({}, invalidFields, field);
	          if (typeof callback === 'function' && ++count === _this2.fields.length) {
	            callback(valid, invalidFields);
	          }
	        });
	      });

	      if (promise) {
	        return promise;
	      }
	    },
	    validateField: function validateField(props, cb) {
	      props = [].concat(props);
	      var fields = this.fields.filter(function (field) {
	        return props.indexOf(field.prop) !== -1;
	      });
	      if (!fields.length) {
	        console.warn('[Element Warn]please pass correct props!');
	        return;
	      }

	      fields.forEach(function (field) {
	        field.validate('', cb);
	      });
	    },
	    getLabelWidthIndex: function getLabelWidthIndex(width) {
	      var index = this.potentialLabelWidthArr.indexOf(width);
	      // it's impossible
	      if (index === -1) {
	        throw new Error('[ElementForm]unpected width ', width);
	      }
	      return index;
	    },
	    registerLabelWidth: function registerLabelWidth(val, oldVal) {
	      if (val && oldVal) {
	        var index = this.getLabelWidthIndex(oldVal);
	        this.potentialLabelWidthArr.splice(index, 1, val);
	      } else if (val) {
	        this.potentialLabelWidthArr.push(val);
	      }
	    },
	    deregisterLabelWidth: function deregisterLabelWidth(val) {
	      var index = this.getLabelWidthIndex(val);
	      this.potentialLabelWidthArr.splice(index, 1);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/form/src/form.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_formvue_type_script_lang_js_ = (formvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/form/src/form.vue





	/* normalize component */

	var form_component = normalizeComponent(
	  src_formvue_type_script_lang_js_,
	  formvue_type_template_id_a1b5ff34_render,
	  formvue_type_template_id_a1b5ff34_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	form_component.options.__file = "packages/form/src/form.vue";
	/* harmony default export */ var src_form = (form_component.exports);
	// CONCATENATED MODULE: ./packages/form/index.js


	/* istanbul ignore next */
	src_form.install = function (Vue) {
	  Vue.component(src_form.name, src_form);
	};

	/* harmony default export */ var packages_form = (src_form);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form-item.vue?vue&type=template&id=b6f3db6c&
	var form_itemvue_type_template_id_b6f3db6c_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-form-item",
	      class: [
	        {
	          "el-form-item--feedback": _vm.elForm && _vm.elForm.statusIcon,
	          "is-error": _vm.validateState === "error",
	          "is-validating": _vm.validateState === "validating",
	          "is-success": _vm.validateState === "success",
	          "is-required": _vm.isRequired || _vm.required,
	          "is-no-asterisk": _vm.elForm && _vm.elForm.hideRequiredAsterisk
	        },
	        _vm.sizeClass ? "el-form-item--" + _vm.sizeClass : ""
	      ]
	    },
	    [
	      _c(
	        "label-wrap",
	        {
	          attrs: {
	            "is-auto-width": _vm.labelStyle && _vm.labelStyle.width === "auto",
	            "update-all": _vm.form.labelWidth === "auto"
	          }
	        },
	        [
	          _vm.label || _vm.$slots.label
	            ? _c(
	                "label",
	                {
	                  staticClass: "el-form-item__label",
	                  style: _vm.labelStyle,
	                  attrs: { for: _vm.labelFor }
	                },
	                [
	                  _vm._t("label", [
	                    _vm._v(_vm._s(_vm.label + _vm.form.labelSuffix))
	                  ])
	                ],
	                2
	              )
	            : _vm._e()
	        ]
	      ),
	      _c(
	        "div",
	        { staticClass: "el-form-item__content", style: _vm.contentStyle },
	        [
	          _vm._t("default"),
	          _c(
	            "transition",
	            { attrs: { name: "el-zoom-in-top" } },
	            [
	              _vm.validateState === "error" &&
	              _vm.showMessage &&
	              _vm.form.showMessage
	                ? _vm._t(
	                    "error",
	                    [
	                      _c(
	                        "div",
	                        {
	                          staticClass: "el-form-item__error",
	                          class: {
	                            "el-form-item__error--inline":
	                              typeof _vm.inlineMessage === "boolean"
	                                ? _vm.inlineMessage
	                                : (_vm.elForm && _vm.elForm.inlineMessage) ||
	                                  false
	                          }
	                        },
	                        [
	                          _vm._v(
	                            "\n          " +
	                              _vm._s(_vm.validateMessage) +
	                              "\n        "
	                          )
	                        ]
	                      )
	                    ],
	                    { error: _vm.validateMessage }
	                  )
	                : _vm._e()
	            ],
	            2
	          )
	        ],
	        2
	      )
	    ],
	    1
	  )
	};
	var form_itemvue_type_template_id_b6f3db6c_staticRenderFns = [];
	form_itemvue_type_template_id_b6f3db6c_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/form/src/form-item.vue?vue&type=template&id=b6f3db6c&

	// EXTERNAL MODULE: external "async-validator"
	var external_async_validator_ = __webpack_require__(41);
	var external_async_validator_default = /*#__PURE__*/__webpack_require__.n(external_async_validator_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/label-wrap.vue?vue&type=script&lang=js&


	/* harmony default export */ var label_wrapvue_type_script_lang_js_ = ({
	  props: {
	    isAutoWidth: Boolean,
	    updateAll: Boolean
	  },

	  inject: ['elForm', 'elFormItem'],

	  render: function render() {
	    var h = arguments[0];

	    var slots = this.$slots.default;
	    if (!slots) return null;
	    if (this.isAutoWidth) {
	      var autoLabelWidth = this.elForm.autoLabelWidth;
	      var style = {};
	      if (autoLabelWidth && autoLabelWidth !== 'auto') {
	        var marginLeft = parseInt(autoLabelWidth, 10) - this.computedWidth;
	        if (marginLeft) {
	          style.marginLeft = marginLeft + 'px';
	        }
	      }
	      return h(
	        'div',
	        { 'class': 'el-form-item__label-wrap', style: style },
	        [slots]
	      );
	    } else {
	      return slots[0];
	    }
	  },


	  methods: {
	    getLabelWidth: function getLabelWidth() {
	      if (this.$el && this.$el.firstElementChild) {
	        var computedWidth = window.getComputedStyle(this.$el.firstElementChild).width;
	        return Math.ceil(parseFloat(computedWidth));
	      } else {
	        return 0;
	      }
	    },
	    updateLabelWidth: function updateLabelWidth() {
	      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'update';

	      if (this.$slots.default && this.isAutoWidth && this.$el.firstElementChild) {
	        if (action === 'update') {
	          this.computedWidth = this.getLabelWidth();
	        } else if (action === 'remove') {
	          this.elForm.deregisterLabelWidth(this.computedWidth);
	        }
	      }
	    }
	  },

	  watch: {
	    computedWidth: function computedWidth(val, oldVal) {
	      if (this.updateAll) {
	        this.elForm.registerLabelWidth(val, oldVal);
	        this.elFormItem.updateComputedLabelWidth(val);
	      }
	    }
	  },

	  data: function data() {
	    return {
	      computedWidth: 0
	    };
	  },
	  mounted: function mounted() {
	    this.updateLabelWidth('update');
	  },
	  updated: function updated() {
	    this.updateLabelWidth('update');
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.updateLabelWidth('remove');
	  }
	});
	// CONCATENATED MODULE: ./packages/form/src/label-wrap.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_label_wrapvue_type_script_lang_js_ = (label_wrapvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/form/src/label-wrap.vue
	var label_wrap_render, label_wrap_staticRenderFns;




	/* normalize component */

	var label_wrap_component = normalizeComponent(
	  src_label_wrapvue_type_script_lang_js_,
	  label_wrap_render,
	  label_wrap_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	label_wrap_component.options.__file = "packages/form/src/label-wrap.vue";
	/* harmony default export */ var label_wrap = (label_wrap_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form-item.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	/* harmony default export */ var form_itemvue_type_script_lang_js_ = ({
	  name: 'ElFormItem',

	  componentName: 'ElFormItem',

	  mixins: [emitter_default.a],

	  provide: function provide() {
	    return {
	      elFormItem: this
	    };
	  },


	  inject: ['elForm'],

	  props: {
	    label: String,
	    labelWidth: String,
	    prop: String,
	    required: {
	      type: Boolean,
	      default: undefined
	    },
	    rules: [Object, Array],
	    error: String,
	    validateStatus: String,
	    for: String,
	    inlineMessage: {
	      type: [String, Boolean],
	      default: ''
	    },
	    showMessage: {
	      type: Boolean,
	      default: true
	    },
	    size: String
	  },
	  components: {
	    // use this component to calculate auto width
	    LabelWrap: label_wrap
	  },
	  watch: {
	    error: {
	      immediate: true,
	      handler: function handler(value) {
	        this.validateMessage = value;
	        this.validateState = value ? 'error' : '';
	      }
	    },
	    validateStatus: function validateStatus(value) {
	      this.validateState = value;
	    },
	    rules: function rules(value) {
	      if ((!value || value.length === 0) && this.required === undefined) {
	        this.clearValidate();
	      }
	    }
	  },
	  computed: {
	    labelFor: function labelFor() {
	      return this.for || this.prop;
	    },
	    labelStyle: function labelStyle() {
	      var ret = {};
	      if (this.form.labelPosition === 'top') return ret;
	      var labelWidth = this.labelWidth || this.form.labelWidth;
	      if (labelWidth) {
	        ret.width = labelWidth;
	      }
	      return ret;
	    },
	    contentStyle: function contentStyle() {
	      var ret = {};
	      var label = this.label;
	      if (this.form.labelPosition === 'top' || this.form.inline) return ret;
	      if (!label && !this.labelWidth && this.isNested) return ret;
	      var labelWidth = this.labelWidth || this.form.labelWidth;
	      if (labelWidth === 'auto') {
	        if (this.labelWidth === 'auto') {
	          ret.marginLeft = this.computedLabelWidth;
	        } else if (this.form.labelWidth === 'auto') {
	          ret.marginLeft = this.elForm.autoLabelWidth;
	        }
	      } else {
	        ret.marginLeft = labelWidth;
	      }
	      return ret;
	    },
	    form: function form() {
	      var parent = this.$parent;
	      var parentName = parent.$options.componentName;
	      while (parentName !== 'ElForm') {
	        if (parentName === 'ElFormItem') {
	          this.isNested = true;
	        }
	        parent = parent.$parent;
	        parentName = parent.$options.componentName;
	      }
	      return parent;
	    },
	    fieldValue: function fieldValue() {
	      var model = this.form.model;
	      if (!model || !this.prop) {
	        return;
	      }

	      var path = this.prop;
	      if (path.indexOf(':') !== -1) {
	        path = path.replace(/:/, '.');
	      }

	      return Object(util_["getPropByPath"])(model, path, true).v;
	    },
	    isRequired: function isRequired() {
	      var rules = this.getRules();
	      var isRequired = false;

	      if (rules && rules.length) {
	        rules.every(function (rule) {
	          if (rule.required) {
	            isRequired = true;
	            return false;
	          }
	          return true;
	        });
	      }
	      return isRequired;
	    },
	    _formSize: function _formSize() {
	      return this.elForm.size;
	    },
	    elFormItemSize: function elFormItemSize() {
	      return this.size || this._formSize;
	    },
	    sizeClass: function sizeClass() {
	      return this.elFormItemSize || (this.$ELEMENT || {}).size;
	    }
	  },
	  data: function data() {
	    return {
	      validateState: '',
	      validateMessage: '',
	      validateDisabled: false,
	      validator: {},
	      isNested: false,
	      computedLabelWidth: ''
	    };
	  },

	  methods: {
	    validate: function validate(trigger) {
	      var _this = this;

	      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : util_["noop"];

	      this.validateDisabled = false;
	      var rules = this.getFilteredRule(trigger);
	      if ((!rules || rules.length === 0) && this.required === undefined) {
	        callback();
	        return true;
	      }

	      this.validateState = 'validating';

	      var descriptor = {};
	      if (rules && rules.length > 0) {
	        rules.forEach(function (rule) {
	          delete rule.trigger;
	        });
	      }
	      descriptor[this.prop] = rules;

	      var validator = new external_async_validator_default.a(descriptor);
	      var model = {};

	      model[this.prop] = this.fieldValue;

	      validator.validate(model, { firstFields: true }, function (errors, invalidFields) {
	        _this.validateState = !errors ? 'success' : 'error';
	        _this.validateMessage = errors ? errors[0].message : '';

	        callback(_this.validateMessage, invalidFields);
	        _this.elForm && _this.elForm.$emit('validate', _this.prop, !errors, _this.validateMessage || null);
	      });
	    },
	    clearValidate: function clearValidate() {
	      this.validateState = '';
	      this.validateMessage = '';
	      this.validateDisabled = false;
	    },
	    resetField: function resetField() {
	      var _this2 = this;

	      this.validateState = '';
	      this.validateMessage = '';

	      var model = this.form.model;
	      var value = this.fieldValue;
	      var path = this.prop;
	      if (path.indexOf(':') !== -1) {
	        path = path.replace(/:/, '.');
	      }

	      var prop = Object(util_["getPropByPath"])(model, path, true);

	      this.validateDisabled = true;
	      if (Array.isArray(value)) {
	        prop.o[prop.k] = [].concat(this.initialValue);
	      } else {
	        prop.o[prop.k] = this.initialValue;
	      }

	      // reset validateDisabled after onFieldChange triggered
	      this.$nextTick(function () {
	        _this2.validateDisabled = false;
	      });

	      this.broadcast('ElTimeSelect', 'fieldReset', this.initialValue);
	    },
	    getRules: function getRules() {
	      var formRules = this.form.rules;
	      var selfRules = this.rules;
	      var requiredRule = this.required !== undefined ? { required: !!this.required } : [];

	      var prop = Object(util_["getPropByPath"])(formRules, this.prop || '');
	      formRules = formRules ? prop.o[this.prop || ''] || prop.v : [];

	      return [].concat(selfRules || formRules || []).concat(requiredRule);
	    },
	    getFilteredRule: function getFilteredRule(trigger) {
	      var rules = this.getRules();

	      return rules.filter(function (rule) {
	        if (!rule.trigger || trigger === '') return true;
	        if (Array.isArray(rule.trigger)) {
	          return rule.trigger.indexOf(trigger) > -1;
	        } else {
	          return rule.trigger === trigger;
	        }
	      }).map(function (rule) {
	        return merge_default()({}, rule);
	      });
	    },
	    onFieldBlur: function onFieldBlur() {
	      this.validate('blur');
	    },
	    onFieldChange: function onFieldChange() {
	      if (this.validateDisabled) {
	        this.validateDisabled = false;
	        return;
	      }

	      this.validate('change');
	    },
	    updateComputedLabelWidth: function updateComputedLabelWidth(width) {
	      this.computedLabelWidth = width ? width + 'px' : '';
	    },
	    addValidateEvents: function addValidateEvents() {
	      var rules = this.getRules();

	      if (rules.length || this.required !== undefined) {
	        this.$on('el.form.blur', this.onFieldBlur);
	        this.$on('el.form.change', this.onFieldChange);
	      }
	    },
	    removeValidateEvents: function removeValidateEvents() {
	      this.$off();
	    }
	  },
	  mounted: function mounted() {
	    if (this.prop) {
	      this.dispatch('ElForm', 'el.form.addField', [this]);

	      var initialValue = this.fieldValue;
	      if (Array.isArray(initialValue)) {
	        initialValue = [].concat(initialValue);
	      }
	      Object.defineProperty(this, 'initialValue', {
	        value: initialValue
	      });

	      this.addValidateEvents();
	    }
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.dispatch('ElForm', 'el.form.removeField', [this]);
	  }
	});
	// CONCATENATED MODULE: ./packages/form/src/form-item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_form_itemvue_type_script_lang_js_ = (form_itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/form/src/form-item.vue





	/* normalize component */

	var form_item_component = normalizeComponent(
	  src_form_itemvue_type_script_lang_js_,
	  form_itemvue_type_template_id_b6f3db6c_render,
	  form_itemvue_type_template_id_b6f3db6c_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	form_item_component.options.__file = "packages/form/src/form-item.vue";
	/* harmony default export */ var form_item = (form_item_component.exports);
	// CONCATENATED MODULE: ./packages/form-item/index.js


	/* istanbul ignore next */
	form_item.install = function (Vue) {
	  Vue.component(form_item.name, form_item);
	};

	/* harmony default export */ var packages_form_item = (form_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-bar.vue?vue&type=template&id=2031f33a&
	var tab_barvue_type_template_id_2031f33a_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", {
	    staticClass: "el-tabs__active-bar",
	    class: "is-" + _vm.rootTabs.tabPosition,
	    style: _vm.barStyle
	  })
	};
	var tab_barvue_type_template_id_2031f33a_staticRenderFns = [];
	tab_barvue_type_template_id_2031f33a_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue?vue&type=template&id=2031f33a&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-bar.vue?vue&type=script&lang=js&
	//
	//
	//


	/* harmony default export */ var tab_barvue_type_script_lang_js_ = ({
	  name: 'TabBar',

	  props: {
	    tabs: Array
	  },

	  inject: ['rootTabs'],

	  computed: {
	    barStyle: {
	      get: function get() {
	        var _this = this;

	        var style = {};
	        var offset = 0;
	        var tabSize = 0;
	        var sizeName = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'width' : 'height';
	        var sizeDir = sizeName === 'width' ? 'x' : 'y';
	        var firstUpperCase = function firstUpperCase(str) {
	          return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {
	            return L.toUpperCase();
	          });
	        };
	        this.tabs.every(function (tab, index) {
	          var $el = Object(util_["arrayFind"])(_this.$parent.$refs.tabs || [], function (t) {
	            return t.id.replace('tab-', '') === tab.paneName;
	          });
	          if (!$el) {
	            return false;
	          }

	          if (!tab.active) {
	            offset += $el['client' + firstUpperCase(sizeName)];
	            return true;
	          } else {
	            tabSize = $el['client' + firstUpperCase(sizeName)];
	            var tabStyles = window.getComputedStyle($el);
	            if (sizeName === 'width' && _this.tabs.length > 1) {
	              tabSize -= parseFloat(tabStyles.paddingLeft) + parseFloat(tabStyles.paddingRight);
	            }
	            if (sizeName === 'width') {
	              offset += parseFloat(tabStyles.paddingLeft);
	            }
	            return false;
	          }
	        });

	        var transform = 'translate' + firstUpperCase(sizeDir) + '(' + offset + 'px)';
	        style[sizeName] = tabSize + 'px';
	        style.transform = transform;
	        style.msTransform = transform;
	        style.webkitTransform = transform;

	        return style;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_tab_barvue_type_script_lang_js_ = (tab_barvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue





	/* normalize component */

	var tab_bar_component = normalizeComponent(
	  src_tab_barvue_type_script_lang_js_,
	  tab_barvue_type_template_id_2031f33a_render,
	  tab_barvue_type_template_id_2031f33a_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	tab_bar_component.options.__file = "packages/tabs/src/tab-bar.vue";
	/* harmony default export */ var tab_bar = (tab_bar_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-nav.vue?vue&type=script&lang=js&




	function noop() {}
	var tab_navvue_type_script_lang_js_firstUpperCase = function firstUpperCase(str) {
	  return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {
	    return L.toUpperCase();
	  });
	};

	/* harmony default export */ var tab_navvue_type_script_lang_js_ = ({
	  name: 'TabNav',

	  components: {
	    TabBar: tab_bar
	  },

	  inject: ['rootTabs'],

	  props: {
	    panes: Array,
	    currentName: String,
	    editable: Boolean,
	    onTabClick: {
	      type: Function,
	      default: noop
	    },
	    onTabRemove: {
	      type: Function,
	      default: noop
	    },
	    type: String,
	    stretch: Boolean
	  },

	  data: function data() {
	    return {
	      scrollable: false,
	      navOffset: 0,
	      isFocus: false,
	      focusable: true
	    };
	  },


	  computed: {
	    navStyle: function navStyle() {
	      var dir = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'X' : 'Y';
	      return {
	        transform: 'translate' + dir + '(-' + this.navOffset + 'px)'
	      };
	    },
	    sizeName: function sizeName() {
	      return ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'width' : 'height';
	    }
	  },

	  methods: {
	    scrollPrev: function scrollPrev() {
	      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];
	      var currentOffset = this.navOffset;

	      if (!currentOffset) return;

	      var newOffset = currentOffset > containerSize ? currentOffset - containerSize : 0;

	      this.navOffset = newOffset;
	    },
	    scrollNext: function scrollNext() {
	      var navSize = this.$refs.nav['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];
	      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];
	      var currentOffset = this.navOffset;

	      if (navSize - currentOffset <= containerSize) return;

	      var newOffset = navSize - currentOffset > containerSize * 2 ? currentOffset + containerSize : navSize - containerSize;

	      this.navOffset = newOffset;
	    },
	    scrollToActiveTab: function scrollToActiveTab() {
	      if (!this.scrollable) return;
	      var nav = this.$refs.nav;
	      var activeTab = this.$el.querySelector('.is-active');
	      if (!activeTab) return;
	      var navScroll = this.$refs.navScroll;
	      var isHorizontal = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1;
	      var activeTabBounding = activeTab.getBoundingClientRect();
	      var navScrollBounding = navScroll.getBoundingClientRect();
	      var maxOffset = isHorizontal ? nav.offsetWidth - navScrollBounding.width : nav.offsetHeight - navScrollBounding.height;
	      var currentOffset = this.navOffset;
	      var newOffset = currentOffset;

	      if (isHorizontal) {
	        if (activeTabBounding.left < navScrollBounding.left) {
	          newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);
	        }
	        if (activeTabBounding.right > navScrollBounding.right) {
	          newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;
	        }
	      } else {
	        if (activeTabBounding.top < navScrollBounding.top) {
	          newOffset = currentOffset - (navScrollBounding.top - activeTabBounding.top);
	        }
	        if (activeTabBounding.bottom > navScrollBounding.bottom) {
	          newOffset = currentOffset + (activeTabBounding.bottom - navScrollBounding.bottom);
	        }
	      }
	      newOffset = Math.max(newOffset, 0);
	      this.navOffset = Math.min(newOffset, maxOffset);
	    },
	    update: function update() {
	      if (!this.$refs.nav) return;
	      var sizeName = this.sizeName;
	      var navSize = this.$refs.nav['offset' + tab_navvue_type_script_lang_js_firstUpperCase(sizeName)];
	      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(sizeName)];
	      var currentOffset = this.navOffset;

	      if (containerSize < navSize) {
	        var _currentOffset = this.navOffset;
	        this.scrollable = this.scrollable || {};
	        this.scrollable.prev = _currentOffset;
	        this.scrollable.next = _currentOffset + containerSize < navSize;
	        if (navSize - _currentOffset < containerSize) {
	          this.navOffset = navSize - containerSize;
	        }
	      } else {
	        this.scrollable = false;
	        if (currentOffset > 0) {
	          this.navOffset = 0;
	        }
	      }
	    },
	    changeTab: function changeTab(e) {
	      var keyCode = e.keyCode;
	      var nextIndex = void 0;
	      var currentIndex = void 0,
	          tabList = void 0;
	      if ([37, 38, 39, 40].indexOf(keyCode) !== -1) {
	        // 左右上下键更换tab
	        tabList = e.currentTarget.querySelectorAll('[role=tab]');
	        currentIndex = Array.prototype.indexOf.call(tabList, e.target);
	      } else {
	        return;
	      }
	      if (keyCode === 37 || keyCode === 38) {
	        // left
	        if (currentIndex === 0) {
	          // first
	          nextIndex = tabList.length - 1;
	        } else {
	          nextIndex = currentIndex - 1;
	        }
	      } else {
	        // right
	        if (currentIndex < tabList.length - 1) {
	          // not last
	          nextIndex = currentIndex + 1;
	        } else {
	          nextIndex = 0;
	        }
	      }
	      tabList[nextIndex].focus(); // 改变焦点元素
	      tabList[nextIndex].click(); // 选中下一个tab
	      this.setFocus();
	    },
	    setFocus: function setFocus() {
	      if (this.focusable) {
	        this.isFocus = true;
	      }
	    },
	    removeFocus: function removeFocus() {
	      this.isFocus = false;
	    },
	    visibilityChangeHandler: function visibilityChangeHandler() {
	      var _this = this;

	      var visibility = document.visibilityState;
	      if (visibility === 'hidden') {
	        this.focusable = false;
	      } else if (visibility === 'visible') {
	        setTimeout(function () {
	          _this.focusable = true;
	        }, 50);
	      }
	    },
	    windowBlurHandler: function windowBlurHandler() {
	      this.focusable = false;
	    },
	    windowFocusHandler: function windowFocusHandler() {
	      var _this2 = this;

	      setTimeout(function () {
	        _this2.focusable = true;
	      }, 50);
	    }
	  },

	  updated: function updated() {
	    this.update();
	  },
	  render: function render(h) {
	    var _this3 = this;

	    var type = this.type,
	        panes = this.panes,
	        editable = this.editable,
	        stretch = this.stretch,
	        onTabClick = this.onTabClick,
	        onTabRemove = this.onTabRemove,
	        navStyle = this.navStyle,
	        scrollable = this.scrollable,
	        scrollNext = this.scrollNext,
	        scrollPrev = this.scrollPrev,
	        changeTab = this.changeTab,
	        setFocus = this.setFocus,
	        removeFocus = this.removeFocus;

	    var scrollBtn = scrollable ? [h(
	      'span',
	      { 'class': ['el-tabs__nav-prev', scrollable.prev ? '' : 'is-disabled'], on: {
	          'click': scrollPrev
	        }
	      },
	      [h('i', { 'class': 'el-icon-arrow-left' })]
	    ), h(
	      'span',
	      { 'class': ['el-tabs__nav-next', scrollable.next ? '' : 'is-disabled'], on: {
	          'click': scrollNext
	        }
	      },
	      [h('i', { 'class': 'el-icon-arrow-right' })]
	    )] : null;

	    var tabs = this._l(panes, function (pane, index) {
	      var _ref;

	      var tabName = pane.name || pane.index || index;
	      var closable = pane.isClosable || editable;

	      pane.index = '' + index;

	      var btnClose = closable ? h('span', { 'class': 'el-icon-close', on: {
	          'click': function click(ev) {
	            onTabRemove(pane, ev);
	          }
	        }
	      }) : null;

	      var tabLabelContent = pane.$slots.label || pane.label;
	      var tabindex = pane.active ? 0 : -1;
	      return h(
	        'div',
	        {
	          'class': (_ref = {
	            'el-tabs__item': true
	          }, _ref['is-' + _this3.rootTabs.tabPosition] = true, _ref['is-active'] = pane.active, _ref['is-disabled'] = pane.disabled, _ref['is-closable'] = closable, _ref['is-focus'] = _this3.isFocus, _ref),
	          attrs: { id: 'tab-' + tabName,

	            'aria-controls': 'pane-' + tabName,
	            role: 'tab',
	            'aria-selected': pane.active,

	            tabindex: tabindex
	          },
	          key: 'tab-' + tabName, ref: 'tabs', refInFor: true,
	          on: {
	            'focus': function focus() {
	              setFocus();
	            },
	            'blur': function blur() {
	              removeFocus();
	            },
	            'click': function click(ev) {
	              removeFocus();onTabClick(pane, tabName, ev);
	            },
	            'keydown': function keydown(ev) {
	              if (closable && (ev.keyCode === 46 || ev.keyCode === 8)) {
	                onTabRemove(pane, ev);
	              }
	            }
	          }
	        },
	        [tabLabelContent, btnClose]
	      );
	    });
	    return h(
	      'div',
	      { 'class': ['el-tabs__nav-wrap', scrollable ? 'is-scrollable' : '', 'is-' + this.rootTabs.tabPosition] },
	      [scrollBtn, h(
	        'div',
	        { 'class': ['el-tabs__nav-scroll'], ref: 'navScroll' },
	        [h(
	          'div',
	          {
	            'class': ['el-tabs__nav', 'is-' + this.rootTabs.tabPosition, stretch && ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'is-stretch' : ''],
	            ref: 'nav',
	            style: navStyle,
	            attrs: { role: 'tablist'
	            },
	            on: {
	              'keydown': changeTab
	            }
	          },
	          [!type ? h('tab-bar', {
	            attrs: { tabs: panes }
	          }) : null, tabs]
	        )]
	      )]
	    );
	  },
	  mounted: function mounted() {
	    var _this4 = this;

	    Object(resize_event_["addResizeListener"])(this.$el, this.update);
	    document.addEventListener('visibilitychange', this.visibilityChangeHandler);
	    window.addEventListener('blur', this.windowBlurHandler);
	    window.addEventListener('focus', this.windowFocusHandler);
	    setTimeout(function () {
	      _this4.scrollToActiveTab();
	    }, 0);
	  },
	  beforeDestroy: function beforeDestroy() {
	    if (this.$el && this.update) Object(resize_event_["removeResizeListener"])(this.$el, this.update);
	    document.removeEventListener('visibilitychange', this.visibilityChangeHandler);
	    window.removeEventListener('blur', this.windowBlurHandler);
	    window.removeEventListener('focus', this.windowFocusHandler);
	  }
	});
	// CONCATENATED MODULE: ./packages/tabs/src/tab-nav.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_tab_navvue_type_script_lang_js_ = (tab_navvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/tabs/src/tab-nav.vue
	var tab_nav_render, tab_nav_staticRenderFns;




	/* normalize component */

	var tab_nav_component = normalizeComponent(
	  src_tab_navvue_type_script_lang_js_,
	  tab_nav_render,
	  tab_nav_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	tab_nav_component.options.__file = "packages/tabs/src/tab-nav.vue";
	/* harmony default export */ var tab_nav = (tab_nav_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tabs.vue?vue&type=script&lang=js&



	/* harmony default export */ var tabsvue_type_script_lang_js_ = ({
	  name: 'ElTabs',

	  components: {
	    TabNav: tab_nav
	  },

	  props: {
	    type: String,
	    activeName: String,
	    closable: Boolean,
	    addable: Boolean,
	    value: {},
	    editable: Boolean,
	    tabPosition: {
	      type: String,
	      default: 'top'
	    },
	    beforeLeave: Function,
	    stretch: Boolean
	  },

	  provide: function provide() {
	    return {
	      rootTabs: this
	    };
	  },
	  data: function data() {
	    return {
	      currentName: this.value || this.activeName,
	      panes: []
	    };
	  },


	  watch: {
	    activeName: function activeName(value) {
	      this.setCurrentName(value);
	    },
	    value: function value(_value) {
	      this.setCurrentName(_value);
	    },
	    currentName: function currentName(value) {
	      var _this = this;

	      if (this.$refs.nav) {
	        this.$nextTick(function () {
	          _this.$refs.nav.$nextTick(function (_) {
	            _this.$refs.nav.scrollToActiveTab();
	          });
	        });
	      }
	    }
	  },

	  methods: {
	    calcPaneInstances: function calcPaneInstances() {
	      var _this2 = this;

	      var isForceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	      if (this.$slots.default) {
	        var paneSlots = this.$slots.default.filter(function (vnode) {
	          return vnode.tag && vnode.componentOptions && vnode.componentOptions.Ctor.options.name === 'ElTabPane';
	        });
	        // update indeed
	        var panes = paneSlots.map(function (_ref) {
	          var componentInstance = _ref.componentInstance;
	          return componentInstance;
	        });
	        var panesChanged = !(panes.length === this.panes.length && panes.every(function (pane, index) {
	          return pane === _this2.panes[index];
	        }));
	        if (isForceUpdate || panesChanged) {
	          this.panes = panes;
	        }
	      } else if (this.panes.length !== 0) {
	        this.panes = [];
	      }
	    },
	    handleTabClick: function handleTabClick(tab, tabName, event) {
	      if (tab.disabled) return;
	      this.setCurrentName(tabName);
	      this.$emit('tab-click', tab, event);
	    },
	    handleTabRemove: function handleTabRemove(pane, ev) {
	      if (pane.disabled) return;
	      ev.stopPropagation();
	      this.$emit('edit', pane.name, 'remove');
	      this.$emit('tab-remove', pane.name);
	    },
	    handleTabAdd: function handleTabAdd() {
	      this.$emit('edit', null, 'add');
	      this.$emit('tab-add');
	    },
	    setCurrentName: function setCurrentName(value) {
	      var _this3 = this;

	      var changeCurrentName = function changeCurrentName() {
	        _this3.currentName = value;
	        _this3.$emit('input', value);
	      };
	      if (this.currentName !== value && this.beforeLeave) {
	        var before = this.beforeLeave(value, this.currentName);
	        if (before && before.then) {
	          before.then(function () {
	            changeCurrentName();
	            _this3.$refs.nav && _this3.$refs.nav.removeFocus();
	          }, function () {
	            // https://github.com/ElemeFE/element/pull/14816
	            // ignore promise rejection in `before-leave` hook
	          });
	        } else if (before !== false) {
	          changeCurrentName();
	        }
	      } else {
	        changeCurrentName();
	      }
	    }
	  },

	  render: function render(h) {
	    var _ref2;

	    var type = this.type,
	        handleTabClick = this.handleTabClick,
	        handleTabRemove = this.handleTabRemove,
	        handleTabAdd = this.handleTabAdd,
	        currentName = this.currentName,
	        panes = this.panes,
	        editable = this.editable,
	        addable = this.addable,
	        tabPosition = this.tabPosition,
	        stretch = this.stretch;


	    var newButton = editable || addable ? h(
	      'span',
	      {
	        'class': 'el-tabs__new-tab',
	        on: {
	          'click': handleTabAdd,
	          'keydown': function keydown(ev) {
	            if (ev.keyCode === 13) {
	              handleTabAdd();
	            }
	          }
	        },
	        attrs: {
	          tabindex: '0'
	        }
	      },
	      [h('i', { 'class': 'el-icon-plus' })]
	    ) : null;

	    var navData = {
	      props: {
	        currentName: currentName,
	        onTabClick: handleTabClick,
	        onTabRemove: handleTabRemove,
	        editable: editable,
	        type: type,
	        panes: panes,
	        stretch: stretch
	      },
	      ref: 'nav'
	    };
	    var header = h(
	      'div',
	      { 'class': ['el-tabs__header', 'is-' + tabPosition] },
	      [newButton, h('tab-nav', navData)]
	    );
	    var panels = h(
	      'div',
	      { 'class': 'el-tabs__content' },
	      [this.$slots.default]
	    );

	    return h(
	      'div',
	      { 'class': (_ref2 = {
	          'el-tabs': true,
	          'el-tabs--card': type === 'card'
	        }, _ref2['el-tabs--' + tabPosition] = true, _ref2['el-tabs--border-card'] = type === 'border-card', _ref2) },
	      [tabPosition !== 'bottom' ? [header, panels] : [panels, header]]
	    );
	  },
	  created: function created() {
	    if (!this.currentName) {
	      this.setCurrentName('0');
	    }

	    this.$on('tab-nav-update', this.calcPaneInstances.bind(null, true));
	  },
	  mounted: function mounted() {
	    this.calcPaneInstances();
	  },
	  updated: function updated() {
	    this.calcPaneInstances();
	  }
	});
	// CONCATENATED MODULE: ./packages/tabs/src/tabs.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_tabsvue_type_script_lang_js_ = (tabsvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/tabs/src/tabs.vue
	var tabs_render, tabs_staticRenderFns;




	/* normalize component */

	var tabs_component = normalizeComponent(
	  src_tabsvue_type_script_lang_js_,
	  tabs_render,
	  tabs_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	tabs_component.options.__file = "packages/tabs/src/tabs.vue";
	/* harmony default export */ var tabs = (tabs_component.exports);
	// CONCATENATED MODULE: ./packages/tabs/index.js


	/* istanbul ignore next */
	tabs.install = function (Vue) {
	  Vue.component(tabs.name, tabs);
	};

	/* harmony default export */ var packages_tabs = (tabs);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-pane.vue?vue&type=template&id=9145a070&
	var tab_panevue_type_template_id_9145a070_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return !_vm.lazy || _vm.loaded || _vm.active
	    ? _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.active,
	              expression: "active"
	            }
	          ],
	          staticClass: "el-tab-pane",
	          attrs: {
	            role: "tabpanel",
	            "aria-hidden": !_vm.active,
	            id: "pane-" + _vm.paneName,
	            "aria-labelledby": "tab-" + _vm.paneName
	          }
	        },
	        [_vm._t("default")],
	        2
	      )
	    : _vm._e()
	};
	var tab_panevue_type_template_id_9145a070_staticRenderFns = [];
	tab_panevue_type_template_id_9145a070_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/tabs/src/tab-pane.vue?vue&type=template&id=9145a070&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-pane.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var tab_panevue_type_script_lang_js_ = ({
	  name: 'ElTabPane',

	  componentName: 'ElTabPane',

	  props: {
	    label: String,
	    labelContent: Function,
	    name: String,
	    closable: Boolean,
	    disabled: Boolean,
	    lazy: Boolean
	  },

	  data: function data() {
	    return {
	      index: null,
	      loaded: false
	    };
	  },


	  computed: {
	    isClosable: function isClosable() {
	      return this.closable || this.$parent.closable;
	    },
	    active: function active() {
	      var active = this.$parent.currentName === (this.name || this.index);
	      if (active) {
	        this.loaded = true;
	      }
	      return active;
	    },
	    paneName: function paneName() {
	      return this.name || this.index;
	    }
	  },

	  updated: function updated() {
	    this.$parent.$emit('tab-nav-update');
	  }
	});
	// CONCATENATED MODULE: ./packages/tabs/src/tab-pane.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_tab_panevue_type_script_lang_js_ = (tab_panevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/tabs/src/tab-pane.vue





	/* normalize component */

	var tab_pane_component = normalizeComponent(
	  src_tab_panevue_type_script_lang_js_,
	  tab_panevue_type_template_id_9145a070_render,
	  tab_panevue_type_template_id_9145a070_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	tab_pane_component.options.__file = "packages/tabs/src/tab-pane.vue";
	/* harmony default export */ var tab_pane = (tab_pane_component.exports);
	// CONCATENATED MODULE: ./packages/tab-pane/index.js


	/* istanbul ignore next */
	tab_pane.install = function (Vue) {
	  Vue.component(tab_pane.name, tab_pane);
	};

	/* harmony default export */ var packages_tab_pane = (tab_pane);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tag/src/tag.vue?vue&type=script&lang=js&

	/* harmony default export */ var tagvue_type_script_lang_js_ = ({
	  name: 'ElTag',
	  props: {
	    text: String,
	    closable: Boolean,
	    type: String,
	    hit: Boolean,
	    disableTransitions: Boolean,
	    color: String,
	    size: String,
	    effect: {
	      type: String,
	      default: 'light',
	      validator: function validator(val) {
	        return ['dark', 'light', 'plain'].indexOf(val) !== -1;
	      }
	    }
	  },
	  methods: {
	    handleClose: function handleClose(event) {
	      event.stopPropagation();
	      this.$emit('close', event);
	    },
	    handleClick: function handleClick(event) {
	      this.$emit('click', event);
	    }
	  },
	  computed: {
	    tagSize: function tagSize() {
	      return this.size || (this.$ELEMENT || {}).size;
	    }
	  },
	  render: function render(h) {
	    var type = this.type,
	        tagSize = this.tagSize,
	        hit = this.hit,
	        effect = this.effect;

	    var classes = ['el-tag', type ? 'el-tag--' + type : '', tagSize ? 'el-tag--' + tagSize : '', effect ? 'el-tag--' + effect : '', hit && 'is-hit'];
	    var tagEl = h(
	      'span',
	      {
	        'class': classes,
	        style: { backgroundColor: this.color },
	        on: {
	          'click': this.handleClick
	        }
	      },
	      [this.$slots.default, this.closable && h('i', { 'class': 'el-tag__close el-icon-close', on: {
	          'click': this.handleClose
	        }
	      })]
	    );

	    return this.disableTransitions ? tagEl : h(
	      'transition',
	      {
	        attrs: { name: 'el-zoom-in-center' }
	      },
	      [tagEl]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/tag/src/tag.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_tagvue_type_script_lang_js_ = (tagvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/tag/src/tag.vue
	var tag_render, tag_staticRenderFns;




	/* normalize component */

	var tag_component = normalizeComponent(
	  src_tagvue_type_script_lang_js_,
	  tag_render,
	  tag_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	tag_component.options.__file = "packages/tag/src/tag.vue";
	/* harmony default export */ var src_tag = (tag_component.exports);
	// CONCATENATED MODULE: ./packages/tag/index.js


	/* istanbul ignore next */
	src_tag.install = function (Vue) {
	  Vue.component(src_tag.name, src_tag);
	};

	/* harmony default export */ var packages_tag = (src_tag);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree.vue?vue&type=template&id=547575a6&
	var treevue_type_template_id_547575a6_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-tree",
	      class: {
	        "el-tree--highlight-current": _vm.highlightCurrent,
	        "is-dragging": !!_vm.dragState.draggingNode,
	        "is-drop-not-allow": !_vm.dragState.allowDrop,
	        "is-drop-inner": _vm.dragState.dropType === "inner"
	      },
	      attrs: { role: "tree" }
	    },
	    [
	      _vm._l(_vm.root.childNodes, function(child) {
	        return _c("el-tree-node", {
	          key: _vm.getNodeKey(child),
	          attrs: {
	            node: child,
	            props: _vm.props,
	            "render-after-expand": _vm.renderAfterExpand,
	            "show-checkbox": _vm.showCheckbox,
	            "render-content": _vm.renderContent
	          },
	          on: { "node-expand": _vm.handleNodeExpand }
	        })
	      }),
	      _vm.isEmpty
	        ? _c("div", { staticClass: "el-tree__empty-block" }, [
	            _c("span", { staticClass: "el-tree__empty-text" }, [
	              _vm._v(_vm._s(_vm.emptyText))
	            ])
	          ])
	        : _vm._e(),
	      _c("div", {
	        directives: [
	          {
	            name: "show",
	            rawName: "v-show",
	            value: _vm.dragState.showDropIndicator,
	            expression: "dragState.showDropIndicator"
	          }
	        ],
	        ref: "dropIndicator",
	        staticClass: "el-tree__drop-indicator"
	      })
	    ],
	    2
	  )
	};
	var treevue_type_template_id_547575a6_staticRenderFns = [];
	treevue_type_template_id_547575a6_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/tree/src/tree.vue?vue&type=template&id=547575a6&

	// CONCATENATED MODULE: ./packages/tree/src/model/util.js
	var NODE_KEY = '$treeNodeId';

	var markNodeData = function markNodeData(node, data) {
	  if (!data || data[NODE_KEY]) return;
	  Object.defineProperty(data, NODE_KEY, {
	    value: node.id,
	    enumerable: false,
	    configurable: false,
	    writable: false
	  });
	};

	var util_getNodeKey = function getNodeKey(key, data) {
	  if (!key) return data[NODE_KEY];
	  return data[key];
	};

	var findNearestComponent = function findNearestComponent(element, componentName) {
	  var target = element;
	  while (target && target.tagName !== 'BODY') {
	    if (target.__vue__ && target.__vue__.$options.name === componentName) {
	      return target.__vue__;
	    }
	    target = target.parentNode;
	  }
	  return null;
	};
	// CONCATENATED MODULE: ./packages/tree/src/model/node.js
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function node_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }





	var getChildState = function getChildState(node) {
	  var all = true;
	  var none = true;
	  var allWithoutDisable = true;
	  for (var i = 0, j = node.length; i < j; i++) {
	    var n = node[i];
	    if (n.checked !== true || n.indeterminate) {
	      all = false;
	      if (!n.disabled) {
	        allWithoutDisable = false;
	      }
	    }
	    if (n.checked !== false || n.indeterminate) {
	      none = false;
	    }
	  }

	  return { all: all, none: none, allWithoutDisable: allWithoutDisable, half: !all && !none };
	};

	var reInitChecked = function reInitChecked(node) {
	  if (node.childNodes.length === 0 || node.loading) return;

	  var _getChildState = getChildState(node.childNodes),
	      all = _getChildState.all,
	      none = _getChildState.none,
	      half = _getChildState.half;

	  if (all) {
	    node.checked = true;
	    node.indeterminate = false;
	  } else if (half) {
	    node.checked = false;
	    node.indeterminate = true;
	  } else if (none) {
	    node.checked = false;
	    node.indeterminate = false;
	  }

	  var parent = node.parent;
	  if (!parent || parent.level === 0) return;

	  if (!node.store.checkStrictly) {
	    reInitChecked(parent);
	  }
	};

	var getPropertyFromData = function getPropertyFromData(node, prop) {
	  var props = node.store.props;
	  var data = node.data || {};
	  var config = props[prop];

	  if (typeof config === 'function') {
	    return config(data, node);
	  } else if (typeof config === 'string') {
	    return data[config];
	  } else if (typeof config === 'undefined') {
	    var dataProp = data[prop];
	    return dataProp === undefined ? '' : dataProp;
	  }
	};

	var nodeIdSeed = 0;

	var node_Node = function () {
	  function Node(options) {
	    node_classCallCheck(this, Node);

	    this.id = nodeIdSeed++;
	    this.text = null;
	    this.checked = false;
	    this.indeterminate = false;
	    this.data = null;
	    this.expanded = false;
	    this.parent = null;
	    this.visible = true;
	    this.isCurrent = false;

	    for (var name in options) {
	      if (options.hasOwnProperty(name)) {
	        this[name] = options[name];
	      }
	    }

	    // internal
	    this.level = 0;
	    this.loaded = false;
	    this.childNodes = [];
	    this.loading = false;

	    if (this.parent) {
	      this.level = this.parent.level + 1;
	    }

	    var store = this.store;
	    if (!store) {
	      throw new Error('[Node]store is required!');
	    }
	    store.registerNode(this);

	    var props = store.props;
	    if (props && typeof props.isLeaf !== 'undefined') {
	      var isLeaf = getPropertyFromData(this, 'isLeaf');
	      if (typeof isLeaf === 'boolean') {
	        this.isLeafByUser = isLeaf;
	      }
	    }

	    if (store.lazy !== true && this.data) {
	      this.setData(this.data);

	      if (store.defaultExpandAll) {
	        this.expanded = true;
	      }
	    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {
	      this.expand();
	    }
	    if (!Array.isArray(this.data)) {
	      markNodeData(this, this.data);
	    }
	    if (!this.data) return;
	    var defaultExpandedKeys = store.defaultExpandedKeys;
	    var key = store.key;
	    if (key && defaultExpandedKeys && defaultExpandedKeys.indexOf(this.key) !== -1) {
	      this.expand(null, store.autoExpandParent);
	    }

	    if (key && store.currentNodeKey !== undefined && this.key === store.currentNodeKey) {
	      store.currentNode = this;
	      store.currentNode.isCurrent = true;
	    }

	    if (store.lazy) {
	      store._initDefaultCheckedNode(this);
	    }

	    this.updateLeafState();
	  }

	  Node.prototype.setData = function setData(data) {
	    if (!Array.isArray(data)) {
	      markNodeData(this, data);
	    }

	    this.data = data;
	    this.childNodes = [];

	    var children = void 0;
	    if (this.level === 0 && this.data instanceof Array) {
	      children = this.data;
	    } else {
	      children = getPropertyFromData(this, 'children') || [];
	    }

	    for (var i = 0, j = children.length; i < j; i++) {
	      this.insertChild({ data: children[i] });
	    }
	  };

	  Node.prototype.contains = function contains(target) {
	    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	    var walk = function walk(parent) {
	      var children = parent.childNodes || [];
	      var result = false;
	      for (var i = 0, j = children.length; i < j; i++) {
	        var child = children[i];
	        if (child === target || deep && walk(child)) {
	          result = true;
	          break;
	        }
	      }
	      return result;
	    };

	    return walk(this);
	  };

	  Node.prototype.remove = function remove() {
	    var parent = this.parent;
	    if (parent) {
	      parent.removeChild(this);
	    }
	  };

	  Node.prototype.insertChild = function insertChild(child, index, batch) {
	    if (!child) throw new Error('insertChild error: child is required.');

	    if (!(child instanceof Node)) {
	      if (!batch) {
	        var children = this.getChildren(true) || [];
	        if (children.indexOf(child.data) === -1) {
	          if (typeof index === 'undefined' || index < 0) {
	            children.push(child.data);
	          } else {
	            children.splice(index, 0, child.data);
	          }
	        }
	      }
	      merge_default()(child, {
	        parent: this,
	        store: this.store
	      });
	      child = new Node(child);
	    }

	    child.level = this.level + 1;

	    if (typeof index === 'undefined' || index < 0) {
	      this.childNodes.push(child);
	    } else {
	      this.childNodes.splice(index, 0, child);
	    }

	    this.updateLeafState();
	  };

	  Node.prototype.insertBefore = function insertBefore(child, ref) {
	    var index = void 0;
	    if (ref) {
	      index = this.childNodes.indexOf(ref);
	    }
	    this.insertChild(child, index);
	  };

	  Node.prototype.insertAfter = function insertAfter(child, ref) {
	    var index = void 0;
	    if (ref) {
	      index = this.childNodes.indexOf(ref);
	      if (index !== -1) index += 1;
	    }
	    this.insertChild(child, index);
	  };

	  Node.prototype.removeChild = function removeChild(child) {
	    var children = this.getChildren() || [];
	    var dataIndex = children.indexOf(child.data);
	    if (dataIndex > -1) {
	      children.splice(dataIndex, 1);
	    }

	    var index = this.childNodes.indexOf(child);

	    if (index > -1) {
	      this.store && this.store.deregisterNode(child);
	      child.parent = null;
	      this.childNodes.splice(index, 1);
	    }

	    this.updateLeafState();
	  };

	  Node.prototype.removeChildByData = function removeChildByData(data) {
	    var targetNode = null;

	    for (var i = 0; i < this.childNodes.length; i++) {
	      if (this.childNodes[i].data === data) {
	        targetNode = this.childNodes[i];
	        break;
	      }
	    }

	    if (targetNode) {
	      this.removeChild(targetNode);
	    }
	  };

	  Node.prototype.expand = function expand(callback, expandParent) {
	    var _this = this;

	    var done = function done() {
	      if (expandParent) {
	        var parent = _this.parent;
	        while (parent.level > 0) {
	          parent.expanded = true;
	          parent = parent.parent;
	        }
	      }
	      _this.expanded = true;
	      if (callback) callback();
	    };

	    if (this.shouldLoadData()) {
	      this.loadData(function (data) {
	        if (data instanceof Array) {
	          if (_this.checked) {
	            _this.setChecked(true, true);
	          } else if (!_this.store.checkStrictly) {
	            reInitChecked(_this);
	          }
	          done();
	        }
	      });
	    } else {
	      done();
	    }
	  };

	  Node.prototype.doCreateChildren = function doCreateChildren(array) {
	    var _this2 = this;

	    var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	    array.forEach(function (item) {
	      _this2.insertChild(merge_default()({ data: item }, defaultProps), undefined, true);
	    });
	  };

	  Node.prototype.collapse = function collapse() {
	    this.expanded = false;
	  };

	  Node.prototype.shouldLoadData = function shouldLoadData() {
	    return this.store.lazy === true && this.store.load && !this.loaded;
	  };

	  Node.prototype.updateLeafState = function updateLeafState() {
	    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== 'undefined') {
	      this.isLeaf = this.isLeafByUser;
	      return;
	    }
	    var childNodes = this.childNodes;
	    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {
	      this.isLeaf = !childNodes || childNodes.length === 0;
	      return;
	    }
	    this.isLeaf = false;
	  };

	  Node.prototype.setChecked = function setChecked(value, deep, recursion, passValue) {
	    var _this3 = this;

	    this.indeterminate = value === 'half';
	    this.checked = value === true;

	    if (this.store.checkStrictly) return;

	    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {
	      var _getChildState2 = getChildState(this.childNodes),
	          all = _getChildState2.all,
	          allWithoutDisable = _getChildState2.allWithoutDisable;

	      if (!this.isLeaf && !all && allWithoutDisable) {
	        this.checked = false;
	        value = false;
	      }

	      var handleDescendants = function handleDescendants() {
	        if (deep) {
	          var childNodes = _this3.childNodes;
	          for (var i = 0, j = childNodes.length; i < j; i++) {
	            var child = childNodes[i];
	            passValue = passValue || value !== false;
	            var isCheck = child.disabled ? child.checked : passValue;
	            child.setChecked(isCheck, deep, true, passValue);
	          }

	          var _getChildState3 = getChildState(childNodes),
	              half = _getChildState3.half,
	              _all = _getChildState3.all;

	          if (!_all) {
	            _this3.checked = _all;
	            _this3.indeterminate = half;
	          }
	        }
	      };

	      if (this.shouldLoadData()) {
	        // Only work on lazy load data.
	        this.loadData(function () {
	          handleDescendants();
	          reInitChecked(_this3);
	        }, {
	          checked: value !== false
	        });
	        return;
	      } else {
	        handleDescendants();
	      }
	    }

	    var parent = this.parent;
	    if (!parent || parent.level === 0) return;

	    if (!recursion) {
	      reInitChecked(parent);
	    }
	  };

	  Node.prototype.getChildren = function getChildren() {
	    var forceInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    // this is data
	    if (this.level === 0) return this.data;
	    var data = this.data;
	    if (!data) return null;

	    var props = this.store.props;
	    var children = 'children';
	    if (props) {
	      children = props.children || 'children';
	    }

	    if (data[children] === undefined) {
	      data[children] = null;
	    }

	    if (forceInit && !data[children]) {
	      data[children] = [];
	    }

	    return data[children];
	  };

	  Node.prototype.updateChildren = function updateChildren() {
	    var _this4 = this;

	    var newData = this.getChildren() || [];
	    var oldData = this.childNodes.map(function (node) {
	      return node.data;
	    });

	    var newDataMap = {};
	    var newNodes = [];

	    newData.forEach(function (item, index) {
	      var key = item[NODE_KEY];
	      var isNodeExists = !!key && Object(util_["arrayFindIndex"])(oldData, function (data) {
	        return data[NODE_KEY] === key;
	      }) >= 0;
	      if (isNodeExists) {
	        newDataMap[key] = { index: index, data: item };
	      } else {
	        newNodes.push({ index: index, data: item });
	      }
	    });

	    if (!this.store.lazy) {
	      oldData.forEach(function (item) {
	        if (!newDataMap[item[NODE_KEY]]) _this4.removeChildByData(item);
	      });
	    }

	    newNodes.forEach(function (_ref) {
	      var index = _ref.index,
	          data = _ref.data;

	      _this4.insertChild({ data: data }, index);
	    });

	    this.updateLeafState();
	  };

	  Node.prototype.loadData = function loadData(callback) {
	    var _this5 = this;

	    var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {
	      this.loading = true;

	      var resolve = function resolve(children) {
	        _this5.childNodes = [];

	        _this5.doCreateChildren(children, defaultProps);
	        _this5.loaded = true;
	        _this5.loading = false;
	        _this5.updateLeafState();
	        if (callback) {
	          callback.call(_this5, children);
	        }
	      };

	      this.store.load(this, resolve);
	    } else {
	      if (callback) {
	        callback.call(this);
	      }
	    }
	  };

	  _createClass(Node, [{
	    key: 'label',
	    get: function get() {
	      return getPropertyFromData(this, 'label');
	    }
	  }, {
	    key: 'key',
	    get: function get() {
	      var nodeKey = this.store.key;
	      if (this.data) return this.data[nodeKey];
	      return null;
	    }
	  }, {
	    key: 'disabled',
	    get: function get() {
	      return getPropertyFromData(this, 'disabled');
	    }
	  }, {
	    key: 'nextSibling',
	    get: function get() {
	      var parent = this.parent;
	      if (parent) {
	        var index = parent.childNodes.indexOf(this);
	        if (index > -1) {
	          return parent.childNodes[index + 1];
	        }
	      }
	      return null;
	    }
	  }, {
	    key: 'previousSibling',
	    get: function get() {
	      var parent = this.parent;
	      if (parent) {
	        var index = parent.childNodes.indexOf(this);
	        if (index > -1) {
	          return index > 0 ? parent.childNodes[index - 1] : null;
	        }
	      }
	      return null;
	    }
	  }]);

	  return Node;
	}();

	/* harmony default export */ var model_node = (node_Node);
	// CONCATENATED MODULE: ./packages/tree/src/model/tree-store.js
	var tree_store_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function tree_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




	var tree_store_TreeStore = function () {
	  function TreeStore(options) {
	    var _this = this;

	    tree_store_classCallCheck(this, TreeStore);

	    this.currentNode = null;
	    this.currentNodeKey = null;

	    for (var option in options) {
	      if (options.hasOwnProperty(option)) {
	        this[option] = options[option];
	      }
	    }

	    this.nodesMap = {};

	    this.root = new model_node({
	      data: this.data,
	      store: this
	    });

	    if (this.lazy && this.load) {
	      var loadFn = this.load;
	      loadFn(this.root, function (data) {
	        _this.root.doCreateChildren(data);
	        _this._initDefaultCheckedNodes();
	      });
	    } else {
	      this._initDefaultCheckedNodes();
	    }
	  }

	  TreeStore.prototype.filter = function filter(value) {
	    var filterNodeMethod = this.filterNodeMethod;
	    var lazy = this.lazy;
	    var traverse = function traverse(node) {
	      var childNodes = node.root ? node.root.childNodes : node.childNodes;

	      childNodes.forEach(function (child) {
	        child.visible = filterNodeMethod.call(child, value, child.data, child);

	        traverse(child);
	      });

	      if (!node.visible && childNodes.length) {
	        var allHidden = true;
	        allHidden = !childNodes.some(function (child) {
	          return child.visible;
	        });

	        if (node.root) {
	          node.root.visible = allHidden === false;
	        } else {
	          node.visible = allHidden === false;
	        }
	      }
	      if (!value) return;

	      if (node.visible && !node.isLeaf && !lazy) node.expand();
	    };

	    traverse(this);
	  };

	  TreeStore.prototype.setData = function setData(newVal) {
	    var instanceChanged = newVal !== this.root.data;
	    if (instanceChanged) {
	      this.root.setData(newVal);
	      this._initDefaultCheckedNodes();
	    } else {
	      this.root.updateChildren();
	    }
	  };

	  TreeStore.prototype.getNode = function getNode(data) {
	    if (data instanceof model_node) return data;
	    var key = (typeof data === 'undefined' ? 'undefined' : tree_store_typeof(data)) !== 'object' ? data : util_getNodeKey(this.key, data);
	    return this.nodesMap[key] || null;
	  };

	  TreeStore.prototype.insertBefore = function insertBefore(data, refData) {
	    var refNode = this.getNode(refData);
	    refNode.parent.insertBefore({ data: data }, refNode);
	  };

	  TreeStore.prototype.insertAfter = function insertAfter(data, refData) {
	    var refNode = this.getNode(refData);
	    refNode.parent.insertAfter({ data: data }, refNode);
	  };

	  TreeStore.prototype.remove = function remove(data) {
	    var node = this.getNode(data);

	    if (node && node.parent) {
	      if (node === this.currentNode) {
	        this.currentNode = null;
	      }
	      node.parent.removeChild(node);
	    }
	  };

	  TreeStore.prototype.append = function append(data, parentData) {
	    var parentNode = parentData ? this.getNode(parentData) : this.root;

	    if (parentNode) {
	      parentNode.insertChild({ data: data });
	    }
	  };

	  TreeStore.prototype._initDefaultCheckedNodes = function _initDefaultCheckedNodes() {
	    var _this2 = this;

	    var defaultCheckedKeys = this.defaultCheckedKeys || [];
	    var nodesMap = this.nodesMap;

	    defaultCheckedKeys.forEach(function (checkedKey) {
	      var node = nodesMap[checkedKey];

	      if (node) {
	        node.setChecked(true, !_this2.checkStrictly);
	      }
	    });
	  };

	  TreeStore.prototype._initDefaultCheckedNode = function _initDefaultCheckedNode(node) {
	    var defaultCheckedKeys = this.defaultCheckedKeys || [];

	    if (defaultCheckedKeys.indexOf(node.key) !== -1) {
	      node.setChecked(true, !this.checkStrictly);
	    }
	  };

	  TreeStore.prototype.setDefaultCheckedKey = function setDefaultCheckedKey(newVal) {
	    if (newVal !== this.defaultCheckedKeys) {
	      this.defaultCheckedKeys = newVal;
	      this._initDefaultCheckedNodes();
	    }
	  };

	  TreeStore.prototype.registerNode = function registerNode(node) {
	    var key = this.key;
	    if (!key || !node || !node.data) return;

	    var nodeKey = node.key;
	    if (nodeKey !== undefined) this.nodesMap[node.key] = node;
	  };

	  TreeStore.prototype.deregisterNode = function deregisterNode(node) {
	    var _this3 = this;

	    var key = this.key;
	    if (!key || !node || !node.data) return;

	    node.childNodes.forEach(function (child) {
	      _this3.deregisterNode(child);
	    });

	    delete this.nodesMap[node.key];
	  };

	  TreeStore.prototype.getCheckedNodes = function getCheckedNodes() {
	    var leafOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    var includeHalfChecked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	    var checkedNodes = [];
	    var traverse = function traverse(node) {
	      var childNodes = node.root ? node.root.childNodes : node.childNodes;

	      childNodes.forEach(function (child) {
	        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {
	          checkedNodes.push(child.data);
	        }

	        traverse(child);
	      });
	    };

	    traverse(this);

	    return checkedNodes;
	  };

	  TreeStore.prototype.getCheckedKeys = function getCheckedKeys() {
	    var _this4 = this;

	    var leafOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    return this.getCheckedNodes(leafOnly).map(function (data) {
	      return (data || {})[_this4.key];
	    });
	  };

	  TreeStore.prototype.getHalfCheckedNodes = function getHalfCheckedNodes() {
	    var nodes = [];
	    var traverse = function traverse(node) {
	      var childNodes = node.root ? node.root.childNodes : node.childNodes;

	      childNodes.forEach(function (child) {
	        if (child.indeterminate) {
	          nodes.push(child.data);
	        }

	        traverse(child);
	      });
	    };

	    traverse(this);

	    return nodes;
	  };

	  TreeStore.prototype.getHalfCheckedKeys = function getHalfCheckedKeys() {
	    var _this5 = this;

	    return this.getHalfCheckedNodes().map(function (data) {
	      return (data || {})[_this5.key];
	    });
	  };

	  TreeStore.prototype._getAllNodes = function _getAllNodes() {
	    var allNodes = [];
	    var nodesMap = this.nodesMap;
	    for (var nodeKey in nodesMap) {
	      if (nodesMap.hasOwnProperty(nodeKey)) {
	        allNodes.push(nodesMap[nodeKey]);
	      }
	    }

	    return allNodes;
	  };

	  TreeStore.prototype.updateChildren = function updateChildren(key, data) {
	    var node = this.nodesMap[key];
	    if (!node) return;
	    var childNodes = node.childNodes;
	    for (var i = childNodes.length - 1; i >= 0; i--) {
	      var child = childNodes[i];
	      this.remove(child.data);
	    }
	    for (var _i = 0, j = data.length; _i < j; _i++) {
	      var _child = data[_i];
	      this.append(_child, node.data);
	    }
	  };

	  TreeStore.prototype._setCheckedKeys = function _setCheckedKeys(key) {
	    var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	    var checkedKeys = arguments[2];

	    var allNodes = this._getAllNodes().sort(function (a, b) {
	      return b.level - a.level;
	    });
	    var cache = Object.create(null);
	    var keys = Object.keys(checkedKeys);
	    allNodes.forEach(function (node) {
	      return node.setChecked(false, false);
	    });
	    for (var i = 0, j = allNodes.length; i < j; i++) {
	      var node = allNodes[i];
	      var nodeKey = node.data[key].toString();
	      var checked = keys.indexOf(nodeKey) > -1;
	      if (!checked) {
	        if (node.checked && !cache[nodeKey]) {
	          node.setChecked(false, false);
	        }
	        continue;
	      }

	      var parent = node.parent;
	      while (parent && parent.level > 0) {
	        cache[parent.data[key]] = true;
	        parent = parent.parent;
	      }

	      if (node.isLeaf || this.checkStrictly) {
	        node.setChecked(true, false);
	        continue;
	      }
	      node.setChecked(true, true);

	      if (leafOnly) {
	        (function () {
	          node.setChecked(false, false);
	          var traverse = function traverse(node) {
	            var childNodes = node.childNodes;
	            childNodes.forEach(function (child) {
	              if (!child.isLeaf) {
	                child.setChecked(false, false);
	              }
	              traverse(child);
	            });
	          };
	          traverse(node);
	        })();
	      }
	    }
	  };

	  TreeStore.prototype.setCheckedNodes = function setCheckedNodes(array) {
	    var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	    var key = this.key;
	    var checkedKeys = {};
	    array.forEach(function (item) {
	      checkedKeys[(item || {})[key]] = true;
	    });

	    this._setCheckedKeys(key, leafOnly, checkedKeys);
	  };

	  TreeStore.prototype.setCheckedKeys = function setCheckedKeys(keys) {
	    var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	    this.defaultCheckedKeys = keys;
	    var key = this.key;
	    var checkedKeys = {};
	    keys.forEach(function (key) {
	      checkedKeys[key] = true;
	    });

	    this._setCheckedKeys(key, leafOnly, checkedKeys);
	  };

	  TreeStore.prototype.setDefaultExpandedKeys = function setDefaultExpandedKeys(keys) {
	    var _this6 = this;

	    keys = keys || [];
	    this.defaultExpandedKeys = keys;

	    keys.forEach(function (key) {
	      var node = _this6.getNode(key);
	      if (node) node.expand(null, _this6.autoExpandParent);
	    });
	  };

	  TreeStore.prototype.setChecked = function setChecked(data, checked, deep) {
	    var node = this.getNode(data);

	    if (node) {
	      node.setChecked(!!checked, deep);
	    }
	  };

	  TreeStore.prototype.getCurrentNode = function getCurrentNode() {
	    return this.currentNode;
	  };

	  TreeStore.prototype.setCurrentNode = function setCurrentNode(currentNode) {
	    var prevCurrentNode = this.currentNode;
	    if (prevCurrentNode) {
	      prevCurrentNode.isCurrent = false;
	    }
	    this.currentNode = currentNode;
	    this.currentNode.isCurrent = true;
	  };

	  TreeStore.prototype.setUserCurrentNode = function setUserCurrentNode(node) {
	    var key = node[this.key];
	    var currNode = this.nodesMap[key];
	    this.setCurrentNode(currNode);
	  };

	  TreeStore.prototype.setCurrentNodeKey = function setCurrentNodeKey(key) {
	    if (key === null || key === undefined) {
	      this.currentNode && (this.currentNode.isCurrent = false);
	      this.currentNode = null;
	      return;
	    }
	    var node = this.getNode(key);
	    if (node) {
	      this.setCurrentNode(node);
	    }
	  };

	  return TreeStore;
	}();

	/* harmony default export */ var tree_store = (tree_store_TreeStore);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree-node.vue?vue&type=template&id=3ba3ef0e&
	var tree_nodevue_type_template_id_3ba3ef0e_render = function() {
	  var this$1$1 = this;
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      directives: [
	        {
	          name: "show",
	          rawName: "v-show",
	          value: _vm.node.visible,
	          expression: "node.visible"
	        }
	      ],
	      ref: "node",
	      staticClass: "el-tree-node",
	      class: {
	        "is-expanded": _vm.expanded,
	        "is-current": _vm.node.isCurrent,
	        "is-hidden": !_vm.node.visible,
	        "is-focusable": !_vm.node.disabled,
	        "is-checked": !_vm.node.disabled && _vm.node.checked
	      },
	      attrs: {
	        role: "treeitem",
	        tabindex: "-1",
	        "aria-expanded": _vm.expanded,
	        "aria-disabled": _vm.node.disabled,
	        "aria-checked": _vm.node.checked,
	        draggable: _vm.tree.draggable
	      },
	      on: {
	        click: function($event) {
	          $event.stopPropagation();
	          return _vm.handleClick($event)
	        },
	        contextmenu: function($event) {
	          return this$1$1.handleContextMenu($event)
	        },
	        dragstart: function($event) {
	          $event.stopPropagation();
	          return _vm.handleDragStart($event)
	        },
	        dragover: function($event) {
	          $event.stopPropagation();
	          return _vm.handleDragOver($event)
	        },
	        dragend: function($event) {
	          $event.stopPropagation();
	          return _vm.handleDragEnd($event)
	        },
	        drop: function($event) {
	          $event.stopPropagation();
	          return _vm.handleDrop($event)
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        {
	          staticClass: "el-tree-node__content",
	          style: {
	            "padding-left": (_vm.node.level - 1) * _vm.tree.indent + "px"
	          }
	        },
	        [
	          _c("span", {
	            class: [
	              {
	                "is-leaf": _vm.node.isLeaf,
	                expanded: !_vm.node.isLeaf && _vm.expanded
	              },
	              "el-tree-node__expand-icon",
	              _vm.tree.iconClass ? _vm.tree.iconClass : "el-icon-caret-right"
	            ],
	            on: {
	              click: function($event) {
	                $event.stopPropagation();
	                return _vm.handleExpandIconClick($event)
	              }
	            }
	          }),
	          _vm.showCheckbox
	            ? _c("el-checkbox", {
	                attrs: {
	                  indeterminate: _vm.node.indeterminate,
	                  disabled: !!_vm.node.disabled
	                },
	                on: { change: _vm.handleCheckChange },
	                nativeOn: {
	                  click: function($event) {
	                    $event.stopPropagation();
	                  }
	                },
	                model: {
	                  value: _vm.node.checked,
	                  callback: function($$v) {
	                    _vm.$set(_vm.node, "checked", $$v);
	                  },
	                  expression: "node.checked"
	                }
	              })
	            : _vm._e(),
	          _vm.node.loading
	            ? _c("span", {
	                staticClass: "el-tree-node__loading-icon el-icon-loading"
	              })
	            : _vm._e(),
	          _c("node-content", { attrs: { node: _vm.node } })
	        ],
	        1
	      ),
	      _c("el-collapse-transition", [
	        !_vm.renderAfterExpand || _vm.childNodeRendered
	          ? _c(
	              "div",
	              {
	                directives: [
	                  {
	                    name: "show",
	                    rawName: "v-show",
	                    value: _vm.expanded,
	                    expression: "expanded"
	                  }
	                ],
	                staticClass: "el-tree-node__children",
	                attrs: { role: "group", "aria-expanded": _vm.expanded }
	              },
	              _vm._l(_vm.node.childNodes, function(child) {
	                return _c("el-tree-node", {
	                  key: _vm.getNodeKey(child),
	                  attrs: {
	                    "render-content": _vm.renderContent,
	                    "render-after-expand": _vm.renderAfterExpand,
	                    "show-checkbox": _vm.showCheckbox,
	                    node: child
	                  },
	                  on: { "node-expand": _vm.handleChildNodeExpand }
	                })
	              }),
	              1
	            )
	          : _vm._e()
	      ])
	    ],
	    1
	  )
	};
	var tree_nodevue_type_template_id_3ba3ef0e_staticRenderFns = [];
	tree_nodevue_type_template_id_3ba3ef0e_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/tree/src/tree-node.vue?vue&type=template&id=3ba3ef0e&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree-node.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	/* harmony default export */ var tree_nodevue_type_script_lang_js_ = ({
	  name: 'ElTreeNode',

	  componentName: 'ElTreeNode',

	  mixins: [emitter_default.a],

	  props: {
	    node: {
	      default: function _default() {
	        return {};
	      }
	    },
	    props: {},
	    renderContent: Function,
	    renderAfterExpand: {
	      type: Boolean,
	      default: true
	    },
	    showCheckbox: {
	      type: Boolean,
	      default: false
	    }
	  },

	  components: {
	    ElCollapseTransition: collapse_transition_default.a,
	    ElCheckbox: checkbox_default.a,
	    NodeContent: {
	      props: {
	        node: {
	          required: true
	        }
	      },
	      render: function render(h) {
	        var parent = this.$parent;
	        var tree = parent.tree;
	        var node = this.node;
	        var data = node.data,
	            store = node.store;

	        return parent.renderContent ? parent.renderContent.call(parent._renderProxy, h, { _self: tree.$vnode.context, node: node, data: data, store: store }) : tree.$scopedSlots.default ? tree.$scopedSlots.default({ node: node, data: data }) : h(
	          'span',
	          { 'class': 'el-tree-node__label' },
	          [node.label]
	        );
	      }
	    }
	  },

	  data: function data() {
	    return {
	      tree: null,
	      expanded: false,
	      childNodeRendered: false,
	      oldChecked: null,
	      oldIndeterminate: null
	    };
	  },


	  watch: {
	    'node.indeterminate': function nodeIndeterminate(val) {
	      this.handleSelectChange(this.node.checked, val);
	    },
	    'node.checked': function nodeChecked(val) {
	      this.handleSelectChange(val, this.node.indeterminate);
	    },
	    'node.expanded': function nodeExpanded(val) {
	      var _this = this;

	      this.$nextTick(function () {
	        return _this.expanded = val;
	      });
	      if (val) {
	        this.childNodeRendered = true;
	      }
	    }
	  },

	  methods: {
	    getNodeKey: function getNodeKey(node) {
	      return util_getNodeKey(this.tree.nodeKey, node.data);
	    },
	    handleSelectChange: function handleSelectChange(checked, indeterminate) {
	      if (this.oldChecked !== checked && this.oldIndeterminate !== indeterminate) {
	        this.tree.$emit('check-change', this.node.data, checked, indeterminate);
	      }
	      this.oldChecked = checked;
	      this.indeterminate = indeterminate;
	    },
	    handleClick: function handleClick() {
	      var store = this.tree.store;
	      store.setCurrentNode(this.node);
	      this.tree.$emit('current-change', store.currentNode ? store.currentNode.data : null, store.currentNode);
	      this.tree.currentNode = this;
	      if (this.tree.expandOnClickNode) {
	        this.handleExpandIconClick();
	      }
	      if (this.tree.checkOnClickNode && !this.node.disabled) {
	        this.handleCheckChange(null, {
	          target: { checked: !this.node.checked }
	        });
	      }
	      this.tree.$emit('node-click', this.node.data, this.node, this);
	    },
	    handleContextMenu: function handleContextMenu(event) {
	      if (this.tree._events['node-contextmenu'] && this.tree._events['node-contextmenu'].length > 0) {
	        event.stopPropagation();
	        event.preventDefault();
	      }
	      this.tree.$emit('node-contextmenu', event, this.node.data, this.node, this);
	    },
	    handleExpandIconClick: function handleExpandIconClick() {
	      if (this.node.isLeaf) return;
	      if (this.expanded) {
	        this.tree.$emit('node-collapse', this.node.data, this.node, this);
	        this.node.collapse();
	      } else {
	        this.node.expand();
	        this.$emit('node-expand', this.node.data, this.node, this);
	      }
	    },
	    handleCheckChange: function handleCheckChange(value, ev) {
	      var _this2 = this;

	      this.node.setChecked(ev.target.checked, !this.tree.checkStrictly);
	      this.$nextTick(function () {
	        var store = _this2.tree.store;
	        _this2.tree.$emit('check', _this2.node.data, {
	          checkedNodes: store.getCheckedNodes(),
	          checkedKeys: store.getCheckedKeys(),
	          halfCheckedNodes: store.getHalfCheckedNodes(),
	          halfCheckedKeys: store.getHalfCheckedKeys()
	        });
	      });
	    },
	    handleChildNodeExpand: function handleChildNodeExpand(nodeData, node, instance) {
	      this.broadcast('ElTreeNode', 'tree-node-expand', node);
	      this.tree.$emit('node-expand', nodeData, node, instance);
	    },
	    handleDragStart: function handleDragStart(event) {
	      if (!this.tree.draggable) return;
	      this.tree.$emit('tree-node-drag-start', event, this);
	    },
	    handleDragOver: function handleDragOver(event) {
	      if (!this.tree.draggable) return;
	      this.tree.$emit('tree-node-drag-over', event, this);
	      event.preventDefault();
	    },
	    handleDrop: function handleDrop(event) {
	      event.preventDefault();
	    },
	    handleDragEnd: function handleDragEnd(event) {
	      if (!this.tree.draggable) return;
	      this.tree.$emit('tree-node-drag-end', event, this);
	    }
	  },

	  created: function created() {
	    var _this3 = this;

	    var parent = this.$parent;

	    if (parent.isTree) {
	      this.tree = parent;
	    } else {
	      this.tree = parent.tree;
	    }

	    var tree = this.tree;
	    if (!tree) {
	      console.warn('Can not find node\'s tree.');
	    }

	    var props = tree.props || {};
	    var childrenKey = props['children'] || 'children';

	    this.$watch('node.data.' + childrenKey, function () {
	      _this3.node.updateChildren();
	    });

	    if (this.node.expanded) {
	      this.expanded = true;
	      this.childNodeRendered = true;
	    }

	    if (this.tree.accordion) {
	      this.$on('tree-node-expand', function (node) {
	        if (_this3.node !== node) {
	          _this3.node.collapse();
	        }
	      });
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/tree/src/tree-node.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_tree_nodevue_type_script_lang_js_ = (tree_nodevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/tree/src/tree-node.vue





	/* normalize component */

	var tree_node_component = normalizeComponent(
	  src_tree_nodevue_type_script_lang_js_,
	  tree_nodevue_type_template_id_3ba3ef0e_render,
	  tree_nodevue_type_template_id_3ba3ef0e_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	tree_node_component.options.__file = "packages/tree/src/tree-node.vue";
	/* harmony default export */ var tree_node = (tree_node_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//








	/* harmony default export */ var treevue_type_script_lang_js_ = ({
	  name: 'ElTree',

	  mixins: [emitter_default.a],

	  components: {
	    ElTreeNode: tree_node
	  },

	  data: function data() {
	    return {
	      store: null,
	      root: null,
	      currentNode: null,
	      treeItems: null,
	      checkboxItems: [],
	      dragState: {
	        showDropIndicator: false,
	        draggingNode: null,
	        dropNode: null,
	        allowDrop: true
	      }
	    };
	  },


	  props: {
	    data: {
	      type: Array
	    },
	    emptyText: {
	      type: String,
	      default: function _default() {
	        return Object(lib_locale_["t"])('el.tree.emptyText');
	      }
	    },
	    renderAfterExpand: {
	      type: Boolean,
	      default: true
	    },
	    nodeKey: String,
	    checkStrictly: Boolean,
	    defaultExpandAll: Boolean,
	    expandOnClickNode: {
	      type: Boolean,
	      default: true
	    },
	    checkOnClickNode: Boolean,
	    checkDescendants: {
	      type: Boolean,
	      default: false
	    },
	    autoExpandParent: {
	      type: Boolean,
	      default: true
	    },
	    defaultCheckedKeys: Array,
	    defaultExpandedKeys: Array,
	    currentNodeKey: [String, Number],
	    renderContent: Function,
	    showCheckbox: {
	      type: Boolean,
	      default: false
	    },
	    draggable: {
	      type: Boolean,
	      default: false
	    },
	    allowDrag: Function,
	    allowDrop: Function,
	    props: {
	      default: function _default() {
	        return {
	          children: 'children',
	          label: 'label',
	          disabled: 'disabled'
	        };
	      }
	    },
	    lazy: {
	      type: Boolean,
	      default: false
	    },
	    highlightCurrent: Boolean,
	    load: Function,
	    filterNodeMethod: Function,
	    accordion: Boolean,
	    indent: {
	      type: Number,
	      default: 18
	    },
	    iconClass: String
	  },

	  computed: {
	    children: {
	      set: function set(value) {
	        this.data = value;
	      },
	      get: function get() {
	        return this.data;
	      }
	    },

	    treeItemArray: function treeItemArray() {
	      return Array.prototype.slice.call(this.treeItems);
	    },
	    isEmpty: function isEmpty() {
	      var childNodes = this.root.childNodes;

	      return !childNodes || childNodes.length === 0 || childNodes.every(function (_ref) {
	        var visible = _ref.visible;
	        return !visible;
	      });
	    }
	  },

	  watch: {
	    defaultCheckedKeys: function defaultCheckedKeys(newVal) {
	      this.store.setDefaultCheckedKey(newVal);
	    },
	    defaultExpandedKeys: function defaultExpandedKeys(newVal) {
	      this.store.defaultExpandedKeys = newVal;
	      this.store.setDefaultExpandedKeys(newVal);
	    },
	    data: function data(newVal) {
	      this.store.setData(newVal);
	    },
	    checkboxItems: function checkboxItems(val) {
	      Array.prototype.forEach.call(val, function (checkbox) {
	        checkbox.setAttribute('tabindex', -1);
	      });
	    },
	    checkStrictly: function checkStrictly(newVal) {
	      this.store.checkStrictly = newVal;
	    }
	  },

	  methods: {
	    filter: function filter(value) {
	      if (!this.filterNodeMethod) throw new Error('[Tree] filterNodeMethod is required when filter');
	      this.store.filter(value);
	    },
	    getNodeKey: function getNodeKey(node) {
	      return util_getNodeKey(this.nodeKey, node.data);
	    },
	    getNodePath: function getNodePath(data) {
	      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in getNodePath');
	      var node = this.store.getNode(data);
	      if (!node) return [];
	      var path = [node.data];
	      var parent = node.parent;
	      while (parent && parent !== this.root) {
	        path.push(parent.data);
	        parent = parent.parent;
	      }
	      return path.reverse();
	    },
	    getCheckedNodes: function getCheckedNodes(leafOnly, includeHalfChecked) {
	      return this.store.getCheckedNodes(leafOnly, includeHalfChecked);
	    },
	    getCheckedKeys: function getCheckedKeys(leafOnly) {
	      return this.store.getCheckedKeys(leafOnly);
	    },
	    getCurrentNode: function getCurrentNode() {
	      var currentNode = this.store.getCurrentNode();
	      return currentNode ? currentNode.data : null;
	    },
	    getCurrentKey: function getCurrentKey() {
	      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in getCurrentKey');
	      var currentNode = this.getCurrentNode();
	      return currentNode ? currentNode[this.nodeKey] : null;
	    },
	    setCheckedNodes: function setCheckedNodes(nodes, leafOnly) {
	      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCheckedNodes');
	      this.store.setCheckedNodes(nodes, leafOnly);
	    },
	    setCheckedKeys: function setCheckedKeys(keys, leafOnly) {
	      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCheckedKeys');
	      this.store.setCheckedKeys(keys, leafOnly);
	    },
	    setChecked: function setChecked(data, checked, deep) {
	      this.store.setChecked(data, checked, deep);
	    },
	    getHalfCheckedNodes: function getHalfCheckedNodes() {
	      return this.store.getHalfCheckedNodes();
	    },
	    getHalfCheckedKeys: function getHalfCheckedKeys() {
	      return this.store.getHalfCheckedKeys();
	    },
	    setCurrentNode: function setCurrentNode(node) {
	      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCurrentNode');
	      this.store.setUserCurrentNode(node);
	    },
	    setCurrentKey: function setCurrentKey(key) {
	      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCurrentKey');
	      this.store.setCurrentNodeKey(key);
	    },
	    getNode: function getNode(data) {
	      return this.store.getNode(data);
	    },
	    remove: function remove(data) {
	      this.store.remove(data);
	    },
	    append: function append(data, parentNode) {
	      this.store.append(data, parentNode);
	    },
	    insertBefore: function insertBefore(data, refNode) {
	      this.store.insertBefore(data, refNode);
	    },
	    insertAfter: function insertAfter(data, refNode) {
	      this.store.insertAfter(data, refNode);
	    },
	    handleNodeExpand: function handleNodeExpand(nodeData, node, instance) {
	      this.broadcast('ElTreeNode', 'tree-node-expand', node);
	      this.$emit('node-expand', nodeData, node, instance);
	    },
	    updateKeyChildren: function updateKeyChildren(key, data) {
	      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in updateKeyChild');
	      this.store.updateChildren(key, data);
	    },
	    initTabIndex: function initTabIndex() {
	      this.treeItems = this.$el.querySelectorAll('.is-focusable[role=treeitem]');
	      this.checkboxItems = this.$el.querySelectorAll('input[type=checkbox]');
	      var checkedItem = this.$el.querySelectorAll('.is-checked[role=treeitem]');
	      if (checkedItem.length) {
	        checkedItem[0].setAttribute('tabindex', 0);
	        return;
	      }
	      this.treeItems[0] && this.treeItems[0].setAttribute('tabindex', 0);
	    },
	    handleKeydown: function handleKeydown(ev) {
	      var currentItem = ev.target;
	      if (currentItem.className.indexOf('el-tree-node') === -1) return;
	      var keyCode = ev.keyCode;
	      this.treeItems = this.$el.querySelectorAll('.is-focusable[role=treeitem]');
	      var currentIndex = this.treeItemArray.indexOf(currentItem);
	      var nextIndex = void 0;
	      if ([38, 40].indexOf(keyCode) > -1) {
	        // up、down
	        ev.preventDefault();
	        if (keyCode === 38) {
	          // up
	          nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0;
	        } else {
	          nextIndex = currentIndex < this.treeItemArray.length - 1 ? currentIndex + 1 : 0;
	        }
	        this.treeItemArray[nextIndex].focus(); // 选中
	      }
	      if ([37, 39].indexOf(keyCode) > -1) {
	        // left、right 展开
	        ev.preventDefault();
	        currentItem.click(); // 选中
	      }
	      var hasInput = currentItem.querySelector('[type="checkbox"]');
	      if ([13, 32].indexOf(keyCode) > -1 && hasInput) {
	        // space enter选中checkbox
	        ev.preventDefault();
	        hasInput.click();
	      }
	    }
	  },

	  created: function created() {
	    var _this = this;

	    this.isTree = true;

	    this.store = new tree_store({
	      key: this.nodeKey,
	      data: this.data,
	      lazy: this.lazy,
	      props: this.props,
	      load: this.load,
	      currentNodeKey: this.currentNodeKey,
	      checkStrictly: this.checkStrictly,
	      checkDescendants: this.checkDescendants,
	      defaultCheckedKeys: this.defaultCheckedKeys,
	      defaultExpandedKeys: this.defaultExpandedKeys,
	      autoExpandParent: this.autoExpandParent,
	      defaultExpandAll: this.defaultExpandAll,
	      filterNodeMethod: this.filterNodeMethod
	    });

	    this.root = this.store.root;

	    var dragState = this.dragState;
	    this.$on('tree-node-drag-start', function (event, treeNode) {
	      if (typeof _this.allowDrag === 'function' && !_this.allowDrag(treeNode.node)) {
	        event.preventDefault();
	        return false;
	      }
	      event.dataTransfer.effectAllowed = 'move';

	      // wrap in try catch to address IE's error when first param is 'text/plain'
	      try {
	        // setData is required for draggable to work in FireFox
	        // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox
	        event.dataTransfer.setData('text/plain', '');
	      } catch (e) {}
	      dragState.draggingNode = treeNode;
	      _this.$emit('node-drag-start', treeNode.node, event);
	    });

	    this.$on('tree-node-drag-over', function (event, treeNode) {
	      var dropNode = findNearestComponent(event.target, 'ElTreeNode');
	      var oldDropNode = dragState.dropNode;
	      if (oldDropNode && oldDropNode !== dropNode) {
	        Object(dom_["removeClass"])(oldDropNode.$el, 'is-drop-inner');
	      }
	      var draggingNode = dragState.draggingNode;
	      if (!draggingNode || !dropNode) return;

	      var dropPrev = true;
	      var dropInner = true;
	      var dropNext = true;
	      var userAllowDropInner = true;
	      if (typeof _this.allowDrop === 'function') {
	        dropPrev = _this.allowDrop(draggingNode.node, dropNode.node, 'prev');
	        userAllowDropInner = dropInner = _this.allowDrop(draggingNode.node, dropNode.node, 'inner');
	        dropNext = _this.allowDrop(draggingNode.node, dropNode.node, 'next');
	      }
	      event.dataTransfer.dropEffect = dropInner ? 'move' : 'none';
	      if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {
	        if (oldDropNode) {
	          _this.$emit('node-drag-leave', draggingNode.node, oldDropNode.node, event);
	        }
	        _this.$emit('node-drag-enter', draggingNode.node, dropNode.node, event);
	      }

	      if (dropPrev || dropInner || dropNext) {
	        dragState.dropNode = dropNode;
	      }

	      if (dropNode.node.nextSibling === draggingNode.node) {
	        dropNext = false;
	      }
	      if (dropNode.node.previousSibling === draggingNode.node) {
	        dropPrev = false;
	      }
	      if (dropNode.node.contains(draggingNode.node, false)) {
	        dropInner = false;
	      }
	      if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {
	        dropPrev = false;
	        dropInner = false;
	        dropNext = false;
	      }

	      var targetPosition = dropNode.$el.getBoundingClientRect();
	      var treePosition = _this.$el.getBoundingClientRect();

	      var dropType = void 0;
	      var prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;
	      var nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;

	      var indicatorTop = -9999;
	      var distance = event.clientY - targetPosition.top;
	      if (distance < targetPosition.height * prevPercent) {
	        dropType = 'before';
	      } else if (distance > targetPosition.height * nextPercent) {
	        dropType = 'after';
	      } else if (dropInner) {
	        dropType = 'inner';
	      } else {
	        dropType = 'none';
	      }

	      var iconPosition = dropNode.$el.querySelector('.el-tree-node__expand-icon').getBoundingClientRect();
	      var dropIndicator = _this.$refs.dropIndicator;
	      if (dropType === 'before') {
	        indicatorTop = iconPosition.top - treePosition.top;
	      } else if (dropType === 'after') {
	        indicatorTop = iconPosition.bottom - treePosition.top;
	      }
	      dropIndicator.style.top = indicatorTop + 'px';
	      dropIndicator.style.left = iconPosition.right - treePosition.left + 'px';

	      if (dropType === 'inner') {
	        Object(dom_["addClass"])(dropNode.$el, 'is-drop-inner');
	      } else {
	        Object(dom_["removeClass"])(dropNode.$el, 'is-drop-inner');
	      }

	      dragState.showDropIndicator = dropType === 'before' || dropType === 'after';
	      dragState.allowDrop = dragState.showDropIndicator || userAllowDropInner;
	      dragState.dropType = dropType;
	      _this.$emit('node-drag-over', draggingNode.node, dropNode.node, event);
	    });

	    this.$on('tree-node-drag-end', function (event) {
	      var draggingNode = dragState.draggingNode,
	          dropType = dragState.dropType,
	          dropNode = dragState.dropNode;

	      event.preventDefault();
	      event.dataTransfer.dropEffect = 'move';

	      if (draggingNode && dropNode) {
	        var draggingNodeCopy = { data: draggingNode.node.data };
	        if (dropType !== 'none') {
	          draggingNode.node.remove();
	        }
	        if (dropType === 'before') {
	          dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);
	        } else if (dropType === 'after') {
	          dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);
	        } else if (dropType === 'inner') {
	          dropNode.node.insertChild(draggingNodeCopy);
	        }
	        if (dropType !== 'none') {
	          _this.store.registerNode(draggingNodeCopy);
	        }

	        Object(dom_["removeClass"])(dropNode.$el, 'is-drop-inner');

	        _this.$emit('node-drag-end', draggingNode.node, dropNode.node, dropType, event);
	        if (dropType !== 'none') {
	          _this.$emit('node-drop', draggingNode.node, dropNode.node, dropType, event);
	        }
	      }
	      if (draggingNode && !dropNode) {
	        _this.$emit('node-drag-end', draggingNode.node, null, dropType, event);
	      }

	      dragState.showDropIndicator = false;
	      dragState.draggingNode = null;
	      dragState.dropNode = null;
	      dragState.allowDrop = true;
	    });
	  },
	  mounted: function mounted() {
	    this.initTabIndex();
	    this.$el.addEventListener('keydown', this.handleKeydown);
	  },
	  updated: function updated() {
	    this.treeItems = this.$el.querySelectorAll('[role=treeitem]');
	    this.checkboxItems = this.$el.querySelectorAll('input[type=checkbox]');
	  }
	});
	// CONCATENATED MODULE: ./packages/tree/src/tree.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_treevue_type_script_lang_js_ = (treevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/tree/src/tree.vue





	/* normalize component */

	var tree_component = normalizeComponent(
	  src_treevue_type_script_lang_js_,
	  treevue_type_template_id_547575a6_render,
	  treevue_type_template_id_547575a6_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	tree_component.options.__file = "packages/tree/src/tree.vue";
	/* harmony default export */ var src_tree = (tree_component.exports);
	// CONCATENATED MODULE: ./packages/tree/index.js


	/* istanbul ignore next */
	src_tree.install = function (Vue) {
	  Vue.component(src_tree.name, src_tree);
	};

	/* harmony default export */ var packages_tree = (src_tree);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/alert/src/main.vue?vue&type=template&id=6e53341b&
	var mainvue_type_template_id_6e53341b_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("transition", { attrs: { name: "el-alert-fade" } }, [
	    _c(
	      "div",
	      {
	        directives: [
	          {
	            name: "show",
	            rawName: "v-show",
	            value: _vm.visible,
	            expression: "visible"
	          }
	        ],
	        staticClass: "el-alert",
	        class: [
	          _vm.typeClass,
	          _vm.center ? "is-center" : "",
	          "is-" + _vm.effect
	        ],
	        attrs: { role: "alert" }
	      },
	      [
	        _vm.showIcon
	          ? _c("i", {
	              staticClass: "el-alert__icon",
	              class: [_vm.iconClass, _vm.isBigIcon]
	            })
	          : _vm._e(),
	        _c("div", { staticClass: "el-alert__content" }, [
	          _vm.title || _vm.$slots.title
	            ? _c(
	                "span",
	                { staticClass: "el-alert__title", class: [_vm.isBoldTitle] },
	                [_vm._t("title", [_vm._v(_vm._s(_vm.title))])],
	                2
	              )
	            : _vm._e(),
	          _vm.$slots.default && !_vm.description
	            ? _c(
	                "p",
	                { staticClass: "el-alert__description" },
	                [_vm._t("default")],
	                2
	              )
	            : _vm._e(),
	          _vm.description && !_vm.$slots.default
	            ? _c("p", { staticClass: "el-alert__description" }, [
	                _vm._v(_vm._s(_vm.description))
	              ])
	            : _vm._e(),
	          _c(
	            "i",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: _vm.closable,
	                  expression: "closable"
	                }
	              ],
	              staticClass: "el-alert__closebtn",
	              class: {
	                "is-customed": _vm.closeText !== "",
	                "el-icon-close": _vm.closeText === ""
	              },
	              on: {
	                click: function($event) {
	                  _vm.close();
	                }
	              }
	            },
	            [_vm._v(_vm._s(_vm.closeText))]
	          )
	        ])
	      ]
	    )
	  ])
	};
	var mainvue_type_template_id_6e53341b_staticRenderFns = [];
	mainvue_type_template_id_6e53341b_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/alert/src/main.vue?vue&type=template&id=6e53341b&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/alert/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var TYPE_CLASSES_MAP = {
	  'success': 'el-icon-success',
	  'warning': 'el-icon-warning',
	  'error': 'el-icon-error'
	};
	/* harmony default export */ var alert_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElAlert',

	  props: {
	    title: {
	      type: String,
	      default: ''
	    },
	    description: {
	      type: String,
	      default: ''
	    },
	    type: {
	      type: String,
	      default: 'info'
	    },
	    closable: {
	      type: Boolean,
	      default: true
	    },
	    closeText: {
	      type: String,
	      default: ''
	    },
	    showIcon: Boolean,
	    center: Boolean,
	    effect: {
	      type: String,
	      default: 'light',
	      validator: function validator(value) {
	        return ['light', 'dark'].indexOf(value) !== -1;
	      }
	    }
	  },

	  data: function data() {
	    return {
	      visible: true
	    };
	  },


	  methods: {
	    close: function close() {
	      this.visible = false;
	      this.$emit('close');
	    }
	  },

	  computed: {
	    typeClass: function typeClass() {
	      return 'el-alert--' + this.type;
	    },
	    iconClass: function iconClass() {
	      return TYPE_CLASSES_MAP[this.type] || 'el-icon-info';
	    },
	    isBigIcon: function isBigIcon() {
	      return this.description || this.$slots.default ? 'is-big' : '';
	    },
	    isBoldTitle: function isBoldTitle() {
	      return this.description || this.$slots.default ? 'is-bold' : '';
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/alert/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_alert_src_mainvue_type_script_lang_js_ = (alert_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/alert/src/main.vue





	/* normalize component */

	var alert_src_main_component = normalizeComponent(
	  packages_alert_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_6e53341b_render,
	  mainvue_type_template_id_6e53341b_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	alert_src_main_component.options.__file = "packages/alert/src/main.vue";
	/* harmony default export */ var alert_src_main = (alert_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/alert/index.js


	/* istanbul ignore next */
	alert_src_main.install = function (Vue) {
	  Vue.component(alert_src_main.name, alert_src_main);
	};

	/* harmony default export */ var packages_alert = (alert_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/notification/src/main.vue?vue&type=template&id=43dbc3d8&
	var mainvue_type_template_id_43dbc3d8_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("transition", { attrs: { name: "el-notification-fade" } }, [
	    _c(
	      "div",
	      {
	        directives: [
	          {
	            name: "show",
	            rawName: "v-show",
	            value: _vm.visible,
	            expression: "visible"
	          }
	        ],
	        class: ["el-notification", _vm.customClass, _vm.horizontalClass],
	        style: _vm.positionStyle,
	        attrs: { role: "alert" },
	        on: {
	          mouseenter: function($event) {
	            _vm.clearTimer();
	          },
	          mouseleave: function($event) {
	            _vm.startTimer();
	          },
	          click: _vm.click
	        }
	      },
	      [
	        _vm.type || _vm.iconClass
	          ? _c("i", {
	              staticClass: "el-notification__icon",
	              class: [_vm.typeClass, _vm.iconClass]
	            })
	          : _vm._e(),
	        _c(
	          "div",
	          {
	            staticClass: "el-notification__group",
	            class: { "is-with-icon": _vm.typeClass || _vm.iconClass }
	          },
	          [
	            _c("h2", {
	              staticClass: "el-notification__title",
	              domProps: { textContent: _vm._s(_vm.title) }
	            }),
	            _c(
	              "div",
	              {
	                directives: [
	                  {
	                    name: "show",
	                    rawName: "v-show",
	                    value: _vm.message,
	                    expression: "message"
	                  }
	                ],
	                staticClass: "el-notification__content"
	              },
	              [
	                _vm._t("default", [
	                  !_vm.dangerouslyUseHTMLString
	                    ? _c("p", [_vm._v(_vm._s(_vm.message))])
	                    : _c("p", { domProps: { innerHTML: _vm._s(_vm.message) } })
	                ])
	              ],
	              2
	            ),
	            _vm.showClose
	              ? _c("div", {
	                  staticClass: "el-notification__closeBtn el-icon-close",
	                  on: {
	                    click: function($event) {
	                      $event.stopPropagation();
	                      return _vm.close($event)
	                    }
	                  }
	                })
	              : _vm._e()
	          ]
	        )
	      ]
	    )
	  ])
	};
	var mainvue_type_template_id_43dbc3d8_staticRenderFns = [];
	mainvue_type_template_id_43dbc3d8_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/notification/src/main.vue?vue&type=template&id=43dbc3d8&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/notification/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var mainvue_type_script_lang_js_typeMap = {
	  success: 'success',
	  info: 'info',
	  warning: 'warning',
	  error: 'error'
	};

	/* harmony default export */ var notification_src_mainvue_type_script_lang_js_ = ({
	  data: function data() {
	    return {
	      visible: false,
	      title: '',
	      message: '',
	      duration: 4500,
	      type: '',
	      showClose: true,
	      customClass: '',
	      iconClass: '',
	      onClose: null,
	      onClick: null,
	      closed: false,
	      verticalOffset: 0,
	      timer: null,
	      dangerouslyUseHTMLString: false,
	      position: 'top-right'
	    };
	  },


	  computed: {
	    typeClass: function typeClass() {
	      return this.type && mainvue_type_script_lang_js_typeMap[this.type] ? 'el-icon-' + mainvue_type_script_lang_js_typeMap[this.type] : '';
	    },
	    horizontalClass: function horizontalClass() {
	      return this.position.indexOf('right') > -1 ? 'right' : 'left';
	    },
	    verticalProperty: function verticalProperty() {
	      return (/^top-/.test(this.position) ? 'top' : 'bottom'
	      );
	    },
	    positionStyle: function positionStyle() {
	      var _ref;

	      return _ref = {}, _ref[this.verticalProperty] = this.verticalOffset + 'px', _ref;
	    }
	  },

	  watch: {
	    closed: function closed(newVal) {
	      if (newVal) {
	        this.visible = false;
	        this.$el.addEventListener('transitionend', this.destroyElement);
	      }
	    }
	  },

	  methods: {
	    destroyElement: function destroyElement() {
	      this.$el.removeEventListener('transitionend', this.destroyElement);
	      this.$destroy(true);
	      this.$el.parentNode.removeChild(this.$el);
	    },
	    click: function click() {
	      if (typeof this.onClick === 'function') {
	        this.onClick();
	      }
	    },
	    close: function close() {
	      this.closed = true;
	      if (typeof this.onClose === 'function') {
	        this.onClose();
	      }
	    },
	    clearTimer: function clearTimer() {
	      clearTimeout(this.timer);
	    },
	    startTimer: function startTimer() {
	      var _this = this;

	      if (this.duration > 0) {
	        this.timer = setTimeout(function () {
	          if (!_this.closed) {
	            _this.close();
	          }
	        }, this.duration);
	      }
	    },
	    keydown: function keydown(e) {
	      if (e.keyCode === 46 || e.keyCode === 8) {
	        this.clearTimer(); // detele 取消倒计时
	      } else if (e.keyCode === 27) {
	        // esc关闭消息
	        if (!this.closed) {
	          this.close();
	        }
	      } else {
	        this.startTimer(); // 恢复倒计时
	      }
	    }
	  },
	  mounted: function mounted() {
	    var _this2 = this;

	    if (this.duration > 0) {
	      this.timer = setTimeout(function () {
	        if (!_this2.closed) {
	          _this2.close();
	        }
	      }, this.duration);
	    }
	    document.addEventListener('keydown', this.keydown);
	  },
	  beforeDestroy: function beforeDestroy() {
	    document.removeEventListener('keydown', this.keydown);
	  }
	});
	// CONCATENATED MODULE: ./packages/notification/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_notification_src_mainvue_type_script_lang_js_ = (notification_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/notification/src/main.vue





	/* normalize component */

	var notification_src_main_component = normalizeComponent(
	  packages_notification_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_43dbc3d8_render,
	  mainvue_type_template_id_43dbc3d8_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	notification_src_main_component.options.__file = "packages/notification/src/main.vue";
	/* harmony default export */ var notification_src_main = (notification_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/notification/src/main.js





	var NotificationConstructor = external_vue_default.a.extend(notification_src_main);

	var src_main_instance = void 0;
	var instances = [];
	var seed = 1;

	var main_Notification = function Notification(options) {
	  if (external_vue_default.a.prototype.$isServer) return;
	  options = merge_default()({}, options);
	  var userOnClose = options.onClose;
	  var id = 'notification_' + seed++;
	  var position = options.position || 'top-right';

	  options.onClose = function () {
	    Notification.close(id, userOnClose);
	  };

	  src_main_instance = new NotificationConstructor({
	    data: options
	  });

	  if (Object(vdom_["isVNode"])(options.message)) {
	    src_main_instance.$slots.default = [options.message];
	    options.message = 'REPLACED_BY_VNODE';
	  }
	  src_main_instance.id = id;
	  src_main_instance.$mount();
	  document.body.appendChild(src_main_instance.$el);
	  src_main_instance.visible = true;
	  src_main_instance.dom = src_main_instance.$el;
	  src_main_instance.dom.style.zIndex = popup_["PopupManager"].nextZIndex();

	  var verticalOffset = options.offset || 0;
	  instances.filter(function (item) {
	    return item.position === position;
	  }).forEach(function (item) {
	    verticalOffset += item.$el.offsetHeight + 16;
	  });
	  verticalOffset += 16;
	  src_main_instance.verticalOffset = verticalOffset;
	  instances.push(src_main_instance);
	  return src_main_instance;
	};

	['success', 'warning', 'info', 'error'].forEach(function (type) {
	  main_Notification[type] = function (options) {
	    if (typeof options === 'string' || Object(vdom_["isVNode"])(options)) {
	      options = {
	        message: options
	      };
	    }
	    options.type = type;
	    return main_Notification(options);
	  };
	});

	main_Notification.close = function (id, userOnClose) {
	  var index = -1;
	  var len = instances.length;
	  var instance = instances.filter(function (instance, i) {
	    if (instance.id === id) {
	      index = i;
	      return true;
	    }
	    return false;
	  })[0];
	  if (!instance) return;

	  if (typeof userOnClose === 'function') {
	    userOnClose(instance);
	  }
	  instances.splice(index, 1);

	  if (len <= 1) return;
	  var position = instance.position;
	  var removedHeight = instance.dom.offsetHeight;
	  for (var i = index; i < len - 1; i++) {
	    if (instances[i].position === position) {
	      instances[i].dom.style[instance.verticalProperty] = parseInt(instances[i].dom.style[instance.verticalProperty], 10) - removedHeight - 16 + 'px';
	    }
	  }
	};

	main_Notification.closeAll = function () {
	  for (var i = instances.length - 1; i >= 0; i--) {
	    instances[i].close();
	  }
	};

	/* harmony default export */ var packages_notification_src_main = (main_Notification);
	// CONCATENATED MODULE: ./packages/notification/index.js

	/* harmony default export */ var notification = (packages_notification_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/main.vue?vue&type=template&id=32708644&
	var mainvue_type_template_id_32708644_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-slider",
	      class: {
	        "is-vertical": _vm.vertical,
	        "el-slider--with-input": _vm.showInput
	      },
	      attrs: {
	        role: "slider",
	        "aria-valuemin": _vm.min,
	        "aria-valuemax": _vm.max,
	        "aria-orientation": _vm.vertical ? "vertical" : "horizontal",
	        "aria-disabled": _vm.sliderDisabled
	      }
	    },
	    [
	      _vm.showInput && !_vm.range
	        ? _c("el-input-number", {
	            ref: "input",
	            staticClass: "el-slider__input",
	            attrs: {
	              step: _vm.step,
	              disabled: _vm.sliderDisabled,
	              controls: _vm.showInputControls,
	              min: _vm.min,
	              max: _vm.max,
	              debounce: _vm.debounce,
	              size: _vm.inputSize
	            },
	            on: { change: _vm.emitChange },
	            model: {
	              value: _vm.firstValue,
	              callback: function($$v) {
	                _vm.firstValue = $$v;
	              },
	              expression: "firstValue"
	            }
	          })
	        : _vm._e(),
	      _c(
	        "div",
	        {
	          ref: "slider",
	          staticClass: "el-slider__runway",
	          class: { "show-input": _vm.showInput, disabled: _vm.sliderDisabled },
	          style: _vm.runwayStyle,
	          on: { click: _vm.onSliderClick }
	        },
	        [
	          _c("div", { staticClass: "el-slider__bar", style: _vm.barStyle }),
	          _c("slider-button", {
	            ref: "button1",
	            attrs: {
	              vertical: _vm.vertical,
	              "tooltip-class": _vm.tooltipClass
	            },
	            model: {
	              value: _vm.firstValue,
	              callback: function($$v) {
	                _vm.firstValue = $$v;
	              },
	              expression: "firstValue"
	            }
	          }),
	          _vm.range
	            ? _c("slider-button", {
	                ref: "button2",
	                attrs: {
	                  vertical: _vm.vertical,
	                  "tooltip-class": _vm.tooltipClass
	                },
	                model: {
	                  value: _vm.secondValue,
	                  callback: function($$v) {
	                    _vm.secondValue = $$v;
	                  },
	                  expression: "secondValue"
	                }
	              })
	            : _vm._e(),
	          _vm._l(_vm.stops, function(item, key) {
	            return _vm.showStops
	              ? _c("div", {
	                  key: key,
	                  staticClass: "el-slider__stop",
	                  style: _vm.getStopStyle(item)
	                })
	              : _vm._e()
	          }),
	          _vm.markList.length > 0
	            ? [
	                _c(
	                  "div",
	                  _vm._l(_vm.markList, function(item, key) {
	                    return _c("div", {
	                      key: key,
	                      staticClass: "el-slider__stop el-slider__marks-stop",
	                      style: _vm.getStopStyle(item.position)
	                    })
	                  }),
	                  0
	                ),
	                _c(
	                  "div",
	                  { staticClass: "el-slider__marks" },
	                  _vm._l(_vm.markList, function(item, key) {
	                    return _c("slider-marker", {
	                      key: key,
	                      style: _vm.getStopStyle(item.position),
	                      attrs: { mark: item.mark }
	                    })
	                  }),
	                  1
	                )
	              ]
	            : _vm._e()
	        ],
	        2
	      )
	    ],
	    1
	  )
	};
	var mainvue_type_template_id_32708644_staticRenderFns = [];
	mainvue_type_template_id_32708644_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/slider/src/main.vue?vue&type=template&id=32708644&

	// EXTERNAL MODULE: external "element-ui/lib/input-number"
	var input_number_ = __webpack_require__(42);
	var input_number_default = /*#__PURE__*/__webpack_require__.n(input_number_);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/button.vue?vue&type=template&id=e72d2ad2&
	var buttonvue_type_template_id_e72d2ad2_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      ref: "button",
	      staticClass: "el-slider__button-wrapper",
	      class: { hover: _vm.hovering, dragging: _vm.dragging },
	      style: _vm.wrapperStyle,
	      attrs: { tabindex: "0" },
	      on: {
	        mouseenter: _vm.handleMouseEnter,
	        mouseleave: _vm.handleMouseLeave,
	        mousedown: _vm.onButtonDown,
	        touchstart: _vm.onButtonDown,
	        focus: _vm.handleMouseEnter,
	        blur: _vm.handleMouseLeave,
	        keydown: [
	          function($event) {
	            if (
	              !("button" in $event) &&
	              _vm._k($event.keyCode, "left", 37, $event.key, [
	                "Left",
	                "ArrowLeft"
	              ])
	            ) {
	              return null
	            }
	            if ("button" in $event && $event.button !== 0) {
	              return null
	            }
	            return _vm.onLeftKeyDown($event)
	          },
	          function($event) {
	            if (
	              !("button" in $event) &&
	              _vm._k($event.keyCode, "right", 39, $event.key, [
	                "Right",
	                "ArrowRight"
	              ])
	            ) {
	              return null
	            }
	            if ("button" in $event && $event.button !== 2) {
	              return null
	            }
	            return _vm.onRightKeyDown($event)
	          },
	          function($event) {
	            if (
	              !("button" in $event) &&
	              _vm._k($event.keyCode, "down", 40, $event.key, [
	                "Down",
	                "ArrowDown"
	              ])
	            ) {
	              return null
	            }
	            $event.preventDefault();
	            return _vm.onLeftKeyDown($event)
	          },
	          function($event) {
	            if (
	              !("button" in $event) &&
	              _vm._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])
	            ) {
	              return null
	            }
	            $event.preventDefault();
	            return _vm.onRightKeyDown($event)
	          }
	        ]
	      }
	    },
	    [
	      _c(
	        "el-tooltip",
	        {
	          ref: "tooltip",
	          attrs: {
	            placement: "top",
	            "popper-class": _vm.tooltipClass,
	            disabled: !_vm.showTooltip
	          }
	        },
	        [
	          _c("span", { attrs: { slot: "content" }, slot: "content" }, [
	            _vm._v(_vm._s(_vm.formatValue))
	          ]),
	          _c("div", {
	            staticClass: "el-slider__button",
	            class: { hover: _vm.hovering, dragging: _vm.dragging }
	          })
	        ]
	      )
	    ],
	    1
	  )
	};
	var buttonvue_type_template_id_e72d2ad2_staticRenderFns = [];
	buttonvue_type_template_id_e72d2ad2_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/slider/src/button.vue?vue&type=template&id=e72d2ad2&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/button.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var slider_src_buttonvue_type_script_lang_js_ = ({
	  name: 'ElSliderButton',

	  components: {
	    ElTooltip: tooltip_default.a
	  },

	  props: {
	    value: {
	      type: Number,
	      default: 0
	    },
	    vertical: {
	      type: Boolean,
	      default: false
	    },
	    tooltipClass: String
	  },

	  data: function data() {
	    return {
	      hovering: false,
	      dragging: false,
	      isClick: false,
	      startX: 0,
	      currentX: 0,
	      startY: 0,
	      currentY: 0,
	      startPosition: 0,
	      newPosition: null,
	      oldValue: this.value
	    };
	  },


	  computed: {
	    disabled: function disabled() {
	      return this.$parent.sliderDisabled;
	    },
	    max: function max() {
	      return this.$parent.max;
	    },
	    min: function min() {
	      return this.$parent.min;
	    },
	    step: function step() {
	      return this.$parent.step;
	    },
	    showTooltip: function showTooltip() {
	      return this.$parent.showTooltip;
	    },
	    precision: function precision() {
	      return this.$parent.precision;
	    },
	    currentPosition: function currentPosition() {
	      return (this.value - this.min) / (this.max - this.min) * 100 + '%';
	    },
	    enableFormat: function enableFormat() {
	      return this.$parent.formatTooltip instanceof Function;
	    },
	    formatValue: function formatValue() {
	      return this.enableFormat && this.$parent.formatTooltip(this.value) || this.value;
	    },
	    wrapperStyle: function wrapperStyle() {
	      return this.vertical ? { bottom: this.currentPosition } : { left: this.currentPosition };
	    }
	  },

	  watch: {
	    dragging: function dragging(val) {
	      this.$parent.dragging = val;
	    }
	  },

	  methods: {
	    displayTooltip: function displayTooltip() {
	      this.$refs.tooltip && (this.$refs.tooltip.showPopper = true);
	    },
	    hideTooltip: function hideTooltip() {
	      this.$refs.tooltip && (this.$refs.tooltip.showPopper = false);
	    },
	    handleMouseEnter: function handleMouseEnter() {
	      this.hovering = true;
	      this.displayTooltip();
	    },
	    handleMouseLeave: function handleMouseLeave() {
	      this.hovering = false;
	      this.hideTooltip();
	    },
	    onButtonDown: function onButtonDown(event) {
	      if (this.disabled) return;
	      event.preventDefault();
	      this.onDragStart(event);
	      window.addEventListener('mousemove', this.onDragging);
	      window.addEventListener('touchmove', this.onDragging);
	      window.addEventListener('mouseup', this.onDragEnd);
	      window.addEventListener('touchend', this.onDragEnd);
	      window.addEventListener('contextmenu', this.onDragEnd);
	    },
	    onLeftKeyDown: function onLeftKeyDown() {
	      if (this.disabled) return;
	      this.newPosition = parseFloat(this.currentPosition) - this.step / (this.max - this.min) * 100;
	      this.setPosition(this.newPosition);
	      this.$parent.emitChange();
	    },
	    onRightKeyDown: function onRightKeyDown() {
	      if (this.disabled) return;
	      this.newPosition = parseFloat(this.currentPosition) + this.step / (this.max - this.min) * 100;
	      this.setPosition(this.newPosition);
	      this.$parent.emitChange();
	    },
	    onDragStart: function onDragStart(event) {
	      this.dragging = true;
	      this.isClick = true;
	      if (event.type === 'touchstart') {
	        event.clientY = event.touches[0].clientY;
	        event.clientX = event.touches[0].clientX;
	      }
	      if (this.vertical) {
	        this.startY = event.clientY;
	      } else {
	        this.startX = event.clientX;
	      }
	      this.startPosition = parseFloat(this.currentPosition);
	      this.newPosition = this.startPosition;
	    },
	    onDragging: function onDragging(event) {
	      if (this.dragging) {
	        this.isClick = false;
	        this.displayTooltip();
	        this.$parent.resetSize();
	        var diff = 0;
	        if (event.type === 'touchmove') {
	          event.clientY = event.touches[0].clientY;
	          event.clientX = event.touches[0].clientX;
	        }
	        if (this.vertical) {
	          this.currentY = event.clientY;
	          diff = (this.startY - this.currentY) / this.$parent.sliderSize * 100;
	        } else {
	          this.currentX = event.clientX;
	          diff = (this.currentX - this.startX) / this.$parent.sliderSize * 100;
	        }
	        this.newPosition = this.startPosition + diff;
	        this.setPosition(this.newPosition);
	      }
	    },
	    onDragEnd: function onDragEnd() {
	      var _this = this;

	      if (this.dragging) {
	        /*
	         * 防止在 mouseup 后立即触发 click，导致滑块有几率产生一小段位移
	         * 不使用 preventDefault 是因为 mouseup 和 click 没有注册在同一个 DOM 上
	         */
	        setTimeout(function () {
	          _this.dragging = false;
	          _this.hideTooltip();
	          if (!_this.isClick) {
	            _this.setPosition(_this.newPosition);
	            _this.$parent.emitChange();
	          }
	        }, 0);
	        window.removeEventListener('mousemove', this.onDragging);
	        window.removeEventListener('touchmove', this.onDragging);
	        window.removeEventListener('mouseup', this.onDragEnd);
	        window.removeEventListener('touchend', this.onDragEnd);
	        window.removeEventListener('contextmenu', this.onDragEnd);
	      }
	    },
	    setPosition: function setPosition(newPosition) {
	      var _this2 = this;

	      if (newPosition === null || isNaN(newPosition)) return;
	      if (newPosition < 0) {
	        newPosition = 0;
	      } else if (newPosition > 100) {
	        newPosition = 100;
	      }
	      var lengthPerStep = 100 / ((this.max - this.min) / this.step);
	      var steps = Math.round(newPosition / lengthPerStep);
	      var value = steps * lengthPerStep * (this.max - this.min) * 0.01 + this.min;
	      value = parseFloat(value.toFixed(this.precision));
	      this.$emit('input', value);
	      this.$nextTick(function () {
	        _this2.displayTooltip();
	        _this2.$refs.tooltip && _this2.$refs.tooltip.updatePopper();
	      });
	      if (!this.dragging && this.value !== this.oldValue) {
	        this.oldValue = this.value;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/slider/src/button.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_slider_src_buttonvue_type_script_lang_js_ = (slider_src_buttonvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/slider/src/button.vue





	/* normalize component */

	var src_button_component = normalizeComponent(
	  packages_slider_src_buttonvue_type_script_lang_js_,
	  buttonvue_type_template_id_e72d2ad2_render,
	  buttonvue_type_template_id_e72d2ad2_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	src_button_component.options.__file = "packages/slider/src/button.vue";
	/* harmony default export */ var slider_src_button = (src_button_component.exports);
	// CONCATENATED MODULE: ./packages/slider/src/marker.js
	/* harmony default export */ var marker = ({
	  name: 'ElMarker',

	  props: {
	    mark: {
	      type: [String, Object]
	    }
	  },
	  render: function render() {
	    var h = arguments[0];

	    var label = typeof this.mark === 'string' ? this.mark : this.mark.label;

	    return h(
	      'div',
	      { 'class': 'el-slider__marks-text', style: this.mark.style || {} },
	      [label]
	    );
	  }
	});
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	/* harmony default export */ var slider_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElSlider',

	  mixins: [emitter_default.a],

	  inject: {
	    elForm: {
	      default: ''
	    }
	  },

	  props: {
	    min: {
	      type: Number,
	      default: 0
	    },
	    max: {
	      type: Number,
	      default: 100
	    },
	    step: {
	      type: Number,
	      default: 1
	    },
	    value: {
	      type: [Number, Array],
	      default: 0
	    },
	    showInput: {
	      type: Boolean,
	      default: false
	    },
	    showInputControls: {
	      type: Boolean,
	      default: true
	    },
	    inputSize: {
	      type: String,
	      default: 'small'
	    },
	    showStops: {
	      type: Boolean,
	      default: false
	    },
	    showTooltip: {
	      type: Boolean,
	      default: true
	    },
	    formatTooltip: Function,
	    disabled: {
	      type: Boolean,
	      default: false
	    },
	    range: {
	      type: Boolean,
	      default: false
	    },
	    vertical: {
	      type: Boolean,
	      default: false
	    },
	    height: {
	      type: String
	    },
	    debounce: {
	      type: Number,
	      default: 300
	    },
	    label: {
	      type: String
	    },
	    tooltipClass: String,
	    marks: Object
	  },

	  components: {
	    ElInputNumber: input_number_default.a,
	    SliderButton: slider_src_button,
	    SliderMarker: marker
	  },

	  data: function data() {
	    return {
	      firstValue: null,
	      secondValue: null,
	      oldValue: null,
	      dragging: false,
	      sliderSize: 1
	    };
	  },


	  watch: {
	    value: function value(val, oldVal) {
	      if (this.dragging || Array.isArray(val) && Array.isArray(oldVal) && val.every(function (item, index) {
	        return item === oldVal[index];
	      })) {
	        return;
	      }
	      this.setValues();
	    },
	    dragging: function dragging(val) {
	      if (!val) {
	        this.setValues();
	      }
	    },
	    firstValue: function firstValue(val) {
	      if (this.range) {
	        this.$emit('input', [this.minValue, this.maxValue]);
	      } else {
	        this.$emit('input', val);
	      }
	    },
	    secondValue: function secondValue() {
	      if (this.range) {
	        this.$emit('input', [this.minValue, this.maxValue]);
	      }
	    },
	    min: function min() {
	      this.setValues();
	    },
	    max: function max() {
	      this.setValues();
	    }
	  },

	  methods: {
	    valueChanged: function valueChanged() {
	      var _this = this;

	      if (this.range) {
	        return ![this.minValue, this.maxValue].every(function (item, index) {
	          return item === _this.oldValue[index];
	        });
	      } else {
	        return this.value !== this.oldValue;
	      }
	    },
	    setValues: function setValues() {
	      if (this.min > this.max) {
	        console.error('[Element Error][Slider]min should not be greater than max.');
	        return;
	      }
	      var val = this.value;
	      if (this.range && Array.isArray(val)) {
	        if (val[1] < this.min) {
	          this.$emit('input', [this.min, this.min]);
	        } else if (val[0] > this.max) {
	          this.$emit('input', [this.max, this.max]);
	        } else if (val[0] < this.min) {
	          this.$emit('input', [this.min, val[1]]);
	        } else if (val[1] > this.max) {
	          this.$emit('input', [val[0], this.max]);
	        } else {
	          this.firstValue = val[0];
	          this.secondValue = val[1];
	          if (this.valueChanged()) {
	            this.dispatch('ElFormItem', 'el.form.change', [this.minValue, this.maxValue]);
	            this.oldValue = val.slice();
	          }
	        }
	      } else if (!this.range && typeof val === 'number' && !isNaN(val)) {
	        if (val < this.min) {
	          this.$emit('input', this.min);
	        } else if (val > this.max) {
	          this.$emit('input', this.max);
	        } else {
	          this.firstValue = val;
	          if (this.valueChanged()) {
	            this.dispatch('ElFormItem', 'el.form.change', val);
	            this.oldValue = val;
	          }
	        }
	      }
	    },
	    setPosition: function setPosition(percent) {
	      var targetValue = this.min + percent * (this.max - this.min) / 100;
	      if (!this.range) {
	        this.$refs.button1.setPosition(percent);
	        return;
	      }
	      var button = void 0;
	      if (Math.abs(this.minValue - targetValue) < Math.abs(this.maxValue - targetValue)) {
	        button = this.firstValue < this.secondValue ? 'button1' : 'button2';
	      } else {
	        button = this.firstValue > this.secondValue ? 'button1' : 'button2';
	      }
	      this.$refs[button].setPosition(percent);
	    },
	    onSliderClick: function onSliderClick(event) {
	      if (this.sliderDisabled || this.dragging) return;
	      this.resetSize();
	      if (this.vertical) {
	        var sliderOffsetBottom = this.$refs.slider.getBoundingClientRect().bottom;
	        this.setPosition((sliderOffsetBottom - event.clientY) / this.sliderSize * 100);
	      } else {
	        var sliderOffsetLeft = this.$refs.slider.getBoundingClientRect().left;
	        this.setPosition((event.clientX - sliderOffsetLeft) / this.sliderSize * 100);
	      }
	      this.emitChange();
	    },
	    resetSize: function resetSize() {
	      if (this.$refs.slider) {
	        this.sliderSize = this.$refs.slider['client' + (this.vertical ? 'Height' : 'Width')];
	      }
	    },
	    emitChange: function emitChange() {
	      var _this2 = this;

	      this.$nextTick(function () {
	        _this2.$emit('change', _this2.range ? [_this2.minValue, _this2.maxValue] : _this2.value);
	      });
	    },
	    getStopStyle: function getStopStyle(position) {
	      return this.vertical ? { 'bottom': position + '%' } : { 'left': position + '%' };
	    }
	  },

	  computed: {
	    stops: function stops() {
	      var _this3 = this;

	      if (!this.showStops || this.min > this.max) return [];
	      if (this.step === 0) {
	        return [];
	      }
	      var stopCount = (this.max - this.min) / this.step;
	      var stepWidth = 100 * this.step / (this.max - this.min);
	      var result = [];
	      for (var i = 1; i < stopCount; i++) {
	        result.push(i * stepWidth);
	      }
	      if (this.range) {
	        return result.filter(function (step) {
	          return step < 100 * (_this3.minValue - _this3.min) / (_this3.max - _this3.min) || step > 100 * (_this3.maxValue - _this3.min) / (_this3.max - _this3.min);
	        });
	      } else {
	        return result.filter(function (step) {
	          return step > 100 * (_this3.firstValue - _this3.min) / (_this3.max - _this3.min);
	        });
	      }
	    },
	    markList: function markList() {
	      var _this4 = this;

	      if (!this.marks) {
	        return [];
	      }

	      var marksKeys = Object.keys(this.marks);
	      return marksKeys.map(parseFloat).sort(function (a, b) {
	        return a - b;
	      }).filter(function (point) {
	        return point <= _this4.max && point >= _this4.min;
	      }).map(function (point) {
	        return {
	          point: point,
	          position: (point - _this4.min) * 100 / (_this4.max - _this4.min),
	          mark: _this4.marks[point]
	        };
	      });
	    },
	    minValue: function minValue() {
	      return Math.min(this.firstValue, this.secondValue);
	    },
	    maxValue: function maxValue() {
	      return Math.max(this.firstValue, this.secondValue);
	    },
	    barSize: function barSize() {
	      return this.range ? 100 * (this.maxValue - this.minValue) / (this.max - this.min) + '%' : 100 * (this.firstValue - this.min) / (this.max - this.min) + '%';
	    },
	    barStart: function barStart() {
	      return this.range ? 100 * (this.minValue - this.min) / (this.max - this.min) + '%' : '0%';
	    },
	    precision: function precision() {
	      var precisions = [this.min, this.max, this.step].map(function (item) {
	        var decimal = ('' + item).split('.')[1];
	        return decimal ? decimal.length : 0;
	      });
	      return Math.max.apply(null, precisions);
	    },
	    runwayStyle: function runwayStyle() {
	      return this.vertical ? { height: this.height } : {};
	    },
	    barStyle: function barStyle() {
	      return this.vertical ? {
	        height: this.barSize,
	        bottom: this.barStart
	      } : {
	        width: this.barSize,
	        left: this.barStart
	      };
	    },
	    sliderDisabled: function sliderDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    }
	  },

	  mounted: function mounted() {
	    var valuetext = void 0;
	    if (this.range) {
	      if (Array.isArray(this.value)) {
	        this.firstValue = Math.max(this.min, this.value[0]);
	        this.secondValue = Math.min(this.max, this.value[1]);
	      } else {
	        this.firstValue = this.min;
	        this.secondValue = this.max;
	      }
	      this.oldValue = [this.firstValue, this.secondValue];
	      valuetext = this.firstValue + '-' + this.secondValue;
	    } else {
	      if (typeof this.value !== 'number' || isNaN(this.value)) {
	        this.firstValue = this.min;
	      } else {
	        this.firstValue = Math.min(this.max, Math.max(this.min, this.value));
	      }
	      this.oldValue = this.firstValue;
	      valuetext = this.firstValue;
	    }
	    this.$el.setAttribute('aria-valuetext', valuetext);

	    // label screen reader
	    this.$el.setAttribute('aria-label', this.label ? this.label : 'slider between ' + this.min + ' and ' + this.max);

	    this.resetSize();
	    window.addEventListener('resize', this.resetSize);
	  },
	  beforeDestroy: function beforeDestroy() {
	    window.removeEventListener('resize', this.resetSize);
	  }
	});
	// CONCATENATED MODULE: ./packages/slider/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_slider_src_mainvue_type_script_lang_js_ = (slider_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/slider/src/main.vue





	/* normalize component */

	var slider_src_main_component = normalizeComponent(
	  packages_slider_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_32708644_render,
	  mainvue_type_template_id_32708644_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	slider_src_main_component.options.__file = "packages/slider/src/main.vue";
	/* harmony default export */ var slider_src_main = (slider_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/slider/index.js


	/* istanbul ignore next */
	slider_src_main.install = function (Vue) {
	  Vue.component(slider_src_main.name, slider_src_main);
	};

	/* harmony default export */ var slider = (slider_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/loading/src/loading.vue?vue&type=template&id=eee0a7ac&
	var loadingvue_type_template_id_eee0a7ac_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-loading-fade" },
	      on: { "after-leave": _vm.handleAfterLeave }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-loading-mask",
	          class: [_vm.customClass, { "is-fullscreen": _vm.fullscreen }],
	          style: { backgroundColor: _vm.background || "" }
	        },
	        [
	          _c("div", { staticClass: "el-loading-spinner" }, [
	            !_vm.spinner
	              ? _c(
	                  "svg",
	                  {
	                    staticClass: "circular",
	                    attrs: { viewBox: "25 25 50 50" }
	                  },
	                  [
	                    _c("circle", {
	                      staticClass: "path",
	                      attrs: { cx: "50", cy: "50", r: "20", fill: "none" }
	                    })
	                  ]
	                )
	              : _c("i", { class: _vm.spinner }),
	            _vm.text
	              ? _c("p", { staticClass: "el-loading-text" }, [
	                  _vm._v(_vm._s(_vm.text))
	                ])
	              : _vm._e()
	          ])
	        ]
	      )
	    ]
	  )
	};
	var loadingvue_type_template_id_eee0a7ac_staticRenderFns = [];
	loadingvue_type_template_id_eee0a7ac_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/loading/src/loading.vue?vue&type=template&id=eee0a7ac&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/loading/src/loading.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var loadingvue_type_script_lang_js_ = ({
	  data: function data() {
	    return {
	      text: null,
	      spinner: null,
	      background: null,
	      fullscreen: true,
	      visible: false,
	      customClass: ''
	    };
	  },


	  methods: {
	    handleAfterLeave: function handleAfterLeave() {
	      this.$emit('after-leave');
	    },
	    setText: function setText(text) {
	      this.text = text;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/loading/src/loading.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_loadingvue_type_script_lang_js_ = (loadingvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/loading/src/loading.vue





	/* normalize component */

	var loading_component = normalizeComponent(
	  src_loadingvue_type_script_lang_js_,
	  loadingvue_type_template_id_eee0a7ac_render,
	  loadingvue_type_template_id_eee0a7ac_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	loading_component.options.__file = "packages/loading/src/loading.vue";
	/* harmony default export */ var loading = (loading_component.exports);
	// EXTERNAL MODULE: external "element-ui/lib/utils/after-leave"
	var after_leave_ = __webpack_require__(33);
	var after_leave_default = /*#__PURE__*/__webpack_require__.n(after_leave_);

	// CONCATENATED MODULE: ./packages/loading/src/directive.js





	var Mask = external_vue_default.a.extend(loading);

	var loadingDirective = {};
	loadingDirective.install = function (Vue) {
	  if (Vue.prototype.$isServer) return;
	  var toggleLoading = function toggleLoading(el, binding) {
	    if (binding.value) {
	      Vue.nextTick(function () {
	        if (binding.modifiers.fullscreen) {
	          el.originalPosition = Object(dom_["getStyle"])(document.body, 'position');
	          el.originalOverflow = Object(dom_["getStyle"])(document.body, 'overflow');
	          el.maskStyle.zIndex = popup_["PopupManager"].nextZIndex();

	          Object(dom_["addClass"])(el.mask, 'is-fullscreen');
	          insertDom(document.body, el, binding);
	        } else {
	          Object(dom_["removeClass"])(el.mask, 'is-fullscreen');

	          if (binding.modifiers.body) {
	            el.originalPosition = Object(dom_["getStyle"])(document.body, 'position');

	            ['top', 'left'].forEach(function (property) {
	              var scroll = property === 'top' ? 'scrollTop' : 'scrollLeft';
	              el.maskStyle[property] = el.getBoundingClientRect()[property] + document.body[scroll] + document.documentElement[scroll] - parseInt(Object(dom_["getStyle"])(document.body, 'margin-' + property), 10) + 'px';
	            });
	            ['height', 'width'].forEach(function (property) {
	              el.maskStyle[property] = el.getBoundingClientRect()[property] + 'px';
	            });

	            insertDom(document.body, el, binding);
	          } else {
	            el.originalPosition = Object(dom_["getStyle"])(el, 'position');
	            insertDom(el, el, binding);
	          }
	        }
	      });
	    } else {
	      after_leave_default()(el.instance, function (_) {
	        if (!el.instance.hiding) return;
	        el.domVisible = false;
	        var target = binding.modifiers.fullscreen || binding.modifiers.body ? document.body : el;
	        Object(dom_["removeClass"])(target, 'el-loading-parent--relative');
	        Object(dom_["removeClass"])(target, 'el-loading-parent--hidden');
	        el.instance.hiding = false;
	      }, 300, true);
	      el.instance.visible = false;
	      el.instance.hiding = true;
	    }
	  };
	  var insertDom = function insertDom(parent, el, binding) {
	    if (!el.domVisible && Object(dom_["getStyle"])(el, 'display') !== 'none' && Object(dom_["getStyle"])(el, 'visibility') !== 'hidden') {
	      Object.keys(el.maskStyle).forEach(function (property) {
	        el.mask.style[property] = el.maskStyle[property];
	      });

	      if (el.originalPosition !== 'absolute' && el.originalPosition !== 'fixed' && el.originalPosition !== 'sticky') {
	        Object(dom_["addClass"])(parent, 'el-loading-parent--relative');
	      }
	      if (binding.modifiers.fullscreen && binding.modifiers.lock) {
	        Object(dom_["addClass"])(parent, 'el-loading-parent--hidden');
	      }
	      el.domVisible = true;

	      parent.appendChild(el.mask);
	      Vue.nextTick(function () {
	        if (el.instance.hiding) {
	          el.instance.$emit('after-leave');
	        } else {
	          el.instance.visible = true;
	        }
	      });
	      el.domInserted = true;
	    } else if (el.domVisible && el.instance.hiding === true) {
	      el.instance.visible = true;
	      el.instance.hiding = false;
	    }
	  };

	  Vue.directive('loading', {
	    bind: function bind(el, binding, vnode) {
	      var textExr = el.getAttribute('element-loading-text');
	      var spinnerExr = el.getAttribute('element-loading-spinner');
	      var backgroundExr = el.getAttribute('element-loading-background');
	      var customClassExr = el.getAttribute('element-loading-custom-class');
	      var vm = vnode.context;
	      var mask = new Mask({
	        el: document.createElement('div'),
	        data: {
	          text: vm && vm[textExr] || textExr,
	          spinner: vm && vm[spinnerExr] || spinnerExr,
	          background: vm && vm[backgroundExr] || backgroundExr,
	          customClass: vm && vm[customClassExr] || customClassExr,
	          fullscreen: !!binding.modifiers.fullscreen
	        }
	      });
	      el.instance = mask;
	      el.mask = mask.$el;
	      el.maskStyle = {};

	      binding.value && toggleLoading(el, binding);
	    },

	    update: function update(el, binding) {
	      el.instance.setText(el.getAttribute('element-loading-text'));
	      if (binding.oldValue !== binding.value) {
	        toggleLoading(el, binding);
	      }
	    },

	    unbind: function unbind(el, binding) {
	      if (el.domInserted) {
	        el.mask && el.mask.parentNode && el.mask.parentNode.removeChild(el.mask);
	        toggleLoading(el, { value: false, modifiers: binding.modifiers });
	      }
	      el.instance && el.instance.$destroy();
	    }
	  });
	};

	/* harmony default export */ var src_directive = (loadingDirective);
	// CONCATENATED MODULE: ./packages/loading/src/index.js







	var LoadingConstructor = external_vue_default.a.extend(loading);

	var src_defaults = {
	  text: null,
	  fullscreen: true,
	  body: false,
	  lock: false,
	  customClass: ''
	};

	var fullscreenLoading = void 0;

	LoadingConstructor.prototype.originalPosition = '';
	LoadingConstructor.prototype.originalOverflow = '';

	LoadingConstructor.prototype.close = function () {
	  var _this = this;

	  if (this.fullscreen) {
	    fullscreenLoading = undefined;
	  }
	  after_leave_default()(this, function (_) {
	    var target = _this.fullscreen || _this.body ? document.body : _this.target;
	    Object(dom_["removeClass"])(target, 'el-loading-parent--relative');
	    Object(dom_["removeClass"])(target, 'el-loading-parent--hidden');
	    if (_this.$el && _this.$el.parentNode) {
	      _this.$el.parentNode.removeChild(_this.$el);
	    }
	    _this.$destroy();
	  }, 300);
	  this.visible = false;
	};

	var src_addStyle = function addStyle(options, parent, instance) {
	  var maskStyle = {};
	  if (options.fullscreen) {
	    instance.originalPosition = Object(dom_["getStyle"])(document.body, 'position');
	    instance.originalOverflow = Object(dom_["getStyle"])(document.body, 'overflow');
	    maskStyle.zIndex = popup_["PopupManager"].nextZIndex();
	  } else if (options.body) {
	    instance.originalPosition = Object(dom_["getStyle"])(document.body, 'position');
	    ['top', 'left'].forEach(function (property) {
	      var scroll = property === 'top' ? 'scrollTop' : 'scrollLeft';
	      maskStyle[property] = options.target.getBoundingClientRect()[property] + document.body[scroll] + document.documentElement[scroll] + 'px';
	    });
	    ['height', 'width'].forEach(function (property) {
	      maskStyle[property] = options.target.getBoundingClientRect()[property] + 'px';
	    });
	  } else {
	    instance.originalPosition = Object(dom_["getStyle"])(parent, 'position');
	  }
	  Object.keys(maskStyle).forEach(function (property) {
	    instance.$el.style[property] = maskStyle[property];
	  });
	};

	var src_Loading = function Loading() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  if (external_vue_default.a.prototype.$isServer) return;
	  options = merge_default()({}, src_defaults, options);
	  if (typeof options.target === 'string') {
	    options.target = document.querySelector(options.target);
	  }
	  options.target = options.target || document.body;
	  if (options.target !== document.body) {
	    options.fullscreen = false;
	  } else {
	    options.body = true;
	  }
	  if (options.fullscreen && fullscreenLoading) {
	    return fullscreenLoading;
	  }

	  var parent = options.body ? document.body : options.target;
	  var instance = new LoadingConstructor({
	    el: document.createElement('div'),
	    data: options
	  });

	  src_addStyle(options, parent, instance);
	  if (instance.originalPosition !== 'absolute' && instance.originalPosition !== 'fixed' && instance.originalPosition !== 'sticky') {
	    Object(dom_["addClass"])(parent, 'el-loading-parent--relative');
	  }
	  if (options.fullscreen && options.lock) {
	    Object(dom_["addClass"])(parent, 'el-loading-parent--hidden');
	  }
	  parent.appendChild(instance.$el);
	  external_vue_default.a.nextTick(function () {
	    instance.visible = true;
	  });
	  if (options.fullscreen) {
	    fullscreenLoading = instance;
	  }
	  return instance;
	};

	/* harmony default export */ var src = (src_Loading);
	// CONCATENATED MODULE: ./packages/loading/index.js



	/* harmony default export */ var packages_loading = ({
	  install: function install(Vue) {
	    Vue.use(src_directive);
	    Vue.prototype.$loading = src;
	  },

	  directive: src_directive,
	  service: src
	});
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/icon/src/icon.vue?vue&type=template&id=cb3fe7f4&
	var iconvue_type_template_id_cb3fe7f4_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("i", { class: "el-icon-" + _vm.name })
	};
	var iconvue_type_template_id_cb3fe7f4_staticRenderFns = [];
	iconvue_type_template_id_cb3fe7f4_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/icon/src/icon.vue?vue&type=template&id=cb3fe7f4&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/icon/src/icon.vue?vue&type=script&lang=js&
	//
	//
	//
	//

	/* harmony default export */ var iconvue_type_script_lang_js_ = ({
	  name: 'ElIcon',

	  props: {
	    name: String
	  }
	});
	// CONCATENATED MODULE: ./packages/icon/src/icon.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_iconvue_type_script_lang_js_ = (iconvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/icon/src/icon.vue





	/* normalize component */

	var icon_component = normalizeComponent(
	  src_iconvue_type_script_lang_js_,
	  iconvue_type_template_id_cb3fe7f4_render,
	  iconvue_type_template_id_cb3fe7f4_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	icon_component.options.__file = "packages/icon/src/icon.vue";
	/* harmony default export */ var icon = (icon_component.exports);
	// CONCATENATED MODULE: ./packages/icon/index.js


	/* istanbul ignore next */
	icon.install = function (Vue) {
	  Vue.component(icon.name, icon);
	};

	/* harmony default export */ var packages_icon = (icon);
	// CONCATENATED MODULE: ./packages/row/src/row.js
	/* harmony default export */ var src_row = ({
	  name: 'ElRow',

	  componentName: 'ElRow',

	  props: {
	    tag: {
	      type: String,
	      default: 'div'
	    },
	    gutter: Number,
	    type: String,
	    justify: {
	      type: String,
	      default: 'start'
	    },
	    align: String
	  },

	  computed: {
	    style: function style() {
	      var ret = {};

	      if (this.gutter) {
	        ret.marginLeft = '-' + this.gutter / 2 + 'px';
	        ret.marginRight = ret.marginLeft;
	      }

	      return ret;
	    }
	  },

	  render: function render(h) {
	    return h(this.tag, {
	      class: ['el-row', this.justify !== 'start' ? 'is-justify-' + this.justify : '', this.align ? 'is-align-' + this.align : '', { 'el-row--flex': this.type === 'flex' }],
	      style: this.style
	    }, this.$slots.default);
	  }
	});
	// CONCATENATED MODULE: ./packages/row/index.js


	/* istanbul ignore next */
	src_row.install = function (Vue) {
	  Vue.component(src_row.name, src_row);
	};

	/* harmony default export */ var packages_row = (src_row);
	// CONCATENATED MODULE: ./packages/col/src/col.js
	var col_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/* harmony default export */ var col = ({
	  name: 'ElCol',

	  props: {
	    span: {
	      type: Number,
	      default: 24
	    },
	    tag: {
	      type: String,
	      default: 'div'
	    },
	    offset: Number,
	    pull: Number,
	    push: Number,
	    xs: [Number, Object],
	    sm: [Number, Object],
	    md: [Number, Object],
	    lg: [Number, Object],
	    xl: [Number, Object]
	  },

	  computed: {
	    gutter: function gutter() {
	      var parent = this.$parent;
	      while (parent && parent.$options.componentName !== 'ElRow') {
	        parent = parent.$parent;
	      }
	      return parent ? parent.gutter : 0;
	    }
	  },
	  render: function render(h) {
	    var _this = this;

	    var classList = [];
	    var style = {};

	    if (this.gutter) {
	      style.paddingLeft = this.gutter / 2 + 'px';
	      style.paddingRight = style.paddingLeft;
	    }

	    ['span', 'offset', 'pull', 'push'].forEach(function (prop) {
	      if (_this[prop] || _this[prop] === 0) {
	        classList.push(prop !== 'span' ? 'el-col-' + prop + '-' + _this[prop] : 'el-col-' + _this[prop]);
	      }
	    });

	    ['xs', 'sm', 'md', 'lg', 'xl'].forEach(function (size) {
	      if (typeof _this[size] === 'number') {
	        classList.push('el-col-' + size + '-' + _this[size]);
	      } else if (col_typeof(_this[size]) === 'object') {
	        var props = _this[size];
	        Object.keys(props).forEach(function (prop) {
	          classList.push(prop !== 'span' ? 'el-col-' + size + '-' + prop + '-' + props[prop] : 'el-col-' + size + '-' + props[prop]);
	        });
	      }
	    });

	    return h(this.tag, {
	      class: ['el-col', classList],
	      style: style
	    }, this.$slots.default);
	  }
	});
	// CONCATENATED MODULE: ./packages/col/index.js


	/* istanbul ignore next */
	col.install = function (Vue) {
	  Vue.component(col.name, col);
	};

	/* harmony default export */ var packages_col = (col);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-list.vue?vue&type=template&id=173fedf5&
	var upload_listvue_type_template_id_173fedf5_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition-group",
	    {
	      class: [
	        "el-upload-list",
	        "el-upload-list--" + _vm.listType,
	        { "is-disabled": _vm.disabled }
	      ],
	      attrs: { tag: "ul", name: "el-list" }
	    },
	    _vm._l(_vm.files, function(file) {
	      return _c(
	        "li",
	        {
	          key: file.uid,
	          class: [
	            "el-upload-list__item",
	            "is-" + file.status,
	            _vm.focusing ? "focusing" : ""
	          ],
	          attrs: { tabindex: "0" },
	          on: {
	            keydown: function($event) {
	              if (
	                !("button" in $event) &&
	                _vm._k($event.keyCode, "delete", [8, 46], $event.key, [
	                  "Backspace",
	                  "Delete",
	                  "Del"
	                ])
	              ) {
	                return null
	              }
	              !_vm.disabled && _vm.$emit("remove", file);
	            },
	            focus: function($event) {
	              _vm.focusing = true;
	            },
	            blur: function($event) {
	              _vm.focusing = false;
	            },
	            click: function($event) {
	              _vm.focusing = false;
	            }
	          }
	        },
	        [
	          _vm._t(
	            "default",
	            [
	              file.status !== "uploading" &&
	              ["picture-card", "picture"].indexOf(_vm.listType) > -1
	                ? _c("img", {
	                    staticClass: "el-upload-list__item-thumbnail",
	                    attrs: { src: file.url, alt: "" }
	                  })
	                : _vm._e(),
	              _c(
	                "a",
	                {
	                  staticClass: "el-upload-list__item-name",
	                  on: {
	                    click: function($event) {
	                      _vm.handleClick(file);
	                    }
	                  }
	                },
	                [
	                  _c("i", { staticClass: "el-icon-document" }),
	                  _vm._v(_vm._s(file.name) + "\n      ")
	                ]
	              ),
	              _c(
	                "label",
	                { staticClass: "el-upload-list__item-status-label" },
	                [
	                  _c("i", {
	                    class: {
	                      "el-icon-upload-success": true,
	                      "el-icon-circle-check": _vm.listType === "text",
	                      "el-icon-check":
	                        ["picture-card", "picture"].indexOf(_vm.listType) > -1
	                    }
	                  })
	                ]
	              ),
	              !_vm.disabled
	                ? _c("i", {
	                    staticClass: "el-icon-close",
	                    on: {
	                      click: function($event) {
	                        _vm.$emit("remove", file);
	                      }
	                    }
	                  })
	                : _vm._e(),
	              !_vm.disabled
	                ? _c("i", { staticClass: "el-icon-close-tip" }, [
	                    _vm._v(_vm._s(_vm.t("el.upload.deleteTip")))
	                  ])
	                : _vm._e(),
	              file.status === "uploading"
	                ? _c("el-progress", {
	                    attrs: {
	                      type: _vm.listType === "picture-card" ? "circle" : "line",
	                      "stroke-width": _vm.listType === "picture-card" ? 6 : 2,
	                      percentage: _vm.parsePercentage(file.percentage)
	                    }
	                  })
	                : _vm._e(),
	              _vm.listType === "picture-card"
	                ? _c("span", { staticClass: "el-upload-list__item-actions" }, [
	                    _vm.handlePreview && _vm.listType === "picture-card"
	                      ? _c(
	                          "span",
	                          {
	                            staticClass: "el-upload-list__item-preview",
	                            on: {
	                              click: function($event) {
	                                _vm.handlePreview(file);
	                              }
	                            }
	                          },
	                          [_c("i", { staticClass: "el-icon-zoom-in" })]
	                        )
	                      : _vm._e(),
	                    !_vm.disabled
	                      ? _c(
	                          "span",
	                          {
	                            staticClass: "el-upload-list__item-delete",
	                            on: {
	                              click: function($event) {
	                                _vm.$emit("remove", file);
	                              }
	                            }
	                          },
	                          [_c("i", { staticClass: "el-icon-delete" })]
	                        )
	                      : _vm._e()
	                  ])
	                : _vm._e()
	            ],
	            { file: file }
	          )
	        ],
	        2
	      )
	    }),
	    0
	  )
	};
	var upload_listvue_type_template_id_173fedf5_staticRenderFns = [];
	upload_listvue_type_template_id_173fedf5_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/upload/src/upload-list.vue?vue&type=template&id=173fedf5&

	// EXTERNAL MODULE: external "element-ui/lib/progress"
	var progress_ = __webpack_require__(34);
	var progress_default = /*#__PURE__*/__webpack_require__.n(progress_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-list.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//




	/* harmony default export */ var upload_listvue_type_script_lang_js_ = ({

	  name: 'ElUploadList',

	  mixins: [locale_default.a],

	  data: function data() {
	    return {
	      focusing: false
	    };
	  },

	  components: { ElProgress: progress_default.a },

	  props: {
	    files: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    disabled: {
	      type: Boolean,
	      default: false
	    },
	    handlePreview: Function,
	    listType: String
	  },
	  methods: {
	    parsePercentage: function parsePercentage(val) {
	      return parseInt(val, 10);
	    },
	    handleClick: function handleClick(file) {
	      this.handlePreview && this.handlePreview(file);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/upload/src/upload-list.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_upload_listvue_type_script_lang_js_ = (upload_listvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/upload/src/upload-list.vue





	/* normalize component */

	var upload_list_component = normalizeComponent(
	  src_upload_listvue_type_script_lang_js_,
	  upload_listvue_type_template_id_173fedf5_render,
	  upload_listvue_type_template_id_173fedf5_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	upload_list_component.options.__file = "packages/upload/src/upload-list.vue";
	/* harmony default export */ var upload_list = (upload_list_component.exports);
	// EXTERNAL MODULE: external "babel-helper-vue-jsx-merge-props"
	var external_babel_helper_vue_jsx_merge_props_ = __webpack_require__(24);
	var external_babel_helper_vue_jsx_merge_props_default = /*#__PURE__*/__webpack_require__.n(external_babel_helper_vue_jsx_merge_props_);

	// CONCATENATED MODULE: ./packages/upload/src/ajax.js
	function getError(action, option, xhr) {
	  var msg = void 0;
	  if (xhr.response) {
	    msg = '' + (xhr.response.error || xhr.response);
	  } else if (xhr.responseText) {
	    msg = '' + xhr.responseText;
	  } else {
	    msg = 'fail to post ' + action + ' ' + xhr.status;
	  }

	  var err = new Error(msg);
	  err.status = xhr.status;
	  err.method = 'post';
	  err.url = action;
	  return err;
	}

	function getBody(xhr) {
	  var text = xhr.responseText || xhr.response;
	  if (!text) {
	    return text;
	  }

	  try {
	    return JSON.parse(text);
	  } catch (e) {
	    return text;
	  }
	}

	function upload(option) {
	  if (typeof XMLHttpRequest === 'undefined') {
	    return;
	  }

	  var xhr = new XMLHttpRequest();
	  var action = option.action;

	  if (xhr.upload) {
	    xhr.upload.onprogress = function progress(e) {
	      if (e.total > 0) {
	        e.percent = e.loaded / e.total * 100;
	      }
	      option.onProgress(e);
	    };
	  }

	  var formData = new FormData();

	  if (option.data) {
	    Object.keys(option.data).forEach(function (key) {
	      formData.append(key, option.data[key]);
	    });
	  }

	  formData.append(option.filename, option.file, option.file.name);

	  xhr.onerror = function error(e) {
	    option.onError(e);
	  };

	  xhr.onload = function onload() {
	    if (xhr.status < 200 || xhr.status >= 300) {
	      return option.onError(getError(action, option, xhr));
	    }

	    option.onSuccess(getBody(xhr));
	  };

	  xhr.open('post', action, true);

	  if (option.withCredentials && 'withCredentials' in xhr) {
	    xhr.withCredentials = true;
	  }

	  var headers = option.headers || {};

	  for (var item in headers) {
	    if (headers.hasOwnProperty(item) && headers[item] !== null) {
	      xhr.setRequestHeader(item, headers[item]);
	    }
	  }
	  xhr.send(formData);
	  return xhr;
	}
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-dragger.vue?vue&type=template&id=7ebbf219&
	var upload_draggervue_type_template_id_7ebbf219_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-upload-dragger",
	      class: {
	        "is-dragover": _vm.dragover
	      },
	      on: {
	        drop: function($event) {
	          $event.preventDefault();
	          return _vm.onDrop($event)
	        },
	        dragover: function($event) {
	          $event.preventDefault();
	          return _vm.onDragover($event)
	        },
	        dragleave: function($event) {
	          $event.preventDefault();
	          _vm.dragover = false;
	        }
	      }
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var upload_draggervue_type_template_id_7ebbf219_staticRenderFns = [];
	upload_draggervue_type_template_id_7ebbf219_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/upload/src/upload-dragger.vue?vue&type=template&id=7ebbf219&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-dragger.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var upload_draggervue_type_script_lang_js_ = ({
	  name: 'ElUploadDrag',
	  props: {
	    disabled: Boolean
	  },
	  inject: {
	    uploader: {
	      default: ''
	    }
	  },
	  data: function data() {
	    return {
	      dragover: false
	    };
	  },

	  methods: {
	    onDragover: function onDragover() {
	      if (!this.disabled) {
	        this.dragover = true;
	      }
	    },
	    onDrop: function onDrop(e) {
	      if (this.disabled || !this.uploader) return;
	      var accept = this.uploader.accept;
	      this.dragover = false;
	      if (!accept) {
	        this.$emit('file', e.dataTransfer.files);
	        return;
	      }
	      this.$emit('file', [].slice.call(e.dataTransfer.files).filter(function (file) {
	        var type = file.type,
	            name = file.name;

	        var extension = name.indexOf('.') > -1 ? '.' + name.split('.').pop() : '';
	        var baseType = type.replace(/\/.*$/, '');
	        return accept.split(',').map(function (type) {
	          return type.trim();
	        }).filter(function (type) {
	          return type;
	        }).some(function (acceptedType) {
	          if (/\..+$/.test(acceptedType)) {
	            return extension === acceptedType;
	          }
	          if (/\/\*$/.test(acceptedType)) {
	            return baseType === acceptedType.replace(/\/\*$/, '');
	          }
	          if (/^[^\/]+\/[^\/]+$/.test(acceptedType)) {
	            return type === acceptedType;
	          }
	          return false;
	        });
	      }));
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/upload/src/upload-dragger.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_upload_draggervue_type_script_lang_js_ = (upload_draggervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/upload/src/upload-dragger.vue





	/* normalize component */

	var upload_dragger_component = normalizeComponent(
	  src_upload_draggervue_type_script_lang_js_,
	  upload_draggervue_type_template_id_7ebbf219_render,
	  upload_draggervue_type_template_id_7ebbf219_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	upload_dragger_component.options.__file = "packages/upload/src/upload-dragger.vue";
	/* harmony default export */ var upload_dragger = (upload_dragger_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload.vue?vue&type=script&lang=js&





	/* harmony default export */ var uploadvue_type_script_lang_js_ = ({
	  inject: ['uploader'],
	  components: {
	    UploadDragger: upload_dragger
	  },
	  props: {
	    type: String,
	    action: {
	      type: String,
	      required: true
	    },
	    name: {
	      type: String,
	      default: 'file'
	    },
	    data: Object,
	    headers: Object,
	    withCredentials: Boolean,
	    multiple: Boolean,
	    accept: String,
	    onStart: Function,
	    onProgress: Function,
	    onSuccess: Function,
	    onError: Function,
	    beforeUpload: Function,
	    drag: Boolean,
	    onPreview: {
	      type: Function,
	      default: function _default() {}
	    },
	    onRemove: {
	      type: Function,
	      default: function _default() {}
	    },
	    fileList: Array,
	    autoUpload: Boolean,
	    listType: String,
	    httpRequest: {
	      type: Function,
	      default: upload
	    },
	    disabled: Boolean,
	    limit: Number,
	    onExceed: Function
	  },

	  data: function data() {
	    return {
	      mouseover: false,
	      reqs: {}
	    };
	  },


	  methods: {
	    isImage: function isImage(str) {
	      return str.indexOf('image') !== -1;
	    },
	    handleChange: function handleChange(ev) {
	      var files = ev.target.files;

	      if (!files) return;
	      this.uploadFiles(files);
	    },
	    uploadFiles: function uploadFiles(files) {
	      var _this = this;

	      if (this.limit && this.fileList.length + files.length > this.limit) {
	        this.onExceed && this.onExceed(files, this.fileList);
	        return;
	      }

	      var postFiles = Array.prototype.slice.call(files);
	      if (!this.multiple) {
	        postFiles = postFiles.slice(0, 1);
	      }

	      if (postFiles.length === 0) {
	        return;
	      }

	      postFiles.forEach(function (rawFile) {
	        _this.onStart(rawFile);
	        if (_this.autoUpload) _this.upload(rawFile);
	      });
	    },
	    upload: function upload(rawFile) {
	      var _this2 = this;

	      this.$refs.input.value = null;

	      if (!this.beforeUpload) {
	        return this.post(rawFile);
	      }

	      var before = this.beforeUpload(rawFile);
	      if (before && before.then) {
	        before.then(function (processedFile) {
	          var fileType = Object.prototype.toString.call(processedFile);

	          if (fileType === '[object File]' || fileType === '[object Blob]') {
	            if (fileType === '[object Blob]') {
	              processedFile = new File([processedFile], rawFile.name, {
	                type: rawFile.type
	              });
	            }
	            for (var p in rawFile) {
	              if (rawFile.hasOwnProperty(p)) {
	                processedFile[p] = rawFile[p];
	              }
	            }
	            _this2.post(processedFile);
	          } else {
	            _this2.post(rawFile);
	          }
	        }, function () {
	          _this2.onRemove(null, rawFile);
	        });
	      } else if (before !== false) {
	        this.post(rawFile);
	      } else {
	        this.onRemove(null, rawFile);
	      }
	    },
	    abort: function abort(file) {
	      var reqs = this.reqs;

	      if (file) {
	        var uid = file;
	        if (file.uid) uid = file.uid;
	        if (reqs[uid]) {
	          reqs[uid].abort();
	        }
	      } else {
	        Object.keys(reqs).forEach(function (uid) {
	          if (reqs[uid]) reqs[uid].abort();
	          delete reqs[uid];
	        });
	      }
	    },
	    post: function post(rawFile) {
	      var _this3 = this;

	      var uid = rawFile.uid;

	      var options = {
	        headers: this.headers,
	        withCredentials: this.withCredentials,
	        file: rawFile,
	        data: this.data,
	        filename: this.name,
	        action: this.action,
	        onProgress: function onProgress(e) {
	          _this3.onProgress(e, rawFile);
	        },
	        onSuccess: function onSuccess(res) {
	          _this3.onSuccess(res, rawFile);
	          delete _this3.reqs[uid];
	        },
	        onError: function onError(err) {
	          _this3.onError(err, rawFile);
	          delete _this3.reqs[uid];
	        }
	      };
	      var req = this.httpRequest(options);
	      this.reqs[uid] = req;
	      if (req && req.then) {
	        req.then(options.onSuccess, options.onError);
	      }
	    },
	    handleClick: function handleClick() {
	      if (!this.disabled) {
	        this.$refs.input.value = null;
	        this.$refs.input.click();
	      }
	    },
	    handleKeydown: function handleKeydown(e) {
	      if (e.target !== e.currentTarget) return;
	      if (e.keyCode === 13 || e.keyCode === 32) {
	        this.handleClick();
	      }
	    }
	  },

	  render: function render(h) {
	    var handleClick = this.handleClick,
	        drag = this.drag,
	        name = this.name,
	        handleChange = this.handleChange,
	        multiple = this.multiple,
	        accept = this.accept,
	        listType = this.listType,
	        uploadFiles = this.uploadFiles,
	        disabled = this.disabled,
	        handleKeydown = this.handleKeydown;

	    var data = {
	      class: {
	        'el-upload': true
	      },
	      on: {
	        click: handleClick,
	        keydown: handleKeydown
	      }
	    };
	    data.class['el-upload--' + listType] = true;
	    return h(
	      'div',
	      external_babel_helper_vue_jsx_merge_props_default()([data, {
	        attrs: { tabindex: '0' }
	      }]),
	      [drag ? h(
	        'upload-dragger',
	        {
	          attrs: { disabled: disabled },
	          on: {
	            'file': uploadFiles
	          }
	        },
	        [this.$slots.default]
	      ) : this.$slots.default, h('input', { 'class': 'el-upload__input', attrs: { type: 'file', name: name, multiple: multiple, accept: accept },
	        ref: 'input', on: {
	          'change': handleChange
	        }
	      })]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/upload/src/upload.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_uploadvue_type_script_lang_js_ = (uploadvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/upload/src/upload.vue
	var upload_render, upload_staticRenderFns;




	/* normalize component */

	var upload_component = normalizeComponent(
	  src_uploadvue_type_script_lang_js_,
	  upload_render,
	  upload_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	upload_component.options.__file = "packages/upload/src/upload.vue";
	/* harmony default export */ var src_upload = (upload_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/index.vue?vue&type=script&lang=js&






	function srcvue_type_script_lang_js_noop() {}

	/* harmony default export */ var srcvue_type_script_lang_js_ = ({
	  name: 'ElUpload',

	  mixins: [migrating_default.a],

	  components: {
	    ElProgress: progress_default.a,
	    UploadList: upload_list,
	    Upload: src_upload
	  },

	  provide: function provide() {
	    return {
	      uploader: this
	    };
	  },


	  inject: {
	    elForm: {
	      default: ''
	    }
	  },

	  props: {
	    action: {
	      type: String,
	      required: true
	    },
	    headers: {
	      type: Object,
	      default: function _default() {
	        return {};
	      }
	    },
	    data: Object,
	    multiple: Boolean,
	    name: {
	      type: String,
	      default: 'file'
	    },
	    drag: Boolean,
	    dragger: Boolean,
	    withCredentials: Boolean,
	    showFileList: {
	      type: Boolean,
	      default: true
	    },
	    accept: String,
	    type: {
	      type: String,
	      default: 'select'
	    },
	    beforeUpload: Function,
	    beforeRemove: Function,
	    onRemove: {
	      type: Function,
	      default: srcvue_type_script_lang_js_noop
	    },
	    onChange: {
	      type: Function,
	      default: srcvue_type_script_lang_js_noop
	    },
	    onPreview: {
	      type: Function
	    },
	    onSuccess: {
	      type: Function,
	      default: srcvue_type_script_lang_js_noop
	    },
	    onProgress: {
	      type: Function,
	      default: srcvue_type_script_lang_js_noop
	    },
	    onError: {
	      type: Function,
	      default: srcvue_type_script_lang_js_noop
	    },
	    fileList: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    autoUpload: {
	      type: Boolean,
	      default: true
	    },
	    listType: {
	      type: String,
	      default: 'text' // text,picture,picture-card
	    },
	    httpRequest: Function,
	    disabled: Boolean,
	    limit: Number,
	    onExceed: {
	      type: Function,
	      default: srcvue_type_script_lang_js_noop
	    }
	  },

	  data: function data() {
	    return {
	      uploadFiles: [],
	      dragOver: false,
	      draging: false,
	      tempIndex: 1
	    };
	  },


	  computed: {
	    uploadDisabled: function uploadDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    }
	  },

	  watch: {
	    listType: function listType(type) {
	      if (type === 'picture-card' || type === 'picture') {
	        this.uploadFiles = this.uploadFiles.map(function (file) {
	          if (!file.url && file.raw) {
	            try {
	              file.url = URL.createObjectURL(file.raw);
	            } catch (err) {
	              console.error('[Element Error][Upload]', err);
	            }
	          }
	          return file;
	        });
	      }
	    },

	    fileList: {
	      immediate: true,
	      handler: function handler(fileList) {
	        var _this = this;

	        this.uploadFiles = fileList.map(function (item) {
	          item.uid = item.uid || Date.now() + _this.tempIndex++;
	          item.status = item.status || 'success';
	          return item;
	        });
	      }
	    }
	  },

	  methods: {
	    handleStart: function handleStart(rawFile) {
	      rawFile.uid = Date.now() + this.tempIndex++;
	      var file = {
	        status: 'ready',
	        name: rawFile.name,
	        size: rawFile.size,
	        percentage: 0,
	        uid: rawFile.uid,
	        raw: rawFile
	      };

	      if (this.listType === 'picture-card' || this.listType === 'picture') {
	        try {
	          file.url = URL.createObjectURL(rawFile);
	        } catch (err) {
	          console.error('[Element Error][Upload]', err);
	          return;
	        }
	      }

	      this.uploadFiles.push(file);
	      this.onChange(file, this.uploadFiles);
	    },
	    handleProgress: function handleProgress(ev, rawFile) {
	      var file = this.getFile(rawFile);
	      this.onProgress(ev, file, this.uploadFiles);
	      file.status = 'uploading';
	      file.percentage = ev.percent || 0;
	    },
	    handleSuccess: function handleSuccess(res, rawFile) {
	      var file = this.getFile(rawFile);

	      if (file) {
	        file.status = 'success';
	        file.response = res;

	        this.onSuccess(res, file, this.uploadFiles);
	        this.onChange(file, this.uploadFiles);
	      }
	    },
	    handleError: function handleError(err, rawFile) {
	      var file = this.getFile(rawFile);
	      var fileList = this.uploadFiles;

	      file.status = 'fail';

	      fileList.splice(fileList.indexOf(file), 1);

	      this.onError(err, file, this.uploadFiles);
	      this.onChange(file, this.uploadFiles);
	    },
	    handleRemove: function handleRemove(file, raw) {
	      var _this2 = this;

	      if (raw) {
	        file = this.getFile(raw);
	      }
	      var doRemove = function doRemove() {
	        _this2.abort(file);
	        var fileList = _this2.uploadFiles;
	        fileList.splice(fileList.indexOf(file), 1);
	        _this2.onRemove(file, fileList);
	      };

	      if (!this.beforeRemove) {
	        doRemove();
	      } else if (typeof this.beforeRemove === 'function') {
	        var before = this.beforeRemove(file, this.uploadFiles);
	        if (before && before.then) {
	          before.then(function () {
	            doRemove();
	          }, srcvue_type_script_lang_js_noop);
	        } else if (before !== false) {
	          doRemove();
	        }
	      }
	    },
	    getFile: function getFile(rawFile) {
	      var fileList = this.uploadFiles;
	      var target = void 0;
	      fileList.every(function (item) {
	        target = rawFile.uid === item.uid ? item : null;
	        return !target;
	      });
	      return target;
	    },
	    abort: function abort(file) {
	      this.$refs['upload-inner'].abort(file);
	    },
	    clearFiles: function clearFiles() {
	      this.uploadFiles = [];
	    },
	    submit: function submit() {
	      var _this3 = this;

	      this.uploadFiles.filter(function (file) {
	        return file.status === 'ready';
	      }).forEach(function (file) {
	        _this3.$refs['upload-inner'].upload(file.raw);
	      });
	    },
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'default-file-list': 'default-file-list is renamed to file-list.',
	          'show-upload-list': 'show-upload-list is renamed to show-file-list.',
	          'thumbnail-mode': 'thumbnail-mode has been deprecated, you can implement the same effect according to this case: http://element.eleme.io/#/zh-CN/component/upload#yong-hu-tou-xiang-shang-chuan'
	        }
	      };
	    }
	  },

	  beforeDestroy: function beforeDestroy() {
	    this.uploadFiles.forEach(function (file) {
	      if (file.url && file.url.indexOf('blob:') === 0) {
	        URL.revokeObjectURL(file.url);
	      }
	    });
	  },
	  render: function render(h) {
	    var _this4 = this;

	    var uploadList = void 0;

	    if (this.showFileList) {
	      uploadList = h(
	        upload_list,
	        {
	          attrs: {
	            disabled: this.uploadDisabled,
	            listType: this.listType,
	            files: this.uploadFiles,

	            handlePreview: this.onPreview },
	          on: {
	            'remove': this.handleRemove
	          }
	        },
	        [function (props) {
	          if (_this4.$scopedSlots.file) {
	            return _this4.$scopedSlots.file({
	              file: props.file
	            });
	          }
	        }]
	      );
	    }

	    var uploadData = {
	      props: {
	        type: this.type,
	        drag: this.drag,
	        action: this.action,
	        multiple: this.multiple,
	        'before-upload': this.beforeUpload,
	        'with-credentials': this.withCredentials,
	        headers: this.headers,
	        name: this.name,
	        data: this.data,
	        accept: this.accept,
	        fileList: this.uploadFiles,
	        autoUpload: this.autoUpload,
	        listType: this.listType,
	        disabled: this.uploadDisabled,
	        limit: this.limit,
	        'on-exceed': this.onExceed,
	        'on-start': this.handleStart,
	        'on-progress': this.handleProgress,
	        'on-success': this.handleSuccess,
	        'on-error': this.handleError,
	        'on-preview': this.onPreview,
	        'on-remove': this.handleRemove,
	        'http-request': this.httpRequest
	      },
	      ref: 'upload-inner'
	    };

	    var trigger = this.$slots.trigger || this.$slots.default;
	    var uploadComponent = h(
	      'upload',
	      uploadData,
	      [trigger]
	    );

	    return h('div', [this.listType === 'picture-card' ? uploadList : '', this.$slots.trigger ? [uploadComponent, this.$slots.default] : uploadComponent, this.$slots.tip, this.listType !== 'picture-card' ? uploadList : '']);
	  }
	});
	// CONCATENATED MODULE: ./packages/upload/src/index.vue?vue&type=script&lang=js&
	 /* harmony default export */ var upload_srcvue_type_script_lang_js_ = (srcvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/upload/src/index.vue
	var src_render, src_staticRenderFns;




	/* normalize component */

	var upload_src_component = normalizeComponent(
	  upload_srcvue_type_script_lang_js_,
	  src_render,
	  src_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	upload_src_component.options.__file = "packages/upload/src/index.vue";
	/* harmony default export */ var upload_src = (upload_src_component.exports);
	// CONCATENATED MODULE: ./packages/upload/index.js


	/* istanbul ignore next */
	upload_src.install = function (Vue) {
	  Vue.component(upload_src.name, upload_src);
	};

	/* harmony default export */ var packages_upload = (upload_src);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/progress/src/progress.vue?vue&type=template&id=229ee406&
	var progressvue_type_template_id_229ee406_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-progress",
	      class: [
	        "el-progress--" + _vm.type,
	        _vm.status ? "is-" + _vm.status : "",
	        {
	          "el-progress--without-text": !_vm.showText,
	          "el-progress--text-inside": _vm.textInside
	        }
	      ],
	      attrs: {
	        role: "progressbar",
	        "aria-valuenow": _vm.percentage,
	        "aria-valuemin": "0",
	        "aria-valuemax": "100"
	      }
	    },
	    [
	      _vm.type === "line"
	        ? _c("div", { staticClass: "el-progress-bar" }, [
	            _c(
	              "div",
	              {
	                staticClass: "el-progress-bar__outer",
	                style: {
	                  height: _vm.strokeWidth + "px",
	                  backgroundColor: _vm.defineBackColor
	                }
	              },
	              [
	                _c(
	                  "div",
	                  {
	                    staticClass: "el-progress-bar__inner",
	                    style: _vm.barStyle
	                  },
	                  [
	                    _vm.showText && _vm.textInside
	                      ? _c(
	                          "div",
	                          {
	                            staticClass: "el-progress-bar__innerText",
	                            style: { color: _vm.textColor }
	                          },
	                          [_vm._v(_vm._s(_vm.content))]
	                        )
	                      : _vm._e()
	                  ]
	                )
	              ]
	            )
	          ])
	        : _c(
	            "div",
	            {
	              staticClass: "el-progress-circle",
	              style: { height: _vm.width + "px", width: _vm.width + "px" }
	            },
	            [
	              _c("svg", { attrs: { viewBox: "0 0 100 100" } }, [
	                _c("path", {
	                  staticClass: "el-progress-circle__track",
	                  style: _vm.trailPathStyle,
	                  attrs: {
	                    d: _vm.trackPath,
	                    stroke: _vm.defineBackColor,
	                    "stroke-width": _vm.relativeStrokeWidth,
	                    fill: "none"
	                  }
	                }),
	                _c("path", {
	                  staticClass: "el-progress-circle__path",
	                  style: _vm.circlePathStyle,
	                  attrs: {
	                    d: _vm.trackPath,
	                    stroke: _vm.stroke,
	                    fill: "none",
	                    "stroke-linecap": _vm.strokeLinecap,
	                    "stroke-width": _vm.percentage ? _vm.relativeStrokeWidth : 0
	                  }
	                })
	              ])
	            ]
	          ),
	      _vm.showText && !_vm.textInside
	        ? _c(
	            "div",
	            {
	              staticClass: "el-progress__text",
	              style: {
	                fontSize: _vm.progressTextSize + "px",
	                color: _vm.textColor
	              }
	            },
	            [
	              !_vm.status
	                ? [_vm._v(_vm._s(_vm.content))]
	                : _c("i", { class: _vm.iconClass })
	            ],
	            2
	          )
	        : _vm._e()
	    ]
	  )
	};
	var progressvue_type_template_id_229ee406_staticRenderFns = [];
	progressvue_type_template_id_229ee406_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/progress/src/progress.vue?vue&type=template&id=229ee406&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/progress/src/progress.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var progressvue_type_script_lang_js_ = ({
	  name: 'ElProgress',
	  props: {
	    type: {
	      type: String,
	      default: 'line',
	      validator: function validator(val) {
	        return ['line', 'circle', 'dashboard'].indexOf(val) > -1;
	      }
	    },
	    percentage: {
	      type: Number,
	      default: 0,
	      required: true,
	      validator: function validator(val) {
	        return val >= 0 && val <= 100;
	      }
	    },
	    status: {
	      type: String,
	      validator: function validator(val) {
	        return ['success', 'exception', 'warning'].indexOf(val) > -1;
	      }
	    },
	    strokeWidth: {
	      type: Number,
	      default: 6
	    },
	    strokeLinecap: {
	      type: String,
	      default: 'round'
	    },
	    textInside: {
	      type: Boolean,
	      default: false
	    },
	    width: {
	      type: Number,
	      default: 126
	    },
	    showText: {
	      type: Boolean,
	      default: true
	    },
	    color: {
	      type: [String, Array, Function],
	      default: ''
	    },
	    defineBackColor: {
	      type: [String, Array, Function],
	      default: '#ebeef5'
	    },
	    textColor: {
	      type: [String, Array, Function],
	      default: '#606266'
	    },
	    format: Function
	  },
	  computed: {
	    barStyle: function barStyle() {
	      var style = {};
	      style.width = this.percentage + '%';
	      style.backgroundColor = this.getCurrentColor(this.percentage);
	      return style;
	    },
	    relativeStrokeWidth: function relativeStrokeWidth() {
	      return (this.strokeWidth / this.width * 100).toFixed(1);
	    },
	    radius: function radius() {
	      if (this.type === 'circle' || this.type === 'dashboard') {
	        return parseInt(50 - parseFloat(this.relativeStrokeWidth) / 2, 10);
	      } else {
	        return 0;
	      }
	    },
	    trackPath: function trackPath() {
	      var radius = this.radius;
	      var isDashboard = this.type === 'dashboard';
	      return '\n        M 50 50\n        m 0 ' + (isDashboard ? '' : '-') + radius + '\n        a ' + radius + ' ' + radius + ' 0 1 1 0 ' + (isDashboard ? '-' : '') + radius * 2 + '\n        a ' + radius + ' ' + radius + ' 0 1 1 0 ' + (isDashboard ? '' : '-') + radius * 2 + '\n        ';
	    },
	    perimeter: function perimeter() {
	      return 2 * Math.PI * this.radius;
	    },
	    rate: function rate() {
	      return this.type === 'dashboard' ? 0.75 : 1;
	    },
	    strokeDashoffset: function strokeDashoffset() {
	      var offset = -1 * this.perimeter * (1 - this.rate) / 2;
	      return offset + 'px';
	    },
	    trailPathStyle: function trailPathStyle() {
	      return {
	        strokeDasharray: this.perimeter * this.rate + 'px, ' + this.perimeter + 'px',
	        strokeDashoffset: this.strokeDashoffset
	      };
	    },
	    circlePathStyle: function circlePathStyle() {
	      return {
	        strokeDasharray: this.perimeter * this.rate * (this.percentage / 100) + 'px, ' + this.perimeter + 'px',
	        strokeDashoffset: this.strokeDashoffset,
	        transition: 'stroke-dasharray 0.6s ease 0s, stroke 0.6s ease'
	      };
	    },
	    stroke: function stroke() {
	      var ret = void 0;
	      if (this.color) {
	        ret = this.getCurrentColor(this.percentage);
	      } else {
	        switch (this.status) {
	          case 'success':
	            ret = '#13ce66';
	            break;
	          case 'exception':
	            ret = '#ff4949';
	            break;
	          case 'warning':
	            ret = '#e6a23c';
	            break;
	          default:
	            ret = '#20a0ff';
	        }
	      }
	      return ret;
	    },
	    iconClass: function iconClass() {
	      if (this.status === 'warning') {
	        return 'el-icon-warning';
	      }
	      if (this.type === 'line') {
	        return this.status === 'success' ? 'el-icon-circle-check' : 'el-icon-circle-close';
	      } else {
	        return this.status === 'success' ? 'el-icon-check' : 'el-icon-close';
	      }
	    },
	    progressTextSize: function progressTextSize() {
	      return this.type === 'line' ? 12 + this.strokeWidth * 0.4 : this.width * 0.111111 + 2;
	    },
	    content: function content() {
	      if (typeof this.format === 'function') {
	        return this.format(this.percentage) || '';
	      } else {
	        return this.percentage + '%';
	      }
	    }
	  },
	  methods: {
	    getCurrentColor: function getCurrentColor(percentage) {
	      if (typeof this.color === 'function') {
	        return this.color(percentage);
	      } else if (typeof this.color === 'string') {
	        return this.color;
	      } else {
	        return this.getLevelColor(percentage);
	      }
	    },
	    getLevelColor: function getLevelColor(percentage) {
	      var colorArray = this.getColorArray().sort(function (a, b) {
	        return a.percentage - b.percentage;
	      });

	      for (var i = 0; i < colorArray.length; i++) {
	        if (colorArray[i].percentage > percentage) {
	          return colorArray[i].color;
	        }
	      }
	      return colorArray[colorArray.length - 1].color;
	    },
	    getColorArray: function getColorArray() {
	      var color = this.color;
	      var span = 100 / color.length;
	      return color.map(function (seriesColor, index) {
	        if (typeof seriesColor === 'string') {
	          return {
	            color: seriesColor,
	            percentage: (index + 1) * span
	          };
	        }
	        return seriesColor;
	      });
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/progress/src/progress.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_progressvue_type_script_lang_js_ = (progressvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/progress/src/progress.vue





	/* normalize component */

	var progress_component = normalizeComponent(
	  src_progressvue_type_script_lang_js_,
	  progressvue_type_template_id_229ee406_render,
	  progressvue_type_template_id_229ee406_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	progress_component.options.__file = "packages/progress/src/progress.vue";
	/* harmony default export */ var progress = (progress_component.exports);
	// CONCATENATED MODULE: ./packages/progress/index.js


	/* istanbul ignore next */
	progress.install = function (Vue) {
	  Vue.component(progress.name, progress);
	};

	/* harmony default export */ var packages_progress = (progress);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/spinner/src/spinner.vue?vue&type=template&id=697b8538&
	var spinnervue_type_template_id_697b8538_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("span", { staticClass: "el-spinner" }, [
	    _c(
	      "svg",
	      {
	        staticClass: "el-spinner-inner",
	        style: { width: _vm.radius / 2 + "px", height: _vm.radius / 2 + "px" },
	        attrs: { viewBox: "0 0 50 50" }
	      },
	      [
	        _c("circle", {
	          staticClass: "path",
	          attrs: {
	            cx: "25",
	            cy: "25",
	            r: "20",
	            fill: "none",
	            stroke: _vm.strokeColor,
	            "stroke-width": _vm.strokeWidth
	          }
	        })
	      ]
	    )
	  ])
	};
	var spinnervue_type_template_id_697b8538_staticRenderFns = [];
	spinnervue_type_template_id_697b8538_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/spinner/src/spinner.vue?vue&type=template&id=697b8538&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/spinner/src/spinner.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var spinnervue_type_script_lang_js_ = ({
	  name: 'ElSpinner',
	  props: {
	    type: String,
	    radius: {
	      type: Number,
	      default: 100
	    },
	    strokeWidth: {
	      type: Number,
	      default: 5
	    },
	    strokeColor: {
	      type: String,
	      default: '#efefef'
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/spinner/src/spinner.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_spinnervue_type_script_lang_js_ = (spinnervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/spinner/src/spinner.vue





	/* normalize component */

	var spinner_component = normalizeComponent(
	  src_spinnervue_type_script_lang_js_,
	  spinnervue_type_template_id_697b8538_render,
	  spinnervue_type_template_id_697b8538_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	spinner_component.options.__file = "packages/spinner/src/spinner.vue";
	/* harmony default export */ var spinner = (spinner_component.exports);
	// CONCATENATED MODULE: ./packages/spinner/index.js


	/* istanbul ignore next */
	spinner.install = function (Vue) {
	  Vue.component(spinner.name, spinner);
	};

	/* harmony default export */ var packages_spinner = (spinner);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/message/src/main.vue?vue&type=template&id=455b9f60&
	var mainvue_type_template_id_455b9f60_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-message-fade" },
	      on: { "after-leave": _vm.handleAfterLeave }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          class: [
	            "el-message",
	            _vm.type && !_vm.iconClass ? "el-message--" + _vm.type : "",
	            _vm.center ? "is-center" : "",
	            _vm.showClose ? "is-closable" : "",
	            _vm.customClass
	          ],
	          style: _vm.positionStyle,
	          attrs: { role: "alert" },
	          on: { mouseenter: _vm.clearTimer, mouseleave: _vm.startTimer }
	        },
	        [
	          _vm.iconClass
	            ? _c("i", { class: _vm.iconClass })
	            : _c("i", { class: _vm.typeClass }),
	          _vm._t("default", [
	            !_vm.dangerouslyUseHTMLString
	              ? _c("p", { staticClass: "el-message__content" }, [
	                  _vm._v(_vm._s(_vm.message))
	                ])
	              : _c("p", {
	                  staticClass: "el-message__content",
	                  domProps: { innerHTML: _vm._s(_vm.message) }
	                })
	          ]),
	          _vm.showClose
	            ? _c("i", {
	                staticClass: "el-message__closeBtn el-icon-close",
	                on: { click: _vm.close }
	              })
	            : _vm._e()
	        ],
	        2
	      )
	    ]
	  )
	};
	var mainvue_type_template_id_455b9f60_staticRenderFns = [];
	mainvue_type_template_id_455b9f60_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/message/src/main.vue?vue&type=template&id=455b9f60&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/message/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var src_mainvue_type_script_lang_js_typeMap = {
	  success: 'success',
	  info: 'info',
	  warning: 'warning',
	  error: 'error'
	};

	/* harmony default export */ var message_src_mainvue_type_script_lang_js_ = ({
	  data: function data() {
	    return {
	      visible: false,
	      message: '',
	      duration: 3000,
	      type: 'info',
	      iconClass: '',
	      customClass: '',
	      onClose: null,
	      showClose: false,
	      closed: false,
	      verticalOffset: 20,
	      timer: null,
	      dangerouslyUseHTMLString: false,
	      center: false
	    };
	  },


	  computed: {
	    typeClass: function typeClass() {
	      return this.type && !this.iconClass ? 'el-message__icon el-icon-' + src_mainvue_type_script_lang_js_typeMap[this.type] : '';
	    },
	    positionStyle: function positionStyle() {
	      return {
	        'top': this.verticalOffset + 'px'
	      };
	    }
	  },

	  watch: {
	    closed: function closed(newVal) {
	      if (newVal) {
	        this.visible = false;
	      }
	    }
	  },

	  methods: {
	    handleAfterLeave: function handleAfterLeave() {
	      this.$destroy(true);
	      this.$el.parentNode.removeChild(this.$el);
	    },
	    close: function close() {
	      this.closed = true;
	      if (typeof this.onClose === 'function') {
	        this.onClose(this);
	      }
	    },
	    clearTimer: function clearTimer() {
	      clearTimeout(this.timer);
	    },
	    startTimer: function startTimer() {
	      var _this = this;

	      if (this.duration > 0) {
	        this.timer = setTimeout(function () {
	          if (!_this.closed) {
	            _this.close();
	          }
	        }, this.duration);
	      }
	    },
	    keydown: function keydown(e) {
	      if (e.keyCode === 27) {
	        // esc关闭消息
	        if (!this.closed) {
	          this.close();
	        }
	      }
	    }
	  },
	  mounted: function mounted() {
	    this.startTimer();
	    document.addEventListener('keydown', this.keydown);
	  },
	  beforeDestroy: function beforeDestroy() {
	    document.removeEventListener('keydown', this.keydown);
	  }
	});
	// CONCATENATED MODULE: ./packages/message/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_message_src_mainvue_type_script_lang_js_ = (message_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/message/src/main.vue





	/* normalize component */

	var message_src_main_component = normalizeComponent(
	  packages_message_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_455b9f60_render,
	  mainvue_type_template_id_455b9f60_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	message_src_main_component.options.__file = "packages/message/src/main.vue";
	/* harmony default export */ var message_src_main = (message_src_main_component.exports);
	// EXTERNAL MODULE: external "element-ui/lib/utils/types"
	var types_ = __webpack_require__(16);

	// CONCATENATED MODULE: ./packages/message/src/main.js
	var main_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };






	var MessageConstructor = external_vue_default.a.extend(message_src_main);

	var message_src_main_instance = void 0;
	var main_instances = [];
	var main_seed = 1;

	var main_Message = function Message(options) {
	  if (external_vue_default.a.prototype.$isServer) return;
	  options = options || {};
	  if (typeof options === 'string') {
	    options = {
	      message: options
	    };
	  }
	  var userOnClose = options.onClose;
	  var id = 'message_' + main_seed++;

	  options.onClose = function () {
	    Message.close(id, userOnClose);
	  };
	  message_src_main_instance = new MessageConstructor({
	    data: options
	  });
	  message_src_main_instance.id = id;
	  if (Object(vdom_["isVNode"])(message_src_main_instance.message)) {
	    message_src_main_instance.$slots.default = [message_src_main_instance.message];
	    message_src_main_instance.message = null;
	  }
	  message_src_main_instance.$mount();
	  document.body.appendChild(message_src_main_instance.$el);
	  var verticalOffset = options.offset || 20;
	  main_instances.forEach(function (item) {
	    verticalOffset += item.$el.offsetHeight + 16;
	  });
	  message_src_main_instance.verticalOffset = verticalOffset;
	  message_src_main_instance.visible = true;
	  message_src_main_instance.$el.style.zIndex = popup_["PopupManager"].nextZIndex();
	  main_instances.push(message_src_main_instance);
	  return message_src_main_instance;
	};

	['success', 'warning', 'info', 'error'].forEach(function (type) {
	  main_Message[type] = function (options) {
	    if (Object(types_["isObject"])(options) && !Object(vdom_["isVNode"])(options)) {
	      return main_Message(main_extends({}, options, {
	        type: type
	      }));
	    }
	    return main_Message({
	      type: type,
	      message: options
	    });
	  };
	});

	main_Message.close = function (id, userOnClose) {
	  var len = main_instances.length;
	  var index = -1;
	  var removedHeight = void 0;
	  for (var i = 0; i < len; i++) {
	    if (id === main_instances[i].id) {
	      removedHeight = main_instances[i].$el.offsetHeight;
	      index = i;
	      if (typeof userOnClose === 'function') {
	        userOnClose(main_instances[i]);
	      }
	      main_instances.splice(i, 1);
	      break;
	    }
	  }
	  if (len <= 1 || index === -1 || index > main_instances.length - 1) return;
	  for (var _i = index; _i < len - 1; _i++) {
	    var dom = main_instances[_i].$el;
	    dom.style['top'] = parseInt(dom.style['top'], 10) - removedHeight - 16 + 'px';
	  }
	};

	main_Message.closeAll = function () {
	  for (var i = main_instances.length - 1; i >= 0; i--) {
	    main_instances[i].close();
	  }
	};

	/* harmony default export */ var packages_message_src_main = (main_Message);
	// CONCATENATED MODULE: ./packages/message/index.js

	/* harmony default export */ var packages_message = (packages_message_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/badge/src/main.vue?vue&type=template&id=7ccb6598&
	var mainvue_type_template_id_7ccb6598_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { staticClass: "el-badge" },
	    [
	      _vm._t("default"),
	      _c("transition", { attrs: { name: "el-zoom-in-center" } }, [
	        _c("sup", {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value:
	                !_vm.hidden && (_vm.content || _vm.content === 0 || _vm.isDot),
	              expression: "!hidden && (content || content === 0 || isDot)"
	            }
	          ],
	          staticClass: "el-badge__content",
	          class: [
	            _vm.type ? "el-badge__content--" + _vm.type : null,
	            {
	              "is-fixed": _vm.$slots.default,
	              "is-dot": _vm.isDot
	            }
	          ],
	          domProps: { textContent: _vm._s(_vm.content) }
	        })
	      ])
	    ],
	    2
	  )
	};
	var mainvue_type_template_id_7ccb6598_staticRenderFns = [];
	mainvue_type_template_id_7ccb6598_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/badge/src/main.vue?vue&type=template&id=7ccb6598&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/badge/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var badge_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElBadge',

	  props: {
	    value: [String, Number],
	    max: Number,
	    isDot: Boolean,
	    hidden: Boolean,
	    type: {
	      type: String,
	      validator: function validator(val) {
	        return ['primary', 'success', 'warning', 'info', 'danger'].indexOf(val) > -1;
	      }
	    }
	  },

	  computed: {
	    content: function content() {
	      if (this.isDot) return;

	      var value = this.value;
	      var max = this.max;

	      if (typeof value === 'number' && typeof max === 'number') {
	        return max < value ? max + '+' : value;
	      }

	      return value;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/badge/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_badge_src_mainvue_type_script_lang_js_ = (badge_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/badge/src/main.vue





	/* normalize component */

	var badge_src_main_component = normalizeComponent(
	  packages_badge_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_7ccb6598_render,
	  mainvue_type_template_id_7ccb6598_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	badge_src_main_component.options.__file = "packages/badge/src/main.vue";
	/* harmony default export */ var badge_src_main = (badge_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/badge/index.js


	/* istanbul ignore next */
	badge_src_main.install = function (Vue) {
	  Vue.component(badge_src_main.name, badge_src_main);
	};

	/* harmony default export */ var badge = (badge_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/card/src/main.vue?vue&type=template&id=59a4a40f&
	var mainvue_type_template_id_59a4a40f_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-card",
	      class: _vm.shadow ? "is-" + _vm.shadow + "-shadow" : "is-always-shadow"
	    },
	    [
	      _vm.$slots.header || _vm.header
	        ? _c(
	            "div",
	            { staticClass: "el-card__header" },
	            [_vm._t("header", [_vm._v(_vm._s(_vm.header))])],
	            2
	          )
	        : _vm._e(),
	      _c(
	        "div",
	        { staticClass: "el-card__body", style: _vm.bodyStyle },
	        [_vm._t("default")],
	        2
	      )
	    ]
	  )
	};
	var mainvue_type_template_id_59a4a40f_staticRenderFns = [];
	mainvue_type_template_id_59a4a40f_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/card/src/main.vue?vue&type=template&id=59a4a40f&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/card/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var card_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElCard',
	  props: {
	    header: {},
	    bodyStyle: {},
	    shadow: {
	      type: String
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/card/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_card_src_mainvue_type_script_lang_js_ = (card_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/card/src/main.vue





	/* normalize component */

	var card_src_main_component = normalizeComponent(
	  packages_card_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_59a4a40f_render,
	  mainvue_type_template_id_59a4a40f_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	card_src_main_component.options.__file = "packages/card/src/main.vue";
	/* harmony default export */ var card_src_main = (card_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/card/index.js


	/* istanbul ignore next */
	card_src_main.install = function (Vue) {
	  Vue.component(card_src_main.name, card_src_main);
	};

	/* harmony default export */ var card = (card_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/rate/src/main.vue?vue&type=template&id=ada57782&
	var mainvue_type_template_id_ada57782_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-rate",
	      attrs: {
	        role: "slider",
	        "aria-valuenow": _vm.currentValue,
	        "aria-valuetext": _vm.text,
	        "aria-valuemin": "0",
	        "aria-valuemax": _vm.max,
	        tabindex: "0"
	      },
	      on: { keydown: _vm.handleKey }
	    },
	    [
	      _vm._l(_vm.max, function(item, key) {
	        return _c(
	          "span",
	          {
	            key: key,
	            staticClass: "el-rate__item",
	            style: { cursor: _vm.rateDisabled ? "auto" : "pointer" },
	            on: {
	              mousemove: function($event) {
	                _vm.setCurrentValue(item, $event);
	              },
	              mouseleave: _vm.resetCurrentValue,
	              click: function($event) {
	                _vm.selectValue(item);
	              }
	            }
	          },
	          [
	            _c(
	              "i",
	              {
	                staticClass: "el-rate__icon",
	                class: [
	                  _vm.classes[item - 1],
	                  { hover: _vm.hoverIndex === item }
	                ],
	                style: _vm.getIconStyle(item)
	              },
	              [
	                _vm.showDecimalIcon(item)
	                  ? _c("i", {
	                      staticClass: "el-rate__decimal",
	                      class: _vm.decimalIconClass,
	                      style: _vm.decimalStyle
	                    })
	                  : _vm._e()
	              ]
	            )
	          ]
	        )
	      }),
	      _vm.showText || _vm.showScore
	        ? _c(
	            "span",
	            { staticClass: "el-rate__text", style: { color: _vm.textColor } },
	            [_vm._v(_vm._s(_vm.text))]
	          )
	        : _vm._e()
	    ],
	    2
	  )
	};
	var mainvue_type_template_id_ada57782_staticRenderFns = [];
	mainvue_type_template_id_ada57782_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/rate/src/main.vue?vue&type=template&id=ada57782&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/rate/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var rate_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElRate',

	  mixins: [migrating_default.a],

	  inject: {
	    elForm: {
	      default: ''
	    }
	  },

	  data: function data() {
	    return {
	      pointerAtLeftHalf: true,
	      currentValue: this.value,
	      hoverIndex: -1
	    };
	  },


	  props: {
	    value: {
	      type: Number,
	      default: 0
	    },
	    lowThreshold: {
	      type: Number,
	      default: 2
	    },
	    highThreshold: {
	      type: Number,
	      default: 4
	    },
	    max: {
	      type: Number,
	      default: 5
	    },
	    colors: {
	      type: [Array, Object],
	      default: function _default() {
	        return ['#F7BA2A', '#F7BA2A', '#F7BA2A'];
	      }
	    },
	    voidColor: {
	      type: String,
	      default: '#C6D1DE'
	    },
	    disabledVoidColor: {
	      type: String,
	      default: '#EFF2F7'
	    },
	    iconClasses: {
	      type: [Array, Object],
	      default: function _default() {
	        return ['el-icon-star-on', 'el-icon-star-on', 'el-icon-star-on'];
	      }
	    },
	    voidIconClass: {
	      type: String,
	      default: 'el-icon-star-off'
	    },
	    disabledVoidIconClass: {
	      type: String,
	      default: 'el-icon-star-on'
	    },
	    disabled: {
	      type: Boolean,
	      default: false
	    },
	    allowHalf: {
	      type: Boolean,
	      default: false
	    },
	    showText: {
	      type: Boolean,
	      default: false
	    },
	    showScore: {
	      type: Boolean,
	      default: false
	    },
	    textColor: {
	      type: String,
	      default: '#1f2d3d'
	    },
	    texts: {
	      type: Array,
	      default: function _default() {
	        return ['极差', '失望', '一般', '满意', '惊喜'];
	      }
	    },
	    scoreTemplate: {
	      type: String,
	      default: '{value}'
	    }
	  },

	  computed: {
	    text: function text() {
	      var result = '';
	      if (this.showScore) {
	        result = this.scoreTemplate.replace(/\{\s*value\s*\}/, this.rateDisabled ? this.value : this.currentValue);
	      } else if (this.showText) {
	        result = this.texts[Math.ceil(this.currentValue) - 1];
	      }
	      return result;
	    },
	    decimalStyle: function decimalStyle() {
	      var width = '';
	      if (this.rateDisabled) {
	        width = this.valueDecimal + '%';
	      } else if (this.allowHalf) {
	        width = '50%';
	      }
	      return {
	        color: this.activeColor,
	        width: width
	      };
	    },
	    valueDecimal: function valueDecimal() {
	      return this.value * 100 - Math.floor(this.value) * 100;
	    },
	    classMap: function classMap() {
	      var _ref;

	      return Array.isArray(this.iconClasses) ? (_ref = {}, _ref[this.lowThreshold] = this.iconClasses[0], _ref[this.highThreshold] = { value: this.iconClasses[1], excluded: true }, _ref[this.max] = this.iconClasses[2], _ref) : this.iconClasses;
	    },
	    decimalIconClass: function decimalIconClass() {
	      return this.getValueFromMap(this.value, this.classMap);
	    },
	    voidClass: function voidClass() {
	      return this.rateDisabled ? this.disabledVoidIconClass : this.voidIconClass;
	    },
	    activeClass: function activeClass() {
	      return this.getValueFromMap(this.currentValue, this.classMap);
	    },
	    colorMap: function colorMap() {
	      var _ref2;

	      return Array.isArray(this.colors) ? (_ref2 = {}, _ref2[this.lowThreshold] = this.colors[0], _ref2[this.highThreshold] = { value: this.colors[1], excluded: true }, _ref2[this.max] = this.colors[2], _ref2) : this.colors;
	    },
	    activeColor: function activeColor() {
	      return this.getValueFromMap(this.currentValue, this.colorMap);
	    },
	    classes: function classes() {
	      var result = [];
	      var i = 0;
	      var threshold = this.currentValue;
	      if (this.allowHalf && this.currentValue !== Math.floor(this.currentValue)) {
	        threshold--;
	      }
	      for (; i < threshold; i++) {
	        result.push(this.activeClass);
	      }
	      for (; i < this.max; i++) {
	        result.push(this.voidClass);
	      }
	      return result;
	    },
	    rateDisabled: function rateDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    }
	  },

	  watch: {
	    value: function value(val) {
	      this.currentValue = val;
	      this.pointerAtLeftHalf = this.value !== Math.floor(this.value);
	    }
	  },

	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'text-template': 'text-template is renamed to score-template.'
	        }
	      };
	    },
	    getValueFromMap: function getValueFromMap(value, map) {
	      var matchedKeys = Object.keys(map).filter(function (key) {
	        var val = map[key];
	        var excluded = Object(types_["isObject"])(val) ? val.excluded : false;
	        return excluded ? value < key : value <= key;
	      }).sort(function (a, b) {
	        return a - b;
	      });
	      var matchedValue = map[matchedKeys[0]];
	      return Object(types_["isObject"])(matchedValue) ? matchedValue.value : matchedValue || '';
	    },
	    showDecimalIcon: function showDecimalIcon(item) {
	      var showWhenDisabled = this.rateDisabled && this.valueDecimal > 0 && item - 1 < this.value && item > this.value;
	      /* istanbul ignore next */
	      var showWhenAllowHalf = this.allowHalf && this.pointerAtLeftHalf && item - 0.5 <= this.currentValue && item > this.currentValue;
	      return showWhenDisabled || showWhenAllowHalf;
	    },
	    getIconStyle: function getIconStyle(item) {
	      var voidColor = this.rateDisabled ? this.disabledVoidColor : this.voidColor;
	      return {
	        color: item <= this.currentValue ? this.activeColor : voidColor
	      };
	    },
	    selectValue: function selectValue(value) {
	      if (this.rateDisabled) {
	        return;
	      }
	      if (this.allowHalf && this.pointerAtLeftHalf) {
	        this.$emit('input', this.currentValue);
	        this.$emit('change', this.currentValue);
	      } else {
	        this.$emit('input', value);
	        this.$emit('change', value);
	      }
	    },
	    handleKey: function handleKey(e) {
	      if (this.rateDisabled) {
	        return;
	      }
	      var currentValue = this.currentValue;
	      var keyCode = e.keyCode;
	      if (keyCode === 38 || keyCode === 39) {
	        // left / down
	        if (this.allowHalf) {
	          currentValue += 0.5;
	        } else {
	          currentValue += 1;
	        }
	        e.stopPropagation();
	        e.preventDefault();
	      } else if (keyCode === 37 || keyCode === 40) {
	        if (this.allowHalf) {
	          currentValue -= 0.5;
	        } else {
	          currentValue -= 1;
	        }
	        e.stopPropagation();
	        e.preventDefault();
	      }
	      currentValue = currentValue < 0 ? 0 : currentValue;
	      currentValue = currentValue > this.max ? this.max : currentValue;

	      this.$emit('input', currentValue);
	      this.$emit('change', currentValue);
	    },
	    setCurrentValue: function setCurrentValue(value, event) {
	      if (this.rateDisabled) {
	        return;
	      }
	      /* istanbul ignore if */
	      if (this.allowHalf) {
	        var target = event.target;
	        if (Object(dom_["hasClass"])(target, 'el-rate__item')) {
	          target = target.querySelector('.el-rate__icon');
	        }
	        if (Object(dom_["hasClass"])(target, 'el-rate__decimal')) {
	          target = target.parentNode;
	        }
	        this.pointerAtLeftHalf = event.offsetX * 2 <= target.clientWidth;
	        this.currentValue = this.pointerAtLeftHalf ? value - 0.5 : value;
	      } else {
	        this.currentValue = value;
	      }
	      this.hoverIndex = value;
	    },
	    resetCurrentValue: function resetCurrentValue() {
	      if (this.rateDisabled) {
	        return;
	      }
	      if (this.allowHalf) {
	        this.pointerAtLeftHalf = this.value !== Math.floor(this.value);
	      }
	      this.currentValue = this.value;
	      this.hoverIndex = -1;
	    }
	  },

	  created: function created() {
	    if (!this.value) {
	      this.$emit('input', 0);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/rate/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_rate_src_mainvue_type_script_lang_js_ = (rate_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/rate/src/main.vue





	/* normalize component */

	var rate_src_main_component = normalizeComponent(
	  packages_rate_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_ada57782_render,
	  mainvue_type_template_id_ada57782_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	rate_src_main_component.options.__file = "packages/rate/src/main.vue";
	/* harmony default export */ var rate_src_main = (rate_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/rate/index.js


	/* istanbul ignore next */
	rate_src_main.install = function (Vue) {
	  Vue.component(rate_src_main.name, rate_src_main);
	};

	/* harmony default export */ var packages_rate = (rate_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/steps.vue?vue&type=template&id=3c6b6dc0&
	var stepsvue_type_template_id_3c6b6dc0_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-steps",
	      class: [
	        !_vm.simple && "el-steps--" + _vm.direction,
	        _vm.simple && "el-steps--simple"
	      ]
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var stepsvue_type_template_id_3c6b6dc0_staticRenderFns = [];
	stepsvue_type_template_id_3c6b6dc0_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/steps/src/steps.vue?vue&type=template&id=3c6b6dc0&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/steps.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var stepsvue_type_script_lang_js_ = ({
	  name: 'ElSteps',

	  mixins: [migrating_default.a],

	  props: {
	    space: [Number, String],
	    active: Number,
	    direction: {
	      type: String,
	      default: 'horizontal'
	    },
	    alignCenter: Boolean,
	    simple: Boolean,
	    finishStatus: {
	      type: String,
	      default: 'finish'
	    },
	    processStatus: {
	      type: String,
	      default: 'process'
	    }
	  },

	  data: function data() {
	    return {
	      steps: [],
	      stepOffset: 0
	    };
	  },


	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'center': 'center is removed.'
	        }
	      };
	    }
	  },

	  watch: {
	    active: function active(newVal, oldVal) {
	      this.$emit('change', newVal, oldVal);
	    },
	    steps: function steps(_steps) {
	      _steps.forEach(function (child, index) {
	        child.index = index;
	      });
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/steps/src/steps.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_stepsvue_type_script_lang_js_ = (stepsvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/steps/src/steps.vue





	/* normalize component */

	var steps_component = normalizeComponent(
	  src_stepsvue_type_script_lang_js_,
	  stepsvue_type_template_id_3c6b6dc0_render,
	  stepsvue_type_template_id_3c6b6dc0_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	steps_component.options.__file = "packages/steps/src/steps.vue";
	/* harmony default export */ var steps = (steps_component.exports);
	// CONCATENATED MODULE: ./packages/steps/index.js


	/* istanbul ignore next */
	steps.install = function (Vue) {
	  Vue.component(steps.name, steps);
	};

	/* harmony default export */ var packages_steps = (steps);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/step.vue?vue&type=template&id=f414a87a&
	var stepvue_type_template_id_f414a87a_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-step",
	      class: [
	        !_vm.isSimple && "is-" + _vm.$parent.direction,
	        _vm.isSimple && "is-simple",
	        _vm.isLast && !_vm.space && !_vm.isCenter && "is-flex",
	        _vm.isCenter && !_vm.isVertical && !_vm.isSimple && "is-center"
	      ],
	      style: _vm.style
	    },
	    [
	      _c(
	        "div",
	        { staticClass: "el-step__head", class: "is-" + _vm.currentStatus },
	        [
	          _c(
	            "div",
	            {
	              staticClass: "el-step__line",
	              style: _vm.isLast
	                ? ""
	                : { marginRight: _vm.$parent.stepOffset + "px" }
	            },
	            [
	              _c("i", {
	                staticClass: "el-step__line-inner",
	                style: _vm.lineStyle
	              })
	            ]
	          ),
	          _c(
	            "div",
	            {
	              staticClass: "el-step__icon",
	              class: "is-" + (_vm.icon ? "icon" : "text")
	            },
	            [
	              _vm.currentStatus !== "success" && _vm.currentStatus !== "error"
	                ? _vm._t("icon", [
	                    _vm.icon
	                      ? _c("i", {
	                          staticClass: "el-step__icon-inner",
	                          class: [_vm.icon]
	                        })
	                      : _vm._e(),
	                    !_vm.icon && !_vm.isSimple
	                      ? _c("div", { staticClass: "el-step__icon-inner" }, [
	                          _vm._v(_vm._s(_vm.index + 1))
	                        ])
	                      : _vm._e()
	                  ])
	                : _c("i", {
	                    staticClass: "el-step__icon-inner is-status",
	                    class: [
	                      "el-icon-" +
	                        (_vm.currentStatus === "success" ? "check" : "close")
	                    ]
	                  })
	            ],
	            2
	          )
	        ]
	      ),
	      _c("div", { staticClass: "el-step__main" }, [
	        _c(
	          "div",
	          {
	            ref: "title",
	            staticClass: "el-step__title",
	            class: ["is-" + _vm.currentStatus]
	          },
	          [_vm._t("title", [_vm._v(_vm._s(_vm.title))])],
	          2
	        ),
	        _vm.isSimple
	          ? _c("div", { staticClass: "el-step__arrow" })
	          : _c(
	              "div",
	              {
	                staticClass: "el-step__description",
	                class: ["is-" + _vm.currentStatus]
	              },
	              [_vm._t("description", [_vm._v(_vm._s(_vm.description))])],
	              2
	            )
	      ])
	    ]
	  )
	};
	var stepvue_type_template_id_f414a87a_staticRenderFns = [];
	stepvue_type_template_id_f414a87a_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/steps/src/step.vue?vue&type=template&id=f414a87a&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/step.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var stepvue_type_script_lang_js_ = ({
	  name: 'ElStep',

	  props: {
	    title: String,
	    icon: String,
	    description: String,
	    status: String
	  },

	  data: function data() {
	    return {
	      index: -1,
	      lineStyle: {},
	      internalStatus: ''
	    };
	  },
	  beforeCreate: function beforeCreate() {
	    this.$parent.steps.push(this);
	  },
	  beforeDestroy: function beforeDestroy() {
	    var steps = this.$parent.steps;
	    var index = steps.indexOf(this);
	    if (index >= 0) {
	      steps.splice(index, 1);
	    }
	  },


	  computed: {
	    currentStatus: function currentStatus() {
	      return this.status || this.internalStatus;
	    },
	    prevStatus: function prevStatus() {
	      var prevStep = this.$parent.steps[this.index - 1];
	      return prevStep ? prevStep.currentStatus : 'wait';
	    },
	    isCenter: function isCenter() {
	      return this.$parent.alignCenter;
	    },
	    isVertical: function isVertical() {
	      return this.$parent.direction === 'vertical';
	    },
	    isSimple: function isSimple() {
	      return this.$parent.simple;
	    },
	    isLast: function isLast() {
	      var parent = this.$parent;
	      return parent.steps[parent.steps.length - 1] === this;
	    },
	    stepsCount: function stepsCount() {
	      return this.$parent.steps.length;
	    },
	    space: function space() {
	      var isSimple = this.isSimple,
	          space = this.$parent.space;

	      return isSimple ? '' : space;
	    },

	    style: function style() {
	      var style = {};
	      var parent = this.$parent;
	      var len = parent.steps.length;

	      var space = typeof this.space === 'number' ? this.space + 'px' : this.space ? this.space : 100 / (len - (this.isCenter ? 0 : 1)) + '%';
	      style.flexBasis = space;
	      if (this.isVertical) return style;
	      if (this.isLast) {
	        style.maxWidth = 100 / this.stepsCount + '%';
	      } else {
	        style.marginRight = -this.$parent.stepOffset + 'px';
	      }

	      return style;
	    }
	  },

	  methods: {
	    updateStatus: function updateStatus(val) {
	      var prevChild = this.$parent.$children[this.index - 1];

	      if (val > this.index) {
	        this.internalStatus = this.$parent.finishStatus;
	      } else if (val === this.index && this.prevStatus !== 'error') {
	        this.internalStatus = this.$parent.processStatus;
	      } else {
	        this.internalStatus = 'wait';
	      }

	      if (prevChild) prevChild.calcProgress(this.internalStatus);
	    },
	    calcProgress: function calcProgress(status) {
	      var step = 100;
	      var style = {};

	      style.transitionDelay = 150 * this.index + 'ms';
	      if (status === this.$parent.processStatus) {
	        step = this.currentStatus !== 'error' ? 0 : 0;
	      } else if (status === 'wait') {
	        step = 0;
	        style.transitionDelay = -150 * this.index + 'ms';
	      }

	      style.borderWidth = step && !this.isSimple ? '1px' : 0;
	      this.$parent.direction === 'vertical' ? style.height = step + '%' : style.width = step + '%';

	      this.lineStyle = style;
	    }
	  },

	  mounted: function mounted() {
	    var _this = this;

	    var unwatch = this.$watch('index', function (val) {
	      _this.$watch('$parent.active', _this.updateStatus, { immediate: true });
	      _this.$watch('$parent.processStatus', function () {
	        var activeIndex = _this.$parent.active;
	        _this.updateStatus(activeIndex);
	      }, { immediate: true });
	      unwatch();
	    });
	  }
	});
	// CONCATENATED MODULE: ./packages/steps/src/step.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_stepvue_type_script_lang_js_ = (stepvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/steps/src/step.vue





	/* normalize component */

	var step_component = normalizeComponent(
	  src_stepvue_type_script_lang_js_,
	  stepvue_type_template_id_f414a87a_render,
	  stepvue_type_template_id_f414a87a_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	step_component.options.__file = "packages/steps/src/step.vue";
	/* harmony default export */ var step = (step_component.exports);
	// CONCATENATED MODULE: ./packages/step/index.js


	/* istanbul ignore next */
	step.install = function (Vue) {
	  Vue.component(step.name, step);
	};

	/* harmony default export */ var packages_step = (step);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/main.vue?vue&type=template&id=5d5d1482&
	var mainvue_type_template_id_5d5d1482_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      class: _vm.carouselClasses,
	      on: {
	        mouseenter: function($event) {
	          $event.stopPropagation();
	          return _vm.handleMouseEnter($event)
	        },
	        mouseleave: function($event) {
	          $event.stopPropagation();
	          return _vm.handleMouseLeave($event)
	        }
	      }
	    },
	    [
	      _c(
	        "div",
	        {
	          staticClass: "el-carousel__container",
	          style: { height: _vm.height }
	        },
	        [
	          _vm.arrowDisplay
	            ? _c("transition", { attrs: { name: "carousel-arrow-left" } }, [
	                _c(
	                  "button",
	                  {
	                    directives: [
	                      {
	                        name: "show",
	                        rawName: "v-show",
	                        value:
	                          (_vm.arrow === "always" || _vm.hover) &&
	                          (_vm.loop || _vm.activeIndex > 0),
	                        expression:
	                          "(arrow === 'always' || hover) && (loop || activeIndex > 0)"
	                      }
	                    ],
	                    staticClass: "el-carousel__arrow el-carousel__arrow--left",
	                    attrs: { type: "button" },
	                    on: {
	                      mouseenter: function($event) {
	                        _vm.handleButtonEnter("left");
	                      },
	                      mouseleave: _vm.handleButtonLeave,
	                      click: function($event) {
	                        $event.stopPropagation();
	                        _vm.throttledArrowClick(_vm.activeIndex - 1);
	                      }
	                    }
	                  },
	                  [_c("i", { staticClass: "el-icon-arrow-left" })]
	                )
	              ])
	            : _vm._e(),
	          _vm.arrowDisplay
	            ? _c("transition", { attrs: { name: "carousel-arrow-right" } }, [
	                _c(
	                  "button",
	                  {
	                    directives: [
	                      {
	                        name: "show",
	                        rawName: "v-show",
	                        value:
	                          (_vm.arrow === "always" || _vm.hover) &&
	                          (_vm.loop || _vm.activeIndex < _vm.items.length - 1),
	                        expression:
	                          "(arrow === 'always' || hover) && (loop || activeIndex < items.length - 1)"
	                      }
	                    ],
	                    staticClass: "el-carousel__arrow el-carousel__arrow--right",
	                    attrs: { type: "button" },
	                    on: {
	                      mouseenter: function($event) {
	                        _vm.handleButtonEnter("right");
	                      },
	                      mouseleave: _vm.handleButtonLeave,
	                      click: function($event) {
	                        $event.stopPropagation();
	                        _vm.throttledArrowClick(_vm.activeIndex + 1);
	                      }
	                    }
	                  },
	                  [_c("i", { staticClass: "el-icon-arrow-right" })]
	                )
	              ])
	            : _vm._e(),
	          _vm._t("default")
	        ],
	        2
	      ),
	      _vm.indicatorPosition !== "none"
	        ? _c(
	            "ul",
	            { class: _vm.indicatorsClasses },
	            _vm._l(_vm.items, function(item, index) {
	              return _c(
	                "li",
	                {
	                  key: index,
	                  class: [
	                    "el-carousel__indicator",
	                    "el-carousel__indicator--" + _vm.direction,
	                    { "is-active": index === _vm.activeIndex }
	                  ],
	                  on: {
	                    mouseenter: function($event) {
	                      _vm.throttledIndicatorHover(index);
	                    },
	                    click: function($event) {
	                      $event.stopPropagation();
	                      _vm.handleIndicatorClick(index);
	                    }
	                  }
	                },
	                [
	                  _c("button", { staticClass: "el-carousel__button" }, [
	                    _vm.hasLabel
	                      ? _c("span", [_vm._v(_vm._s(item.label))])
	                      : _vm._e()
	                  ])
	                ]
	              )
	            }),
	            0
	          )
	        : _vm._e()
	    ]
	  )
	};
	var mainvue_type_template_id_5d5d1482_staticRenderFns = [];
	mainvue_type_template_id_5d5d1482_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/carousel/src/main.vue?vue&type=template&id=5d5d1482&

	// EXTERNAL MODULE: external "throttle-debounce/throttle"
	var throttle_ = __webpack_require__(25);
	var throttle_default = /*#__PURE__*/__webpack_require__.n(throttle_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//




	/* harmony default export */ var carousel_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElCarousel',

	  props: {
	    initialIndex: {
	      type: Number,
	      default: 0
	    },
	    height: String,
	    trigger: {
	      type: String,
	      default: 'hover'
	    },
	    autoplay: {
	      type: Boolean,
	      default: true
	    },
	    interval: {
	      type: Number,
	      default: 3000
	    },
	    indicatorPosition: String,
	    indicator: {
	      type: Boolean,
	      default: true
	    },
	    arrow: {
	      type: String,
	      default: 'hover'
	    },
	    type: String,
	    loop: {
	      type: Boolean,
	      default: true
	    },
	    direction: {
	      type: String,
	      default: 'horizontal',
	      validator: function validator(val) {
	        return ['horizontal', 'vertical'].indexOf(val) !== -1;
	      }
	    }
	  },

	  data: function data() {
	    return {
	      items: [],
	      activeIndex: -1,
	      containerWidth: 0,
	      timer: null,
	      hover: false
	    };
	  },


	  computed: {
	    arrowDisplay: function arrowDisplay() {
	      return this.arrow !== 'never' && this.direction !== 'vertical';
	    },
	    hasLabel: function hasLabel() {
	      return this.items.some(function (item) {
	        return item.label.toString().length > 0;
	      });
	    },
	    carouselClasses: function carouselClasses() {
	      var classes = ['el-carousel', 'el-carousel--' + this.direction];
	      if (this.type === 'card') {
	        classes.push('el-carousel--card');
	      }
	      return classes;
	    },
	    indicatorsClasses: function indicatorsClasses() {
	      var classes = ['el-carousel__indicators', 'el-carousel__indicators--' + this.direction];
	      if (this.hasLabel) {
	        classes.push('el-carousel__indicators--labels');
	      }
	      if (this.indicatorPosition === 'outside' || this.type === 'card') {
	        classes.push('el-carousel__indicators--outside');
	      }
	      return classes;
	    }
	  },

	  watch: {
	    items: function items(val) {
	      if (val.length > 0) this.setActiveItem(this.initialIndex);
	    },
	    activeIndex: function activeIndex(val, oldVal) {
	      this.resetItemPosition(oldVal);
	      if (oldVal > -1) {
	        this.$emit('change', val, oldVal);
	      }
	    },
	    autoplay: function autoplay(val) {
	      val ? this.startTimer() : this.pauseTimer();
	    },
	    loop: function loop() {
	      this.setActiveItem(this.activeIndex);
	    },
	    interval: function interval() {
	      this.pauseTimer();
	      this.startTimer();
	    }
	  },

	  methods: {
	    handleMouseEnter: function handleMouseEnter() {
	      this.hover = true;
	      this.pauseTimer();
	    },
	    handleMouseLeave: function handleMouseLeave() {
	      this.hover = false;
	      this.startTimer();
	    },
	    itemInStage: function itemInStage(item, index) {
	      var length = this.items.length;
	      if (index === length - 1 && item.inStage && this.items[0].active || item.inStage && this.items[index + 1] && this.items[index + 1].active) {
	        return 'left';
	      } else if (index === 0 && item.inStage && this.items[length - 1].active || item.inStage && this.items[index - 1] && this.items[index - 1].active) {
	        return 'right';
	      }
	      return false;
	    },
	    handleButtonEnter: function handleButtonEnter(arrow) {
	      var _this = this;

	      if (this.direction === 'vertical') return;
	      this.items.forEach(function (item, index) {
	        if (arrow === _this.itemInStage(item, index)) {
	          item.hover = true;
	        }
	      });
	    },
	    handleButtonLeave: function handleButtonLeave() {
	      if (this.direction === 'vertical') return;
	      this.items.forEach(function (item) {
	        item.hover = false;
	      });
	    },
	    updateItems: function updateItems() {
	      this.items = this.$children.filter(function (child) {
	        return child.$options.name === 'ElCarouselItem';
	      });
	    },
	    resetItemPosition: function resetItemPosition(oldIndex) {
	      var _this2 = this;

	      this.items.forEach(function (item, index) {
	        item.translateItem(index, _this2.activeIndex, oldIndex);
	      });
	    },
	    playSlides: function playSlides() {
	      if (this.activeIndex < this.items.length - 1) {
	        this.activeIndex++;
	      } else if (this.loop) {
	        this.activeIndex = 0;
	      }
	    },
	    pauseTimer: function pauseTimer() {
	      if (this.timer) {
	        clearInterval(this.timer);
	        this.timer = null;
	      }
	    },
	    startTimer: function startTimer() {
	      if (this.interval <= 0 || !this.autoplay || this.timer) return;
	      this.timer = setInterval(this.playSlides, this.interval);
	    },
	    resetTimer: function resetTimer() {
	      this.pauseTimer();
	      this.startTimer();
	    },
	    setActiveItem: function setActiveItem(index) {
	      if (typeof index === 'string') {
	        var filteredItems = this.items.filter(function (item) {
	          return item.name === index;
	        });
	        if (filteredItems.length > 0) {
	          index = this.items.indexOf(filteredItems[0]);
	        }
	      }
	      index = Number(index);
	      if (isNaN(index) || index !== Math.floor(index)) {
	        console.warn('[Element Warn][Carousel]index must be an integer.');
	        return;
	      }
	      var length = this.items.length;
	      var oldIndex = this.activeIndex;
	      if (index < 0) {
	        this.activeIndex = this.loop ? length - 1 : 0;
	      } else if (index >= length) {
	        this.activeIndex = this.loop ? 0 : length - 1;
	      } else {
	        this.activeIndex = index;
	      }
	      if (oldIndex === this.activeIndex) {
	        this.resetItemPosition(oldIndex);
	      }
	      this.resetTimer();
	    },
	    prev: function prev() {
	      this.setActiveItem(this.activeIndex - 1);
	    },
	    next: function next() {
	      this.setActiveItem(this.activeIndex + 1);
	    },
	    handleIndicatorClick: function handleIndicatorClick(index) {
	      this.activeIndex = index;
	    },
	    handleIndicatorHover: function handleIndicatorHover(index) {
	      if (this.trigger === 'hover' && index !== this.activeIndex) {
	        this.activeIndex = index;
	      }
	    }
	  },

	  created: function created() {
	    var _this3 = this;

	    this.throttledArrowClick = throttle_default()(300, true, function (index) {
	      _this3.setActiveItem(index);
	    });
	    this.throttledIndicatorHover = throttle_default()(300, function (index) {
	      _this3.handleIndicatorHover(index);
	    });
	  },
	  mounted: function mounted() {
	    var _this4 = this;

	    this.updateItems();
	    this.$nextTick(function () {
	      Object(resize_event_["addResizeListener"])(_this4.$el, _this4.resetItemPosition);
	      if (_this4.initialIndex < _this4.items.length && _this4.initialIndex >= 0) {
	        _this4.activeIndex = _this4.initialIndex;
	      }
	      _this4.startTimer();
	    });
	  },
	  beforeDestroy: function beforeDestroy() {
	    if (this.$el) Object(resize_event_["removeResizeListener"])(this.$el, this.resetItemPosition);
	    this.pauseTimer();
	  }
	});
	// CONCATENATED MODULE: ./packages/carousel/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_carousel_src_mainvue_type_script_lang_js_ = (carousel_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/carousel/src/main.vue





	/* normalize component */

	var carousel_src_main_component = normalizeComponent(
	  packages_carousel_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_5d5d1482_render,
	  mainvue_type_template_id_5d5d1482_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	carousel_src_main_component.options.__file = "packages/carousel/src/main.vue";
	/* harmony default export */ var carousel_src_main = (carousel_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/carousel/index.js


	/* istanbul ignore next */
	carousel_src_main.install = function (Vue) {
	  Vue.component(carousel_src_main.name, carousel_src_main);
	};

	/* harmony default export */ var carousel = (carousel_src_main);
	// CONCATENATED MODULE: ./packages/scrollbar/src/util.js
	var BAR_MAP = {
	  vertical: {
	    offset: 'offsetHeight',
	    scroll: 'scrollTop',
	    scrollSize: 'scrollHeight',
	    size: 'height',
	    key: 'vertical',
	    axis: 'Y',
	    client: 'clientY',
	    direction: 'top'
	  },
	  horizontal: {
	    offset: 'offsetWidth',
	    scroll: 'scrollLeft',
	    scrollSize: 'scrollWidth',
	    size: 'width',
	    key: 'horizontal',
	    axis: 'X',
	    client: 'clientX',
	    direction: 'left'
	  }
	};

	function renderThumbStyle(_ref) {
	  var move = _ref.move,
	      size = _ref.size,
	      bar = _ref.bar;

	  var style = {};
	  var translate = 'translate' + bar.axis + '(' + move + '%)';

	  style[bar.size] = size;
	  style.transform = translate;
	  style.msTransform = translate;
	  style.webkitTransform = translate;

	  return style;
	}	// CONCATENATED MODULE: ./packages/scrollbar/src/bar.js



	/* istanbul ignore next */
	/* harmony default export */ var src_bar = ({
	  name: 'Bar',

	  props: {
	    vertical: Boolean,
	    size: String,
	    move: Number
	  },

	  computed: {
	    bar: function bar() {
	      return BAR_MAP[this.vertical ? 'vertical' : 'horizontal'];
	    },
	    wrap: function wrap() {
	      return this.$parent.wrap;
	    }
	  },

	  render: function render(h) {
	    var size = this.size,
	        move = this.move,
	        bar = this.bar;


	    return h(
	      'div',
	      {
	        'class': ['el-scrollbar__bar', 'is-' + bar.key],
	        on: {
	          'mousedown': this.clickTrackHandler
	        }
	      },
	      [h('div', {
	        ref: 'thumb',
	        'class': 'el-scrollbar__thumb',
	        on: {
	          'mousedown': this.clickThumbHandler
	        },

	        style: renderThumbStyle({ size: size, move: move, bar: bar }) })]
	    );
	  },


	  methods: {
	    clickThumbHandler: function clickThumbHandler(e) {
	      // prevent click event of right button
	      if (e.ctrlKey || e.button === 2) {
	        return;
	      }
	      this.startDrag(e);
	      this[this.bar.axis] = e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[this.bar.direction]);
	    },
	    clickTrackHandler: function clickTrackHandler(e) {
	      var offset = Math.abs(e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]);
	      var thumbHalf = this.$refs.thumb[this.bar.offset] / 2;
	      var thumbPositionPercentage = (offset - thumbHalf) * 100 / this.$el[this.bar.offset];

	      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
	    },
	    startDrag: function startDrag(e) {
	      e.stopImmediatePropagation();
	      this.cursorDown = true;

	      Object(dom_["on"])(document, 'mousemove', this.mouseMoveDocumentHandler);
	      Object(dom_["on"])(document, 'mouseup', this.mouseUpDocumentHandler);
	      document.onselectstart = function () {
	        return false;
	      };
	    },
	    mouseMoveDocumentHandler: function mouseMoveDocumentHandler(e) {
	      if (this.cursorDown === false) return;
	      var prevPage = this[this.bar.axis];

	      if (!prevPage) return;

	      var offset = (this.$el.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]) * -1;
	      var thumbClickPosition = this.$refs.thumb[this.bar.offset] - prevPage;
	      var thumbPositionPercentage = (offset - thumbClickPosition) * 100 / this.$el[this.bar.offset];

	      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
	    },
	    mouseUpDocumentHandler: function mouseUpDocumentHandler(e) {
	      this.cursorDown = false;
	      this[this.bar.axis] = 0;
	      Object(dom_["off"])(document, 'mousemove', this.mouseMoveDocumentHandler);
	      document.onselectstart = null;
	    }
	  },

	  destroyed: function destroyed() {
	    Object(dom_["off"])(document, 'mouseup', this.mouseUpDocumentHandler);
	  }
	});
	// CONCATENATED MODULE: ./packages/scrollbar/src/main.js
	// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js






	/* istanbul ignore next */
	/* harmony default export */ var scrollbar_src_main = ({
	  name: 'ElScrollbar',

	  components: { Bar: src_bar },

	  props: {
	    native: Boolean,
	    wrapStyle: {},
	    wrapClass: {},
	    viewClass: {},
	    viewStyle: {},
	    noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能
	    tag: {
	      type: String,
	      default: 'div'
	    }
	  },

	  data: function data() {
	    return {
	      sizeWidth: '0',
	      sizeHeight: '0',
	      moveX: 0,
	      moveY: 0
	    };
	  },


	  computed: {
	    wrap: function wrap() {
	      return this.$refs.wrap;
	    }
	  },

	  render: function render(h) {
	    var gutter = scrollbar_width_default()();
	    var style = this.wrapStyle;

	    if (gutter) {
	      var gutterWith = '-' + gutter + 'px';
	      var gutterStyle = 'margin-bottom: ' + gutterWith + '; margin-right: ' + gutterWith + ';';

	      if (Array.isArray(this.wrapStyle)) {
	        style = Object(util_["toObject"])(this.wrapStyle);
	        style.marginRight = style.marginBottom = gutterWith;
	      } else if (typeof this.wrapStyle === 'string') {
	        style += gutterStyle;
	      } else {
	        style = gutterStyle;
	      }
	    }
	    var view = h(this.tag, {
	      class: ['el-scrollbar__view', this.viewClass],
	      style: this.viewStyle,
	      ref: 'resize'
	    }, this.$slots.default);
	    var wrap = h(
	      'div',
	      {
	        ref: 'wrap',
	        style: style,
	        on: {
	          'scroll': this.handleScroll
	        },

	        'class': [this.wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default'] },
	      [[view]]
	    );
	    var nodes = void 0;

	    if (!this.native) {
	      nodes = [wrap, h(src_bar, {
	        attrs: {
	          move: this.moveX,
	          size: this.sizeWidth }
	      }), h(src_bar, {
	        attrs: {
	          vertical: true,
	          move: this.moveY,
	          size: this.sizeHeight }
	      })];
	    } else {
	      nodes = [h(
	        'div',
	        {
	          ref: 'wrap',
	          'class': [this.wrapClass, 'el-scrollbar__wrap'],
	          style: style },
	        [[view]]
	      )];
	    }
	    return h('div', { class: 'el-scrollbar' }, nodes);
	  },


	  methods: {
	    handleScroll: function handleScroll() {
	      var wrap = this.wrap;

	      this.moveY = wrap.scrollTop * 100 / wrap.clientHeight;
	      this.moveX = wrap.scrollLeft * 100 / wrap.clientWidth;
	    },
	    update: function update() {
	      var heightPercentage = void 0,
	          widthPercentage = void 0;
	      var wrap = this.wrap;
	      if (!wrap) return;

	      heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;
	      widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;

	      this.sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : '';
	      this.sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : '';
	    }
	  },

	  mounted: function mounted() {
	    if (this.native) return;
	    this.$nextTick(this.update);
	    !this.noresize && Object(resize_event_["addResizeListener"])(this.$refs.resize, this.update);
	  },
	  beforeDestroy: function beforeDestroy() {
	    if (this.native) return;
	    !this.noresize && Object(resize_event_["removeResizeListener"])(this.$refs.resize, this.update);
	  }
	});
	// CONCATENATED MODULE: ./packages/scrollbar/index.js


	/* istanbul ignore next */
	scrollbar_src_main.install = function (Vue) {
	  Vue.component(scrollbar_src_main.name, scrollbar_src_main);
	};

	/* harmony default export */ var scrollbar = (scrollbar_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/item.vue?vue&type=template&id=1801ae19&
	var itemvue_type_template_id_1801ae19_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      directives: [
	        {
	          name: "show",
	          rawName: "v-show",
	          value: _vm.ready,
	          expression: "ready"
	        }
	      ],
	      staticClass: "el-carousel__item",
	      class: {
	        "is-active": _vm.active,
	        "el-carousel__item--card": _vm.$parent.type === "card",
	        "is-in-stage": _vm.inStage,
	        "is-hover": _vm.hover,
	        "is-animating": _vm.animating
	      },
	      style: _vm.itemStyle,
	      on: { click: _vm.handleItemClick }
	    },
	    [
	      _vm.$parent.type === "card"
	        ? _c("div", {
	            directives: [
	              {
	                name: "show",
	                rawName: "v-show",
	                value: !_vm.active,
	                expression: "!active"
	              }
	            ],
	            staticClass: "el-carousel__mask"
	          })
	        : _vm._e(),
	      _vm._t("default")
	    ],
	    2
	  )
	};
	var itemvue_type_template_id_1801ae19_staticRenderFns = [];
	itemvue_type_template_id_1801ae19_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/carousel/src/item.vue?vue&type=template&id=1801ae19&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/item.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//


	var CARD_SCALE = 0.83;
	/* harmony default export */ var itemvue_type_script_lang_js_ = ({
	  name: 'ElCarouselItem',

	  props: {
	    name: String,
	    label: {
	      type: [String, Number],
	      default: ''
	    }
	  },

	  data: function data() {
	    return {
	      hover: false,
	      translate: 0,
	      scale: 1,
	      active: false,
	      ready: false,
	      inStage: false,
	      animating: false
	    };
	  },


	  methods: {
	    processIndex: function processIndex(index, activeIndex, length) {
	      if (activeIndex === 0 && index === length - 1) {
	        return -1;
	      } else if (activeIndex === length - 1 && index === 0) {
	        return length;
	      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {
	        return length + 1;
	      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {
	        return -2;
	      }
	      return index;
	    },
	    calcCardTranslate: function calcCardTranslate(index, activeIndex) {
	      var parentWidth = this.$parent.$el.offsetWidth;
	      if (this.inStage) {
	        return parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1) / 4;
	      } else if (index < activeIndex) {
	        return -(1 + CARD_SCALE) * parentWidth / 4;
	      } else {
	        return (3 + CARD_SCALE) * parentWidth / 4;
	      }
	    },
	    calcTranslate: function calcTranslate(index, activeIndex, isVertical) {
	      var distance = this.$parent.$el[isVertical ? 'offsetHeight' : 'offsetWidth'];
	      return distance * (index - activeIndex);
	    },
	    translateItem: function translateItem(index, activeIndex, oldIndex) {
	      var parentType = this.$parent.type;
	      var parentDirection = this.parentDirection;
	      var length = this.$parent.items.length;
	      if (parentType !== 'card' && oldIndex !== undefined) {
	        this.animating = index === activeIndex || index === oldIndex;
	      }
	      if (index !== activeIndex && length > 2 && this.$parent.loop) {
	        index = this.processIndex(index, activeIndex, length);
	      }
	      if (parentType === 'card') {
	        if (parentDirection === 'vertical') {
	          console.warn('[Element Warn][Carousel]vertical direction is not supported in card mode');
	        }
	        this.inStage = Math.round(Math.abs(index - activeIndex)) <= 1;
	        this.active = index === activeIndex;
	        this.translate = this.calcCardTranslate(index, activeIndex);
	        this.scale = this.active ? 1 : CARD_SCALE;
	      } else {
	        this.active = index === activeIndex;
	        var isVertical = parentDirection === 'vertical';
	        this.translate = this.calcTranslate(index, activeIndex, isVertical);
	        this.scale = 1;
	      }
	      this.ready = true;
	    },
	    handleItemClick: function handleItemClick() {
	      var parent = this.$parent;
	      if (parent && parent.type === 'card') {
	        var index = parent.items.indexOf(this);
	        parent.setActiveItem(index);
	      }
	    }
	  },

	  computed: {
	    parentDirection: function parentDirection() {
	      return this.$parent.direction;
	    },
	    itemStyle: function itemStyle() {
	      var translateType = this.parentDirection === 'vertical' ? 'translateY' : 'translateX';
	      var value = translateType + '(' + this.translate + 'px) scale(' + this.scale + ')';
	      var style = {
	        transform: value
	      };
	      return Object(util_["autoprefixer"])(style);
	    }
	  },

	  created: function created() {
	    this.$parent && this.$parent.updateItems();
	  },
	  destroyed: function destroyed() {
	    this.$parent && this.$parent.updateItems();
	  }
	});
	// CONCATENATED MODULE: ./packages/carousel/src/item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_itemvue_type_script_lang_js_ = (itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/carousel/src/item.vue





	/* normalize component */

	var item_component = normalizeComponent(
	  src_itemvue_type_script_lang_js_,
	  itemvue_type_template_id_1801ae19_render,
	  itemvue_type_template_id_1801ae19_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	item_component.options.__file = "packages/carousel/src/item.vue";
	/* harmony default export */ var src_item = (item_component.exports);
	// CONCATENATED MODULE: ./packages/carousel-item/index.js


	/* istanbul ignore next */
	src_item.install = function (Vue) {
	  Vue.component(src_item.name, src_item);
	};

	/* harmony default export */ var carousel_item = (src_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse.vue?vue&type=template&id=461d57f4&
	var collapsevue_type_template_id_461d57f4_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-collapse",
	      attrs: { role: "tablist", "aria-multiselectable": "true" }
	    },
	    [_vm._t("default")],
	    2
	  )
	};
	var collapsevue_type_template_id_461d57f4_staticRenderFns = [];
	collapsevue_type_template_id_461d57f4_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/collapse/src/collapse.vue?vue&type=template&id=461d57f4&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//

	/* harmony default export */ var collapsevue_type_script_lang_js_ = ({
	  name: 'ElCollapse',

	  componentName: 'ElCollapse',

	  props: {
	    accordion: Boolean,
	    value: {
	      type: [Array, String, Number],
	      default: function _default() {
	        return [];
	      }
	    }
	  },

	  data: function data() {
	    return {
	      activeNames: [].concat(this.value)
	    };
	  },
	  provide: function provide() {
	    return {
	      collapse: this
	    };
	  },


	  watch: {
	    value: function value(_value) {
	      this.activeNames = [].concat(_value);
	    }
	  },

	  methods: {
	    setActiveNames: function setActiveNames(activeNames) {
	      activeNames = [].concat(activeNames);
	      var value = this.accordion ? activeNames[0] : activeNames;
	      this.activeNames = activeNames;
	      this.$emit('input', value);
	      this.$emit('change', value);
	    },
	    handleItemClick: function handleItemClick(item) {
	      if (this.accordion) {
	        this.setActiveNames((this.activeNames[0] || this.activeNames[0] === 0) && this.activeNames[0] === item.name ? '' : item.name);
	      } else {
	        var activeNames = this.activeNames.slice(0);
	        var index = activeNames.indexOf(item.name);

	        if (index > -1) {
	          activeNames.splice(index, 1);
	        } else {
	          activeNames.push(item.name);
	        }
	        this.setActiveNames(activeNames);
	      }
	    }
	  },

	  created: function created() {
	    this.$on('item-click', this.handleItemClick);
	  }
	});
	// CONCATENATED MODULE: ./packages/collapse/src/collapse.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_collapsevue_type_script_lang_js_ = (collapsevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/collapse/src/collapse.vue





	/* normalize component */

	var collapse_component = normalizeComponent(
	  src_collapsevue_type_script_lang_js_,
	  collapsevue_type_template_id_461d57f4_render,
	  collapsevue_type_template_id_461d57f4_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	collapse_component.options.__file = "packages/collapse/src/collapse.vue";
	/* harmony default export */ var collapse = (collapse_component.exports);
	// CONCATENATED MODULE: ./packages/collapse/index.js


	/* istanbul ignore next */
	collapse.install = function (Vue) {
	  Vue.component(collapse.name, collapse);
	};

	/* harmony default export */ var packages_collapse = (collapse);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse-item.vue?vue&type=template&id=2d05faac&
	var collapse_itemvue_type_template_id_2d05faac_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-collapse-item",
	      class: { "is-active": _vm.isActive, "is-disabled": _vm.disabled }
	    },
	    [
	      _c(
	        "div",
	        {
	          attrs: {
	            role: "tab",
	            "aria-expanded": _vm.isActive,
	            "aria-controls": "el-collapse-content-" + _vm.id,
	            "aria-describedby": "el-collapse-content-" + _vm.id
	          }
	        },
	        [
	          _c(
	            "div",
	            {
	              staticClass: "el-collapse-item__header",
	              class: {
	                focusing: _vm.focusing,
	                "is-active": _vm.isActive
	              },
	              attrs: {
	                role: "button",
	                id: "el-collapse-head-" + _vm.id,
	                tabindex: _vm.disabled ? undefined : 0
	              },
	              on: {
	                click: _vm.handleHeaderClick,
	                keyup: function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "space", 32, $event.key, [
	                      " ",
	                      "Spacebar"
	                    ]) &&
	                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
	                  ) {
	                    return null
	                  }
	                  $event.stopPropagation();
	                  return _vm.handleEnterClick($event)
	                },
	                focus: _vm.handleFocus,
	                blur: function($event) {
	                  _vm.focusing = false;
	                }
	              }
	            },
	            [
	              _vm._t("title", [_vm._v(_vm._s(_vm.title))]),
	              _c("i", {
	                staticClass: "el-collapse-item__arrow el-icon-arrow-right",
	                class: { "is-active": _vm.isActive }
	              })
	            ],
	            2
	          )
	        ]
	      ),
	      _c("el-collapse-transition", [
	        _c(
	          "div",
	          {
	            directives: [
	              {
	                name: "show",
	                rawName: "v-show",
	                value: _vm.isActive,
	                expression: "isActive"
	              }
	            ],
	            staticClass: "el-collapse-item__wrap",
	            attrs: {
	              role: "tabpanel",
	              "aria-hidden": !_vm.isActive,
	              "aria-labelledby": "el-collapse-head-" + _vm.id,
	              id: "el-collapse-content-" + _vm.id
	            }
	          },
	          [
	            _c(
	              "div",
	              { staticClass: "el-collapse-item__content" },
	              [_vm._t("default")],
	              2
	            )
	          ]
	        )
	      ])
	    ],
	    1
	  )
	};
	var collapse_itemvue_type_template_id_2d05faac_staticRenderFns = [];
	collapse_itemvue_type_template_id_2d05faac_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/collapse/src/collapse-item.vue?vue&type=template&id=2d05faac&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse-item.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var collapse_itemvue_type_script_lang_js_ = ({
	  name: 'ElCollapseItem',

	  componentName: 'ElCollapseItem',

	  mixins: [emitter_default.a],

	  components: { ElCollapseTransition: collapse_transition_default.a },

	  data: function data() {
	    return {
	      contentWrapStyle: {
	        height: 'auto',
	        display: 'block'
	      },
	      contentHeight: 0,
	      focusing: false,
	      isClick: false,
	      id: Object(util_["generateId"])()
	    };
	  },


	  inject: ['collapse'],

	  props: {
	    title: String,
	    name: {
	      type: [String, Number],
	      default: function _default() {
	        return this._uid;
	      }
	    },
	    disabled: Boolean
	  },

	  computed: {
	    isActive: function isActive() {
	      return this.collapse.activeNames.indexOf(this.name) > -1;
	    }
	  },

	  methods: {
	    handleFocus: function handleFocus() {
	      var _this = this;

	      setTimeout(function () {
	        if (!_this.isClick) {
	          _this.focusing = true;
	        } else {
	          _this.isClick = false;
	        }
	      }, 50);
	    },
	    handleHeaderClick: function handleHeaderClick() {
	      if (this.disabled) return;
	      this.dispatch('ElCollapse', 'item-click', this);
	      this.focusing = false;
	      this.isClick = true;
	    },
	    handleEnterClick: function handleEnterClick() {
	      this.dispatch('ElCollapse', 'item-click', this);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/collapse/src/collapse-item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_collapse_itemvue_type_script_lang_js_ = (collapse_itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/collapse/src/collapse-item.vue





	/* normalize component */

	var collapse_item_component = normalizeComponent(
	  src_collapse_itemvue_type_script_lang_js_,
	  collapse_itemvue_type_template_id_2d05faac_render,
	  collapse_itemvue_type_template_id_2d05faac_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	collapse_item_component.options.__file = "packages/collapse/src/collapse-item.vue";
	/* harmony default export */ var collapse_item = (collapse_item_component.exports);
	// CONCATENATED MODULE: ./packages/collapse-item/index.js


	/* istanbul ignore next */
	collapse_item.install = function (Vue) {
	  Vue.component(collapse_item.name, collapse_item);
	};

	/* harmony default export */ var packages_collapse_item = (collapse_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader/src/cascader.vue?vue&type=template&id=032537a6&
	var cascadervue_type_template_id_032537a6_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      directives: [
	        {
	          name: "clickoutside",
	          rawName: "v-clickoutside",
	          value: function() {
	            return _vm.toggleDropDownVisible(false)
	          },
	          expression: "() => toggleDropDownVisible(false)"
	        }
	      ],
	      ref: "reference",
	      class: [
	        "el-cascader",
	        _vm.realSize && "el-cascader--" + _vm.realSize,
	        { "is-disabled": _vm.isDisabled }
	      ],
	      on: {
	        mouseenter: function($event) {
	          _vm.inputHover = true;
	        },
	        mouseleave: function($event) {
	          _vm.inputHover = false;
	        },
	        click: function() {
	          return _vm.toggleDropDownVisible(_vm.readonly ? undefined : true)
	        },
	        keydown: _vm.handleKeyDown
	      }
	    },
	    [
	      _c(
	        "el-input",
	        {
	          ref: "input",
	          class: { "is-focus": _vm.dropDownVisible },
	          attrs: {
	            size: _vm.realSize,
	            placeholder: _vm.placeholder,
	            readonly: _vm.readonly,
	            disabled: _vm.isDisabled,
	            "validate-event": false
	          },
	          on: {
	            focus: _vm.handleFocus,
	            blur: _vm.handleBlur,
	            input: _vm.handleInput
	          },
	          model: {
	            value: _vm.multiple ? _vm.presentText : _vm.inputValue,
	            callback: function($$v) {
	              _vm.multiple ? _vm.presentText : (_vm.inputValue = $$v);
	            },
	            expression: "multiple ? presentText : inputValue"
	          }
	        },
	        [
	          _c("template", { slot: "suffix" }, [
	            _vm.clearBtnVisible
	              ? _c("i", {
	                  key: "clear",
	                  staticClass: "el-input__icon el-icon-circle-close",
	                  on: {
	                    click: function($event) {
	                      $event.stopPropagation();
	                      return _vm.handleClear($event)
	                    }
	                  }
	                })
	              : _c("i", {
	                  key: "arrow-down",
	                  class: [
	                    "el-input__icon",
	                    "el-icon-arrow-down",
	                    _vm.dropDownVisible && "is-reverse"
	                  ],
	                  on: {
	                    click: function($event) {
	                      $event.stopPropagation();
	                      _vm.toggleDropDownVisible();
	                    }
	                  }
	                })
	          ])
	        ],
	        2
	      ),
	      _vm.multiple
	        ? _c(
	            "div",
	            { staticClass: "el-cascader__tags" },
	            [
	              _vm._l(_vm.presentTags, function(tag) {
	                return _c(
	                  "el-tag",
	                  {
	                    key: tag.key,
	                    attrs: {
	                      type: "info",
	                      size: _vm.tagSize,
	                      hit: tag.hitState,
	                      closable: tag.closable,
	                      "disable-transitions": ""
	                    },
	                    on: {
	                      close: function($event) {
	                        _vm.deleteTag(tag);
	                      }
	                    }
	                  },
	                  [_c("span", [_vm._v(_vm._s(tag.text))])]
	                )
	              }),
	              _vm.filterable && !_vm.isDisabled
	                ? _c("input", {
	                    directives: [
	                      {
	                        name: "model",
	                        rawName: "v-model.trim",
	                        value: _vm.inputValue,
	                        expression: "inputValue",
	                        modifiers: { trim: true }
	                      }
	                    ],
	                    staticClass: "el-cascader__search-input",
	                    attrs: {
	                      type: "text",
	                      placeholder: _vm.presentTags.length ? "" : _vm.placeholder
	                    },
	                    domProps: { value: _vm.inputValue },
	                    on: {
	                      input: [
	                        function($event) {
	                          if ($event.target.composing) {
	                            return
	                          }
	                          _vm.inputValue = $event.target.value.trim();
	                        },
	                        function(e) {
	                          return _vm.handleInput(_vm.inputValue, e)
	                        }
	                      ],
	                      click: function($event) {
	                        $event.stopPropagation();
	                        _vm.toggleDropDownVisible(true);
	                      },
	                      keydown: function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k(
	                            $event.keyCode,
	                            "delete",
	                            [8, 46],
	                            $event.key,
	                            ["Backspace", "Delete", "Del"]
	                          )
	                        ) {
	                          return null
	                        }
	                        return _vm.handleDelete($event)
	                      },
	                      blur: function($event) {
	                        _vm.$forceUpdate();
	                      }
	                    }
	                  })
	                : _vm._e()
	            ],
	            2
	          )
	        : _vm._e(),
	      _c(
	        "transition",
	        {
	          attrs: { name: "el-zoom-in-top" },
	          on: { "after-leave": _vm.handleDropdownLeave }
	        },
	        [
	          _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: _vm.dropDownVisible,
	                  expression: "dropDownVisible"
	                }
	              ],
	              ref: "popper",
	              class: ["el-popper", "el-cascader__dropdown", _vm.popperClass]
	            },
	            [
	              _c("el-cascader-panel", {
	                directives: [
	                  {
	                    name: "show",
	                    rawName: "v-show",
	                    value: !_vm.filtering,
	                    expression: "!filtering"
	                  }
	                ],
	                ref: "panel",
	                attrs: {
	                  options: _vm.options,
	                  props: _vm.config,
	                  border: false,
	                  "render-label": _vm.$scopedSlots.default
	                },
	                on: {
	                  "expand-change": _vm.handleExpandChange,
	                  close: function($event) {
	                    _vm.toggleDropDownVisible(false);
	                  }
	                },
	                model: {
	                  value: _vm.checkedValue,
	                  callback: function($$v) {
	                    _vm.checkedValue = $$v;
	                  },
	                  expression: "checkedValue"
	                }
	              }),
	              _vm.filterable
	                ? _c(
	                    "el-scrollbar",
	                    {
	                      directives: [
	                        {
	                          name: "show",
	                          rawName: "v-show",
	                          value: _vm.filtering,
	                          expression: "filtering"
	                        }
	                      ],
	                      ref: "suggestionPanel",
	                      staticClass: "el-cascader__suggestion-panel",
	                      attrs: {
	                        tag: "ul",
	                        "view-class": "el-cascader__suggestion-list"
	                      },
	                      nativeOn: {
	                        keydown: function($event) {
	                          return _vm.handleSuggestionKeyDown($event)
	                        }
	                      }
	                    },
	                    [
	                      _vm.suggestions.length
	                        ? _vm._l(_vm.suggestions, function(item, index) {
	                            return _c(
	                              "li",
	                              {
	                                key: item.uid,
	                                class: [
	                                  "el-cascader__suggestion-item",
	                                  item.checked && "is-checked"
	                                ],
	                                attrs: { tabindex: -1 },
	                                on: {
	                                  click: function($event) {
	                                    _vm.handleSuggestionClick(index);
	                                  }
	                                }
	                              },
	                              [
	                                _c("span", [_vm._v(_vm._s(item.text))]),
	                                item.checked
	                                  ? _c("i", { staticClass: "el-icon-check" })
	                                  : _vm._e()
	                              ]
	                            )
	                          })
	                        : _vm._t("empty", [
	                            _c(
	                              "li",
	                              { staticClass: "el-cascader__empty-text" },
	                              [_vm._v(_vm._s(_vm.t("el.cascader.noMatch")))]
	                            )
	                          ])
	                    ],
	                    2
	                  )
	                : _vm._e()
	            ],
	            1
	          )
	        ]
	      )
	    ],
	    1
	  )
	};
	var cascadervue_type_template_id_032537a6_staticRenderFns = [];
	cascadervue_type_template_id_032537a6_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/cascader/src/cascader.vue?vue&type=template&id=032537a6&

	// EXTERNAL MODULE: external "element-ui/lib/cascader-panel"
	var cascader_panel_ = __webpack_require__(43);
	var cascader_panel_default = /*#__PURE__*/__webpack_require__.n(cascader_panel_);

	// EXTERNAL MODULE: external "element-ui/lib/utils/aria-utils"
	var aria_utils_ = __webpack_require__(35);
	var aria_utils_default = /*#__PURE__*/__webpack_require__.n(aria_utils_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader/src/cascader.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//


















	var KeyCode = aria_utils_default.a.keys;

	var MigratingProps = {
	  expandTrigger: {
	    newProp: 'expandTrigger',
	    type: String
	  },
	  changeOnSelect: {
	    newProp: 'checkStrictly',
	    type: Boolean
	  },
	  hoverThreshold: {
	    newProp: 'hoverThreshold',
	    type: Number
	  }
	};

	var PopperMixin = {
	  props: {
	    placement: {
	      type: String,
	      default: 'bottom-start'
	    },
	    appendToBody: vue_popper_default.a.props.appendToBody,
	    visibleArrow: {
	      type: Boolean,
	      default: true
	    },
	    arrowOffset: vue_popper_default.a.props.arrowOffset,
	    offset: vue_popper_default.a.props.offset,
	    boundariesPadding: vue_popper_default.a.props.boundariesPadding,
	    popperOptions: vue_popper_default.a.props.popperOptions,
	    transformOrigin: vue_popper_default.a.props.transformOrigin
	  },
	  methods: vue_popper_default.a.methods,
	  data: vue_popper_default.a.data,
	  beforeDestroy: vue_popper_default.a.beforeDestroy
	};

	var InputSizeMap = {
	  medium: 36,
	  small: 32,
	  mini: 28
	};

	/* harmony default export */ var cascadervue_type_script_lang_js_ = ({
	  name: 'ElCascader',

	  directives: { Clickoutside: clickoutside_default.a },

	  mixins: [PopperMixin, emitter_default.a, locale_default.a, migrating_default.a],

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  components: {
	    ElInput: input_default.a,
	    ElTag: tag_default.a,
	    ElScrollbar: scrollbar_default.a,
	    ElCascaderPanel: cascader_panel_default.a
	  },

	  props: {
	    value: {},
	    options: Array,
	    props: Object,
	    size: String,
	    placeholder: {
	      type: String,
	      default: function _default() {
	        return Object(lib_locale_["t"])('el.cascader.placeholder');
	      }
	    },
	    disabled: Boolean,
	    clearable: Boolean,
	    filterable: Boolean,
	    filterMethod: Function,
	    separator: {
	      type: String,
	      default: ' / '
	    },
	    showAllLevels: {
	      type: Boolean,
	      default: true
	    },
	    collapseTags: Boolean,
	    debounce: {
	      type: Number,
	      default: 300
	    },
	    beforeFilter: {
	      type: Function,
	      default: function _default() {
	        return function () {};
	      }
	    },
	    popperClass: String
	  },

	  data: function data() {
	    return {
	      dropDownVisible: false,
	      checkedValue: this.value,
	      inputHover: false,
	      inputValue: null,
	      presentText: null,
	      presentTags: [],
	      checkedNodes: [],
	      filtering: false,
	      suggestions: [],
	      inputInitialHeight: 0,
	      pressDeleteCount: 0
	    };
	  },


	  computed: {
	    realSize: function realSize() {
	      var _elFormItemSize = (this.elFormItem || {}).elFormItemSize;
	      return this.size || _elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    tagSize: function tagSize() {
	      return ['small', 'mini'].indexOf(this.realSize) > -1 ? 'mini' : 'small';
	    },
	    isDisabled: function isDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    },
	    config: function config() {
	      var config = this.props || {};
	      var $attrs = this.$attrs;


	      Object.keys(MigratingProps).forEach(function (oldProp) {
	        var _MigratingProps$oldPr = MigratingProps[oldProp],
	            newProp = _MigratingProps$oldPr.newProp,
	            type = _MigratingProps$oldPr.type;

	        var oldValue = $attrs[oldProp] || $attrs[Object(util_["kebabCase"])(oldProp)];
	        if (Object(shared_["isDef"])(oldProp) && !Object(shared_["isDef"])(config[newProp])) {
	          if (type === Boolean && oldValue === '') {
	            oldValue = true;
	          }
	          config[newProp] = oldValue;
	        }
	      });

	      return config;
	    },
	    multiple: function multiple() {
	      return this.config.multiple;
	    },
	    leafOnly: function leafOnly() {
	      return !this.config.checkStrictly;
	    },
	    readonly: function readonly() {
	      return !this.filterable || this.multiple;
	    },
	    clearBtnVisible: function clearBtnVisible() {
	      if (!this.clearable || this.isDisabled || this.filtering || !this.inputHover) {
	        return false;
	      }

	      return this.multiple ? !!this.checkedNodes.filter(function (node) {
	        return !node.isDisabled;
	      }).length : !!this.presentText;
	    },
	    panel: function panel() {
	      return this.$refs.panel;
	    }
	  },

	  watch: {
	    disabled: function disabled() {
	      this.computePresentContent();
	    },
	    value: function value(val) {
	      if (!Object(util_["isEqual"])(val, this.checkedValue)) {
	        this.checkedValue = val;
	        this.computePresentContent();
	      }
	    },
	    checkedValue: function checkedValue(val) {
	      var value = this.value,
	          dropDownVisible = this.dropDownVisible;
	      var _config = this.config,
	          checkStrictly = _config.checkStrictly,
	          multiple = _config.multiple;


	      if (!Object(util_["isEqual"])(val, value) || Object(types_["isUndefined"])(value)) {
	        this.computePresentContent();
	        // hide dropdown when single mode
	        if (!multiple && !checkStrictly && dropDownVisible) {
	          this.toggleDropDownVisible(false);
	        }

	        this.$emit('input', val);
	        this.$emit('change', val);
	        this.dispatch('ElFormItem', 'el.form.change', [val]);
	      }
	    },

	    options: {
	      handler: function handler() {
	        this.$nextTick(this.computePresentContent);
	      },
	      deep: true
	    },
	    presentText: function presentText(val) {
	      this.inputValue = val;
	    },
	    presentTags: function presentTags(val, oldVal) {
	      if (this.multiple && (val.length || oldVal.length)) {
	        this.$nextTick(this.updateStyle);
	      }
	    },
	    filtering: function filtering(val) {
	      this.$nextTick(this.updatePopper);
	    }
	  },

	  mounted: function mounted() {
	    var _this = this;

	    var input = this.$refs.input;

	    if (input && input.$el) {
	      this.inputInitialHeight = input.$el.offsetHeight || InputSizeMap[this.realSize] || 40;
	    }

	    if (!this.isEmptyValue(this.value)) {
	      this.computePresentContent();
	    }

	    this.filterHandler = debounce_default()(this.debounce, function () {
	      var inputValue = _this.inputValue;


	      if (!inputValue) {
	        _this.filtering = false;
	        return;
	      }

	      var before = _this.beforeFilter(inputValue);
	      if (before && before.then) {
	        before.then(_this.getSuggestions);
	      } else if (before !== false) {
	        _this.getSuggestions();
	      } else {
	        _this.filtering = false;
	      }
	    });

	    Object(resize_event_["addResizeListener"])(this.$el, this.updateStyle);
	  },
	  beforeDestroy: function beforeDestroy() {
	    Object(resize_event_["removeResizeListener"])(this.$el, this.updateStyle);
	  },


	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'expand-trigger': 'expand-trigger is removed, use `props.expandTrigger` instead.',
	          'change-on-select': 'change-on-select is removed, use `props.checkStrictly` instead.',
	          'hover-threshold': 'hover-threshold is removed, use `props.hoverThreshold` instead'
	        },
	        events: {
	          'active-item-change': 'active-item-change is renamed to expand-change'
	        }
	      };
	    },
	    toggleDropDownVisible: function toggleDropDownVisible(visible) {
	      var _this2 = this;

	      if (this.isDisabled) return;

	      var dropDownVisible = this.dropDownVisible;
	      var input = this.$refs.input;

	      visible = Object(shared_["isDef"])(visible) ? visible : !dropDownVisible;
	      if (visible !== dropDownVisible) {
	        this.dropDownVisible = visible;
	        if (visible) {
	          this.$nextTick(function () {
	            _this2.updatePopper();
	            _this2.panel.scrollIntoView();
	          });
	        }
	        input.$refs.input.setAttribute('aria-expanded', visible);
	        this.$emit('visible-change', visible);
	      }
	    },
	    handleDropdownLeave: function handleDropdownLeave() {
	      this.filtering = false;
	      this.inputValue = this.presentText;
	      this.doDestroy();
	    },
	    handleKeyDown: function handleKeyDown(event) {
	      switch (event.keyCode) {
	        case KeyCode.enter:
	          this.toggleDropDownVisible();
	          break;
	        case KeyCode.down:
	          this.toggleDropDownVisible(true);
	          this.focusFirstNode();
	          event.preventDefault();
	          break;
	        case KeyCode.esc:
	        case KeyCode.tab:
	          this.toggleDropDownVisible(false);
	          break;
	      }
	    },
	    handleFocus: function handleFocus(e) {
	      this.$emit('focus', e);
	    },
	    handleBlur: function handleBlur(e) {
	      this.$emit('blur', e);
	    },
	    handleInput: function handleInput(val, event) {
	      !this.dropDownVisible && this.toggleDropDownVisible(true);

	      if (event && event.isComposing) return;
	      if (val) {
	        this.filterHandler();
	      } else {
	        this.filtering = false;
	      }
	    },
	    handleClear: function handleClear() {
	      this.presentText = '';
	      this.panel.clearCheckedNodes();
	    },
	    handleExpandChange: function handleExpandChange(value) {
	      this.$nextTick(this.updatePopper.bind(this));
	      this.$emit('expand-change', value);
	      this.$emit('active-item-change', value); // Deprecated
	    },
	    focusFirstNode: function focusFirstNode() {
	      var _this3 = this;

	      this.$nextTick(function () {
	        var filtering = _this3.filtering;
	        var _$refs = _this3.$refs,
	            popper = _$refs.popper,
	            suggestionPanel = _$refs.suggestionPanel;

	        var firstNode = null;

	        if (filtering && suggestionPanel) {
	          firstNode = suggestionPanel.$el.querySelector('.el-cascader__suggestion-item');
	        } else {
	          var firstMenu = popper.querySelector('.el-cascader-menu');
	          firstNode = firstMenu.querySelector('.el-cascader-node[tabindex="-1"]');
	        }

	        if (firstNode) {
	          firstNode.focus();
	          !filtering && firstNode.click();
	        }
	      });
	    },
	    computePresentContent: function computePresentContent() {
	      var _this4 = this;

	      // nextTick is required, because checked nodes may not change right now
	      this.$nextTick(function () {
	        if (_this4.config.multiple) {
	          _this4.computePresentTags();
	          _this4.presentText = _this4.presentTags.length ? ' ' : null;
	        } else {
	          _this4.computePresentText();
	        }
	      });
	    },
	    isEmptyValue: function isEmptyValue(val) {
	      var multiple = this.multiple;
	      var emitPath = this.panel.config.emitPath;

	      if (multiple || emitPath) {
	        return Object(util_["isEmpty"])(val);
	      }
	      return false;
	    },
	    computePresentText: function computePresentText() {
	      var checkedValue = this.checkedValue,
	          config = this.config;

	      if (!this.isEmptyValue(checkedValue)) {
	        var node = this.panel.getNodeByValue(checkedValue);
	        if (node && (config.checkStrictly || node.isLeaf)) {
	          this.presentText = node.getText(this.showAllLevels, this.separator);
	          return;
	        }
	      }
	      this.presentText = null;
	    },
	    computePresentTags: function computePresentTags() {
	      var isDisabled = this.isDisabled,
	          leafOnly = this.leafOnly,
	          showAllLevels = this.showAllLevels,
	          separator = this.separator,
	          collapseTags = this.collapseTags;

	      var checkedNodes = this.getCheckedNodes(leafOnly);
	      var tags = [];

	      var genTag = function genTag(node) {
	        return {
	          node: node,
	          key: node.uid,
	          text: node.getText(showAllLevels, separator),
	          hitState: false,
	          closable: !isDisabled && !node.isDisabled
	        };
	      };

	      if (checkedNodes.length) {
	        var first = checkedNodes[0],
	            rest = checkedNodes.slice(1);

	        var restCount = rest.length;
	        tags.push(genTag(first));

	        if (restCount) {
	          if (collapseTags) {
	            tags.push({
	              key: -1,
	              text: '+ ' + restCount,
	              closable: false
	            });
	          } else {
	            rest.forEach(function (node) {
	              return tags.push(genTag(node));
	            });
	          }
	        }
	      }

	      this.checkedNodes = checkedNodes;
	      this.presentTags = tags;
	    },
	    getSuggestions: function getSuggestions() {
	      var _this5 = this;

	      var filterMethod = this.filterMethod;


	      if (!Object(types_["isFunction"])(filterMethod)) {
	        filterMethod = function filterMethod(node, keyword) {
	          return node.text.includes(keyword);
	        };
	      }

	      var suggestions = this.panel.getFlattedNodes(this.leafOnly).filter(function (node) {
	        if (node.isDisabled) return false;
	        node.text = node.getText(_this5.showAllLevels, _this5.separator) || '';
	        return filterMethod(node, _this5.inputValue);
	      });

	      if (this.multiple) {
	        this.presentTags.forEach(function (tag) {
	          tag.hitState = false;
	        });
	      } else {
	        suggestions.forEach(function (node) {
	          node.checked = Object(util_["isEqual"])(_this5.checkedValue, node.getValueByOption());
	        });
	      }

	      this.filtering = true;
	      this.suggestions = suggestions;
	      this.$nextTick(this.updatePopper);
	    },
	    handleSuggestionKeyDown: function handleSuggestionKeyDown(event) {
	      var keyCode = event.keyCode,
	          target = event.target;

	      switch (keyCode) {
	        case KeyCode.enter:
	          target.click();
	          break;
	        case KeyCode.up:
	          var prev = target.previousElementSibling;
	          prev && prev.focus();
	          break;
	        case KeyCode.down:
	          var next = target.nextElementSibling;
	          next && next.focus();
	          break;
	        case KeyCode.esc:
	        case KeyCode.tab:
	          this.toggleDropDownVisible(false);
	          break;
	      }
	    },
	    handleDelete: function handleDelete() {
	      var inputValue = this.inputValue,
	          pressDeleteCount = this.pressDeleteCount,
	          presentTags = this.presentTags;

	      var lastIndex = presentTags.length - 1;
	      var lastTag = presentTags[lastIndex];
	      this.pressDeleteCount = inputValue ? 0 : pressDeleteCount + 1;

	      if (!lastTag) return;

	      if (this.pressDeleteCount) {
	        if (lastTag.hitState) {
	          this.deleteTag(lastTag);
	        } else {
	          lastTag.hitState = true;
	        }
	      }
	    },
	    handleSuggestionClick: function handleSuggestionClick(index) {
	      var multiple = this.multiple;

	      var targetNode = this.suggestions[index];

	      if (multiple) {
	        var checked = targetNode.checked;

	        targetNode.doCheck(!checked);
	        this.panel.calculateMultiCheckedValue();
	      } else {
	        this.checkedValue = targetNode.getValueByOption();
	        this.toggleDropDownVisible(false);
	      }
	    },
	    deleteTag: function deleteTag(tag) {
	      var checkedValue = this.checkedValue;

	      var current = tag.node.getValueByOption();
	      var val = checkedValue.find(function (n) {
	        return Object(util_["isEqual"])(n, current);
	      });
	      this.checkedValue = checkedValue.filter(function (n) {
	        return !Object(util_["isEqual"])(n, current);
	      });
	      this.$emit('remove-tag', val);
	    },
	    updateStyle: function updateStyle() {
	      var $el = this.$el,
	          inputInitialHeight = this.inputInitialHeight;

	      if (this.$isServer || !$el) return;

	      var suggestionPanel = this.$refs.suggestionPanel;

	      var inputInner = $el.querySelector('.el-input__inner');

	      if (!inputInner) return;

	      var tags = $el.querySelector('.el-cascader__tags');
	      var suggestionPanelEl = null;

	      if (suggestionPanel && (suggestionPanelEl = suggestionPanel.$el)) {
	        var suggestionList = suggestionPanelEl.querySelector('.el-cascader__suggestion-list');
	        suggestionList.style.minWidth = inputInner.offsetWidth + 'px';
	      }

	      if (tags) {
	        var offsetHeight = Math.round(tags.getBoundingClientRect().height);
	        var height = Math.max(offsetHeight + 6, inputInitialHeight) + 'px';
	        inputInner.style.height = height;
	        if (this.dropDownVisible) {
	          this.updatePopper();
	        }
	      }
	    },


	    /**
	     * public methods
	    */
	    getCheckedNodes: function getCheckedNodes(leafOnly) {
	      return this.panel.getCheckedNodes(leafOnly);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/cascader/src/cascader.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_cascadervue_type_script_lang_js_ = (cascadervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/cascader/src/cascader.vue





	/* normalize component */

	var cascader_component = normalizeComponent(
	  src_cascadervue_type_script_lang_js_,
	  cascadervue_type_template_id_032537a6_render,
	  cascadervue_type_template_id_032537a6_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	cascader_component.options.__file = "packages/cascader/src/cascader.vue";
	/* harmony default export */ var cascader = (cascader_component.exports);
	// CONCATENATED MODULE: ./packages/cascader/index.js


	/* istanbul ignore next */
	cascader.install = function (Vue) {
	  Vue.component(cascader.name, cascader);
	};

	/* harmony default export */ var packages_cascader = (cascader);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=template&id=55c8ade7&
	var mainvue_type_template_id_55c8ade7_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      directives: [
	        {
	          name: "clickoutside",
	          rawName: "v-clickoutside",
	          value: _vm.hide,
	          expression: "hide"
	        }
	      ],
	      class: [
	        "el-color-picker",
	        _vm.colorDisabled ? "is-disabled" : "",
	        _vm.colorSize ? "el-color-picker--" + _vm.colorSize : ""
	      ]
	    },
	    [
	      _vm.colorDisabled
	        ? _c("div", { staticClass: "el-color-picker__mask" })
	        : _vm._e(),
	      _c(
	        "div",
	        {
	          staticClass: "el-color-picker__trigger",
	          on: { click: _vm.handleTrigger }
	        },
	        [
	          _c(
	            "span",
	            {
	              staticClass: "el-color-picker__color",
	              class: { "is-alpha": _vm.showAlpha }
	            },
	            [
	              _c("span", {
	                staticClass: "el-color-picker__color-inner",
	                style: {
	                  backgroundColor: _vm.displayedColor
	                }
	              }),
	              !_vm.value && !_vm.showPanelColor
	                ? _c("span", {
	                    staticClass: "el-color-picker__empty el-icon-close"
	                  })
	                : _vm._e()
	            ]
	          ),
	          _c("span", {
	            directives: [
	              {
	                name: "show",
	                rawName: "v-show",
	                value: _vm.value || _vm.showPanelColor,
	                expression: "value || showPanelColor"
	              }
	            ],
	            staticClass: "el-color-picker__icon el-icon-arrow-down"
	          })
	        ]
	      ),
	      _c("picker-dropdown", {
	        ref: "dropdown",
	        class: ["el-color-picker__panel", _vm.popperClass || ""],
	        attrs: {
	          color: _vm.color,
	          "show-alpha": _vm.showAlpha,
	          predefine: _vm.predefine
	        },
	        on: { pick: _vm.confirmValue, clear: _vm.clearValue },
	        model: {
	          value: _vm.showPicker,
	          callback: function($$v) {
	            _vm.showPicker = $$v;
	          },
	          expression: "showPicker"
	        }
	      })
	    ],
	    1
	  )
	};
	var mainvue_type_template_id_55c8ade7_staticRenderFns = [];
	mainvue_type_template_id_55c8ade7_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=template&id=55c8ade7&

	// CONCATENATED MODULE: ./packages/color-picker/src/color.js
	var color_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function color_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var hsv2hsl = function hsv2hsl(hue, sat, val) {
	  return [hue, sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue) || 0, hue / 2];
	};

	// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
	// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
	var isOnePointZero = function isOnePointZero(n) {
	  return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;
	};

	var isPercentage = function isPercentage(n) {
	  return typeof n === 'string' && n.indexOf('%') !== -1;
	};

	// Take input from [0, n] and return it as [0, 1]
	var bound01 = function bound01(value, max) {
	  if (isOnePointZero(value)) value = '100%';

	  var processPercent = isPercentage(value);
	  value = Math.min(max, Math.max(0, parseFloat(value)));

	  // Automatically convert percentage into number
	  if (processPercent) {
	    value = parseInt(value * max, 10) / 100;
	  }

	  // Handle floating point rounding errors
	  if (Math.abs(value - max) < 0.000001) {
	    return 1;
	  }

	  // Convert into [0, 1] range if it isn't already
	  return value % max / parseFloat(max);
	};

	var INT_HEX_MAP = { 10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F' };

	var toHex = function toHex(_ref) {
	  var r = _ref.r,
	      g = _ref.g,
	      b = _ref.b;

	  var hexOne = function hexOne(value) {
	    value = Math.min(Math.round(value), 255);
	    var high = Math.floor(value / 16);
	    var low = value % 16;
	    return '' + (INT_HEX_MAP[high] || high) + (INT_HEX_MAP[low] || low);
	  };

	  if (isNaN(r) || isNaN(g) || isNaN(b)) return '';

	  return '#' + hexOne(r) + hexOne(g) + hexOne(b);
	};

	var HEX_INT_MAP = { A: 10, B: 11, C: 12, D: 13, E: 14, F: 15 };

	var parseHexChannel = function parseHexChannel(hex) {
	  if (hex.length === 2) {
	    return (HEX_INT_MAP[hex[0].toUpperCase()] || +hex[0]) * 16 + (HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1]);
	  }

	  return HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1];
	};

	var hsl2hsv = function hsl2hsv(hue, sat, light) {
	  sat = sat / 100;
	  light = light / 100;
	  var smin = sat;
	  var lmin = Math.max(light, 0.01);
	  var sv = void 0;
	  var v = void 0;

	  light *= 2;
	  sat *= light <= 1 ? light : 2 - light;
	  smin *= lmin <= 1 ? lmin : 2 - lmin;
	  v = (light + sat) / 2;
	  sv = light === 0 ? 2 * smin / (lmin + smin) : 2 * sat / (light + sat);

	  return {
	    h: hue,
	    s: sv * 100,
	    v: v * 100
	  };
	};

	// `rgbToHsv`
	// Converts an RGB color value to HSV
	// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
	// *Returns:* { h, s, v } in [0,1]
	var rgb2hsv = function rgb2hsv(r, g, b) {
	  r = bound01(r, 255);
	  g = bound01(g, 255);
	  b = bound01(b, 255);

	  var max = Math.max(r, g, b);
	  var min = Math.min(r, g, b);
	  var h = void 0,
	      s = void 0;
	  var v = max;

	  var d = max - min;
	  s = max === 0 ? 0 : d / max;

	  if (max === min) {
	    h = 0; // achromatic
	  } else {
	    switch (max) {
	      case r:
	        h = (g - b) / d + (g < b ? 6 : 0);
	        break;
	      case g:
	        h = (b - r) / d + 2;
	        break;
	      case b:
	        h = (r - g) / d + 4;
	        break;
	    }
	    h /= 6;
	  }

	  return { h: h * 360, s: s * 100, v: v * 100 };
	};

	// `hsvToRgb`
	// Converts an HSV color value to RGB.
	// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
	// *Returns:* { r, g, b } in the set [0, 255]
	var hsv2rgb = function hsv2rgb(h, s, v) {
	  h = bound01(h, 360) * 6;
	  s = bound01(s, 100);
	  v = bound01(v, 100);

	  var i = Math.floor(h);
	  var f = h - i;
	  var p = v * (1 - s);
	  var q = v * (1 - f * s);
	  var t = v * (1 - (1 - f) * s);
	  var mod = i % 6;
	  var r = [v, q, p, p, t, v][mod];
	  var g = [t, v, v, q, p, p][mod];
	  var b = [p, p, t, v, v, q][mod];

	  return {
	    r: Math.round(r * 255),
	    g: Math.round(g * 255),
	    b: Math.round(b * 255)
	  };
	};

	var Color = function () {
	  function Color(options) {
	    color_classCallCheck(this, Color);

	    this._hue = 0;
	    this._saturation = 100;
	    this._value = 100;
	    this._alpha = 100;

	    this.enableAlpha = false;
	    this.format = 'hex';
	    this.value = '';

	    options = options || {};

	    for (var option in options) {
	      if (options.hasOwnProperty(option)) {
	        this[option] = options[option];
	      }
	    }

	    this.doOnChange();
	  }

	  Color.prototype.set = function set(prop, value) {
	    if (arguments.length === 1 && (typeof prop === 'undefined' ? 'undefined' : color_typeof(prop)) === 'object') {
	      for (var p in prop) {
	        if (prop.hasOwnProperty(p)) {
	          this.set(p, prop[p]);
	        }
	      }

	      return;
	    }

	    this['_' + prop] = value;
	    this.doOnChange();
	  };

	  Color.prototype.get = function get(prop) {
	    return this['_' + prop];
	  };

	  Color.prototype.toRgb = function toRgb() {
	    return hsv2rgb(this._hue, this._saturation, this._value);
	  };

	  Color.prototype.fromString = function fromString(value) {
	    var _this = this;

	    if (!value) {
	      this._hue = 0;
	      this._saturation = 100;
	      this._value = 100;

	      this.doOnChange();
	      return;
	    }

	    var fromHSV = function fromHSV(h, s, v) {
	      _this._hue = Math.max(0, Math.min(360, h));
	      _this._saturation = Math.max(0, Math.min(100, s));
	      _this._value = Math.max(0, Math.min(100, v));

	      _this.doOnChange();
	    };

	    if (value.indexOf('hsl') !== -1) {
	      var parts = value.replace(/hsla|hsl|\(|\)/gm, '').split(/\s|,/g).filter(function (val) {
	        return val !== '';
	      }).map(function (val, index) {
	        return index > 2 ? parseFloat(val) : parseInt(val, 10);
	      });

	      if (parts.length === 4) {
	        this._alpha = Math.floor(parseFloat(parts[3]) * 100);
	      } else if (parts.length === 3) {
	        this._alpha = 100;
	      }
	      if (parts.length >= 3) {
	        var _hsl2hsv = hsl2hsv(parts[0], parts[1], parts[2]),
	            h = _hsl2hsv.h,
	            s = _hsl2hsv.s,
	            v = _hsl2hsv.v;

	        fromHSV(h, s, v);
	      }
	    } else if (value.indexOf('hsv') !== -1) {
	      var _parts = value.replace(/hsva|hsv|\(|\)/gm, '').split(/\s|,/g).filter(function (val) {
	        return val !== '';
	      }).map(function (val, index) {
	        return index > 2 ? parseFloat(val) : parseInt(val, 10);
	      });

	      if (_parts.length === 4) {
	        this._alpha = Math.floor(parseFloat(_parts[3]) * 100);
	      } else if (_parts.length === 3) {
	        this._alpha = 100;
	      }
	      if (_parts.length >= 3) {
	        fromHSV(_parts[0], _parts[1], _parts[2]);
	      }
	    } else if (value.indexOf('rgb') !== -1) {
	      var _parts2 = value.replace(/rgba|rgb|\(|\)/gm, '').split(/\s|,/g).filter(function (val) {
	        return val !== '';
	      }).map(function (val, index) {
	        return index > 2 ? parseFloat(val) : parseInt(val, 10);
	      });

	      if (_parts2.length === 4) {
	        this._alpha = Math.floor(parseFloat(_parts2[3]) * 100);
	      } else if (_parts2.length === 3) {
	        this._alpha = 100;
	      }
	      if (_parts2.length >= 3) {
	        var _rgb2hsv = rgb2hsv(_parts2[0], _parts2[1], _parts2[2]),
	            _h = _rgb2hsv.h,
	            _s = _rgb2hsv.s,
	            _v = _rgb2hsv.v;

	        fromHSV(_h, _s, _v);
	      }
	    } else if (value.indexOf('#') !== -1) {
	      var hex = value.replace('#', '').trim();
	      if (!/^(?:[0-9a-fA-F]{3}){1,2}|[0-9a-fA-F]{8}$/.test(hex)) return;
	      var r = void 0,
	          g = void 0,
	          b = void 0;

	      if (hex.length === 3) {
	        r = parseHexChannel(hex[0] + hex[0]);
	        g = parseHexChannel(hex[1] + hex[1]);
	        b = parseHexChannel(hex[2] + hex[2]);
	      } else if (hex.length === 6 || hex.length === 8) {
	        r = parseHexChannel(hex.substring(0, 2));
	        g = parseHexChannel(hex.substring(2, 4));
	        b = parseHexChannel(hex.substring(4, 6));
	      }

	      if (hex.length === 8) {
	        this._alpha = Math.floor(parseHexChannel(hex.substring(6)) / 255 * 100);
	      } else if (hex.length === 3 || hex.length === 6) {
	        this._alpha = 100;
	      }

	      var _rgb2hsv2 = rgb2hsv(r, g, b),
	          _h2 = _rgb2hsv2.h,
	          _s2 = _rgb2hsv2.s,
	          _v2 = _rgb2hsv2.v;

	      fromHSV(_h2, _s2, _v2);
	    }
	  };

	  Color.prototype.compare = function compare(color) {
	    return Math.abs(color._hue - this._hue) < 2 && Math.abs(color._saturation - this._saturation) < 1 && Math.abs(color._value - this._value) < 1 && Math.abs(color._alpha - this._alpha) < 1;
	  };

	  Color.prototype.doOnChange = function doOnChange() {
	    var _hue = this._hue,
	        _saturation = this._saturation,
	        _value = this._value,
	        _alpha = this._alpha,
	        format = this.format;


	    if (this.enableAlpha) {
	      switch (format) {
	        case 'hsl':
	          var hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);
	          this.value = 'hsla(' + _hue + ', ' + Math.round(hsl[1] * 100) + '%, ' + Math.round(hsl[2] * 100) + '%, ' + _alpha / 100 + ')';
	          break;
	        case 'hsv':
	          this.value = 'hsva(' + _hue + ', ' + Math.round(_saturation) + '%, ' + Math.round(_value) + '%, ' + _alpha / 100 + ')';
	          break;
	        default:
	          var _hsv2rgb = hsv2rgb(_hue, _saturation, _value),
	              r = _hsv2rgb.r,
	              g = _hsv2rgb.g,
	              b = _hsv2rgb.b;

	          this.value = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + _alpha / 100 + ')';
	      }
	    } else {
	      switch (format) {
	        case 'hsl':
	          var _hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);
	          this.value = 'hsl(' + _hue + ', ' + Math.round(_hsl[1] * 100) + '%, ' + Math.round(_hsl[2] * 100) + '%)';
	          break;
	        case 'hsv':
	          this.value = 'hsv(' + _hue + ', ' + Math.round(_saturation) + '%, ' + Math.round(_value) + '%)';
	          break;
	        case 'rgb':
	          var _hsv2rgb2 = hsv2rgb(_hue, _saturation, _value),
	              _r = _hsv2rgb2.r,
	              _g = _hsv2rgb2.g,
	              _b = _hsv2rgb2.b;

	          this.value = 'rgb(' + _r + ', ' + _g + ', ' + _b + ')';
	          break;
	        default:
	          this.value = toHex(hsv2rgb(_hue, _saturation, _value));
	      }
	    }
	  };

	  return Color;
	}();

	/* harmony default export */ var src_color = (Color);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=06601625&
	var picker_dropdownvue_type_template_id_06601625_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    { attrs: { name: "el-zoom-in-top" }, on: { "after-leave": _vm.doDestroy } },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.showPopper,
	              expression: "showPopper"
	            }
	          ],
	          staticClass: "el-color-dropdown"
	        },
	        [
	          _c(
	            "div",
	            { staticClass: "el-color-dropdown__main-wrapper" },
	            [
	              _c("hue-slider", {
	                ref: "hue",
	                staticStyle: { float: "right" },
	                attrs: { color: _vm.color, vertical: "" }
	              }),
	              _c("sv-panel", { ref: "sl", attrs: { color: _vm.color } })
	            ],
	            1
	          ),
	          _vm.showAlpha
	            ? _c("alpha-slider", { ref: "alpha", attrs: { color: _vm.color } })
	            : _vm._e(),
	          _vm.predefine
	            ? _c("predefine", {
	                attrs: { color: _vm.color, colors: _vm.predefine }
	              })
	            : _vm._e(),
	          _c(
	            "div",
	            { staticClass: "el-color-dropdown__btns" },
	            [
	              _c(
	                "span",
	                { staticClass: "el-color-dropdown__value" },
	                [
	                  _c("el-input", {
	                    attrs: { "validate-event": false, size: "mini" },
	                    on: { blur: _vm.handleConfirm },
	                    nativeOn: {
	                      keyup: function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k(
	                            $event.keyCode,
	                            "enter",
	                            13,
	                            $event.key,
	                            "Enter"
	                          )
	                        ) {
	                          return null
	                        }
	                        return _vm.handleConfirm($event)
	                      }
	                    },
	                    model: {
	                      value: _vm.customInput,
	                      callback: function($$v) {
	                        _vm.customInput = $$v;
	                      },
	                      expression: "customInput"
	                    }
	                  })
	                ],
	                1
	              ),
	              _c(
	                "el-button",
	                {
	                  staticClass: "el-color-dropdown__link-btn",
	                  attrs: { size: "mini", type: "text" },
	                  on: {
	                    click: function($event) {
	                      _vm.$emit("clear");
	                    }
	                  }
	                },
	                [
	                  _vm._v(
	                    "\n        " +
	                      _vm._s(_vm.t("el.colorpicker.clear")) +
	                      "\n      "
	                  )
	                ]
	              ),
	              _c(
	                "el-button",
	                {
	                  staticClass: "el-color-dropdown__btn",
	                  attrs: { plain: "", size: "mini" },
	                  on: { click: _vm.confirmValue }
	                },
	                [
	                  _vm._v(
	                    "\n        " +
	                      _vm._s(_vm.t("el.colorpicker.confirm")) +
	                      "\n      "
	                  )
	                ]
	              )
	            ],
	            1
	          )
	        ],
	        1
	      )
	    ]
	  )
	};
	var picker_dropdownvue_type_template_id_06601625_staticRenderFns = [];
	picker_dropdownvue_type_template_id_06601625_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=06601625&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=d8583596&
	var sv_panelvue_type_template_id_d8583596_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-color-svpanel",
	      style: {
	        backgroundColor: _vm.background
	      }
	    },
	    [
	      _c("div", { staticClass: "el-color-svpanel__white" }),
	      _c("div", { staticClass: "el-color-svpanel__black" }),
	      _c(
	        "div",
	        {
	          staticClass: "el-color-svpanel__cursor",
	          style: {
	            top: _vm.cursorTop + "px",
	            left: _vm.cursorLeft + "px"
	          }
	        },
	        [_c("div")]
	      )
	    ]
	  )
	};
	var sv_panelvue_type_template_id_d8583596_staticRenderFns = [];
	sv_panelvue_type_template_id_d8583596_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=d8583596&

	// CONCATENATED MODULE: ./packages/color-picker/src/draggable.js

	var isDragging = false;

	/* harmony default export */ var draggable = (function (element, options) {
	  if (external_vue_default.a.prototype.$isServer) return;
	  var moveFn = function moveFn(event) {
	    if (options.drag) {
	      options.drag(event);
	    }
	  };
	  var upFn = function upFn(event) {
	    document.removeEventListener('mousemove', moveFn);
	    document.removeEventListener('mouseup', upFn);
	    document.onselectstart = null;
	    document.ondragstart = null;

	    isDragging = false;

	    if (options.end) {
	      options.end(event);
	    }
	  };
	  element.addEventListener('mousedown', function (event) {
	    if (isDragging) return;
	    document.onselectstart = function () {
	      return false;
	    };
	    document.ondragstart = function () {
	      return false;
	    };

	    document.addEventListener('mousemove', moveFn);
	    document.addEventListener('mouseup', upFn);
	    isDragging = true;

	    if (options.start) {
	      options.start(event);
	    }
	  });
	});
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var sv_panelvue_type_script_lang_js_ = ({
	  name: 'el-sl-panel',

	  props: {
	    color: {
	      required: true
	    }
	  },

	  computed: {
	    colorValue: function colorValue() {
	      var hue = this.color.get('hue');
	      var value = this.color.get('value');
	      return { hue: hue, value: value };
	    }
	  },

	  watch: {
	    colorValue: function colorValue() {
	      this.update();
	    }
	  },

	  methods: {
	    update: function update() {
	      var saturation = this.color.get('saturation');
	      var value = this.color.get('value');

	      var el = this.$el;
	      var width = el.clientWidth,
	          height = el.clientHeight;


	      this.cursorLeft = saturation * width / 100;
	      this.cursorTop = (100 - value) * height / 100;

	      this.background = 'hsl(' + this.color.get('hue') + ', 100%, 50%)';
	    },
	    handleDrag: function handleDrag(event) {
	      var el = this.$el;
	      var rect = el.getBoundingClientRect();

	      var left = event.clientX - rect.left;
	      var top = event.clientY - rect.top;
	      left = Math.max(0, left);
	      left = Math.min(left, rect.width);

	      top = Math.max(0, top);
	      top = Math.min(top, rect.height);

	      this.cursorLeft = left;
	      this.cursorTop = top;
	      this.color.set({
	        saturation: left / rect.width * 100,
	        value: 100 - top / rect.height * 100
	      });
	    }
	  },

	  mounted: function mounted() {
	    var _this = this;

	    draggable(this.$el, {
	      drag: function drag(event) {
	        _this.handleDrag(event);
	      },
	      end: function end(event) {
	        _this.handleDrag(event);
	      }
	    });

	    this.update();
	  },
	  data: function data() {
	    return {
	      cursorTop: 0,
	      cursorLeft: 0,
	      background: 'hsl(0, 100%, 50%)'
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_sv_panelvue_type_script_lang_js_ = (sv_panelvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue





	/* normalize component */

	var sv_panel_component = normalizeComponent(
	  components_sv_panelvue_type_script_lang_js_,
	  sv_panelvue_type_template_id_d8583596_render,
	  sv_panelvue_type_template_id_d8583596_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	sv_panel_component.options.__file = "packages/color-picker/src/components/sv-panel.vue";
	/* harmony default export */ var sv_panel = (sv_panel_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=5cdc43b1&
	var hue_slidervue_type_template_id_5cdc43b1_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-color-hue-slider",
	      class: { "is-vertical": _vm.vertical }
	    },
	    [
	      _c("div", {
	        ref: "bar",
	        staticClass: "el-color-hue-slider__bar",
	        on: { click: _vm.handleClick }
	      }),
	      _c("div", {
	        ref: "thumb",
	        staticClass: "el-color-hue-slider__thumb",
	        style: {
	          left: _vm.thumbLeft + "px",
	          top: _vm.thumbTop + "px"
	        }
	      })
	    ]
	  )
	};
	var hue_slidervue_type_template_id_5cdc43b1_staticRenderFns = [];
	hue_slidervue_type_template_id_5cdc43b1_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=5cdc43b1&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var hue_slidervue_type_script_lang_js_ = ({
	  name: 'el-color-hue-slider',

	  props: {
	    color: {
	      required: true
	    },

	    vertical: Boolean
	  },

	  data: function data() {
	    return {
	      thumbLeft: 0,
	      thumbTop: 0
	    };
	  },


	  computed: {
	    hueValue: function hueValue() {
	      var hue = this.color.get('hue');
	      return hue;
	    }
	  },

	  watch: {
	    hueValue: function hueValue() {
	      this.update();
	    }
	  },

	  methods: {
	    handleClick: function handleClick(event) {
	      var thumb = this.$refs.thumb;
	      var target = event.target;

	      if (target !== thumb) {
	        this.handleDrag(event);
	      }
	    },
	    handleDrag: function handleDrag(event) {
	      var rect = this.$el.getBoundingClientRect();
	      var thumb = this.$refs.thumb;

	      var hue = void 0;

	      if (!this.vertical) {
	        var left = event.clientX - rect.left;
	        left = Math.min(left, rect.width - thumb.offsetWidth / 2);
	        left = Math.max(thumb.offsetWidth / 2, left);

	        hue = Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 360);
	      } else {
	        var top = event.clientY - rect.top;
	        top = Math.min(top, rect.height - thumb.offsetHeight / 2);
	        top = Math.max(thumb.offsetHeight / 2, top);

	        hue = Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 360);
	      }

	      this.color.set('hue', hue);
	    },
	    getThumbLeft: function getThumbLeft() {
	      if (this.vertical) return 0;
	      var el = this.$el;
	      var hue = this.color.get('hue');

	      if (!el) return 0;
	      var thumb = this.$refs.thumb;
	      return Math.round(hue * (el.offsetWidth - thumb.offsetWidth / 2) / 360);
	    },
	    getThumbTop: function getThumbTop() {
	      if (!this.vertical) return 0;
	      var el = this.$el;
	      var hue = this.color.get('hue');

	      if (!el) return 0;
	      var thumb = this.$refs.thumb;
	      return Math.round(hue * (el.offsetHeight - thumb.offsetHeight / 2) / 360);
	    },
	    update: function update() {
	      this.thumbLeft = this.getThumbLeft();
	      this.thumbTop = this.getThumbTop();
	    }
	  },

	  mounted: function mounted() {
	    var _this = this;

	    var _$refs = this.$refs,
	        bar = _$refs.bar,
	        thumb = _$refs.thumb;


	    var dragConfig = {
	      drag: function drag(event) {
	        _this.handleDrag(event);
	      },
	      end: function end(event) {
	        _this.handleDrag(event);
	      }
	    };

	    draggable(bar, dragConfig);
	    draggable(thumb, dragConfig);
	    this.update();
	  }
	});
	// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_hue_slidervue_type_script_lang_js_ = (hue_slidervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue





	/* normalize component */

	var hue_slider_component = normalizeComponent(
	  components_hue_slidervue_type_script_lang_js_,
	  hue_slidervue_type_template_id_5cdc43b1_render,
	  hue_slidervue_type_template_id_5cdc43b1_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	hue_slider_component.options.__file = "packages/color-picker/src/components/hue-slider.vue";
	/* harmony default export */ var hue_slider = (hue_slider_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=068c66cb&
	var alpha_slidervue_type_template_id_068c66cb_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      staticClass: "el-color-alpha-slider",
	      class: { "is-vertical": _vm.vertical }
	    },
	    [
	      _c("div", {
	        ref: "bar",
	        staticClass: "el-color-alpha-slider__bar",
	        style: {
	          background: _vm.background
	        },
	        on: { click: _vm.handleClick }
	      }),
	      _c("div", {
	        ref: "thumb",
	        staticClass: "el-color-alpha-slider__thumb",
	        style: {
	          left: _vm.thumbLeft + "px",
	          top: _vm.thumbTop + "px"
	        }
	      })
	    ]
	  )
	};
	var alpha_slidervue_type_template_id_068c66cb_staticRenderFns = [];
	alpha_slidervue_type_template_id_068c66cb_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=068c66cb&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var alpha_slidervue_type_script_lang_js_ = ({
	  name: 'el-color-alpha-slider',

	  props: {
	    color: {
	      required: true
	    },
	    vertical: Boolean
	  },

	  watch: {
	    'color._alpha': function color_alpha() {
	      this.update();
	    },
	    'color.value': function colorValue() {
	      this.update();
	    }
	  },

	  methods: {
	    handleClick: function handleClick(event) {
	      var thumb = this.$refs.thumb;
	      var target = event.target;

	      if (target !== thumb) {
	        this.handleDrag(event);
	      }
	    },
	    handleDrag: function handleDrag(event) {
	      var rect = this.$el.getBoundingClientRect();
	      var thumb = this.$refs.thumb;


	      if (!this.vertical) {
	        var left = event.clientX - rect.left;
	        left = Math.max(thumb.offsetWidth / 2, left);
	        left = Math.min(left, rect.width - thumb.offsetWidth / 2);

	        this.color.set('alpha', Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 100));
	      } else {
	        var top = event.clientY - rect.top;
	        top = Math.max(thumb.offsetHeight / 2, top);
	        top = Math.min(top, rect.height - thumb.offsetHeight / 2);

	        this.color.set('alpha', Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 100));
	      }
	    },
	    getThumbLeft: function getThumbLeft() {
	      if (this.vertical) return 0;
	      var el = this.$el;
	      var alpha = this.color._alpha;

	      if (!el) return 0;
	      var thumb = this.$refs.thumb;
	      return Math.round(alpha * (el.offsetWidth - thumb.offsetWidth / 2) / 100);
	    },
	    getThumbTop: function getThumbTop() {
	      if (!this.vertical) return 0;
	      var el = this.$el;
	      var alpha = this.color._alpha;

	      if (!el) return 0;
	      var thumb = this.$refs.thumb;
	      return Math.round(alpha * (el.offsetHeight - thumb.offsetHeight / 2) / 100);
	    },
	    getBackground: function getBackground() {
	      if (this.color && this.color.value) {
	        var _color$toRgb = this.color.toRgb(),
	            r = _color$toRgb.r,
	            g = _color$toRgb.g,
	            b = _color$toRgb.b;

	        return 'linear-gradient(to right, rgba(' + r + ', ' + g + ', ' + b + ', 0) 0%, rgba(' + r + ', ' + g + ', ' + b + ', 1) 100%)';
	      }
	      return null;
	    },
	    update: function update() {
	      this.thumbLeft = this.getThumbLeft();
	      this.thumbTop = this.getThumbTop();
	      this.background = this.getBackground();
	    }
	  },

	  data: function data() {
	    return {
	      thumbLeft: 0,
	      thumbTop: 0,
	      background: null
	    };
	  },
	  mounted: function mounted() {
	    var _this = this;

	    var _$refs = this.$refs,
	        bar = _$refs.bar,
	        thumb = _$refs.thumb;


	    var dragConfig = {
	      drag: function drag(event) {
	        _this.handleDrag(event);
	      },
	      end: function end(event) {
	        _this.handleDrag(event);
	      }
	    };

	    draggable(bar, dragConfig);
	    draggable(thumb, dragConfig);
	    this.update();
	  }
	});
	// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_alpha_slidervue_type_script_lang_js_ = (alpha_slidervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue





	/* normalize component */

	var alpha_slider_component = normalizeComponent(
	  components_alpha_slidervue_type_script_lang_js_,
	  alpha_slidervue_type_template_id_068c66cb_render,
	  alpha_slidervue_type_template_id_068c66cb_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	alpha_slider_component.options.__file = "packages/color-picker/src/components/alpha-slider.vue";
	/* harmony default export */ var alpha_slider = (alpha_slider_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=template&id=06e03093&
	var predefinevue_type_template_id_06e03093_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-color-predefine" }, [
	    _c(
	      "div",
	      { staticClass: "el-color-predefine__colors" },
	      _vm._l(_vm.rgbaColors, function(item, index) {
	        return _c(
	          "div",
	          {
	            key: _vm.colors[index],
	            staticClass: "el-color-predefine__color-selector",
	            class: { selected: item.selected, "is-alpha": item._alpha < 100 },
	            on: {
	              click: function($event) {
	                _vm.handleSelect(index);
	              }
	            }
	          },
	          [_c("div", { style: { "background-color": item.value } })]
	        )
	      }),
	      0
	    )
	  ])
	};
	var predefinevue_type_template_id_06e03093_staticRenderFns = [];
	predefinevue_type_template_id_06e03093_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=template&id=06e03093&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	/* harmony default export */ var predefinevue_type_script_lang_js_ = ({
	  props: {
	    colors: { type: Array, required: true },
	    color: { required: true }
	  },
	  data: function data() {
	    return {
	      rgbaColors: this.parseColors(this.colors, this.color)
	    };
	  },

	  methods: {
	    handleSelect: function handleSelect(index) {
	      this.color.fromString(this.colors[index]);
	    },
	    parseColors: function parseColors(colors, color) {
	      return colors.map(function (value) {
	        var c = new src_color();
	        c.enableAlpha = true;
	        c.format = 'rgba';
	        c.fromString(value);
	        c.selected = c.value === color.value;
	        return c;
	      });
	    }
	  },
	  watch: {
	    '$parent.currentColor': function $parentCurrentColor(val) {
	      var color = new src_color();
	      color.fromString(val);

	      this.rgbaColors.forEach(function (item) {
	        item.selected = color.compare(item);
	      });
	    },
	    colors: function colors(newVal) {
	      this.rgbaColors = this.parseColors(newVal, this.color);
	    },
	    color: function color(newVal) {
	      this.rgbaColors = this.parseColors(this.colors, newVal);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_predefinevue_type_script_lang_js_ = (predefinevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue





	/* normalize component */

	var predefine_component = normalizeComponent(
	  components_predefinevue_type_script_lang_js_,
	  predefinevue_type_template_id_06e03093_render,
	  predefinevue_type_template_id_06e03093_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	predefine_component.options.__file = "packages/color-picker/src/components/predefine.vue";
	/* harmony default export */ var predefine = (predefine_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//










	/* harmony default export */ var picker_dropdownvue_type_script_lang_js_ = ({
	  name: 'el-color-picker-dropdown',

	  mixins: [vue_popper_default.a, locale_default.a],

	  components: {
	    SvPanel: sv_panel,
	    HueSlider: hue_slider,
	    AlphaSlider: alpha_slider,
	    ElInput: input_default.a,
	    ElButton: button_default.a,
	    Predefine: predefine
	  },

	  props: {
	    color: {
	      required: true
	    },
	    showAlpha: Boolean,
	    predefine: Array
	  },

	  data: function data() {
	    return {
	      customInput: ''
	    };
	  },


	  computed: {
	    currentColor: function currentColor() {
	      var parent = this.$parent;
	      return !parent.value && !parent.showPanelColor ? '' : parent.color.value;
	    }
	  },

	  methods: {
	    confirmValue: function confirmValue() {
	      this.$emit('pick');
	    },
	    handleConfirm: function handleConfirm() {
	      this.color.fromString(this.customInput);
	    }
	  },

	  mounted: function mounted() {
	    this.$parent.popperElm = this.popperElm = this.$el;
	    this.referenceElm = this.$parent.$el;
	  },


	  watch: {
	    showPopper: function showPopper(val) {
	      var _this = this;

	      if (val === true) {
	        this.$nextTick(function () {
	          var _$refs = _this.$refs,
	              sl = _$refs.sl,
	              hue = _$refs.hue,
	              alpha = _$refs.alpha;

	          sl && sl.update();
	          hue && hue.update();
	          alpha && alpha.update();
	        });
	      }
	    },


	    currentColor: {
	      immediate: true,
	      handler: function handler(val) {
	        this.customInput = val;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_picker_dropdownvue_type_script_lang_js_ = (picker_dropdownvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue





	/* normalize component */

	var picker_dropdown_component = normalizeComponent(
	  components_picker_dropdownvue_type_script_lang_js_,
	  picker_dropdownvue_type_template_id_06601625_render,
	  picker_dropdownvue_type_template_id_06601625_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	picker_dropdown_component.options.__file = "packages/color-picker/src/components/picker-dropdown.vue";
	/* harmony default export */ var picker_dropdown = (picker_dropdown_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	/* harmony default export */ var color_picker_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElColorPicker',

	  mixins: [emitter_default.a],

	  props: {
	    value: String,
	    showAlpha: Boolean,
	    colorFormat: String,
	    disabled: Boolean,
	    size: String,
	    popperClass: String,
	    predefine: Array
	  },

	  inject: {
	    elForm: {
	      default: ''
	    },
	    elFormItem: {
	      default: ''
	    }
	  },

	  directives: { Clickoutside: clickoutside_default.a },

	  computed: {
	    displayedColor: function displayedColor() {
	      if (!this.value && !this.showPanelColor) {
	        return 'transparent';
	      }

	      return this.displayedRgb(this.color, this.showAlpha);
	    },
	    _elFormItemSize: function _elFormItemSize() {
	      return (this.elFormItem || {}).elFormItemSize;
	    },
	    colorSize: function colorSize() {
	      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
	    },
	    colorDisabled: function colorDisabled() {
	      return this.disabled || (this.elForm || {}).disabled;
	    }
	  },

	  watch: {
	    value: function value(val) {
	      if (!val) {
	        this.showPanelColor = false;
	      } else if (val && val !== this.color.value) {
	        this.color.fromString(val);
	      }
	    },

	    color: {
	      deep: true,
	      handler: function handler() {
	        this.showPanelColor = true;
	      }
	    },
	    displayedColor: function displayedColor(val) {
	      if (!this.showPicker) return;
	      var currentValueColor = new src_color({
	        enableAlpha: this.showAlpha,
	        format: this.colorFormat
	      });
	      currentValueColor.fromString(this.value);

	      var currentValueColorRgb = this.displayedRgb(currentValueColor, this.showAlpha);
	      if (val !== currentValueColorRgb) {
	        this.$emit('active-change', val);
	      }
	    }
	  },

	  methods: {
	    handleTrigger: function handleTrigger() {
	      if (this.colorDisabled) return;
	      this.showPicker = !this.showPicker;
	    },
	    confirmValue: function confirmValue() {
	      var value = this.color.value;
	      this.$emit('input', value);
	      this.$emit('change', value);
	      this.dispatch('ElFormItem', 'el.form.change', value);
	      this.showPicker = false;
	    },
	    clearValue: function clearValue() {
	      this.$emit('input', null);
	      this.$emit('change', null);
	      if (this.value !== null) {
	        this.dispatch('ElFormItem', 'el.form.change', null);
	      }
	      this.showPanelColor = false;
	      this.showPicker = false;
	      this.resetColor();
	    },
	    hide: function hide() {
	      this.showPicker = false;
	      this.resetColor();
	    },
	    resetColor: function resetColor() {
	      var _this = this;

	      this.$nextTick(function (_) {
	        if (_this.value) {
	          _this.color.fromString(_this.value);
	        } else {
	          _this.showPanelColor = false;
	        }
	      });
	    },
	    displayedRgb: function displayedRgb(color, showAlpha) {
	      if (!(color instanceof src_color)) {
	        throw Error('color should be instance of Color Class');
	      }

	      var _color$toRgb = color.toRgb(),
	          r = _color$toRgb.r,
	          g = _color$toRgb.g,
	          b = _color$toRgb.b;

	      return showAlpha ? 'rgba(' + r + ', ' + g + ', ' + b + ', ' + color.get('alpha') / 100 + ')' : 'rgb(' + r + ', ' + g + ', ' + b + ')';
	    }
	  },

	  mounted: function mounted() {
	    var value = this.value;
	    if (value) {
	      this.color.fromString(value);
	    }
	    this.popperElm = this.$refs.dropdown.$el;
	  },
	  data: function data() {
	    var color = new src_color({
	      enableAlpha: this.showAlpha,
	      format: this.colorFormat
	    });

	    return {
	      color: color,
	      showPicker: false,
	      showPanelColor: false
	    };
	  },


	  components: {
	    PickerDropdown: picker_dropdown
	  }
	});
	// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_color_picker_src_mainvue_type_script_lang_js_ = (color_picker_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/color-picker/src/main.vue





	/* normalize component */

	var color_picker_src_main_component = normalizeComponent(
	  packages_color_picker_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_55c8ade7_render,
	  mainvue_type_template_id_55c8ade7_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	color_picker_src_main_component.options.__file = "packages/color-picker/src/main.vue";
	/* harmony default export */ var color_picker_src_main = (color_picker_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/color-picker/index.js


	/* istanbul ignore next */
	color_picker_src_main.install = function (Vue) {
	  Vue.component(color_picker_src_main.name, color_picker_src_main);
	};

	/* harmony default export */ var color_picker = (color_picker_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/main.vue?vue&type=template&id=5c654dd8&
	var mainvue_type_template_id_5c654dd8_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { staticClass: "el-transfer" },
	    [
	      _c(
	        "transfer-panel",
	        _vm._b(
	          {
	            ref: "leftPanel",
	            attrs: {
	              data: _vm.sourceData,
	              title: _vm.titles[0] || _vm.t("el.transfer.titles.0"),
	              "default-checked": _vm.leftDefaultChecked,
	              placeholder:
	                _vm.filterPlaceholder || _vm.t("el.transfer.filterPlaceholder")
	            },
	            on: { "checked-change": _vm.onSourceCheckedChange }
	          },
	          "transfer-panel",
	          _vm.$props,
	          false
	        ),
	        [_vm._t("left-footer")],
	        2
	      ),
	      _c(
	        "div",
	        { staticClass: "el-transfer__buttons" },
	        [
	          _c(
	            "el-button",
	            {
	              class: [
	                "el-transfer__button",
	                _vm.hasButtonTexts ? "is-with-texts" : ""
	              ],
	              attrs: {
	                type: "primary",
	                disabled: _vm.rightChecked.length === 0
	              },
	              nativeOn: {
	                click: function($event) {
	                  return _vm.addToLeft($event)
	                }
	              }
	            },
	            [
	              _c("i", { staticClass: "el-icon-arrow-left" }),
	              _vm.buttonTexts[0] !== undefined
	                ? _c("span", [_vm._v(_vm._s(_vm.buttonTexts[0]))])
	                : _vm._e()
	            ]
	          ),
	          _c(
	            "el-button",
	            {
	              class: [
	                "el-transfer__button",
	                _vm.hasButtonTexts ? "is-with-texts" : ""
	              ],
	              attrs: {
	                type: "primary",
	                disabled: _vm.leftChecked.length === 0
	              },
	              nativeOn: {
	                click: function($event) {
	                  return _vm.addToRight($event)
	                }
	              }
	            },
	            [
	              _vm.buttonTexts[1] !== undefined
	                ? _c("span", [_vm._v(_vm._s(_vm.buttonTexts[1]))])
	                : _vm._e(),
	              _c("i", { staticClass: "el-icon-arrow-right" })
	            ]
	          )
	        ],
	        1
	      ),
	      _c(
	        "transfer-panel",
	        _vm._b(
	          {
	            ref: "rightPanel",
	            attrs: {
	              data: _vm.targetData,
	              title: _vm.titles[1] || _vm.t("el.transfer.titles.1"),
	              "default-checked": _vm.rightDefaultChecked,
	              placeholder:
	                _vm.filterPlaceholder || _vm.t("el.transfer.filterPlaceholder")
	            },
	            on: { "checked-change": _vm.onTargetCheckedChange }
	          },
	          "transfer-panel",
	          _vm.$props,
	          false
	        ),
	        [_vm._t("right-footer")],
	        2
	      )
	    ],
	    1
	  )
	};
	var mainvue_type_template_id_5c654dd8_staticRenderFns = [];
	mainvue_type_template_id_5c654dd8_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/transfer/src/main.vue?vue&type=template&id=5c654dd8&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/transfer-panel.vue?vue&type=template&id=2ddab8bd&
	var transfer_panelvue_type_template_id_2ddab8bd_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-transfer-panel" }, [
	    _c(
	      "p",
	      { staticClass: "el-transfer-panel__header" },
	      [
	        _c(
	          "el-checkbox",
	          {
	            attrs: { indeterminate: _vm.isIndeterminate },
	            on: { change: _vm.handleAllCheckedChange },
	            model: {
	              value: _vm.allChecked,
	              callback: function($$v) {
	                _vm.allChecked = $$v;
	              },
	              expression: "allChecked"
	            }
	          },
	          [
	            _vm._v("\n      " + _vm._s(_vm.title) + "\n      "),
	            _c("span", [_vm._v(_vm._s(_vm.checkedSummary))])
	          ]
	        )
	      ],
	      1
	    ),
	    _c(
	      "div",
	      {
	        class: [
	          "el-transfer-panel__body",
	          _vm.hasFooter ? "is-with-footer" : ""
	        ]
	      },
	      [
	        _vm.filterable
	          ? _c(
	              "el-input",
	              {
	                staticClass: "el-transfer-panel__filter",
	                attrs: { size: "small", placeholder: _vm.placeholder },
	                nativeOn: {
	                  mouseenter: function($event) {
	                    _vm.inputHover = true;
	                  },
	                  mouseleave: function($event) {
	                    _vm.inputHover = false;
	                  }
	                },
	                model: {
	                  value: _vm.query,
	                  callback: function($$v) {
	                    _vm.query = $$v;
	                  },
	                  expression: "query"
	                }
	              },
	              [
	                _c("i", {
	                  class: ["el-input__icon", "el-icon-" + _vm.inputIcon],
	                  attrs: { slot: "prefix" },
	                  on: { click: _vm.clearQuery },
	                  slot: "prefix"
	                })
	              ]
	            )
	          : _vm._e(),
	        _c(
	          "el-checkbox-group",
	          {
	            directives: [
	              {
	                name: "show",
	                rawName: "v-show",
	                value: !_vm.hasNoMatch && _vm.data.length > 0,
	                expression: "!hasNoMatch && data.length > 0"
	              }
	            ],
	            staticClass: "el-transfer-panel__list",
	            class: { "is-filterable": _vm.filterable },
	            model: {
	              value: _vm.checked,
	              callback: function($$v) {
	                _vm.checked = $$v;
	              },
	              expression: "checked"
	            }
	          },
	          _vm._l(_vm.filteredData, function(item) {
	            return _c(
	              "el-checkbox",
	              {
	                key: item[_vm.keyProp],
	                staticClass: "el-transfer-panel__item",
	                attrs: {
	                  label: item[_vm.keyProp],
	                  disabled: item[_vm.disabledProp]
	                }
	              },
	              [_c("option-content", { attrs: { option: item } })],
	              1
	            )
	          }),
	          1
	        ),
	        _c(
	          "p",
	          {
	            directives: [
	              {
	                name: "show",
	                rawName: "v-show",
	                value: _vm.hasNoMatch,
	                expression: "hasNoMatch"
	              }
	            ],
	            staticClass: "el-transfer-panel__empty"
	          },
	          [_vm._v(_vm._s(_vm.t("el.transfer.noMatch")))]
	        ),
	        _c(
	          "p",
	          {
	            directives: [
	              {
	                name: "show",
	                rawName: "v-show",
	                value: _vm.data.length === 0 && !_vm.hasNoMatch,
	                expression: "data.length === 0 && !hasNoMatch"
	              }
	            ],
	            staticClass: "el-transfer-panel__empty"
	          },
	          [_vm._v(_vm._s(_vm.t("el.transfer.noData")))]
	        )
	      ],
	      1
	    ),
	    _vm.hasFooter
	      ? _c(
	          "p",
	          { staticClass: "el-transfer-panel__footer" },
	          [_vm._t("default")],
	          2
	        )
	      : _vm._e()
	  ])
	};
	var transfer_panelvue_type_template_id_2ddab8bd_staticRenderFns = [];
	transfer_panelvue_type_template_id_2ddab8bd_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/transfer/src/transfer-panel.vue?vue&type=template&id=2ddab8bd&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/transfer-panel.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	/* harmony default export */ var transfer_panelvue_type_script_lang_js_ = ({
	  mixins: [locale_default.a],

	  name: 'ElTransferPanel',

	  componentName: 'ElTransferPanel',

	  components: {
	    ElCheckboxGroup: checkbox_group_default.a,
	    ElCheckbox: checkbox_default.a,
	    ElInput: input_default.a,
	    OptionContent: {
	      props: {
	        option: Object
	      },
	      render: function render(h) {
	        var getParent = function getParent(vm) {
	          if (vm.$options.componentName === 'ElTransferPanel') {
	            return vm;
	          } else if (vm.$parent) {
	            return getParent(vm.$parent);
	          } else {
	            return vm;
	          }
	        };
	        var panel = getParent(this);
	        var transfer = panel.$parent || panel;
	        return panel.renderContent ? panel.renderContent(h, this.option) : transfer.$scopedSlots.default ? transfer.$scopedSlots.default({ option: this.option }) : h('span', [this.option[panel.labelProp] || this.option[panel.keyProp]]);
	      }
	    }
	  },

	  props: {
	    data: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    renderContent: Function,
	    placeholder: String,
	    title: String,
	    filterable: Boolean,
	    format: Object,
	    filterMethod: Function,
	    defaultChecked: Array,
	    props: Object
	  },

	  data: function data() {
	    return {
	      checked: [],
	      allChecked: false,
	      query: '',
	      inputHover: false,
	      checkChangeByUser: true
	    };
	  },


	  watch: {
	    checked: function checked(val, oldVal) {
	      this.updateAllChecked();
	      if (this.checkChangeByUser) {
	        var movedKeys = val.concat(oldVal).filter(function (v) {
	          return val.indexOf(v) === -1 || oldVal.indexOf(v) === -1;
	        });
	        this.$emit('checked-change', val, movedKeys);
	      } else {
	        this.$emit('checked-change', val);
	        this.checkChangeByUser = true;
	      }
	    },
	    data: function data() {
	      var _this = this;

	      var checked = [];
	      var filteredDataKeys = this.filteredData.map(function (item) {
	        return item[_this.keyProp];
	      });
	      this.checked.forEach(function (item) {
	        if (filteredDataKeys.indexOf(item) > -1) {
	          checked.push(item);
	        }
	      });
	      this.checkChangeByUser = false;
	      this.checked = checked;
	    },
	    checkableData: function checkableData() {
	      this.updateAllChecked();
	    },


	    defaultChecked: {
	      immediate: true,
	      handler: function handler(val, oldVal) {
	        var _this2 = this;

	        if (oldVal && val.length === oldVal.length && val.every(function (item) {
	          return oldVal.indexOf(item) > -1;
	        })) return;
	        var checked = [];
	        var checkableDataKeys = this.checkableData.map(function (item) {
	          return item[_this2.keyProp];
	        });
	        val.forEach(function (item) {
	          if (checkableDataKeys.indexOf(item) > -1) {
	            checked.push(item);
	          }
	        });
	        this.checkChangeByUser = false;
	        this.checked = checked;
	      }
	    }
	  },

	  computed: {
	    filteredData: function filteredData() {
	      var _this3 = this;

	      return this.data.filter(function (item) {
	        if (typeof _this3.filterMethod === 'function') {
	          return _this3.filterMethod(_this3.query, item);
	        } else {
	          var label = item[_this3.labelProp] || item[_this3.keyProp].toString();
	          return label.toLowerCase().indexOf(_this3.query.toLowerCase()) > -1;
	        }
	      });
	    },
	    checkableData: function checkableData() {
	      var _this4 = this;

	      return this.filteredData.filter(function (item) {
	        return !item[_this4.disabledProp];
	      });
	    },
	    checkedSummary: function checkedSummary() {
	      var checkedLength = this.checked.length;
	      var dataLength = this.data.length;
	      var _format = this.format,
	          noChecked = _format.noChecked,
	          hasChecked = _format.hasChecked;

	      if (noChecked && hasChecked) {
	        return checkedLength > 0 ? hasChecked.replace(/\${checked}/g, checkedLength).replace(/\${total}/g, dataLength) : noChecked.replace(/\${total}/g, dataLength);
	      } else {
	        return checkedLength + '/' + dataLength;
	      }
	    },
	    isIndeterminate: function isIndeterminate() {
	      var checkedLength = this.checked.length;
	      return checkedLength > 0 && checkedLength < this.checkableData.length;
	    },
	    hasNoMatch: function hasNoMatch() {
	      return this.query.length > 0 && this.filteredData.length === 0;
	    },
	    inputIcon: function inputIcon() {
	      return this.query.length > 0 && this.inputHover ? 'circle-close' : 'search';
	    },
	    labelProp: function labelProp() {
	      return this.props.label || 'label';
	    },
	    keyProp: function keyProp() {
	      return this.props.key || 'key';
	    },
	    disabledProp: function disabledProp() {
	      return this.props.disabled || 'disabled';
	    },
	    hasFooter: function hasFooter() {
	      return !!this.$slots.default;
	    }
	  },

	  methods: {
	    updateAllChecked: function updateAllChecked() {
	      var _this5 = this;

	      var checkableDataKeys = this.checkableData.map(function (item) {
	        return item[_this5.keyProp];
	      });
	      this.allChecked = checkableDataKeys.length > 0 && checkableDataKeys.every(function (item) {
	        return _this5.checked.indexOf(item) > -1;
	      });
	    },
	    handleAllCheckedChange: function handleAllCheckedChange(value) {
	      var _this6 = this;

	      this.checked = value ? this.checkableData.map(function (item) {
	        return item[_this6.keyProp];
	      }) : [];
	    },
	    clearQuery: function clearQuery() {
	      if (this.inputIcon === 'circle-close') {
	        this.query = '';
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/transfer/src/transfer-panel.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_transfer_panelvue_type_script_lang_js_ = (transfer_panelvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/transfer/src/transfer-panel.vue





	/* normalize component */

	var transfer_panel_component = normalizeComponent(
	  src_transfer_panelvue_type_script_lang_js_,
	  transfer_panelvue_type_template_id_2ddab8bd_render,
	  transfer_panelvue_type_template_id_2ddab8bd_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	transfer_panel_component.options.__file = "packages/transfer/src/transfer-panel.vue";
	/* harmony default export */ var transfer_panel = (transfer_panel_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//







	/* harmony default export */ var transfer_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElTransfer',

	  mixins: [emitter_default.a, locale_default.a, migrating_default.a],

	  components: {
	    TransferPanel: transfer_panel,
	    ElButton: button_default.a
	  },

	  props: {
	    data: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    titles: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    buttonTexts: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    filterPlaceholder: {
	      type: String,
	      default: ''
	    },
	    filterMethod: Function,
	    leftDefaultChecked: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    rightDefaultChecked: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    renderContent: Function,
	    value: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    format: {
	      type: Object,
	      default: function _default() {
	        return {};
	      }
	    },
	    filterable: Boolean,
	    props: {
	      type: Object,
	      default: function _default() {
	        return {
	          label: 'label',
	          key: 'key',
	          disabled: 'disabled'
	        };
	      }
	    },
	    targetOrder: {
	      type: String,
	      default: 'original'
	    }
	  },

	  data: function data() {
	    return {
	      leftChecked: [],
	      rightChecked: []
	    };
	  },


	  computed: {
	    dataObj: function dataObj() {
	      var key = this.props.key;
	      return this.data.reduce(function (o, cur) {
	        return (o[cur[key]] = cur) && o;
	      }, {});
	    },
	    sourceData: function sourceData() {
	      var _this = this;

	      return this.data.filter(function (item) {
	        return _this.value.indexOf(item[_this.props.key]) === -1;
	      });
	    },
	    targetData: function targetData() {
	      var _this2 = this;

	      if (this.targetOrder === 'original') {
	        return this.data.filter(function (item) {
	          return _this2.value.indexOf(item[_this2.props.key]) > -1;
	        });
	      } else {
	        return this.value.reduce(function (arr, cur) {
	          var val = _this2.dataObj[cur];
	          if (val) {
	            arr.push(val);
	          }
	          return arr;
	        }, []);
	      }
	    },
	    hasButtonTexts: function hasButtonTexts() {
	      return this.buttonTexts.length === 2;
	    }
	  },

	  watch: {
	    value: function value(val) {
	      this.dispatch('ElFormItem', 'el.form.change', val);
	    }
	  },

	  methods: {
	    getMigratingConfig: function getMigratingConfig() {
	      return {
	        props: {
	          'footer-format': 'footer-format is renamed to format.'
	        }
	      };
	    },
	    onSourceCheckedChange: function onSourceCheckedChange(val, movedKeys) {
	      this.leftChecked = val;
	      if (movedKeys === undefined) return;
	      this.$emit('left-check-change', val, movedKeys);
	    },
	    onTargetCheckedChange: function onTargetCheckedChange(val, movedKeys) {
	      this.rightChecked = val;
	      if (movedKeys === undefined) return;
	      this.$emit('right-check-change', val, movedKeys);
	    },
	    addToLeft: function addToLeft() {
	      var currentValue = this.value.slice();
	      this.rightChecked.forEach(function (item) {
	        var index = currentValue.indexOf(item);
	        if (index > -1) {
	          currentValue.splice(index, 1);
	        }
	      });
	      this.$emit('input', currentValue);
	      this.$emit('change', currentValue, 'left', this.rightChecked);
	    },
	    addToRight: function addToRight() {
	      var _this3 = this;

	      var currentValue = this.value.slice();
	      var itemsToBeMoved = [];
	      var key = this.props.key;
	      this.data.forEach(function (item) {
	        var itemKey = item[key];
	        if (_this3.leftChecked.indexOf(itemKey) > -1 && _this3.value.indexOf(itemKey) === -1) {
	          itemsToBeMoved.push(itemKey);
	        }
	      });
	      currentValue = this.targetOrder === 'unshift' ? itemsToBeMoved.concat(currentValue) : currentValue.concat(itemsToBeMoved);
	      this.$emit('input', currentValue);
	      this.$emit('change', currentValue, 'right', this.leftChecked);
	    },
	    clearQuery: function clearQuery(which) {
	      if (which === 'left') {
	        this.$refs.leftPanel.query = '';
	      } else if (which === 'right') {
	        this.$refs.rightPanel.query = '';
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/transfer/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_transfer_src_mainvue_type_script_lang_js_ = (transfer_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/transfer/src/main.vue





	/* normalize component */

	var transfer_src_main_component = normalizeComponent(
	  packages_transfer_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_5c654dd8_render,
	  mainvue_type_template_id_5c654dd8_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	transfer_src_main_component.options.__file = "packages/transfer/src/main.vue";
	/* harmony default export */ var transfer_src_main = (transfer_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/transfer/index.js


	/* istanbul ignore next */
	transfer_src_main.install = function (Vue) {
	  Vue.component(transfer_src_main.name, transfer_src_main);
	};

	/* harmony default export */ var transfer = (transfer_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/container/src/main.vue?vue&type=template&id=5bf181d4&
	var mainvue_type_template_id_5bf181d4_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "section",
	    { staticClass: "el-container", class: { "is-vertical": _vm.isVertical } },
	    [_vm._t("default")],
	    2
	  )
	};
	var mainvue_type_template_id_5bf181d4_staticRenderFns = [];
	mainvue_type_template_id_5bf181d4_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/container/src/main.vue?vue&type=template&id=5bf181d4&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/container/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var container_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElContainer',

	  componentName: 'ElContainer',

	  props: {
	    direction: String
	  },

	  computed: {
	    isVertical: function isVertical() {
	      if (this.direction === 'vertical') {
	        return true;
	      } else if (this.direction === 'horizontal') {
	        return false;
	      }
	      return this.$slots && this.$slots.default ? this.$slots.default.some(function (vnode) {
	        var tag = vnode.componentOptions && vnode.componentOptions.tag;
	        return tag === 'el-header' || tag === 'el-footer';
	      }) : false;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/container/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_container_src_mainvue_type_script_lang_js_ = (container_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/container/src/main.vue





	/* normalize component */

	var container_src_main_component = normalizeComponent(
	  packages_container_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_5bf181d4_render,
	  mainvue_type_template_id_5bf181d4_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	container_src_main_component.options.__file = "packages/container/src/main.vue";
	/* harmony default export */ var container_src_main = (container_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/container/index.js


	/* istanbul ignore next */
	container_src_main.install = function (Vue) {
	  Vue.component(container_src_main.name, container_src_main);
	};

	/* harmony default export */ var packages_container = (container_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/header/src/main.vue?vue&type=template&id=2b296ab2&
	var mainvue_type_template_id_2b296ab2_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "header",
	    { staticClass: "el-header", style: { height: _vm.height } },
	    [_vm._t("default")],
	    2
	  )
	};
	var mainvue_type_template_id_2b296ab2_staticRenderFns = [];
	mainvue_type_template_id_2b296ab2_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/header/src/main.vue?vue&type=template&id=2b296ab2&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/header/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var header_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElHeader',

	  componentName: 'ElHeader',

	  props: {
	    height: {
	      type: String,
	      default: '60px'
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/header/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_header_src_mainvue_type_script_lang_js_ = (header_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/header/src/main.vue





	/* normalize component */

	var header_src_main_component = normalizeComponent(
	  packages_header_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_2b296ab2_render,
	  mainvue_type_template_id_2b296ab2_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	header_src_main_component.options.__file = "packages/header/src/main.vue";
	/* harmony default export */ var header_src_main = (header_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/header/index.js


	/* istanbul ignore next */
	header_src_main.install = function (Vue) {
	  Vue.component(header_src_main.name, header_src_main);
	};

	/* harmony default export */ var header = (header_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/aside/src/main.vue?vue&type=template&id=03411dbf&
	var mainvue_type_template_id_03411dbf_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "aside",
	    { staticClass: "el-aside", style: { width: _vm.width } },
	    [_vm._t("default")],
	    2
	  )
	};
	var mainvue_type_template_id_03411dbf_staticRenderFns = [];
	mainvue_type_template_id_03411dbf_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/aside/src/main.vue?vue&type=template&id=03411dbf&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/aside/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var aside_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElAside',

	  componentName: 'ElAside',

	  props: {
	    width: {
	      type: String,
	      default: '300px'
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/aside/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_aside_src_mainvue_type_script_lang_js_ = (aside_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/aside/src/main.vue





	/* normalize component */

	var aside_src_main_component = normalizeComponent(
	  packages_aside_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_03411dbf_render,
	  mainvue_type_template_id_03411dbf_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	aside_src_main_component.options.__file = "packages/aside/src/main.vue";
	/* harmony default export */ var aside_src_main = (aside_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/aside/index.js


	/* istanbul ignore next */
	aside_src_main.install = function (Vue) {
	  Vue.component(aside_src_main.name, aside_src_main);
	};

	/* harmony default export */ var aside = (aside_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/main/src/main.vue?vue&type=template&id=2a3a7406&
	var mainvue_type_template_id_2a3a7406_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("main", { staticClass: "el-main" }, [_vm._t("default")], 2)
	};
	var mainvue_type_template_id_2a3a7406_staticRenderFns = [];
	mainvue_type_template_id_2a3a7406_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/main/src/main.vue?vue&type=template&id=2a3a7406&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/main/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var main_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElMain',
	  componentName: 'ElMain'
	});
	// CONCATENATED MODULE: ./packages/main/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_main_src_mainvue_type_script_lang_js_ = (main_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/main/src/main.vue





	/* normalize component */

	var main_src_main_component = normalizeComponent(
	  packages_main_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_2a3a7406_render,
	  mainvue_type_template_id_2a3a7406_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	main_src_main_component.options.__file = "packages/main/src/main.vue";
	/* harmony default export */ var main_src_main = (main_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/main/index.js


	/* istanbul ignore next */
	main_src_main.install = function (Vue) {
	  Vue.component(main_src_main.name, main_src_main);
	};

	/* harmony default export */ var packages_main = (main_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/footer/src/main.vue?vue&type=template&id=80210338&
	var mainvue_type_template_id_80210338_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "footer",
	    { staticClass: "el-footer", style: { height: _vm.height } },
	    [_vm._t("default")],
	    2
	  )
	};
	var mainvue_type_template_id_80210338_staticRenderFns = [];
	mainvue_type_template_id_80210338_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/footer/src/main.vue?vue&type=template&id=80210338&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/footer/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var footer_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElFooter',

	  componentName: 'ElFooter',

	  props: {
	    height: {
	      type: String,
	      default: '60px'
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/footer/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_footer_src_mainvue_type_script_lang_js_ = (footer_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/footer/src/main.vue





	/* normalize component */

	var footer_src_main_component = normalizeComponent(
	  packages_footer_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_80210338_render,
	  mainvue_type_template_id_80210338_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	footer_src_main_component.options.__file = "packages/footer/src/main.vue";
	/* harmony default export */ var footer_src_main = (footer_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/footer/index.js


	/* istanbul ignore next */
	footer_src_main.install = function (Vue) {
	  Vue.component(footer_src_main.name, footer_src_main);
	};

	/* harmony default export */ var footer = (footer_src_main);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/timeline/src/main.vue?vue&type=script&lang=js&

	/* harmony default export */ var timeline_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElTimeline',

	  props: {
	    reverse: {
	      type: Boolean,
	      default: false
	    }
	  },

	  provide: function provide() {
	    return {
	      timeline: this
	    };
	  },
	  render: function render() {
	    var h = arguments[0];

	    var reverse = this.reverse;
	    var classes = {
	      'el-timeline': true,
	      'is-reverse': reverse
	    };
	    var slots = this.$slots.default || [];
	    if (reverse) {
	      slots = slots.reverse();
	    }
	    return h(
	      'ul',
	      { 'class': classes },
	      [slots]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/timeline/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_timeline_src_mainvue_type_script_lang_js_ = (timeline_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/timeline/src/main.vue
	var main_render, main_staticRenderFns;




	/* normalize component */

	var timeline_src_main_component = normalizeComponent(
	  packages_timeline_src_mainvue_type_script_lang_js_,
	  main_render,
	  main_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	timeline_src_main_component.options.__file = "packages/timeline/src/main.vue";
	/* harmony default export */ var timeline_src_main = (timeline_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/timeline/index.js


	/* istanbul ignore next */
	timeline_src_main.install = function (Vue) {
	  Vue.component(timeline_src_main.name, timeline_src_main);
	};

	/* harmony default export */ var timeline = (timeline_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/timeline/src/item.vue?vue&type=template&id=61a69e50&
	var itemvue_type_template_id_61a69e50_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("li", { staticClass: "el-timeline-item" }, [
	    _c("div", { staticClass: "el-timeline-item__tail" }),
	    !_vm.$slots.dot
	      ? _c(
	          "div",
	          {
	            staticClass: "el-timeline-item__node",
	            class: [
	              "el-timeline-item__node--" + (_vm.size || ""),
	              "el-timeline-item__node--" + (_vm.type || "")
	            ],
	            style: {
	              backgroundColor: _vm.color
	            }
	          },
	          [
	            _vm.icon
	              ? _c("i", {
	                  staticClass: "el-timeline-item__icon",
	                  class: _vm.icon
	                })
	              : _vm._e()
	          ]
	        )
	      : _vm._e(),
	    _vm.$slots.dot
	      ? _c("div", { staticClass: "el-timeline-item__dot" }, [_vm._t("dot")], 2)
	      : _vm._e(),
	    _c("div", { staticClass: "el-timeline-item__wrapper" }, [
	      !_vm.hideTimestamp && _vm.placement === "top"
	        ? _c("div", { staticClass: "el-timeline-item__timestamp is-top" }, [
	            _vm._v("\n      " + _vm._s(_vm.timestamp) + "\n    ")
	          ])
	        : _vm._e(),
	      _c(
	        "div",
	        { staticClass: "el-timeline-item__content" },
	        [_vm._t("default")],
	        2
	      ),
	      !_vm.hideTimestamp && _vm.placement === "bottom"
	        ? _c("div", { staticClass: "el-timeline-item__timestamp is-bottom" }, [
	            _vm._v("\n      " + _vm._s(_vm.timestamp) + "\n    ")
	          ])
	        : _vm._e()
	    ])
	  ])
	};
	var itemvue_type_template_id_61a69e50_staticRenderFns = [];
	itemvue_type_template_id_61a69e50_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/timeline/src/item.vue?vue&type=template&id=61a69e50&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/timeline/src/item.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var timeline_src_itemvue_type_script_lang_js_ = ({
	  name: 'ElTimelineItem',

	  inject: ['timeline'],

	  props: {
	    timestamp: String,

	    hideTimestamp: {
	      type: Boolean,
	      default: false
	    },

	    placement: {
	      type: String,
	      default: 'bottom'
	    },

	    type: String,

	    color: String,

	    size: {
	      type: String,
	      default: 'normal'
	    },

	    icon: String
	  }
	});
	// CONCATENATED MODULE: ./packages/timeline/src/item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_timeline_src_itemvue_type_script_lang_js_ = (timeline_src_itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/timeline/src/item.vue





	/* normalize component */

	var src_item_component = normalizeComponent(
	  packages_timeline_src_itemvue_type_script_lang_js_,
	  itemvue_type_template_id_61a69e50_render,
	  itemvue_type_template_id_61a69e50_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	src_item_component.options.__file = "packages/timeline/src/item.vue";
	/* harmony default export */ var timeline_src_item = (src_item_component.exports);
	// CONCATENATED MODULE: ./packages/timeline-item/index.js


	/* istanbul ignore next */
	timeline_src_item.install = function (Vue) {
	  Vue.component(timeline_src_item.name, timeline_src_item);
	};

	/* harmony default export */ var timeline_item = (timeline_src_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/link/src/main.vue?vue&type=template&id=01cf3b65&
	var mainvue_type_template_id_01cf3b65_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "a",
	    _vm._b(
	      {
	        class: [
	          "el-link",
	          _vm.type ? "el-link--" + _vm.type : "",
	          _vm.disabled && "is-disabled",
	          _vm.underline && !_vm.disabled && "is-underline"
	        ],
	        attrs: { href: _vm.disabled ? null : _vm.href },
	        on: { click: _vm.handleClick }
	      },
	      "a",
	      _vm.$attrs,
	      false
	    ),
	    [
	      _vm.icon ? _c("i", { class: _vm.icon }) : _vm._e(),
	      _vm.$slots.default
	        ? _c("span", { staticClass: "el-link--inner" }, [_vm._t("default")], 2)
	        : _vm._e(),
	      _vm.$slots.icon ? [_vm.$slots.icon ? _vm._t("icon") : _vm._e()] : _vm._e()
	    ],
	    2
	  )
	};
	var mainvue_type_template_id_01cf3b65_staticRenderFns = [];
	mainvue_type_template_id_01cf3b65_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/link/src/main.vue?vue&type=template&id=01cf3b65&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/link/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//


	/* harmony default export */ var link_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElLink',

	  props: {
	    type: {
	      type: String,
	      default: 'default'
	    },
	    underline: {
	      type: Boolean,
	      default: true
	    },
	    disabled: Boolean,
	    href: String,
	    icon: String
	  },

	  methods: {
	    handleClick: function handleClick(event) {
	      if (!this.disabled) {
	        if (!this.href) {
	          this.$emit('click', event);
	        }
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/link/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_link_src_mainvue_type_script_lang_js_ = (link_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/link/src/main.vue





	/* normalize component */

	var link_src_main_component = normalizeComponent(
	  packages_link_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_01cf3b65_render,
	  mainvue_type_template_id_01cf3b65_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	link_src_main_component.options.__file = "packages/link/src/main.vue";
	/* harmony default export */ var link_src_main = (link_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/link/index.js


	/* istanbul ignore next */
	link_src_main.install = function (Vue) {
	  Vue.component(link_src_main.name, link_src_main);
	};

	/* harmony default export */ var packages_link = (link_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/divider/src/main.vue?vue&type=template&id=7fa02a7e&functional=true&
	var mainvue_type_template_id_7fa02a7e_functional_true_render = function(_h, _vm) {
	  var _c = _vm._c;
	  return _c(
	    "div",
	    _vm._g(
	      _vm._b(
	        {
	          class: [
	            _vm.data.staticClass,
	            "el-divider",
	            "el-divider--" + _vm.props.direction
	          ]
	        },
	        "div",
	        _vm.data.attrs,
	        false
	      ),
	      _vm.listeners
	    ),
	    [
	      _vm.slots().default && _vm.props.direction !== "vertical"
	        ? _c(
	            "div",
	            { class: ["el-divider__text", "is-" + _vm.props.contentPosition] },
	            [_vm._t("default")],
	            2
	          )
	        : _vm._e()
	    ]
	  )
	};
	var mainvue_type_template_id_7fa02a7e_functional_true_staticRenderFns = [];
	mainvue_type_template_id_7fa02a7e_functional_true_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/divider/src/main.vue?vue&type=template&id=7fa02a7e&functional=true&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/divider/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var divider_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElDivider',
	  props: {
	    direction: {
	      type: String,
	      default: 'horizontal',
	      validator: function validator(val) {
	        return ['horizontal', 'vertical'].indexOf(val) !== -1;
	      }
	    },
	    contentPosition: {
	      type: String,
	      default: 'center',
	      validator: function validator(val) {
	        return ['left', 'center', 'right'].indexOf(val) !== -1;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/divider/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_divider_src_mainvue_type_script_lang_js_ = (divider_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/divider/src/main.vue





	/* normalize component */

	var divider_src_main_component = normalizeComponent(
	  packages_divider_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_7fa02a7e_functional_true_render,
	  mainvue_type_template_id_7fa02a7e_functional_true_staticRenderFns,
	  true,
	  null,
	  null,
	  null
	  
	);
	divider_src_main_component.options.__file = "packages/divider/src/main.vue";
	/* harmony default export */ var divider_src_main = (divider_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/divider/index.js


	/* istanbul ignore next */
	divider_src_main.install = function (Vue) {
	  Vue.component(divider_src_main.name, divider_src_main);
	};

	/* harmony default export */ var divider = (divider_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/main.vue?vue&type=template&id=44d84a7c&
	var mainvue_type_template_id_44d84a7c_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { staticClass: "el-image" },
	    [
	      _vm.loading
	        ? _vm._t("placeholder", [
	            _c("div", { staticClass: "el-image__placeholder" })
	          ])
	        : _vm.error
	        ? _vm._t("error", [
	            _c("div", { staticClass: "el-image__error" }, [
	              _vm._v(_vm._s(_vm.t("el.image.error")))
	            ])
	          ])
	        : _c(
	            "img",
	            _vm._g(
	              _vm._b(
	                {
	                  staticClass: "el-image__inner",
	                  class: {
	                    "el-image__inner--center": _vm.alignCenter,
	                    "el-image__preview": _vm.preview
	                  },
	                  style: _vm.imageStyle,
	                  attrs: { src: _vm.src },
	                  on: { click: _vm.clickHandler }
	                },
	                "img",
	                _vm.$attrs,
	                false
	              ),
	              _vm.$listeners
	            )
	          ),
	      _vm.preview
	        ? [
	            _vm.showViewer
	              ? _c("image-viewer", {
	                  attrs: {
	                    "z-index": _vm.zIndex,
	                    "initial-index": _vm.imageIndex,
	                    "on-close": _vm.closeViewer,
	                    "url-list": _vm.previewSrcList
	                  }
	                })
	              : _vm._e()
	          ]
	        : _vm._e()
	    ],
	    2
	  )
	};
	var mainvue_type_template_id_44d84a7c_staticRenderFns = [];
	mainvue_type_template_id_44d84a7c_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/image/src/main.vue?vue&type=template&id=44d84a7c&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/image-viewer.vue?vue&type=template&id=5e73b307&
	var image_viewervue_type_template_id_5e73b307_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("transition", { attrs: { name: "viewer-fade" } }, [
	    _c(
	      "div",
	      {
	        ref: "el-image-viewer__wrapper",
	        staticClass: "el-image-viewer__wrapper",
	        style: { "z-index": _vm.viewerZIndex },
	        attrs: { tabindex: "-1" }
	      },
	      [
	        _c("div", {
	          staticClass: "el-image-viewer__mask",
	          on: {
	            click: function($event) {
	              if ($event.target !== $event.currentTarget) {
	                return null
	              }
	              return _vm.handleMaskClick($event)
	            }
	          }
	        }),
	        _c(
	          "span",
	          {
	            staticClass: "el-image-viewer__btn el-image-viewer__close",
	            on: { click: _vm.hide }
	          },
	          [_c("i", { staticClass: "el-icon-close" })]
	        ),
	        !_vm.isSingle
	          ? [
	              _c(
	                "span",
	                {
	                  staticClass: "el-image-viewer__btn el-image-viewer__prev",
	                  class: { "is-disabled": !_vm.infinite && _vm.isFirst },
	                  on: { click: _vm.prev }
	                },
	                [_c("i", { staticClass: "el-icon-arrow-left" })]
	              ),
	              _c(
	                "span",
	                {
	                  staticClass: "el-image-viewer__btn el-image-viewer__next",
	                  class: { "is-disabled": !_vm.infinite && _vm.isLast },
	                  on: { click: _vm.next }
	                },
	                [_c("i", { staticClass: "el-icon-arrow-right" })]
	              )
	            ]
	          : _vm._e(),
	        _c(
	          "div",
	          { staticClass: "el-image-viewer__btn el-image-viewer__actions" },
	          [
	            _c("div", { staticClass: "el-image-viewer__actions__inner" }, [
	              _c("i", {
	                staticClass: "el-icon-zoom-out",
	                on: {
	                  click: function($event) {
	                    _vm.handleActions("zoomOut");
	                  }
	                }
	              }),
	              _c("i", {
	                staticClass: "el-icon-zoom-in",
	                on: {
	                  click: function($event) {
	                    _vm.handleActions("zoomIn");
	                  }
	                }
	              }),
	              _c("i", { staticClass: "el-image-viewer__actions__divider" }),
	              _c("i", { class: _vm.mode.icon, on: { click: _vm.toggleMode } }),
	              _c("i", { staticClass: "el-image-viewer__actions__divider" }),
	              _c("i", {
	                staticClass: "el-icon-refresh-left",
	                on: {
	                  click: function($event) {
	                    _vm.handleActions("anticlocelise");
	                  }
	                }
	              }),
	              _c("i", {
	                staticClass: "el-icon-refresh-right",
	                on: {
	                  click: function($event) {
	                    _vm.handleActions("clocelise");
	                  }
	                }
	              })
	            ])
	          ]
	        ),
	        _c(
	          "div",
	          { staticClass: "el-image-viewer__canvas" },
	          _vm._l(_vm.urlList, function(url, i) {
	            return i === _vm.index
	              ? _c("img", {
	                  key: url,
	                  ref: "img",
	                  refInFor: true,
	                  staticClass: "el-image-viewer__img",
	                  style: _vm.imgStyle,
	                  attrs: { src: _vm.currentImg },
	                  on: {
	                    load: _vm.handleImgLoad,
	                    error: _vm.handleImgError,
	                    mousedown: _vm.handleMouseDown
	                  }
	                })
	              : _vm._e()
	          }),
	          0
	        )
	      ],
	      2
	    )
	  ])
	};
	var image_viewervue_type_template_id_5e73b307_staticRenderFns = [];
	image_viewervue_type_template_id_5e73b307_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/image/src/image-viewer.vue?vue&type=template&id=5e73b307&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/image-viewer.vue?vue&type=script&lang=js&
	var image_viewervue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	var Mode = {
	  CONTAIN: {
	    name: 'contain',
	    icon: 'el-icon-full-screen'
	  },
	  ORIGINAL: {
	    name: 'original',
	    icon: 'el-icon-c-scale-to-original'
	  }
	};

	var mousewheelEventName = Object(util_["isFirefox"])() ? 'DOMMouseScroll' : 'mousewheel';

	/* harmony default export */ var image_viewervue_type_script_lang_js_ = ({
	  name: 'elImageViewer',

	  props: {
	    urlList: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    zIndex: {
	      type: Number,
	      default: 2000
	    },
	    onSwitch: {
	      type: Function,
	      default: function _default() {}
	    },
	    onClose: {
	      type: Function,
	      default: function _default() {}
	    },
	    initialIndex: {
	      type: Number,
	      default: 0
	    },
	    appendToBody: {
	      type: Boolean,
	      default: true
	    },
	    maskClosable: {
	      type: Boolean,
	      default: true
	    }
	  },

	  data: function data() {
	    return {
	      index: this.initialIndex,
	      isShow: false,
	      infinite: true,
	      loading: false,
	      mode: Mode.CONTAIN,
	      transform: {
	        scale: 1,
	        deg: 0,
	        offsetX: 0,
	        offsetY: 0,
	        enableTransition: false
	      }
	    };
	  },

	  computed: {
	    isSingle: function isSingle() {
	      return this.urlList.length <= 1;
	    },
	    isFirst: function isFirst() {
	      return this.index === 0;
	    },
	    isLast: function isLast() {
	      return this.index === this.urlList.length - 1;
	    },
	    currentImg: function currentImg() {
	      return this.urlList[this.index];
	    },
	    imgStyle: function imgStyle() {
	      var _transform = this.transform,
	          scale = _transform.scale,
	          deg = _transform.deg,
	          offsetX = _transform.offsetX,
	          offsetY = _transform.offsetY,
	          enableTransition = _transform.enableTransition;

	      var style = {
	        transform: 'scale(' + scale + ') rotate(' + deg + 'deg)',
	        transition: enableTransition ? 'transform .3s' : '',
	        'margin-left': offsetX + 'px',
	        'margin-top': offsetY + 'px'
	      };
	      if (this.mode === Mode.CONTAIN) {
	        style.maxWidth = style.maxHeight = '100%';
	      }
	      return style;
	    },
	    viewerZIndex: function viewerZIndex() {
	      var nextZIndex = popup_["PopupManager"].nextZIndex();
	      return this.zIndex > nextZIndex ? this.zIndex : nextZIndex;
	    }
	  },
	  watch: {
	    index: {
	      handler: function handler(val) {
	        this.reset();
	        this.onSwitch(val);
	      }
	    },
	    currentImg: function currentImg(val) {
	      var _this = this;

	      this.$nextTick(function (_) {
	        var $img = _this.$refs.img[0];
	        if (!$img.complete) {
	          _this.loading = true;
	        }
	      });
	    }
	  },
	  methods: {
	    hide: function hide() {
	      this.deviceSupportUninstall();
	      this.onClose();
	    },
	    deviceSupportInstall: function deviceSupportInstall() {
	      var _this2 = this;

	      this._keyDownHandler = function (e) {
	        e.stopPropagation();
	        var keyCode = e.keyCode;
	        switch (keyCode) {
	          // ESC
	          case 27:
	            _this2.hide();
	            break;
	          // SPACE
	          case 32:
	            _this2.toggleMode();
	            break;
	          // LEFT_ARROW
	          case 37:
	            _this2.prev();
	            break;
	          // UP_ARROW
	          case 38:
	            _this2.handleActions('zoomIn');
	            break;
	          // RIGHT_ARROW
	          case 39:
	            _this2.next();
	            break;
	          // DOWN_ARROW
	          case 40:
	            _this2.handleActions('zoomOut');
	            break;
	        }
	      };
	      this._mouseWheelHandler = Object(util_["rafThrottle"])(function (e) {
	        var delta = e.wheelDelta ? e.wheelDelta : -e.detail;
	        if (delta > 0) {
	          _this2.handleActions('zoomIn', {
	            zoomRate: 0.015,
	            enableTransition: false
	          });
	        } else {
	          _this2.handleActions('zoomOut', {
	            zoomRate: 0.015,
	            enableTransition: false
	          });
	        }
	      });
	      Object(dom_["on"])(document, 'keydown', this._keyDownHandler);
	      Object(dom_["on"])(document, mousewheelEventName, this._mouseWheelHandler);
	    },
	    deviceSupportUninstall: function deviceSupportUninstall() {
	      Object(dom_["off"])(document, 'keydown', this._keyDownHandler);
	      Object(dom_["off"])(document, mousewheelEventName, this._mouseWheelHandler);
	      this._keyDownHandler = null;
	      this._mouseWheelHandler = null;
	    },
	    handleImgLoad: function handleImgLoad(e) {
	      this.loading = false;
	    },
	    handleImgError: function handleImgError(e) {
	      this.loading = false;
	      e.target.alt = '加载失败';
	    },
	    handleMouseDown: function handleMouseDown(e) {
	      var _this3 = this;

	      if (this.loading || e.button !== 0) return;

	      var _transform2 = this.transform,
	          offsetX = _transform2.offsetX,
	          offsetY = _transform2.offsetY;

	      var startX = e.pageX;
	      var startY = e.pageY;
	      this._dragHandler = Object(util_["rafThrottle"])(function (ev) {
	        _this3.transform.offsetX = offsetX + ev.pageX - startX;
	        _this3.transform.offsetY = offsetY + ev.pageY - startY;
	      });
	      Object(dom_["on"])(document, 'mousemove', this._dragHandler);
	      Object(dom_["on"])(document, 'mouseup', function (ev) {
	        Object(dom_["off"])(document, 'mousemove', _this3._dragHandler);
	      });

	      e.preventDefault();
	    },
	    handleMaskClick: function handleMaskClick() {
	      if (this.maskClosable) {
	        this.hide();
	      }
	    },
	    reset: function reset() {
	      this.transform = {
	        scale: 1,
	        deg: 0,
	        offsetX: 0,
	        offsetY: 0,
	        enableTransition: false
	      };
	    },
	    toggleMode: function toggleMode() {
	      if (this.loading) return;

	      var modeNames = Object.keys(Mode);
	      var modeValues = Object.values(Mode);
	      var index = modeValues.indexOf(this.mode);
	      var nextIndex = (index + 1) % modeNames.length;
	      this.mode = Mode[modeNames[nextIndex]];
	      this.reset();
	    },
	    prev: function prev() {
	      if (this.isFirst && !this.infinite) return;
	      var len = this.urlList.length;
	      this.index = (this.index - 1 + len) % len;
	    },
	    next: function next() {
	      if (this.isLast && !this.infinite) return;
	      var len = this.urlList.length;
	      this.index = (this.index + 1) % len;
	    },
	    handleActions: function handleActions(action) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	      if (this.loading) return;

	      var _zoomRate$rotateDeg$e = image_viewervue_type_script_lang_js_extends({
	        zoomRate: 0.2,
	        rotateDeg: 90,
	        enableTransition: true
	      }, options),
	          zoomRate = _zoomRate$rotateDeg$e.zoomRate,
	          rotateDeg = _zoomRate$rotateDeg$e.rotateDeg,
	          enableTransition = _zoomRate$rotateDeg$e.enableTransition;

	      var transform = this.transform;

	      switch (action) {
	        case 'zoomOut':
	          if (transform.scale > 0.2) {
	            transform.scale = parseFloat((transform.scale - zoomRate).toFixed(3));
	          }
	          break;
	        case 'zoomIn':
	          transform.scale = parseFloat((transform.scale + zoomRate).toFixed(3));
	          break;
	        case 'clocelise':
	          transform.deg += rotateDeg;
	          break;
	        case 'anticlocelise':
	          transform.deg -= rotateDeg;
	          break;
	      }
	      transform.enableTransition = enableTransition;
	    }
	  },
	  mounted: function mounted() {
	    this.deviceSupportInstall();
	    if (this.appendToBody) {
	      document.body.appendChild(this.$el);
	    }
	    // add tabindex then wrapper can be focusable via Javascript
	    // focus wrapper so arrow key can't cause inner scroll behavior underneath
	    this.$refs['el-image-viewer__wrapper'].focus();
	  },
	  destroyed: function destroyed() {
	    // if appendToBody is true, remove DOM node after destroy
	    if (this.appendToBody && this.$el && this.$el.parentNode) {
	      this.$el.parentNode.removeChild(this.$el);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/image/src/image-viewer.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_image_viewervue_type_script_lang_js_ = (image_viewervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/image/src/image-viewer.vue





	/* normalize component */

	var image_viewer_component = normalizeComponent(
	  src_image_viewervue_type_script_lang_js_,
	  image_viewervue_type_template_id_5e73b307_render,
	  image_viewervue_type_template_id_5e73b307_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	image_viewer_component.options.__file = "packages/image/src/image-viewer.vue";
	/* harmony default export */ var image_viewer = (image_viewer_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//







	var isSupportObjectFit = function isSupportObjectFit() {
	  return document.documentElement.style.objectFit !== undefined;
	};

	var ObjectFit = {
	  NONE: 'none',
	  CONTAIN: 'contain',
	  COVER: 'cover',
	  FILL: 'fill',
	  SCALE_DOWN: 'scale-down'
	};

	var prevOverflow = '';

	/* harmony default export */ var image_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElImage',

	  mixins: [locale_default.a],
	  inheritAttrs: false,

	  components: {
	    ImageViewer: image_viewer
	  },

	  props: {
	    src: String,
	    fit: String,
	    lazy: Boolean,
	    scrollContainer: {},
	    previewSrcList: {
	      type: Array,
	      default: function _default() {
	        return [];
	      }
	    },
	    zIndex: {
	      type: Number,
	      default: 2000
	    },
	    initialIndex: Number
	  },

	  data: function data() {
	    return {
	      loading: true,
	      error: false,
	      show: !this.lazy,
	      imageWidth: 0,
	      imageHeight: 0,
	      showViewer: false
	    };
	  },


	  computed: {
	    imageStyle: function imageStyle() {
	      var fit = this.fit;

	      if (!this.$isServer && fit) {
	        return isSupportObjectFit() ? { 'object-fit': fit } : this.getImageStyle(fit);
	      }
	      return {};
	    },
	    alignCenter: function alignCenter() {
	      return !this.$isServer && !isSupportObjectFit() && this.fit !== ObjectFit.FILL;
	    },
	    preview: function preview() {
	      var previewSrcList = this.previewSrcList;

	      return Array.isArray(previewSrcList) && previewSrcList.length > 0;
	    },
	    imageIndex: function imageIndex() {
	      var previewIndex = 0;
	      var initialIndex = this.initialIndex;
	      if (initialIndex >= 0) {
	        previewIndex = initialIndex;
	        return previewIndex;
	      }
	      var srcIndex = this.previewSrcList.indexOf(this.src);
	      if (srcIndex >= 0) {
	        previewIndex = srcIndex;
	        return previewIndex;
	      }
	      return previewIndex;
	    }
	  },

	  watch: {
	    src: function src(val) {
	      this.show && this.loadImage();
	    },
	    show: function show(val) {
	      val && this.loadImage();
	    }
	  },

	  mounted: function mounted() {
	    if (this.lazy) {
	      this.addLazyLoadListener();
	    } else {
	      this.loadImage();
	    }
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.lazy && this.removeLazyLoadListener();
	  },


	  methods: {
	    loadImage: function loadImage() {
	      var _this = this;

	      if (this.$isServer) return;

	      // reset status
	      this.loading = true;
	      this.error = false;

	      var img = new Image();
	      img.onload = function (e) {
	        return _this.handleLoad(e, img);
	      };
	      img.onerror = this.handleError.bind(this);

	      // bind html attrs
	      // so it can behave consistently
	      Object.keys(this.$attrs).forEach(function (key) {
	        var value = _this.$attrs[key];
	        img.setAttribute(key, value);
	      });
	      img.src = this.src;
	    },
	    handleLoad: function handleLoad(e, img) {
	      this.imageWidth = img.width;
	      this.imageHeight = img.height;
	      this.loading = false;
	      this.error = false;
	    },
	    handleError: function handleError(e) {
	      this.loading = false;
	      this.error = true;
	      this.$emit('error', e);
	    },
	    handleLazyLoad: function handleLazyLoad() {
	      if (Object(dom_["isInContainer"])(this.$el, this._scrollContainer)) {
	        this.show = true;
	        this.removeLazyLoadListener();
	      }
	    },
	    addLazyLoadListener: function addLazyLoadListener() {
	      if (this.$isServer) return;

	      var scrollContainer = this.scrollContainer;

	      var _scrollContainer = null;

	      if (Object(types_["isHtmlElement"])(scrollContainer)) {
	        _scrollContainer = scrollContainer;
	      } else if (Object(types_["isString"])(scrollContainer)) {
	        _scrollContainer = document.querySelector(scrollContainer);
	      } else {
	        _scrollContainer = Object(dom_["getScrollContainer"])(this.$el);
	      }

	      if (_scrollContainer) {
	        this._scrollContainer = _scrollContainer;
	        this._lazyLoadHandler = throttle_default()(200, this.handleLazyLoad);
	        Object(dom_["on"])(_scrollContainer, 'scroll', this._lazyLoadHandler);
	        this.handleLazyLoad();
	      }
	    },
	    removeLazyLoadListener: function removeLazyLoadListener() {
	      var _scrollContainer = this._scrollContainer,
	          _lazyLoadHandler = this._lazyLoadHandler;


	      if (this.$isServer || !_scrollContainer || !_lazyLoadHandler) return;

	      Object(dom_["off"])(_scrollContainer, 'scroll', _lazyLoadHandler);
	      this._scrollContainer = null;
	      this._lazyLoadHandler = null;
	    },

	    /**
	     * simulate object-fit behavior to compatible with IE11 and other browsers which not support object-fit
	     */
	    getImageStyle: function getImageStyle(fit) {
	      var imageWidth = this.imageWidth,
	          imageHeight = this.imageHeight;
	      var _$el = this.$el,
	          containerWidth = _$el.clientWidth,
	          containerHeight = _$el.clientHeight;


	      if (!imageWidth || !imageHeight || !containerWidth || !containerHeight) return {};

	      var imageAspectRatio = imageWidth / imageHeight;
	      var containerAspectRatio = containerWidth / containerHeight;

	      if (fit === ObjectFit.SCALE_DOWN) {
	        var isSmaller = imageWidth < containerWidth && imageHeight < containerHeight;
	        fit = isSmaller ? ObjectFit.NONE : ObjectFit.CONTAIN;
	      }

	      switch (fit) {
	        case ObjectFit.NONE:
	          return { width: 'auto', height: 'auto' };
	        case ObjectFit.CONTAIN:
	          return imageAspectRatio < containerAspectRatio ? { width: 'auto' } : { height: 'auto' };
	        case ObjectFit.COVER:
	          return imageAspectRatio < containerAspectRatio ? { height: 'auto' } : { width: 'auto' };
	        default:
	          return {};
	      }
	    },
	    clickHandler: function clickHandler() {
	      // don't show viewer when preview is false
	      if (!this.preview) {
	        return;
	      }
	      // prevent body scroll
	      prevOverflow = document.body.style.overflow;
	      document.body.style.overflow = 'hidden';
	      this.showViewer = true;
	    },
	    closeViewer: function closeViewer() {
	      document.body.style.overflow = prevOverflow;
	      this.showViewer = false;
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/image/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_image_src_mainvue_type_script_lang_js_ = (image_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/image/src/main.vue





	/* normalize component */

	var image_src_main_component = normalizeComponent(
	  packages_image_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_44d84a7c_render,
	  mainvue_type_template_id_44d84a7c_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	image_src_main_component.options.__file = "packages/image/src/main.vue";
	/* harmony default export */ var image_src_main = (image_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/image/index.js


	/* istanbul ignore next */
	image_src_main.install = function (Vue) {
	  Vue.component(image_src_main.name, image_src_main);
	};

	/* harmony default export */ var packages_image = (image_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/main.vue?vue&type=template&id=6d9756be&
	var mainvue_type_template_id_6d9756be_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-calendar" }, [
	    _c("div", { staticClass: "el-calendar__header" }, [
	      _c("div", { staticClass: "el-calendar__title" }, [
	        _vm._v("\n      " + _vm._s(_vm.i18nDate) + "\n    ")
	      ]),
	      _vm.validatedRange.length === 0
	        ? _c(
	            "div",
	            { staticClass: "el-calendar__button-group" },
	            [
	              _c(
	                "el-button-group",
	                [
	                  _c(
	                    "el-button",
	                    {
	                      attrs: { type: "plain", size: "mini" },
	                      on: {
	                        click: function($event) {
	                          _vm.selectDate("prev-month");
	                        }
	                      }
	                    },
	                    [
	                      _vm._v(
	                        "\n          " +
	                          _vm._s(_vm.t("el.datepicker.prevMonth")) +
	                          "\n        "
	                      )
	                    ]
	                  ),
	                  _c(
	                    "el-button",
	                    {
	                      attrs: { type: "plain", size: "mini" },
	                      on: {
	                        click: function($event) {
	                          _vm.selectDate("today");
	                        }
	                      }
	                    },
	                    [
	                      _vm._v(
	                        "\n          " +
	                          _vm._s(_vm.t("el.datepicker.today")) +
	                          "\n        "
	                      )
	                    ]
	                  ),
	                  _c(
	                    "el-button",
	                    {
	                      attrs: { type: "plain", size: "mini" },
	                      on: {
	                        click: function($event) {
	                          _vm.selectDate("next-month");
	                        }
	                      }
	                    },
	                    [
	                      _vm._v(
	                        "\n          " +
	                          _vm._s(_vm.t("el.datepicker.nextMonth")) +
	                          "\n        "
	                      )
	                    ]
	                  )
	                ],
	                1
	              )
	            ],
	            1
	          )
	        : _vm._e()
	    ]),
	    _vm.validatedRange.length === 0
	      ? _c(
	          "div",
	          { key: "no-range", staticClass: "el-calendar__body" },
	          [
	            _c("date-table", {
	              attrs: {
	                date: _vm.date,
	                "selected-day": _vm.realSelectedDay,
	                "first-day-of-week": _vm.realFirstDayOfWeek
	              },
	              on: { pick: _vm.pickDay }
	            })
	          ],
	          1
	        )
	      : _c(
	          "div",
	          { key: "has-range", staticClass: "el-calendar__body" },
	          _vm._l(_vm.validatedRange, function(range, index) {
	            return _c("date-table", {
	              key: index,
	              attrs: {
	                date: range[0],
	                "selected-day": _vm.realSelectedDay,
	                range: range,
	                "hide-header": index !== 0,
	                "first-day-of-week": _vm.realFirstDayOfWeek
	              },
	              on: { pick: _vm.pickDay }
	            })
	          }),
	          1
	        )
	  ])
	};
	var mainvue_type_template_id_6d9756be_staticRenderFns = [];
	mainvue_type_template_id_6d9756be_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/calendar/src/main.vue?vue&type=template&id=6d9756be&

	// EXTERNAL MODULE: external "element-ui/lib/utils/date"
	var date_ = __webpack_require__(20);
	var date_default = /*#__PURE__*/__webpack_require__.n(date_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/date-table.vue?vue&type=script&lang=js&




	/* harmony default export */ var src_date_tablevue_type_script_lang_js_ = ({
	  props: {
	    selectedDay: String, // formated date yyyy-MM-dd
	    range: {
	      type: Array,
	      validator: function validator(val) {
	        if (!(val && val.length)) return true;
	        var start = val[0],
	            end = val[1];

	        return Object(date_util_["validateRangeInOneMonth"])(start, end);
	      }
	    },
	    date: Date,
	    hideHeader: Boolean,
	    firstDayOfWeek: Number
	  },

	  inject: ['elCalendar'],

	  methods: {
	    toNestedArr: function toNestedArr(days) {
	      return Object(date_util_["range"])(days.length / 7).map(function (_, index) {
	        var start = index * 7;
	        return days.slice(start, start + 7);
	      });
	    },
	    getFormateDate: function getFormateDate(day, type) {
	      if (!day || ['prev', 'current', 'next'].indexOf(type) === -1) {
	        throw new Error('invalid day or type');
	      }
	      var prefix = this.curMonthDatePrefix;
	      if (type === 'prev') {
	        prefix = this.prevMonthDatePrefix;
	      } else if (type === 'next') {
	        prefix = this.nextMonthDatePrefix;
	      }
	      day = ('00' + day).slice(-2);
	      return prefix + '-' + day;
	    },
	    getCellClass: function getCellClass(_ref) {
	      var text = _ref.text,
	          type = _ref.type;

	      var classes = [type];
	      if (type === 'current') {
	        var date = this.getFormateDate(text, type);
	        if (date === this.selectedDay) {
	          classes.push('is-selected');
	        }
	        if (date === this.formatedToday) {
	          classes.push('is-today');
	        }
	      }
	      return classes;
	    },
	    pickDay: function pickDay(_ref2) {
	      var text = _ref2.text,
	          type = _ref2.type;

	      var date = this.getFormateDate(text, type);
	      this.$emit('pick', date);
	    },
	    cellRenderProxy: function cellRenderProxy(_ref3) {
	      var text = _ref3.text,
	          type = _ref3.type;
	      var h = this.$createElement;

	      var render = this.elCalendar.$scopedSlots.dateCell;
	      if (!render) return h('span', [text]);

	      var day = this.getFormateDate(text, type);
	      var date = new Date(day);
	      var data = {
	        isSelected: this.selectedDay === day,
	        type: type + '-month',
	        day: day
	      };
	      return render({ date: date, data: data });
	    }
	  },

	  computed: {
	    WEEK_DAYS: function WEEK_DAYS() {
	      return Object(date_util_["getI18nSettings"])().dayNames;
	    },
	    prevMonthDatePrefix: function prevMonthDatePrefix() {
	      var temp = new Date(this.date.getTime());
	      temp.setDate(0);
	      return date_default.a.format(temp, 'yyyy-MM');
	    },
	    curMonthDatePrefix: function curMonthDatePrefix() {
	      return date_default.a.format(this.date, 'yyyy-MM');
	    },
	    nextMonthDatePrefix: function nextMonthDatePrefix() {
	      var temp = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 1);
	      return date_default.a.format(temp, 'yyyy-MM');
	    },
	    formatedToday: function formatedToday() {
	      return this.elCalendar.formatedToday;
	    },
	    isInRange: function isInRange() {
	      return this.range && this.range.length;
	    },
	    rows: function rows() {
	      var days = [];
	      // if range exists, should render days in range.
	      if (this.isInRange) {
	        var _range = this.range,
	            start = _range[0],
	            end = _range[1];

	        var currentMonthRange = Object(date_util_["range"])(end.getDate() - start.getDate() + 1).map(function (_, index) {
	          return {
	            text: start.getDate() + index,
	            type: 'current'
	          };
	        });
	        var remaining = currentMonthRange.length % 7;
	        remaining = remaining === 0 ? 0 : 7 - remaining;
	        var nextMonthRange = Object(date_util_["range"])(remaining).map(function (_, index) {
	          return {
	            text: index + 1,
	            type: 'next'
	          };
	        });
	        days = currentMonthRange.concat(nextMonthRange);
	      } else {
	        var date = this.date;
	        var firstDay = Object(date_util_["getFirstDayOfMonth"])(date);
	        firstDay = firstDay === 0 ? 7 : firstDay;
	        var firstDayOfWeek = typeof this.firstDayOfWeek === 'number' ? this.firstDayOfWeek : 1;
	        var offset = (7 + firstDay - firstDayOfWeek) % 7;
	        var prevMonthDays = Object(date_util_["getPrevMonthLastDays"])(date, offset).map(function (day) {
	          return {
	            text: day,
	            type: 'prev'
	          };
	        });
	        var currentMonthDays = Object(date_util_["getMonthDays"])(date).map(function (day) {
	          return {
	            text: day,
	            type: 'current'
	          };
	        });
	        days = [].concat(prevMonthDays, currentMonthDays);
	        var nextMonthDays = Object(date_util_["range"])(42 - days.length).map(function (_, index) {
	          return {
	            text: index + 1,
	            type: 'next'
	          };
	        });
	        days = days.concat(nextMonthDays);
	      }
	      return this.toNestedArr(days);
	    },
	    weekDays: function weekDays() {
	      var start = this.firstDayOfWeek;
	      var WEEK_DAYS = this.WEEK_DAYS;


	      if (typeof start !== 'number' || start === 0) {
	        return WEEK_DAYS.slice();
	      } else {
	        return WEEK_DAYS.slice(start).concat(WEEK_DAYS.slice(0, start));
	      }
	    }
	  },

	  render: function render() {
	    var _this = this;

	    var h = arguments[0];

	    var thead = this.hideHeader ? null : h('thead', [this.weekDays.map(function (day) {
	      return h(
	        'th',
	        { key: day },
	        [day]
	      );
	    })]);
	    return h(
	      'table',
	      {
	        'class': {
	          'el-calendar-table': true,
	          'is-range': this.isInRange
	        },
	        attrs: { cellspacing: '0',
	          cellpadding: '0' }
	      },
	      [thead, h('tbody', [this.rows.map(function (row, index) {
	        return h(
	          'tr',
	          {
	            'class': {
	              'el-calendar-table__row': true,
	              'el-calendar-table__row--hide-border': index === 0 && _this.hideHeader
	            },
	            key: index },
	          [row.map(function (cell, key) {
	            return h(
	              'td',
	              { key: key,
	                'class': _this.getCellClass(cell),
	                on: {
	                  'click': _this.pickDay.bind(_this, cell)
	                }
	              },
	              [h(
	                'div',
	                { 'class': 'el-calendar-day' },
	                [_this.cellRenderProxy(cell)]
	              )]
	            );
	          })]
	        );
	      })])]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/calendar/src/date-table.vue?vue&type=script&lang=js&
	 /* harmony default export */ var calendar_src_date_tablevue_type_script_lang_js_ = (src_date_tablevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/calendar/src/date-table.vue
	var date_table_render, date_table_staticRenderFns;




	/* normalize component */

	var src_date_table_component = normalizeComponent(
	  calendar_src_date_tablevue_type_script_lang_js_,
	  date_table_render,
	  date_table_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	src_date_table_component.options.__file = "packages/calendar/src/date-table.vue";
	/* harmony default export */ var src_date_table = (src_date_table_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//








	var validTypes = ['prev-month', 'today', 'next-month'];
	var weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
	var oneDay = 86400000;

	/* harmony default export */ var calendar_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElCalendar',

	  mixins: [locale_default.a],

	  components: {
	    DateTable: src_date_table,
	    ElButton: button_default.a,
	    ElButtonGroup: button_group_default.a
	  },

	  props: {
	    value: [Date, String, Number],
	    range: {
	      type: Array,
	      validator: function validator(range) {
	        if (Array.isArray(range)) {
	          return range.length === 2 && range.every(function (item) {
	            return typeof item === 'string' || typeof item === 'number' || item instanceof Date;
	          });
	        } else {
	          return true;
	        }
	      }
	    },
	    firstDayOfWeek: {
	      type: Number,
	      default: 1
	    }
	  },

	  provide: function provide() {
	    return {
	      elCalendar: this
	    };
	  },


	  methods: {
	    pickDay: function pickDay(day) {
	      this.realSelectedDay = day;
	    },
	    selectDate: function selectDate(type) {
	      if (validTypes.indexOf(type) === -1) {
	        throw new Error('invalid type ' + type);
	      }
	      var day = '';
	      if (type === 'prev-month') {
	        day = this.prevMonthDatePrefix + '-01';
	      } else if (type === 'next-month') {
	        day = this.nextMonthDatePrefix + '-01';
	      } else {
	        day = this.formatedToday;
	      }

	      if (day === this.formatedDate) return;
	      this.pickDay(day);
	    },
	    toDate: function toDate(val) {
	      if (!val) {
	        throw new Error('invalid val');
	      }
	      return val instanceof Date ? val : new Date(val);
	    },
	    rangeValidator: function rangeValidator(date, isStart) {
	      var firstDayOfWeek = this.realFirstDayOfWeek;
	      var expected = isStart ? firstDayOfWeek : firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;
	      var message = (isStart ? 'start' : 'end') + ' of range should be ' + weekDays[expected] + '.';
	      if (date.getDay() !== expected) {
	        console.warn('[ElementCalendar]', message, 'Invalid range will be ignored.');
	        return false;
	      }
	      return true;
	    }
	  },

	  computed: {
	    prevMonthDatePrefix: function prevMonthDatePrefix() {
	      var temp = new Date(this.date.getTime());
	      temp.setDate(0);
	      return date_default.a.format(temp, 'yyyy-MM');
	    },
	    curMonthDatePrefix: function curMonthDatePrefix() {
	      return date_default.a.format(this.date, 'yyyy-MM');
	    },
	    nextMonthDatePrefix: function nextMonthDatePrefix() {
	      var temp = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 1);
	      return date_default.a.format(temp, 'yyyy-MM');
	    },
	    formatedDate: function formatedDate() {
	      return date_default.a.format(this.date, 'yyyy-MM-dd');
	    },
	    i18nDate: function i18nDate() {
	      var year = this.date.getFullYear();
	      var month = this.date.getMonth() + 1;
	      return year + ' ' + this.t('el.datepicker.year') + ' ' + this.t('el.datepicker.month' + month);
	    },
	    formatedToday: function formatedToday() {
	      return date_default.a.format(this.now, 'yyyy-MM-dd');
	    },


	    realSelectedDay: {
	      get: function get() {
	        if (!this.value) return this.selectedDay;
	        return this.formatedDate;
	      },
	      set: function set(val) {
	        this.selectedDay = val;
	        var date = new Date(val);
	        this.$emit('input', date);
	      }
	    },

	    date: function date() {
	      if (!this.value) {
	        if (this.realSelectedDay) {
	          var d = this.selectedDay.split('-');
	          return new Date(d[0], d[1] - 1, d[2]);
	        } else if (this.validatedRange.length) {
	          return this.validatedRange[0][0];
	        }
	        return this.now;
	      } else {
	        return this.toDate(this.value);
	      }
	    },


	    // if range is valid, we get a two-digit array
	    validatedRange: function validatedRange() {
	      var _this = this;

	      var range = this.range;
	      if (!range) return [];
	      range = range.reduce(function (prev, val, index) {
	        var date = _this.toDate(val);
	        if (_this.rangeValidator(date, index === 0)) {
	          prev = prev.concat(date);
	        }
	        return prev;
	      }, []);
	      if (range.length === 2) {
	        var _range = range,
	            start = _range[0],
	            end = _range[1];

	        if (start > end) {
	          console.warn('[ElementCalendar]end time should be greater than start time');
	          return [];
	        }
	        // start time and end time in one month
	        if (Object(date_util_["validateRangeInOneMonth"])(start, end)) {
	          return [[start, end]];
	        }
	        var data = [];
	        var startDay = new Date(start.getFullYear(), start.getMonth() + 1, 1);
	        var lastDay = this.toDate(startDay.getTime() - oneDay);
	        if (!Object(date_util_["validateRangeInOneMonth"])(startDay, end)) {
	          console.warn('[ElementCalendar]start time and end time interval must not exceed two months');
	          return [];
	        }
	        // 第一个月的时间范围
	        data.push([start, lastDay]);
	        // 下一月的时间范围，需要计算一下该月的第一个周起始日
	        var firstDayOfWeek = this.realFirstDayOfWeek;
	        var nextMontFirstDay = startDay.getDay();
	        var interval = 0;
	        if (nextMontFirstDay !== firstDayOfWeek) {
	          if (firstDayOfWeek === 0) {
	            interval = 7 - nextMontFirstDay;
	          } else {
	            interval = firstDayOfWeek - nextMontFirstDay;
	            interval = interval > 0 ? interval : 7 + interval;
	          }
	        }
	        startDay = this.toDate(startDay.getTime() + interval * oneDay);
	        if (startDay.getDate() < end.getDate()) {
	          data.push([startDay, end]);
	        }
	        return data;
	      }
	      return [];
	    },
	    realFirstDayOfWeek: function realFirstDayOfWeek() {
	      if (this.firstDayOfWeek < 1 || this.firstDayOfWeek > 6) {
	        return 0;
	      }
	      return Math.floor(this.firstDayOfWeek);
	    }
	  },

	  data: function data() {
	    return {
	      selectedDay: '',
	      now: new Date()
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/calendar/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_calendar_src_mainvue_type_script_lang_js_ = (calendar_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/calendar/src/main.vue





	/* normalize component */

	var calendar_src_main_component = normalizeComponent(
	  packages_calendar_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_6d9756be_render,
	  mainvue_type_template_id_6d9756be_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	calendar_src_main_component.options.__file = "packages/calendar/src/main.vue";
	/* harmony default export */ var calendar_src_main = (calendar_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/calendar/index.js


	/* istanbul ignore next */
	calendar_src_main.install = function (Vue) {
	  Vue.component(calendar_src_main.name, calendar_src_main);
	};

	/* harmony default export */ var calendar = (calendar_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/backtop/src/main.vue?vue&type=template&id=257dd4a9&
	var mainvue_type_template_id_257dd4a9_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("transition", { attrs: { name: "el-fade-in" } }, [
	    _vm.visible
	      ? _c(
	          "div",
	          {
	            staticClass: "el-backtop",
	            style: {
	              right: _vm.styleRight,
	              bottom: _vm.styleBottom
	            },
	            on: {
	              click: function($event) {
	                $event.stopPropagation();
	                return _vm.handleClick($event)
	              }
	            }
	          },
	          [
	            _vm._t("default", [_c("el-icon", { attrs: { name: "caret-top" } })])
	          ],
	          2
	        )
	      : _vm._e()
	  ])
	};
	var mainvue_type_template_id_257dd4a9_staticRenderFns = [];
	mainvue_type_template_id_257dd4a9_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/backtop/src/main.vue?vue&type=template&id=257dd4a9&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/backtop/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//



	var cubic = function cubic(value) {
	  return Math.pow(value, 3);
	};
	var easeInOutCubic = function easeInOutCubic(value) {
	  return value < 0.5 ? cubic(value * 2) / 2 : 1 - cubic((1 - value) * 2) / 2;
	};

	/* harmony default export */ var backtop_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElBacktop',

	  props: {
	    visibilityHeight: {
	      type: Number,
	      default: 200
	    },
	    target: [String],
	    right: {
	      type: Number,
	      default: 40
	    },
	    bottom: {
	      type: Number,
	      default: 40
	    }
	  },

	  data: function data() {
	    return {
	      el: null,
	      container: null,
	      visible: false
	    };
	  },


	  computed: {
	    styleBottom: function styleBottom() {
	      return this.bottom + 'px';
	    },
	    styleRight: function styleRight() {
	      return this.right + 'px';
	    }
	  },

	  mounted: function mounted() {
	    this.init();
	    this.throttledScrollHandler = throttle_default()(300, this.onScroll);
	    this.container.addEventListener('scroll', this.throttledScrollHandler);
	  },


	  methods: {
	    init: function init() {
	      this.container = document;
	      this.el = document.documentElement;
	      if (this.target) {
	        this.el = document.querySelector(this.target);
	        if (!this.el) {
	          throw new Error('target is not existed: ' + this.target);
	        }
	        this.container = this.el;
	      }
	    },
	    onScroll: function onScroll() {
	      var scrollTop = this.el.scrollTop;
	      this.visible = scrollTop >= this.visibilityHeight;
	    },
	    handleClick: function handleClick(e) {
	      this.scrollToTop();
	      this.$emit('click', e);
	    },
	    scrollToTop: function scrollToTop() {
	      var el = this.el;
	      var beginTime = Date.now();
	      var beginValue = el.scrollTop;
	      var rAF = window.requestAnimationFrame || function (func) {
	        return setTimeout(func, 16);
	      };
	      var frameFunc = function frameFunc() {
	        var progress = (Date.now() - beginTime) / 500;
	        if (progress < 1) {
	          el.scrollTop = beginValue * (1 - easeInOutCubic(progress));
	          rAF(frameFunc);
	        } else {
	          el.scrollTop = 0;
	        }
	      };
	      rAF(frameFunc);
	    }
	  },

	  beforeDestroy: function beforeDestroy() {
	    this.container.removeEventListener('scroll', this.throttledScrollHandler);
	  }
	});
	// CONCATENATED MODULE: ./packages/backtop/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_backtop_src_mainvue_type_script_lang_js_ = (backtop_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/backtop/src/main.vue





	/* normalize component */

	var backtop_src_main_component = normalizeComponent(
	  packages_backtop_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_257dd4a9_render,
	  mainvue_type_template_id_257dd4a9_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	backtop_src_main_component.options.__file = "packages/backtop/src/main.vue";
	/* harmony default export */ var backtop_src_main = (backtop_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/backtop/index.js


	/* istanbul ignore next */
	backtop_src_main.install = function (Vue) {
	  Vue.component(backtop_src_main.name, backtop_src_main);
	};

	/* harmony default export */ var backtop = (backtop_src_main);
	// CONCATENATED MODULE: ./packages/infinite-scroll/src/main.js




	var getStyleComputedProperty = function getStyleComputedProperty(element, property) {
	  if (element === window) {
	    element = document.documentElement;
	  }

	  if (element.nodeType !== 1) {
	    return [];
	  }
	  // NOTE: 1 DOM access here
	  var css = window.getComputedStyle(element, null);
	  return property ? css[property] : css;
	};

	var entries = function entries(obj) {
	  return Object.keys(obj || {}).map(function (key) {
	    return [key, obj[key]];
	  });
	};

	var getPositionSize = function getPositionSize(el, prop) {
	  return el === window || el === document ? document.documentElement[prop] : el[prop];
	};

	var getOffsetHeight = function getOffsetHeight(el) {
	  return getPositionSize(el, 'offsetHeight');
	};

	var getClientHeight = function getClientHeight(el) {
	  return getPositionSize(el, 'clientHeight');
	};

	var scope = 'ElInfiniteScroll';
	var attributes = {
	  delay: {
	    type: Number,
	    default: 200
	  },
	  distance: {
	    type: Number,
	    default: 0
	  },
	  disabled: {
	    type: Boolean,
	    default: false
	  },
	  immediate: {
	    type: Boolean,
	    default: true
	  }
	};

	var main_getScrollOptions = function getScrollOptions(el, vm) {
	  if (!Object(types_["isHtmlElement"])(el)) return {};

	  return entries(attributes).reduce(function (map, _ref) {
	    var key = _ref[0],
	        option = _ref[1];
	    var type = option.type,
	        defaultValue = option.default;

	    var value = el.getAttribute('infinite-scroll-' + key);
	    value = Object(types_["isUndefined"])(vm[value]) ? value : vm[value];
	    switch (type) {
	      case Number:
	        value = Number(value);
	        value = Number.isNaN(value) ? defaultValue : value;
	        break;
	      case Boolean:
	        value = Object(types_["isDefined"])(value) ? value === 'false' ? false : Boolean(value) : defaultValue;
	        break;
	      default:
	        value = type(value);
	    }
	    map[key] = value;
	    return map;
	  }, {});
	};

	var getElementTop = function getElementTop(el) {
	  return el.getBoundingClientRect().top;
	};

	var main_handleScroll = function handleScroll(cb) {
	  var _scope = this[scope],
	      el = _scope.el,
	      vm = _scope.vm,
	      container = _scope.container,
	      observer = _scope.observer;

	  var _getScrollOptions = main_getScrollOptions(el, vm),
	      distance = _getScrollOptions.distance,
	      disabled = _getScrollOptions.disabled;

	  if (disabled) return;

	  var containerInfo = container.getBoundingClientRect();
	  if (!containerInfo.width && !containerInfo.height) return;

	  var shouldTrigger = false;

	  if (container === el) {
	    // be aware of difference between clientHeight & offsetHeight & window.getComputedStyle().height
	    var scrollBottom = container.scrollTop + getClientHeight(container);
	    shouldTrigger = container.scrollHeight - scrollBottom <= distance;
	  } else {
	    var heightBelowTop = getOffsetHeight(el) + getElementTop(el) - getElementTop(container);
	    var offsetHeight = getOffsetHeight(container);
	    var borderBottom = Number.parseFloat(getStyleComputedProperty(container, 'borderBottomWidth'));
	    shouldTrigger = heightBelowTop - offsetHeight + borderBottom <= distance;
	  }

	  if (shouldTrigger && Object(types_["isFunction"])(cb)) {
	    cb.call(vm);
	  } else if (observer) {
	    observer.disconnect();
	    this[scope].observer = null;
	  }
	};

	/* harmony default export */ var infinite_scroll_src_main = ({
	  name: 'InfiniteScroll',
	  inserted: function inserted(el, binding, vnode) {
	    var cb = binding.value;

	    var vm = vnode.context;
	    // only include vertical scroll
	    var container = Object(dom_["getScrollContainer"])(el, true);

	    var _getScrollOptions2 = main_getScrollOptions(el, vm),
	        delay = _getScrollOptions2.delay,
	        immediate = _getScrollOptions2.immediate;

	    var onScroll = debounce_default()(delay, main_handleScroll.bind(el, cb));

	    el[scope] = { el: el, vm: vm, container: container, onScroll: onScroll };

	    if (container) {
	      container.addEventListener('scroll', onScroll);

	      if (immediate) {
	        var observer = el[scope].observer = new MutationObserver(onScroll);
	        observer.observe(container, { childList: true, subtree: true });
	        onScroll();
	      }
	    }
	  },
	  unbind: function unbind(el) {
	    var _el$scope = el[scope],
	        container = _el$scope.container,
	        onScroll = _el$scope.onScroll;

	    if (container) {
	      container.removeEventListener('scroll', onScroll);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/infinite-scroll/index.js


	/* istanbul ignore next */
	infinite_scroll_src_main.install = function (Vue) {
	  Vue.directive(infinite_scroll_src_main.name, infinite_scroll_src_main);
	};

	/* harmony default export */ var infinite_scroll = (infinite_scroll_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/page-header/src/main.vue?vue&type=template&id=5070954c&
	var mainvue_type_template_id_5070954c_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-page-header" }, [
	    _c(
	      "div",
	      {
	        staticClass: "el-page-header__left",
	        on: {
	          click: function($event) {
	            _vm.$emit("back");
	          }
	        }
	      },
	      [
	        _c("i", { staticClass: "el-icon-back" }),
	        _c(
	          "div",
	          { staticClass: "el-page-header__title" },
	          [_vm._t("title", [_vm._v(_vm._s(_vm.title))])],
	          2
	        )
	      ]
	    ),
	    _c(
	      "div",
	      { staticClass: "el-page-header__content" },
	      [_vm._t("content", [_vm._v(_vm._s(_vm.content))])],
	      2
	    )
	  ])
	};
	var mainvue_type_template_id_5070954c_staticRenderFns = [];
	mainvue_type_template_id_5070954c_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/page-header/src/main.vue?vue&type=template&id=5070954c&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/page-header/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//


	/* harmony default export */ var page_header_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElPageHeader',

	  props: {
	    title: {
	      type: String,
	      default: function _default() {
	        return Object(lib_locale_["t"])('el.pageHeader.title');
	      }
	    },
	    content: String
	  }
	});
	// CONCATENATED MODULE: ./packages/page-header/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_page_header_src_mainvue_type_script_lang_js_ = (page_header_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/page-header/src/main.vue





	/* normalize component */

	var page_header_src_main_component = normalizeComponent(
	  packages_page_header_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_5070954c_render,
	  mainvue_type_template_id_5070954c_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	page_header_src_main_component.options.__file = "packages/page-header/src/main.vue";
	/* harmony default export */ var page_header_src_main = (page_header_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/page-header/index.js


	/* istanbul ignore next */
	page_header_src_main.install = function (Vue) {
	  Vue.component(page_header_src_main.name, page_header_src_main);
	};

	/* harmony default export */ var page_header = (page_header_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=34932346&
	var cascader_panelvue_type_template_id_34932346_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    {
	      class: ["el-cascader-panel", _vm.border && "is-bordered"],
	      on: { keydown: _vm.handleKeyDown }
	    },
	    _vm._l(_vm.menus, function(menu, index) {
	      return _c("cascader-menu", {
	        key: index,
	        ref: "menu",
	        refInFor: true,
	        attrs: { index: index, nodes: menu }
	      })
	    }),
	    1
	  )
	};
	var cascader_panelvue_type_template_id_34932346_staticRenderFns = [];
	cascader_panelvue_type_template_id_34932346_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=34932346&

	// EXTERNAL MODULE: external "element-ui/lib/radio"
	var radio_ = __webpack_require__(44);
	var radio_default = /*#__PURE__*/__webpack_require__.n(radio_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&






	var stopPropagation = function stopPropagation(e) {
	  return e.stopPropagation();
	};

	/* harmony default export */ var cascader_nodevue_type_script_lang_js_ = ({
	  inject: ['panel'],

	  components: {
	    ElCheckbox: checkbox_default.a,
	    ElRadio: radio_default.a
	  },

	  props: {
	    node: {
	      required: true
	    },
	    nodeId: String
	  },

	  computed: {
	    config: function config() {
	      return this.panel.config;
	    },
	    isLeaf: function isLeaf() {
	      return this.node.isLeaf;
	    },
	    isDisabled: function isDisabled() {
	      return this.node.isDisabled;
	    },
	    checkedValue: function checkedValue() {
	      return this.panel.checkedValue;
	    },
	    isChecked: function isChecked() {
	      return this.node.isSameNode(this.checkedValue);
	    },
	    inActivePath: function inActivePath() {
	      return this.isInPath(this.panel.activePath);
	    },
	    inCheckedPath: function inCheckedPath() {
	      var _this = this;

	      if (!this.config.checkStrictly) return false;

	      return this.panel.checkedNodePaths.some(function (checkedPath) {
	        return _this.isInPath(checkedPath);
	      });
	    },
	    value: function value() {
	      return this.node.getValueByOption();
	    }
	  },

	  methods: {
	    handleExpand: function handleExpand() {
	      var _this2 = this;

	      var panel = this.panel,
	          node = this.node,
	          isDisabled = this.isDisabled,
	          config = this.config;
	      var multiple = config.multiple,
	          checkStrictly = config.checkStrictly;


	      if (!checkStrictly && isDisabled || node.loading) return;

	      if (config.lazy && !node.loaded) {
	        panel.lazyLoad(node, function () {
	          // do not use cached leaf value here, invoke this.isLeaf to get new value.
	          var isLeaf = _this2.isLeaf;


	          if (!isLeaf) _this2.handleExpand();
	          if (multiple) {
	            // if leaf sync checked state, else clear checked state
	            var checked = isLeaf ? node.checked : false;
	            _this2.handleMultiCheckChange(checked);
	          }
	        });
	      } else {
	        panel.handleExpand(node);
	      }
	    },
	    handleCheckChange: function handleCheckChange() {
	      var panel = this.panel,
	          value = this.value,
	          node = this.node;

	      panel.handleCheckChange(value);
	      panel.handleExpand(node);
	    },
	    handleMultiCheckChange: function handleMultiCheckChange(checked) {
	      this.node.doCheck(checked);
	      this.panel.calculateMultiCheckedValue();
	    },
	    isInPath: function isInPath(pathNodes) {
	      var node = this.node;

	      var selectedPathNode = pathNodes[node.level - 1] || {};
	      return selectedPathNode.uid === node.uid;
	    },
	    renderPrefix: function renderPrefix(h) {
	      var isLeaf = this.isLeaf,
	          isChecked = this.isChecked,
	          config = this.config;
	      var checkStrictly = config.checkStrictly,
	          multiple = config.multiple;


	      if (multiple) {
	        return this.renderCheckbox(h);
	      } else if (checkStrictly) {
	        return this.renderRadio(h);
	      } else if (isLeaf && isChecked) {
	        return this.renderCheckIcon(h);
	      }

	      return null;
	    },
	    renderPostfix: function renderPostfix(h) {
	      var node = this.node,
	          isLeaf = this.isLeaf;


	      if (node.loading) {
	        return this.renderLoadingIcon(h);
	      } else if (!isLeaf) {
	        return this.renderExpandIcon(h);
	      }

	      return null;
	    },
	    renderCheckbox: function renderCheckbox(h) {
	      var node = this.node,
	          config = this.config,
	          isDisabled = this.isDisabled;

	      var events = {
	        on: { change: this.handleMultiCheckChange },
	        nativeOn: {}
	      };

	      if (config.checkStrictly) {
	        // when every node is selectable, click event should not trigger expand event.
	        events.nativeOn.click = stopPropagation;
	      }

	      return h('el-checkbox', external_babel_helper_vue_jsx_merge_props_default()([{
	        attrs: {
	          value: node.checked,
	          indeterminate: node.indeterminate,
	          disabled: isDisabled
	        }
	      }, events]));
	    },
	    renderRadio: function renderRadio(h) {
	      var checkedValue = this.checkedValue,
	          value = this.value,
	          isDisabled = this.isDisabled;

	      // to keep same reference if value cause radio's checked state is calculated by reference comparision;

	      if (Object(util_["isEqual"])(value, checkedValue)) {
	        value = checkedValue;
	      }

	      return h(
	        'el-radio',
	        {
	          attrs: {
	            value: checkedValue,
	            label: value,
	            disabled: isDisabled
	          },
	          on: {
	            'change': this.handleCheckChange
	          },
	          nativeOn: {
	            'click': stopPropagation
	          }
	        },
	        [h('span')]
	      );
	    },
	    renderCheckIcon: function renderCheckIcon(h) {
	      return h('i', { 'class': 'el-icon-check el-cascader-node__prefix' });
	    },
	    renderLoadingIcon: function renderLoadingIcon(h) {
	      return h('i', { 'class': 'el-icon-loading el-cascader-node__postfix' });
	    },
	    renderExpandIcon: function renderExpandIcon(h) {
	      return h('i', { 'class': 'el-icon-arrow-right el-cascader-node__postfix' });
	    },
	    renderContent: function renderContent(h) {
	      var panel = this.panel,
	          node = this.node;

	      var render = panel.renderLabelFn;
	      var vnode = render ? render({ node: node, data: node.data }) : null;

	      return h(
	        'span',
	        { 'class': 'el-cascader-node__label' },
	        [vnode || node.label]
	      );
	    }
	  },

	  render: function render(h) {
	    var _this3 = this;

	    var inActivePath = this.inActivePath,
	        inCheckedPath = this.inCheckedPath,
	        isChecked = this.isChecked,
	        isLeaf = this.isLeaf,
	        isDisabled = this.isDisabled,
	        config = this.config,
	        nodeId = this.nodeId;
	    var expandTrigger = config.expandTrigger,
	        checkStrictly = config.checkStrictly,
	        multiple = config.multiple;

	    var disabled = !checkStrictly && isDisabled;
	    var events = { on: {} };

	    if (expandTrigger === 'click') {
	      events.on.click = this.handleExpand;
	    } else {
	      events.on.mouseenter = function (e) {
	        _this3.handleExpand();
	        _this3.$emit('expand', e);
	      };
	      events.on.focus = function (e) {
	        _this3.handleExpand();
	        _this3.$emit('expand', e);
	      };
	    }
	    if (isLeaf && !isDisabled && !checkStrictly && !multiple) {
	      events.on.click = this.handleCheckChange;
	    }

	    return h(
	      'li',
	      external_babel_helper_vue_jsx_merge_props_default()([{
	        attrs: {
	          role: 'menuitem',
	          id: nodeId,
	          'aria-expanded': inActivePath,
	          tabindex: disabled ? null : -1
	        },
	        'class': {
	          'el-cascader-node': true,
	          'is-selectable': checkStrictly,
	          'in-active-path': inActivePath,
	          'in-checked-path': inCheckedPath,
	          'is-active': isChecked,
	          'is-disabled': disabled
	        }
	      }, events]),
	      [this.renderPrefix(h), this.renderContent(h), this.renderPostfix(h)]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_cascader_nodevue_type_script_lang_js_ = (cascader_nodevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue
	var cascader_node_render, cascader_node_staticRenderFns;




	/* normalize component */

	var cascader_node_component = normalizeComponent(
	  src_cascader_nodevue_type_script_lang_js_,
	  cascader_node_render,
	  cascader_node_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	cascader_node_component.options.__file = "packages/cascader-panel/src/cascader-node.vue";
	/* harmony default export */ var cascader_node = (cascader_node_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&







	/* harmony default export */ var cascader_menuvue_type_script_lang_js_ = ({
	  name: 'ElCascaderMenu',

	  mixins: [locale_default.a],

	  inject: ['panel'],

	  components: {
	    ElScrollbar: scrollbar_default.a,
	    CascaderNode: cascader_node
	  },

	  props: {
	    nodes: {
	      type: Array,
	      required: true
	    },
	    index: Number
	  },

	  data: function data() {
	    return {
	      activeNode: null,
	      hoverTimer: null,
	      id: Object(util_["generateId"])()
	    };
	  },


	  computed: {
	    isEmpty: function isEmpty() {
	      return !this.nodes.length;
	    },
	    menuId: function menuId() {
	      return 'cascader-menu-' + this.id + '-' + this.index;
	    }
	  },

	  methods: {
	    handleExpand: function handleExpand(e) {
	      this.activeNode = e.target;
	    },
	    handleMouseMove: function handleMouseMove(e) {
	      var activeNode = this.activeNode,
	          hoverTimer = this.hoverTimer;
	      var hoverZone = this.$refs.hoverZone;


	      if (!activeNode || !hoverZone) return;

	      if (activeNode.contains(e.target)) {
	        clearTimeout(hoverTimer);

	        var _$el$getBoundingClien = this.$el.getBoundingClientRect(),
	            left = _$el$getBoundingClien.left;

	        var startX = e.clientX - left;
	        var _$el = this.$el,
	            offsetWidth = _$el.offsetWidth,
	            offsetHeight = _$el.offsetHeight;

	        var top = activeNode.offsetTop;
	        var bottom = top + activeNode.offsetHeight;

	        hoverZone.innerHTML = '\n          <path style="pointer-events: auto;" fill="transparent" d="M' + startX + ' ' + top + ' L' + offsetWidth + ' 0 V' + top + ' Z" />\n          <path style="pointer-events: auto;" fill="transparent" d="M' + startX + ' ' + bottom + ' L' + offsetWidth + ' ' + offsetHeight + ' V' + bottom + ' Z" />\n        ';
	      } else if (!hoverTimer) {
	        this.hoverTimer = setTimeout(this.clearHoverZone, this.panel.config.hoverThreshold);
	      }
	    },
	    clearHoverZone: function clearHoverZone() {
	      var hoverZone = this.$refs.hoverZone;

	      if (!hoverZone) return;
	      hoverZone.innerHTML = '';
	    },
	    renderEmptyText: function renderEmptyText(h) {
	      return h(
	        'div',
	        { 'class': 'el-cascader-menu__empty-text' },
	        [this.t('el.cascader.noData')]
	      );
	    },
	    renderNodeList: function renderNodeList(h) {
	      var menuId = this.menuId;
	      var isHoverMenu = this.panel.isHoverMenu;

	      var events = { on: {} };

	      if (isHoverMenu) {
	        events.on.expand = this.handleExpand;
	      }

	      var nodes = this.nodes.map(function (node, index) {
	        var hasChildren = node.hasChildren;

	        return h('cascader-node', external_babel_helper_vue_jsx_merge_props_default()([{
	          key: node.uid,
	          attrs: { node: node,
	            'node-id': menuId + '-' + index,
	            'aria-haspopup': hasChildren,
	            'aria-owns': hasChildren ? menuId : null
	          }
	        }, events]));
	      });

	      return [].concat(nodes, [isHoverMenu ? h('svg', { ref: 'hoverZone', 'class': 'el-cascader-menu__hover-zone' }) : null]);
	    }
	  },

	  render: function render(h) {
	    var isEmpty = this.isEmpty,
	        menuId = this.menuId;

	    var events = { nativeOn: {} };

	    // optimize hover to expand experience (#8010)
	    if (this.panel.isHoverMenu) {
	      events.nativeOn.mousemove = this.handleMouseMove;
	      // events.nativeOn.mouseleave = this.clearHoverZone;
	    }

	    return h(
	      'el-scrollbar',
	      external_babel_helper_vue_jsx_merge_props_default()([{
	        attrs: {
	          tag: 'ul',
	          role: 'menu',
	          id: menuId,

	          'wrap-class': 'el-cascader-menu__wrap',
	          'view-class': {
	            'el-cascader-menu__list': true,
	            'is-empty': isEmpty
	          }
	        },
	        'class': 'el-cascader-menu' }, events]),
	      [isEmpty ? this.renderEmptyText(h) : this.renderNodeList(h)]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_cascader_menuvue_type_script_lang_js_ = (cascader_menuvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue
	var cascader_menu_render, cascader_menu_staticRenderFns;




	/* normalize component */

	var cascader_menu_component = normalizeComponent(
	  src_cascader_menuvue_type_script_lang_js_,
	  cascader_menu_render,
	  cascader_menu_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	cascader_menu_component.options.__file = "packages/cascader-panel/src/cascader-menu.vue";
	/* harmony default export */ var cascader_menu = (cascader_menu_component.exports);
	// CONCATENATED MODULE: ./packages/cascader-panel/src/node.js
	var node_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function src_node_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




	var uid = 0;

	var src_node_Node = function () {
	  function Node(data, config, parentNode) {
	    src_node_classCallCheck(this, Node);

	    this.data = data;
	    this.config = config;
	    this.parent = parentNode || null;
	    this.level = !this.parent ? 1 : this.parent.level + 1;
	    this.uid = uid++;

	    this.initState();
	    this.initChildren();
	  }

	  Node.prototype.initState = function initState() {
	    var _config = this.config,
	        valueKey = _config.value,
	        labelKey = _config.label;


	    this.value = this.data[valueKey];
	    this.label = this.data[labelKey];
	    this.pathNodes = this.calculatePathNodes();
	    this.path = this.pathNodes.map(function (node) {
	      return node.value;
	    });
	    this.pathLabels = this.pathNodes.map(function (node) {
	      return node.label;
	    });

	    // lazy load
	    this.loading = false;
	    this.loaded = false;
	  };

	  Node.prototype.initChildren = function initChildren() {
	    var _this = this;

	    var config = this.config;

	    var childrenKey = config.children;
	    var childrenData = this.data[childrenKey];
	    this.hasChildren = Array.isArray(childrenData);
	    this.children = (childrenData || []).map(function (child) {
	      return new Node(child, config, _this);
	    });
	  };

	  Node.prototype.calculatePathNodes = function calculatePathNodes() {
	    var nodes = [this];
	    var parent = this.parent;

	    while (parent) {
	      nodes.unshift(parent);
	      parent = parent.parent;
	    }

	    return nodes;
	  };

	  Node.prototype.getPath = function getPath() {
	    return this.path;
	  };

	  Node.prototype.getValue = function getValue() {
	    return this.value;
	  };

	  Node.prototype.getValueByOption = function getValueByOption() {
	    return this.config.emitPath ? this.getPath() : this.getValue();
	  };

	  Node.prototype.getText = function getText(allLevels, separator) {
	    return allLevels ? this.pathLabels.join(separator) : this.label;
	  };

	  Node.prototype.isSameNode = function isSameNode(checkedValue) {
	    var value = this.getValueByOption();
	    return this.config.multiple && Array.isArray(checkedValue) ? checkedValue.some(function (val) {
	      return Object(util_["isEqual"])(val, value);
	    }) : Object(util_["isEqual"])(checkedValue, value);
	  };

	  Node.prototype.broadcast = function broadcast(event) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var handlerName = 'onParent' + Object(util_["capitalize"])(event);

	    this.children.forEach(function (child) {
	      if (child) {
	        // bottom up
	        child.broadcast.apply(child, [event].concat(args));
	        child[handlerName] && child[handlerName].apply(child, args);
	      }
	    });
	  };

	  Node.prototype.emit = function emit(event) {
	    var parent = this.parent;

	    var handlerName = 'onChild' + Object(util_["capitalize"])(event);
	    if (parent) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        args[_key2 - 1] = arguments[_key2];
	      }

	      parent[handlerName] && parent[handlerName].apply(parent, args);
	      parent.emit.apply(parent, [event].concat(args));
	    }
	  };

	  Node.prototype.onParentCheck = function onParentCheck(checked) {
	    if (!this.isDisabled) {
	      this.setCheckState(checked);
	    }
	  };

	  Node.prototype.onChildCheck = function onChildCheck() {
	    var children = this.children;

	    var validChildren = children.filter(function (child) {
	      return !child.isDisabled;
	    });
	    var checked = validChildren.length ? validChildren.every(function (child) {
	      return child.checked;
	    }) : false;

	    this.setCheckState(checked);
	  };

	  Node.prototype.setCheckState = function setCheckState(checked) {
	    var totalNum = this.children.length;
	    var checkedNum = this.children.reduce(function (c, p) {
	      var num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;
	      return c + num;
	    }, 0);

	    this.checked = checked;
	    this.indeterminate = checkedNum !== totalNum && checkedNum > 0;
	  };

	  Node.prototype.syncCheckState = function syncCheckState(checkedValue) {
	    var value = this.getValueByOption();
	    var checked = this.isSameNode(checkedValue, value);

	    this.doCheck(checked);
	  };

	  Node.prototype.doCheck = function doCheck(checked) {
	    if (this.checked !== checked) {
	      if (this.config.checkStrictly) {
	        this.checked = checked;
	      } else {
	        // bottom up to unify the calculation of the indeterminate state
	        this.broadcast('check', checked);
	        this.setCheckState(checked);
	        this.emit('check');
	      }
	    }
	  };

	  node_createClass(Node, [{
	    key: 'isDisabled',
	    get: function get() {
	      var data = this.data,
	          parent = this.parent,
	          config = this.config;

	      var disabledKey = config.disabled;
	      var checkStrictly = config.checkStrictly;

	      return data[disabledKey] || !checkStrictly && parent && parent.isDisabled;
	    }
	  }, {
	    key: 'isLeaf',
	    get: function get() {
	      var data = this.data,
	          loaded = this.loaded,
	          hasChildren = this.hasChildren,
	          children = this.children;
	      var _config2 = this.config,
	          lazy = _config2.lazy,
	          leafKey = _config2.leaf;

	      if (lazy) {
	        var isLeaf = Object(shared_["isDef"])(data[leafKey]) ? data[leafKey] : loaded ? !children.length : false;
	        this.hasChildren = !isLeaf;
	        return isLeaf;
	      }
	      return !hasChildren;
	    }
	  }]);

	  return Node;
	}();

	/* harmony default export */ var src_node = (src_node_Node);
	// CONCATENATED MODULE: ./packages/cascader-panel/src/store.js
	function store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




	var flatNodes = function flatNodes(data, leafOnly) {
	  return data.reduce(function (res, node) {
	    if (node.isLeaf) {
	      res.push(node);
	    } else {
	      !leafOnly && res.push(node);
	      res = res.concat(flatNodes(node.children, leafOnly));
	    }
	    return res;
	  }, []);
	};

	var store_Store = function () {
	  function Store(data, config) {
	    store_classCallCheck(this, Store);

	    this.config = config;
	    this.initNodes(data);
	  }

	  Store.prototype.initNodes = function initNodes(data) {
	    var _this = this;

	    data = Object(util_["coerceTruthyValueToArray"])(data);
	    this.nodes = data.map(function (nodeData) {
	      return new src_node(nodeData, _this.config);
	    });
	    this.flattedNodes = this.getFlattedNodes(false, false);
	    this.leafNodes = this.getFlattedNodes(true, false);
	  };

	  Store.prototype.appendNode = function appendNode(nodeData, parentNode) {
	    var node = new src_node(nodeData, this.config, parentNode);
	    var children = parentNode ? parentNode.children : this.nodes;

	    children.push(node);
	  };

	  Store.prototype.appendNodes = function appendNodes(nodeDataList, parentNode) {
	    var _this2 = this;

	    nodeDataList = Object(util_["coerceTruthyValueToArray"])(nodeDataList);
	    nodeDataList.forEach(function (nodeData) {
	      return _this2.appendNode(nodeData, parentNode);
	    });
	  };

	  Store.prototype.getNodes = function getNodes() {
	    return this.nodes;
	  };

	  Store.prototype.getFlattedNodes = function getFlattedNodes(leafOnly) {
	    var cached = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	    var cachedNodes = leafOnly ? this.leafNodes : this.flattedNodes;
	    return cached ? cachedNodes : flatNodes(this.nodes, leafOnly);
	  };

	  Store.prototype.getNodeByValue = function getNodeByValue(value) {
	    var nodes = this.getFlattedNodes(false, !this.config.lazy).filter(function (node) {
	      return Object(util_["valueEquals"])(node.path, value) || node.value === value;
	    });
	    return nodes && nodes.length ? nodes[0] : null;
	  };

	  return Store;
	}();

	/* harmony default export */ var cascader_panel_src_store = (store_Store);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&
	var cascader_panelvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//








	var cascader_panelvue_type_script_lang_js_KeyCode = aria_utils_default.a.keys;

	var DefaultProps = {
	  expandTrigger: 'click', // or hover
	  multiple: false,
	  checkStrictly: false, // whether all nodes can be selected
	  emitPath: true, // wether to emit an array of all levels value in which node is located
	  lazy: false,
	  lazyLoad: util_["noop"],
	  value: 'value',
	  label: 'label',
	  children: 'children',
	  leaf: 'leaf',
	  disabled: 'disabled',
	  hoverThreshold: 500
	};

	var cascader_panelvue_type_script_lang_js_isLeaf = function isLeaf(el) {
	  return !el.getAttribute('aria-owns');
	};

	var getSibling = function getSibling(el, distance) {
	  var parentNode = el.parentNode;

	  if (parentNode) {
	    var siblings = parentNode.querySelectorAll('.el-cascader-node[tabindex="-1"]');
	    var index = Array.prototype.indexOf.call(siblings, el);
	    return siblings[index + distance] || null;
	  }
	  return null;
	};

	var getMenuIndex = function getMenuIndex(el, distance) {
	  if (!el) return;
	  var pieces = el.id.split('-');
	  return Number(pieces[pieces.length - 2]);
	};

	var focusNode = function focusNode(el) {
	  if (!el) return;
	  el.focus();
	  !cascader_panelvue_type_script_lang_js_isLeaf(el) && el.click();
	};

	var checkNode = function checkNode(el) {
	  if (!el) return;

	  var input = el.querySelector('input');
	  if (input) {
	    input.click();
	  } else if (cascader_panelvue_type_script_lang_js_isLeaf(el)) {
	    el.click();
	  }
	};

	/* harmony default export */ var cascader_panelvue_type_script_lang_js_ = ({
	  name: 'ElCascaderPanel',

	  components: {
	    CascaderMenu: cascader_menu
	  },

	  props: {
	    value: {},
	    options: Array,
	    props: Object,
	    border: {
	      type: Boolean,
	      default: true
	    },
	    renderLabel: Function
	  },

	  provide: function provide() {
	    return {
	      panel: this
	    };
	  },
	  data: function data() {
	    return {
	      checkedValue: null,
	      checkedNodePaths: [],
	      store: [],
	      menus: [],
	      activePath: [],
	      loadCount: 0
	    };
	  },


	  computed: {
	    config: function config() {
	      return merge_default()(cascader_panelvue_type_script_lang_js_extends({}, DefaultProps), this.props || {});
	    },
	    multiple: function multiple() {
	      return this.config.multiple;
	    },
	    checkStrictly: function checkStrictly() {
	      return this.config.checkStrictly;
	    },
	    leafOnly: function leafOnly() {
	      return !this.checkStrictly;
	    },
	    isHoverMenu: function isHoverMenu() {
	      return this.config.expandTrigger === 'hover';
	    },
	    renderLabelFn: function renderLabelFn() {
	      return this.renderLabel || this.$scopedSlots.default;
	    }
	  },

	  watch: {
	    value: function value() {
	      this.syncCheckedValue();
	      this.checkStrictly && this.calculateCheckedNodePaths();
	    },

	    options: {
	      handler: function handler() {
	        this.initStore();
	      },
	      immediate: true,
	      deep: true
	    },
	    checkedValue: function checkedValue(val) {
	      if (!Object(util_["isEqual"])(val, this.value)) {
	        this.checkStrictly && this.calculateCheckedNodePaths();
	        this.$emit('input', val);
	        this.$emit('change', val);
	      }
	    }
	  },

	  mounted: function mounted() {
	    if (!this.isEmptyValue(this.value)) {
	      this.syncCheckedValue();
	    }
	  },


	  methods: {
	    initStore: function initStore() {
	      var config = this.config,
	          options = this.options;

	      if (config.lazy && Object(util_["isEmpty"])(options)) {
	        this.lazyLoad();
	      } else {
	        this.store = new cascader_panel_src_store(options, config);
	        this.menus = [this.store.getNodes()];
	        this.syncMenuState();
	      }
	    },
	    syncCheckedValue: function syncCheckedValue() {
	      var value = this.value,
	          checkedValue = this.checkedValue;

	      if (!Object(util_["isEqual"])(value, checkedValue)) {
	        this.activePath = [];
	        this.checkedValue = value;
	        this.syncMenuState();
	      }
	    },
	    syncMenuState: function syncMenuState() {
	      var multiple = this.multiple,
	          checkStrictly = this.checkStrictly;

	      this.syncActivePath();
	      multiple && this.syncMultiCheckState();
	      checkStrictly && this.calculateCheckedNodePaths();
	      this.$nextTick(this.scrollIntoView);
	    },
	    syncMultiCheckState: function syncMultiCheckState() {
	      var _this = this;

	      var nodes = this.getFlattedNodes(this.leafOnly);

	      nodes.forEach(function (node) {
	        node.syncCheckState(_this.checkedValue);
	      });
	    },
	    isEmptyValue: function isEmptyValue(val) {
	      var multiple = this.multiple,
	          config = this.config;
	      var emitPath = config.emitPath;

	      if (multiple || emitPath) {
	        return Object(util_["isEmpty"])(val);
	      }
	      return false;
	    },
	    syncActivePath: function syncActivePath() {
	      var _this2 = this;

	      var store = this.store,
	          multiple = this.multiple,
	          activePath = this.activePath,
	          checkedValue = this.checkedValue;


	      if (!Object(util_["isEmpty"])(activePath)) {
	        var nodes = activePath.map(function (node) {
	          return _this2.getNodeByValue(node.getValue());
	        });
	        this.expandNodes(nodes);
	      } else if (!this.isEmptyValue(checkedValue)) {
	        var value = multiple ? checkedValue[0] : checkedValue;
	        var checkedNode = this.getNodeByValue(value) || {};
	        var _nodes = (checkedNode.pathNodes || []).slice(0, -1);
	        this.expandNodes(_nodes);
	      } else {
	        this.activePath = [];
	        this.menus = [store.getNodes()];
	      }
	    },
	    expandNodes: function expandNodes(nodes) {
	      var _this3 = this;

	      nodes.forEach(function (node) {
	        return _this3.handleExpand(node, true /* silent */);
	      });
	    },
	    calculateCheckedNodePaths: function calculateCheckedNodePaths() {
	      var _this4 = this;

	      var checkedValue = this.checkedValue,
	          multiple = this.multiple;

	      var checkedValues = multiple ? Object(util_["coerceTruthyValueToArray"])(checkedValue) : [checkedValue];
	      this.checkedNodePaths = checkedValues.map(function (v) {
	        var checkedNode = _this4.getNodeByValue(v);
	        return checkedNode ? checkedNode.pathNodes : [];
	      });
	    },
	    handleKeyDown: function handleKeyDown(e) {
	      var target = e.target,
	          keyCode = e.keyCode;


	      switch (keyCode) {
	        case cascader_panelvue_type_script_lang_js_KeyCode.up:
	          var prev = getSibling(target, -1);
	          focusNode(prev);
	          break;
	        case cascader_panelvue_type_script_lang_js_KeyCode.down:
	          var next = getSibling(target, 1);
	          focusNode(next);
	          break;
	        case cascader_panelvue_type_script_lang_js_KeyCode.left:
	          var preMenu = this.$refs.menu[getMenuIndex(target) - 1];
	          if (preMenu) {
	            var expandedNode = preMenu.$el.querySelector('.el-cascader-node[aria-expanded="true"]');
	            focusNode(expandedNode);
	          }
	          break;
	        case cascader_panelvue_type_script_lang_js_KeyCode.right:
	          var nextMenu = this.$refs.menu[getMenuIndex(target) + 1];
	          if (nextMenu) {
	            var firstNode = nextMenu.$el.querySelector('.el-cascader-node[tabindex="-1"]');
	            focusNode(firstNode);
	          }
	          break;
	        case cascader_panelvue_type_script_lang_js_KeyCode.enter:
	          checkNode(target);
	          break;
	        case cascader_panelvue_type_script_lang_js_KeyCode.esc:
	        case cascader_panelvue_type_script_lang_js_KeyCode.tab:
	          this.$emit('close');
	          break;
	        default:
	          return;
	      }
	    },
	    handleExpand: function handleExpand(node, silent) {
	      var activePath = this.activePath;
	      var level = node.level;

	      var path = activePath.slice(0, level - 1);
	      var menus = this.menus.slice(0, level);

	      if (!node.isLeaf) {
	        path.push(node);
	        menus.push(node.children);
	      }

	      this.activePath = path;
	      this.menus = menus;

	      if (!silent) {
	        var pathValues = path.map(function (node) {
	          return node.getValue();
	        });
	        var activePathValues = activePath.map(function (node) {
	          return node.getValue();
	        });
	        if (!Object(util_["valueEquals"])(pathValues, activePathValues)) {
	          this.$emit('active-item-change', pathValues); // Deprecated
	          this.$emit('expand-change', pathValues);
	        }
	      }
	    },
	    handleCheckChange: function handleCheckChange(value) {
	      this.checkedValue = value;
	    },
	    lazyLoad: function lazyLoad(node, onFullfiled) {
	      var _this5 = this;

	      var config = this.config;

	      if (!node) {
	        node = node || { root: true, level: 0 };
	        this.store = new cascader_panel_src_store([], config);
	        this.menus = [this.store.getNodes()];
	      }
	      node.loading = true;
	      var resolve = function resolve(dataList) {
	        var parent = node.root ? null : node;
	        dataList && dataList.length && _this5.store.appendNodes(dataList, parent);
	        node.loading = false;
	        node.loaded = true;

	        // dispose default value on lazy load mode
	        if (Array.isArray(_this5.checkedValue)) {
	          var nodeValue = _this5.checkedValue[_this5.loadCount++];
	          var valueKey = _this5.config.value;
	          var leafKey = _this5.config.leaf;

	          if (Array.isArray(dataList) && dataList.filter(function (item) {
	            return item[valueKey] === nodeValue;
	          }).length > 0) {
	            var checkedNode = _this5.store.getNodeByValue(nodeValue);

	            if (!checkedNode.data[leafKey]) {
	              _this5.lazyLoad(checkedNode, function () {
	                _this5.handleExpand(checkedNode);
	              });
	            }

	            if (_this5.loadCount === _this5.checkedValue.length) {
	              _this5.$parent.computePresentText();
	            }
	          }
	        }

	        onFullfiled && onFullfiled(dataList);
	      };
	      config.lazyLoad(node, resolve);
	    },


	    /**
	     * public methods
	    */
	    calculateMultiCheckedValue: function calculateMultiCheckedValue() {
	      this.checkedValue = this.getCheckedNodes(this.leafOnly).map(function (node) {
	        return node.getValueByOption();
	      });
	    },
	    scrollIntoView: function scrollIntoView() {
	      if (this.$isServer) return;

	      var menus = this.$refs.menu || [];
	      menus.forEach(function (menu) {
	        var menuElement = menu.$el;
	        if (menuElement) {
	          var container = menuElement.querySelector('.el-scrollbar__wrap');
	          var activeNode = menuElement.querySelector('.el-cascader-node.is-active') || menuElement.querySelector('.el-cascader-node.in-active-path');
	          scroll_into_view_default()(container, activeNode);
	        }
	      });
	    },
	    getNodeByValue: function getNodeByValue(val) {
	      return this.store.getNodeByValue(val);
	    },
	    getFlattedNodes: function getFlattedNodes(leafOnly) {
	      var cached = !this.config.lazy;
	      return this.store.getFlattedNodes(leafOnly, cached);
	    },
	    getCheckedNodes: function getCheckedNodes(leafOnly) {
	      var checkedValue = this.checkedValue,
	          multiple = this.multiple;

	      if (multiple) {
	        var nodes = this.getFlattedNodes(leafOnly);
	        return nodes.filter(function (node) {
	          return node.checked;
	        });
	      } else {
	        return this.isEmptyValue(checkedValue) ? [] : [this.getNodeByValue(checkedValue)];
	      }
	    },
	    clearCheckedNodes: function clearCheckedNodes() {
	      var config = this.config,
	          leafOnly = this.leafOnly;
	      var multiple = config.multiple,
	          emitPath = config.emitPath;

	      if (multiple) {
	        this.getCheckedNodes(leafOnly).filter(function (node) {
	          return !node.isDisabled;
	        }).forEach(function (node) {
	          return node.doCheck(false);
	        });
	        this.calculateMultiCheckedValue();
	      } else {
	        this.checkedValue = emitPath ? [] : null;
	      }
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_cascader_panelvue_type_script_lang_js_ = (cascader_panelvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue





	/* normalize component */

	var cascader_panel_component = normalizeComponent(
	  src_cascader_panelvue_type_script_lang_js_,
	  cascader_panelvue_type_template_id_34932346_render,
	  cascader_panelvue_type_template_id_34932346_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	cascader_panel_component.options.__file = "packages/cascader-panel/src/cascader-panel.vue";
	/* harmony default export */ var cascader_panel = (cascader_panel_component.exports);
	// CONCATENATED MODULE: ./packages/cascader-panel/index.js


	/* istanbul ignore next */
	cascader_panel.install = function (Vue) {
	  Vue.component(cascader_panel.name, cascader_panel);
	};

	/* harmony default export */ var packages_cascader_panel = (cascader_panel);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/avatar/src/main.vue?vue&type=script&lang=js&

	/* harmony default export */ var avatar_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElAvatar',

	  props: {
	    size: {
	      type: [Number, String],
	      validator: function validator(val) {
	        if (typeof val === 'string') {
	          return ['large', 'medium', 'small'].includes(val);
	        }
	        return typeof val === 'number';
	      }
	    },
	    shape: {
	      type: String,
	      default: 'circle',
	      validator: function validator(val) {
	        return ['circle', 'square'].includes(val);
	      }
	    },
	    icon: String,
	    src: String,
	    alt: String,
	    srcSet: String,
	    error: Function,
	    fit: {
	      type: String,
	      default: 'cover'
	    }
	  },

	  data: function data() {
	    return {
	      isImageExist: true
	    };
	  },


	  computed: {
	    avatarClass: function avatarClass() {
	      var size = this.size,
	          icon = this.icon,
	          shape = this.shape;

	      var classList = ['el-avatar'];

	      if (size && typeof size === 'string') {
	        classList.push('el-avatar--' + size);
	      }

	      if (icon) {
	        classList.push('el-avatar--icon');
	      }

	      if (shape) {
	        classList.push('el-avatar--' + shape);
	      }

	      return classList.join(' ');
	    }
	  },

	  methods: {
	    handleError: function handleError() {
	      var error = this.error;

	      var errorFlag = error ? error() : undefined;
	      if (errorFlag !== false) {
	        this.isImageExist = false;
	      }
	    },
	    renderAvatar: function renderAvatar() {
	      var h = this.$createElement;
	      var icon = this.icon,
	          src = this.src,
	          alt = this.alt,
	          isImageExist = this.isImageExist,
	          srcSet = this.srcSet,
	          fit = this.fit;


	      if (isImageExist && src) {
	        return h('img', {
	          attrs: {
	            src: src,

	            alt: alt,
	            srcSet: srcSet
	          },
	          on: {
	            'error': this.handleError
	          },
	          style: { 'object-fit': fit } });
	      }

	      if (icon) {
	        return h('i', { 'class': icon });
	      }

	      return this.$slots.default;
	    }
	  },

	  render: function render() {
	    var h = arguments[0];
	    var avatarClass = this.avatarClass,
	        size = this.size;


	    var sizeStyle = typeof size === 'number' ? {
	      height: size + 'px',
	      width: size + 'px',
	      lineHeight: size + 'px'
	    } : {};

	    return h(
	      'span',
	      { 'class': avatarClass, style: sizeStyle },
	      [this.renderAvatar()]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/avatar/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_avatar_src_mainvue_type_script_lang_js_ = (avatar_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/avatar/src/main.vue
	var src_main_render, src_main_staticRenderFns;




	/* normalize component */

	var avatar_src_main_component = normalizeComponent(
	  packages_avatar_src_mainvue_type_script_lang_js_,
	  src_main_render,
	  src_main_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	avatar_src_main_component.options.__file = "packages/avatar/src/main.vue";
	/* harmony default export */ var avatar_src_main = (avatar_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/avatar/index.js


	/* istanbul ignore next */
	avatar_src_main.install = function (Vue) {
	  Vue.component(avatar_src_main.name, avatar_src_main);
	};

	/* harmony default export */ var avatar = (avatar_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/drawer/src/main.vue?vue&type=template&id=a4885264&
	var mainvue_type_template_id_a4885264_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "transition",
	    {
	      attrs: { name: "el-drawer-fade" },
	      on: { "after-enter": _vm.afterEnter, "after-leave": _vm.afterLeave }
	    },
	    [
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.visible,
	              expression: "visible"
	            }
	          ],
	          staticClass: "el-drawer__wrapper",
	          attrs: { tabindex: "-1" }
	        },
	        [
	          _c(
	            "div",
	            {
	              staticClass: "el-drawer__container",
	              class: _vm.visible && "el-drawer__open",
	              attrs: { role: "document", tabindex: "-1" },
	              on: {
	                click: function($event) {
	                  if ($event.target !== $event.currentTarget) {
	                    return null
	                  }
	                  return _vm.handleWrapperClick($event)
	                }
	              }
	            },
	            [
	              _c(
	                "div",
	                {
	                  ref: "drawer",
	                  staticClass: "el-drawer",
	                  class: [_vm.direction, _vm.customClass],
	                  style: _vm.isHorizontal
	                    ? "width: " + _vm.drawerSize
	                    : "height: " + _vm.drawerSize,
	                  attrs: {
	                    "aria-modal": "true",
	                    "aria-labelledby": "el-drawer__title",
	                    "aria-label": _vm.title,
	                    role: "dialog",
	                    tabindex: "-1"
	                  }
	                },
	                [
	                  _vm.withHeader
	                    ? _c(
	                        "header",
	                        {
	                          staticClass: "el-drawer__header",
	                          attrs: { id: "el-drawer__title" }
	                        },
	                        [
	                          _vm._t("title", [
	                            _c(
	                              "span",
	                              { attrs: { role: "heading", title: _vm.title } },
	                              [_vm._v(_vm._s(_vm.title))]
	                            )
	                          ]),
	                          _vm.showClose
	                            ? _c(
	                                "button",
	                                {
	                                  staticClass: "el-drawer__close-btn",
	                                  attrs: {
	                                    "aria-label":
	                                      "close " + (_vm.title || "drawer"),
	                                    type: "button"
	                                  },
	                                  on: { click: _vm.closeDrawer }
	                                },
	                                [
	                                  _c("i", {
	                                    staticClass:
	                                      "el-dialog__close el-icon el-icon-close"
	                                  })
	                                ]
	                              )
	                            : _vm._e()
	                        ],
	                        2
	                      )
	                    : _vm._e(),
	                  _vm.rendered
	                    ? _c(
	                        "section",
	                        { staticClass: "el-drawer__body" },
	                        [_vm._t("default")],
	                        2
	                      )
	                    : _vm._e()
	                ]
	              )
	            ]
	          )
	        ]
	      )
	    ]
	  )
	};
	var mainvue_type_template_id_a4885264_staticRenderFns = [];
	mainvue_type_template_id_a4885264_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/drawer/src/main.vue?vue&type=template&id=a4885264&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/drawer/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//




	/* harmony default export */ var drawer_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElDrawer',
	  mixins: [popup_default.a, emitter_default.a],
	  props: {
	    appendToBody: {
	      type: Boolean,
	      default: false
	    },
	    beforeClose: {
	      type: Function
	    },
	    customClass: {
	      type: String,
	      default: ''
	    },
	    closeOnPressEscape: {
	      type: Boolean,
	      default: true
	    },
	    destroyOnClose: {
	      type: Boolean,
	      default: false
	    },
	    modal: {
	      type: Boolean,
	      default: true
	    },
	    direction: {
	      type: String,
	      default: 'rtl',
	      validator: function validator(val) {
	        return ['ltr', 'rtl', 'ttb', 'btt'].indexOf(val) !== -1;
	      }
	    },
	    modalAppendToBody: {
	      type: Boolean,
	      default: true
	    },
	    showClose: {
	      type: Boolean,
	      default: true
	    },
	    size: {
	      type: [Number, String],
	      default: '30%'
	    },
	    title: {
	      type: String,
	      default: ''
	    },
	    visible: {
	      type: Boolean
	    },
	    wrapperClosable: {
	      type: Boolean,
	      default: true
	    },
	    withHeader: {
	      type: Boolean,
	      default: true
	    }
	  },
	  computed: {
	    isHorizontal: function isHorizontal() {
	      return this.direction === 'rtl' || this.direction === 'ltr';
	    },
	    drawerSize: function drawerSize() {
	      return typeof this.size === 'number' ? this.size + 'px' : this.size;
	    }
	  },
	  data: function data() {
	    return {
	      closed: false,
	      prevActiveElement: null
	    };
	  },

	  watch: {
	    visible: function visible(val) {
	      var _this = this;

	      if (val) {
	        this.closed = false;
	        this.$emit('open');
	        if (this.appendToBody) {
	          document.body.appendChild(this.$el);
	        }
	        this.prevActiveElement = document.activeElement;
	      } else {
	        if (!this.closed) {
	          this.$emit('close');
	          if (this.destroyOnClose === true) {
	            this.rendered = false;
	          }
	        }
	        this.$nextTick(function () {
	          if (_this.prevActiveElement) {
	            _this.prevActiveElement.focus();
	          }
	        });
	      }
	    }
	  },
	  methods: {
	    afterEnter: function afterEnter() {
	      this.$emit('opened');
	    },
	    afterLeave: function afterLeave() {
	      this.$emit('closed');
	    },
	    hide: function hide(cancel) {
	      if (cancel !== false) {
	        this.$emit('update:visible', false);
	        this.$emit('close');
	        if (this.destroyOnClose === true) {
	          this.rendered = false;
	        }
	        this.closed = true;
	      }
	    },
	    handleWrapperClick: function handleWrapperClick() {
	      if (this.wrapperClosable) {
	        this.closeDrawer();
	      }
	    },
	    closeDrawer: function closeDrawer() {
	      if (typeof this.beforeClose === 'function') {
	        this.beforeClose(this.hide);
	      } else {
	        this.hide();
	      }
	    },
	    handleClose: function handleClose() {
	      // This method here will be called by PopupManger, when the `closeOnPressEscape` was set to true
	      // pressing `ESC` will call this method, and also close the drawer.
	      // This method also calls `beforeClose` if there was one.
	      this.closeDrawer();
	    }
	  },
	  mounted: function mounted() {
	    if (this.visible) {
	      this.rendered = true;
	      this.open();
	      if (this.appendToBody) {
	        document.body.appendChild(this.$el);
	      }
	    }
	  },
	  destroyed: function destroyed() {
	    // if appendToBody is true, remove DOM node after destroy
	    if (this.appendToBody && this.$el && this.$el.parentNode) {
	      this.$el.parentNode.removeChild(this.$el);
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/drawer/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_drawer_src_mainvue_type_script_lang_js_ = (drawer_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/drawer/src/main.vue





	/* normalize component */

	var drawer_src_main_component = normalizeComponent(
	  packages_drawer_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_a4885264_render,
	  mainvue_type_template_id_a4885264_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	drawer_src_main_component.options.__file = "packages/drawer/src/main.vue";
	/* harmony default export */ var drawer_src_main = (drawer_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/drawer/index.js


	/* istanbul ignore next */
	drawer_src_main.install = function (Vue) {
	  Vue.component(drawer_src_main.name, drawer_src_main);
	};

	/* harmony default export */ var drawer = (drawer_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/statistic/src/main.vue?vue&type=template&id=76339aa7&
	var mainvue_type_template_id_76339aa7_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-statistic" }, [
	    _vm.title || _vm.$slots.title
	      ? _c(
	          "div",
	          { staticClass: "head" },
	          [
	            _vm._t("title", [
	              _c("span", { staticClass: "title" }, [
	                _vm._v("\n        " + _vm._s(_vm.title) + "\n      ")
	              ])
	            ])
	          ],
	          2
	        )
	      : _vm._e(),
	    _c("div", { staticClass: "con" }, [
	      _vm.prefix || _vm.$slots.prefix
	        ? _c(
	            "span",
	            { staticClass: "prefix" },
	            [
	              _vm._t("prefix", [
	                _vm._v("\n        " + _vm._s(_vm.prefix) + "\n      ")
	              ])
	            ],
	            2
	          )
	        : _vm._e(),
	      _c(
	        "span",
	        { staticClass: "number", style: _vm.valueStyle },
	        [_vm._t("formatter", [_vm._v(" " + _vm._s(_vm.disposeValue))])],
	        2
	      ),
	      _vm.suffix || _vm.$slots.suffix
	        ? _c(
	            "span",
	            { staticClass: "suffix" },
	            [
	              _vm._t("suffix", [
	                _vm._v("\n        " + _vm._s(_vm.suffix) + "\n      ")
	              ])
	            ],
	            2
	          )
	        : _vm._e()
	    ])
	  ])
	};
	var mainvue_type_template_id_76339aa7_staticRenderFns = [];
	mainvue_type_template_id_76339aa7_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/statistic/src/main.vue?vue&type=template&id=76339aa7&

	// EXTERNAL MODULE: external "element-ui/lib/utils/lodash"
	var lodash_ = __webpack_require__(28);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/statistic/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//


	/* harmony default export */ var statistic_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElStatistic',
	  data: function data() {
	    return {
	      disposeValue: '',
	      timeTask: null,
	      REFRESH_INTERVAL: 1000 / 30
	    };
	  },

	  props: {
	    decimalSeparator: {
	      type: String,
	      default: '.'
	    },
	    groupSeparator: {
	      type: String,
	      default: ''
	    },
	    precision: {
	      type: Number,
	      default: null
	    },
	    value: {
	      type: [String, Number, Date],
	      default: ''
	    },
	    prefix: {
	      type: String,
	      default: ''
	    },
	    suffix: {
	      type: String,
	      default: ''
	    },
	    title: {
	      type: [String, Number],
	      default: ''
	    },
	    timeIndices: {
	      type: Boolean,
	      default: false
	    },
	    valueStyle: {
	      type: Object,
	      default: function _default() {
	        return {};
	      }
	    },
	    format: {
	      type: String,
	      default: 'HH:mm:ss:SSS'
	    },
	    rate: {
	      type: Number,
	      default: 1000
	    }
	  },
	  created: function created() {
	    this.branch();
	  },

	  watch: {
	    value: function value() {
	      this.branch();
	    },
	    groupSeparator: function groupSeparator() {
	      this.dispose();
	    },
	    mulriple: function mulriple() {
	      this.dispose();
	    }
	  },
	  methods: {
	    branch: function branch() {
	      var timeIndices = this.timeIndices,
	          countDown = this.countDown,
	          dispose = this.dispose;

	      if (timeIndices) {
	        countDown(this.value.valueOf() || this.value);
	      } else {
	        dispose();
	      }
	    },
	    magnification: function magnification(num) {
	      var mulriple = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
	      var groupSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';

	      // magnification factor
	      var level = String(mulriple).length;
	      return num.replace(new RegExp('(\\d)(?=(\\d{' + (level - 1) + '})+$)', 'g'), '$1' + groupSeparator);
	    },
	    dispose: function dispose() {
	      var value = this.value,
	          rate = this.rate,
	          groupSeparator = this.groupSeparator;

	      if (!Object(lodash_["isNumber"])(value)) return false;
	      if (this.precision) {
	        value = value.toFixed(this.precision);
	      }

	      var _String$split = String(value).split('.'),
	          integer = _String$split[0],
	          decimal = _String$split[1];
	      // 1000 multiplying power


	      if (groupSeparator) {
	        integer = this.magnification(integer, rate, groupSeparator);
	      }
	      var result = '' + integer + (decimal ? this.decimalSeparator + decimal : '');
	      this.disposeValue = result;
	      return result;
	    },
	    diffDate: function diffDate(minuend, subtrahend) {
	      return Math.max(minuend - subtrahend, 0);
	    },
	    suspend: function suspend(isStop) {
	      if (isStop) {
	        if (this.timeTask) {
	          clearInterval(this.timeTask);
	          this.timeTask = null;
	        }
	      } else {
	        this.branch();
	      }
	      return this.disposeValue;
	    },

	    formatTimeStr: function formatTimeStr(time) {
	      var format = this.format;

	      var escapeRegex = /\[[^\]]*]/g;
	      var keepList = (format.match(escapeRegex) || []).map(function (str) {
	        return str.slice(1, -1);
	      });
	      var timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365], // years
	      ['M', 1000 * 60 * 60 * 24 * 30], // months
	      ['D', 1000 * 60 * 60 * 24], // days
	      ['H', 1000 * 60 * 60], // hours
	      ['m', 1000 * 60], // minutes
	      ['s', 1000], // seconds
	      ['S', 1] // million seconds
	      ];
	      var formatText = Object(lodash_["reduce"])(timeUnits, function (con, item) {
	        var name = item[0];
	        return con.replace(new RegExp(name + '+', 'g'), function (match) {
	          var sum = Object(lodash_["chain"])(time).divide(item[1]).floor(0).value();
	          time -= Object(lodash_["multiply"])(sum, item[1]);
	          return Object(lodash_["padStart"])(String(sum), String(match).length, 0);
	        });
	      }, format);
	      var index = 0;
	      return formatText.replace(escapeRegex, function () {
	        var match = keepList[index];
	        index += 1;
	        return match;
	      });
	    },
	    stopTime: function stopTime(time) {
	      var result = true; // stop
	      if (time) {
	        this.$emit('change', time);
	        result = false;
	      } else {
	        result = true;
	        this.suspend(true);
	        this.$emit('finish', true);
	      }
	      return result;
	    },
	    countDown: function countDown(timeVlaue) {
	      var REFRESH_INTERVAL = this.REFRESH_INTERVAL,
	          timeTask = this.timeTask,
	          diffDate = this.diffDate,
	          formatTimeStr = this.formatTimeStr,
	          stopTime = this.stopTime,
	          suspend = this.suspend;

	      if (timeTask) return;
	      var than = this;
	      this.timeTask = setInterval(function () {
	        var diffTiem = diffDate(timeVlaue, Date.now());
	        than.disposeValue = formatTimeStr(diffTiem);
	        stopTime(diffTiem);
	      }, REFRESH_INTERVAL);
	      this.$once('hook:beforeDestroy', function () {
	        suspend(true);
	      });
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/statistic/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_statistic_src_mainvue_type_script_lang_js_ = (statistic_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/statistic/src/main.vue





	/* normalize component */

	var statistic_src_main_component = normalizeComponent(
	  packages_statistic_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_76339aa7_render,
	  mainvue_type_template_id_76339aa7_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	statistic_src_main_component.options.__file = "packages/statistic/src/main.vue";
	/* harmony default export */ var statistic_src_main = (statistic_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/statistic/index.js


	/* istanbul ignore next */
	statistic_src_main.install = function (Vue) {
	  Vue.component(statistic_src_main.name, statistic_src_main);
	};

	/* harmony default export */ var statistic = (statistic_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/popconfirm/src/main.vue?vue&type=template&id=048de730&
	var mainvue_type_template_id_048de730_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "el-popover",
	    _vm._b(
	      {
	        attrs: { trigger: "click" },
	        model: {
	          value: _vm.visible,
	          callback: function($$v) {
	            _vm.visible = $$v;
	          },
	          expression: "visible"
	        }
	      },
	      "el-popover",
	      _vm.$attrs,
	      false
	    ),
	    [
	      _c("div", { staticClass: "el-popconfirm" }, [
	        _c("p", { staticClass: "el-popconfirm__main" }, [
	          !_vm.hideIcon
	            ? _c("i", {
	                staticClass: "el-popconfirm__icon",
	                class: _vm.icon,
	                style: { color: _vm.iconColor }
	              })
	            : _vm._e(),
	          _vm._v("\n      " + _vm._s(_vm.title) + "\n    ")
	        ]),
	        _c(
	          "div",
	          { staticClass: "el-popconfirm__action" },
	          [
	            _c(
	              "el-button",
	              {
	                attrs: { size: "mini", type: _vm.cancelButtonType },
	                on: { click: _vm.cancel }
	              },
	              [
	                _vm._v(
	                  "\n        " +
	                    _vm._s(_vm.displayCancelButtonText) +
	                    "\n      "
	                )
	              ]
	            ),
	            _c(
	              "el-button",
	              {
	                attrs: { size: "mini", type: _vm.confirmButtonType },
	                on: { click: _vm.confirm }
	              },
	              [
	                _vm._v(
	                  "\n        " +
	                    _vm._s(_vm.displayConfirmButtonText) +
	                    "\n      "
	                )
	              ]
	            )
	          ],
	          1
	        )
	      ]),
	      _vm._t("reference", null, { slot: "reference" })
	    ],
	    2
	  )
	};
	var mainvue_type_template_id_048de730_staticRenderFns = [];
	mainvue_type_template_id_048de730_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/popconfirm/src/main.vue?vue&type=template&id=048de730&

	// EXTERNAL MODULE: external "element-ui/lib/popover"
	var popover_ = __webpack_require__(45);
	var popover_default = /*#__PURE__*/__webpack_require__.n(popover_);

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/popconfirm/src/main.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//





	/* harmony default export */ var popconfirm_src_mainvue_type_script_lang_js_ = ({
	  name: 'ElPopconfirm',
	  props: {
	    title: {
	      type: String
	    },
	    confirmButtonText: {
	      type: String
	    },
	    cancelButtonText: {
	      type: String
	    },
	    confirmButtonType: {
	      type: String,
	      default: 'primary'
	    },
	    cancelButtonType: {
	      type: String,
	      default: 'text'
	    },
	    icon: {
	      type: String,
	      default: 'el-icon-question'
	    },
	    iconColor: {
	      type: String,
	      default: '#f90'
	    },
	    hideIcon: {
	      type: Boolean,
	      default: false
	    }
	  },
	  components: {
	    ElPopover: popover_default.a,
	    ElButton: button_default.a
	  },
	  data: function data() {
	    return {
	      visible: false
	    };
	  },

	  computed: {
	    displayConfirmButtonText: function displayConfirmButtonText() {
	      return this.confirmButtonText || Object(lib_locale_["t"])('el.popconfirm.confirmButtonText');
	    },
	    displayCancelButtonText: function displayCancelButtonText() {
	      return this.cancelButtonText || Object(lib_locale_["t"])('el.popconfirm.cancelButtonText');
	    }
	  },
	  methods: {
	    confirm: function confirm() {
	      this.visible = false;
	      this.$emit('confirm');
	    },
	    cancel: function cancel() {
	      this.visible = false;
	      this.$emit('cancel');
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/popconfirm/src/main.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_popconfirm_src_mainvue_type_script_lang_js_ = (popconfirm_src_mainvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/popconfirm/src/main.vue





	/* normalize component */

	var popconfirm_src_main_component = normalizeComponent(
	  packages_popconfirm_src_mainvue_type_script_lang_js_,
	  mainvue_type_template_id_048de730_render,
	  mainvue_type_template_id_048de730_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	popconfirm_src_main_component.options.__file = "packages/popconfirm/src/main.vue";
	/* harmony default export */ var popconfirm_src_main = (popconfirm_src_main_component.exports);
	// CONCATENATED MODULE: ./packages/popconfirm/index.js


	/* istanbul ignore next */
	popconfirm_src_main.install = function (Vue) {
	  Vue.component(popconfirm_src_main.name, popconfirm_src_main);
	};

	/* harmony default export */ var popconfirm = (popconfirm_src_main);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/index.vue?vue&type=template&id=7f659269&
	var srcvue_type_template_id_7f659269_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    [
	      _vm.uiLoading
	        ? [
	            _c(
	              "div",
	              _vm._b(
	                { class: ["el-skeleton", _vm.animated ? "is-animated" : ""] },
	                "div",
	                _vm.$attrs,
	                false
	              ),
	              [
	                _vm._l(_vm.count, function(i) {
	                  return [
	                    _vm.loading
	                      ? _vm._t(
	                          "template",
	                          _vm._l(_vm.rows, function(item) {
	                            return _c("el-skeleton-item", {
	                              key: i + "-" + item,
	                              class: {
	                                "el-skeleton__paragraph": item !== 1,
	                                "is-first": item === 1,
	                                "is-last": item === _vm.rows && _vm.rows > 1
	                              },
	                              attrs: { variant: "p" }
	                            })
	                          })
	                        )
	                      : _vm._e()
	                  ]
	                })
	              ],
	              2
	            )
	          ]
	        : [_vm._t("default", null, null, _vm.$attrs)]
	    ],
	    2
	  )
	};
	var srcvue_type_template_id_7f659269_staticRenderFns = [];
	srcvue_type_template_id_7f659269_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/skeleton/src/index.vue?vue&type=template&id=7f659269&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/index.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var skeleton_srcvue_type_script_lang_js_ = ({
	  name: 'ElSkeleton',
	  props: {
	    animated: {
	      type: Boolean,
	      default: false
	    },
	    count: {
	      type: Number,
	      default: 1
	    },
	    rows: {
	      type: Number,
	      default: 4
	    },
	    loading: {
	      type: Boolean,
	      default: true
	    },
	    throttle: {
	      type: Number,
	      default: 0
	    }
	  },
	  watch: {
	    loading: {
	      handler: function handler(loading) {
	        var _this = this;

	        if (this.throttle <= 0) {
	          this.uiLoading = loading;
	          return;
	        }
	        if (loading) {
	          clearTimeout(this.timeoutHandle);
	          this.timeoutHandle = setTimeout(function () {
	            _this.uiLoading = _this.loading;
	          }, this.throttle);
	        } else {
	          this.uiLoading = loading;
	        }
	      },

	      immediate: true
	    }
	  },
	  data: function data() {
	    return {
	      uiLoading: this.throttle <= 0 ? this.loading : false
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/skeleton/src/index.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_skeleton_srcvue_type_script_lang_js_ = (skeleton_srcvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/skeleton/src/index.vue





	/* normalize component */

	var skeleton_src_component = normalizeComponent(
	  packages_skeleton_srcvue_type_script_lang_js_,
	  srcvue_type_template_id_7f659269_render,
	  srcvue_type_template_id_7f659269_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	skeleton_src_component.options.__file = "packages/skeleton/src/index.vue";
	/* harmony default export */ var skeleton_src = (skeleton_src_component.exports);
	// CONCATENATED MODULE: ./packages/skeleton/index.js


	/* istanbul ignore next */
	skeleton_src.install = function (Vue) {
	  Vue.component(skeleton_src.name, skeleton_src);
	};

	/* harmony default export */ var skeleton = (skeleton_src);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/item.vue?vue&type=template&id=4bc8804c&
	var itemvue_type_template_id_4bc8804c_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { class: ["el-skeleton__item", "el-skeleton__" + _vm.variant] },
	    [_vm.variant === "image" ? _c("img-placeholder") : _vm._e()],
	    1
	  )
	};
	var itemvue_type_template_id_4bc8804c_staticRenderFns = [];
	itemvue_type_template_id_4bc8804c_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/skeleton/src/item.vue?vue&type=template&id=4bc8804c&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/img-placeholder.vue?vue&type=template&id=1b2cb5c0&
	var img_placeholdervue_type_template_id_1b2cb5c0_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    {
	      attrs: { viewBox: "0 0 1024 1024", xmlns: "http://www.w3.org/2000/svg" }
	    },
	    [
	      _c("path", {
	        attrs: {
	          d:
	            "M64 896V128h896v768H64z m64-128l192-192 116.352 116.352L640 448l256 307.2V192H128v576z m224-480a96 96 0 1 1-0.064 192.064A96 96 0 0 1 352 288z"
	        }
	      })
	    ]
	  )
	};
	var img_placeholdervue_type_template_id_1b2cb5c0_staticRenderFns = [];
	img_placeholdervue_type_template_id_1b2cb5c0_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/skeleton/src/img-placeholder.vue?vue&type=template&id=1b2cb5c0&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/img-placeholder.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var img_placeholdervue_type_script_lang_js_ = ({
	  name: 'ImgPlaceholder'
	});
	// CONCATENATED MODULE: ./packages/skeleton/src/img-placeholder.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_img_placeholdervue_type_script_lang_js_ = (img_placeholdervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/skeleton/src/img-placeholder.vue





	/* normalize component */

	var img_placeholder_component = normalizeComponent(
	  src_img_placeholdervue_type_script_lang_js_,
	  img_placeholdervue_type_template_id_1b2cb5c0_render,
	  img_placeholdervue_type_template_id_1b2cb5c0_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	img_placeholder_component.options.__file = "packages/skeleton/src/img-placeholder.vue";
	/* harmony default export */ var img_placeholder = (img_placeholder_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/item.vue?vue&type=script&lang=js&
	var _components;

	//
	//
	//
	//
	//
	//



	/* harmony default export */ var skeleton_src_itemvue_type_script_lang_js_ = ({
	  name: 'ElSkeletonItem',
	  props: {
	    variant: {
	      type: String,
	      default: 'text'
	    }
	  },
	  components: (_components = {}, _components[img_placeholder.name] = img_placeholder, _components)
	});
	// CONCATENATED MODULE: ./packages/skeleton/src/item.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_skeleton_src_itemvue_type_script_lang_js_ = (skeleton_src_itemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/skeleton/src/item.vue





	/* normalize component */

	var skeleton_src_item_component = normalizeComponent(
	  packages_skeleton_src_itemvue_type_script_lang_js_,
	  itemvue_type_template_id_4bc8804c_render,
	  itemvue_type_template_id_4bc8804c_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	skeleton_src_item_component.options.__file = "packages/skeleton/src/item.vue";
	/* harmony default export */ var skeleton_src_item = (skeleton_src_item_component.exports);
	// CONCATENATED MODULE: ./packages/skeleton-item/index.js


	/* istanbul ignore next */
	skeleton_src_item.install = function (Vue) {
	  Vue.component(skeleton_src_item.name, skeleton_src_item);
	};

	/* harmony default export */ var skeleton_item = (skeleton_src_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/index.vue?vue&type=template&id=347ced91&
	var srcvue_type_template_id_347ced91_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-empty" }, [
	    _c(
	      "div",
	      { staticClass: "el-empty__image", style: _vm.imageStyle },
	      [
	        _vm.image
	          ? _c("img", {
	              attrs: { src: _vm.image, ondragstart: "return false" }
	            })
	          : _vm._t("image", [_c("img-empty")])
	      ],
	      2
	    ),
	    _c(
	      "div",
	      { staticClass: "el-empty__description" },
	      [
	        _vm.$slots.description
	          ? _vm._t("description")
	          : _c("p", [_vm._v(_vm._s(_vm.emptyDescription))])
	      ],
	      2
	    ),
	    _vm.$slots.default
	      ? _c("div", { staticClass: "el-empty__bottom" }, [_vm._t("default")], 2)
	      : _vm._e()
	  ])
	};
	var srcvue_type_template_id_347ced91_staticRenderFns = [];
	srcvue_type_template_id_347ced91_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/empty/src/index.vue?vue&type=template&id=347ced91&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/img-empty.vue?vue&type=template&id=42918b82&
	var img_emptyvue_type_template_id_42918b82_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    {
	      attrs: {
	        viewBox: "0 0 79 86",
	        version: "1.1",
	        xmlns: "http://www.w3.org/2000/svg",
	        "xmlns:xlink": "http://www.w3.org/1999/xlink"
	      }
	    },
	    [
	      _c(
	        "defs",
	        [
	          _c(
	            "linearGradient",
	            {
	              attrs: {
	                id: "linearGradient-1-" + _vm.id,
	                x1: "38.8503086%",
	                y1: "0%",
	                x2: "61.1496914%",
	                y2: "100%"
	              }
	            },
	            [
	              _c("stop", { attrs: { "stop-color": "#FCFCFD", offset: "0%" } }),
	              _c("stop", { attrs: { "stop-color": "#EEEFF3", offset: "100%" } })
	            ],
	            1
	          ),
	          _c(
	            "linearGradient",
	            {
	              attrs: {
	                id: "linearGradient-2-" + _vm.id,
	                x1: "0%",
	                y1: "9.5%",
	                x2: "100%",
	                y2: "90.5%"
	              }
	            },
	            [
	              _c("stop", { attrs: { "stop-color": "#FCFCFD", offset: "0%" } }),
	              _c("stop", { attrs: { "stop-color": "#E9EBEF", offset: "100%" } })
	            ],
	            1
	          ),
	          _c("rect", {
	            attrs: {
	              id: "path-3-" + _vm.id,
	              x: "0",
	              y: "0",
	              width: "17",
	              height: "36"
	            }
	          })
	        ],
	        1
	      ),
	      _c(
	        "g",
	        {
	          attrs: {
	            id: "Illustrations",
	            stroke: "none",
	            "stroke-width": "1",
	            fill: "none",
	            "fill-rule": "evenodd"
	          }
	        },
	        [
	          _c(
	            "g",
	            {
	              attrs: {
	                id: "B-type",
	                transform: "translate(-1268.000000, -535.000000)"
	              }
	            },
	            [
	              _c(
	                "g",
	                {
	                  attrs: {
	                    id: "Group-2",
	                    transform: "translate(1268.000000, 535.000000)"
	                  }
	                },
	                [
	                  _c("path", {
	                    attrs: {
	                      id: "Oval-Copy-2",
	                      d:
	                        "M39.5,86 C61.3152476,86 79,83.9106622 79,81.3333333 C79,78.7560045 57.3152476,78 35.5,78 C13.6847524,78 0,78.7560045 0,81.3333333 C0,83.9106622 17.6847524,86 39.5,86 Z",
	                      fill: "#F7F8FC"
	                    }
	                  }),
	                  _c("polygon", {
	                    attrs: {
	                      id: "Rectangle-Copy-14",
	                      fill: "#E5E7E9",
	                      transform:
	                        "translate(27.500000, 51.500000) scale(1, -1) translate(-27.500000, -51.500000) ",
	                      points: "13 58 53 58 42 45 2 45"
	                    }
	                  }),
	                  _c(
	                    "g",
	                    {
	                      attrs: {
	                        id: "Group-Copy",
	                        transform:
	                          "translate(34.500000, 31.500000) scale(-1, 1) rotate(-25.000000) translate(-34.500000, -31.500000) translate(7.000000, 10.000000)"
	                      }
	                    },
	                    [
	                      _c("polygon", {
	                        attrs: {
	                          id: "Rectangle-Copy-10",
	                          fill: "#E5E7E9",
	                          transform:
	                            "translate(11.500000, 5.000000) scale(1, -1) translate(-11.500000, -5.000000) ",
	                          points: "2.84078316e-14 3 18 3 23 7 5 7"
	                        }
	                      }),
	                      _c("polygon", {
	                        attrs: {
	                          id: "Rectangle-Copy-11",
	                          fill: "#EDEEF2",
	                          points:
	                            "-3.69149156e-15 7 38 7 38 43 -3.69149156e-15 43"
	                        }
	                      }),
	                      _c("rect", {
	                        attrs: {
	                          id: "Rectangle-Copy-12",
	                          fill: "url(#linearGradient-1-" + _vm.id + ")",
	                          transform:
	                            "translate(46.500000, 25.000000) scale(-1, 1) translate(-46.500000, -25.000000) ",
	                          x: "38",
	                          y: "7",
	                          width: "17",
	                          height: "36"
	                        }
	                      }),
	                      _c("polygon", {
	                        attrs: {
	                          id: "Rectangle-Copy-13",
	                          fill: "#F8F9FB",
	                          transform:
	                            "translate(39.500000, 3.500000) scale(-1, 1) translate(-39.500000, -3.500000) ",
	                          points:
	                            "24 7 41 7 55 -3.63806207e-12 38 -3.63806207e-12"
	                        }
	                      })
	                    ]
	                  ),
	                  _c("rect", {
	                    attrs: {
	                      id: "Rectangle-Copy-15",
	                      fill: "url(#linearGradient-2-" + _vm.id + ")",
	                      x: "13",
	                      y: "45",
	                      width: "40",
	                      height: "36"
	                    }
	                  }),
	                  _c(
	                    "g",
	                    {
	                      attrs: {
	                        id: "Rectangle-Copy-17",
	                        transform: "translate(53.000000, 45.000000)"
	                      }
	                    },
	                    [
	                      _c(
	                        "mask",
	                        { attrs: { id: "mask-4-" + _vm.id, fill: "white" } },
	                        [
	                          _c("use", {
	                            attrs: { "xlink:href": "#path-3-" + _vm.id }
	                          })
	                        ]
	                      ),
	                      _c("use", {
	                        attrs: {
	                          id: "Mask",
	                          fill: "#E0E3E9",
	                          transform:
	                            "translate(8.500000, 18.000000) scale(-1, 1) translate(-8.500000, -18.000000) ",
	                          "xlink:href": "#path-3-" + _vm.id
	                        }
	                      }),
	                      _c("polygon", {
	                        attrs: {
	                          id: "Rectangle-Copy",
	                          fill: "#D5D7DE",
	                          mask: "url(#mask-4-" + _vm.id + ")",
	                          transform:
	                            "translate(12.000000, 9.000000) scale(-1, 1) translate(-12.000000, -9.000000) ",
	                          points: "7 0 24 0 20 18 -1.70530257e-13 16"
	                        }
	                      })
	                    ]
	                  ),
	                  _c("polygon", {
	                    attrs: {
	                      id: "Rectangle-Copy-18",
	                      fill: "#F8F9FB",
	                      transform:
	                        "translate(66.000000, 51.500000) scale(-1, 1) translate(-66.000000, -51.500000) ",
	                      points: "62 45 79 45 70 58 53 58"
	                    }
	                  })
	                ]
	              )
	            ]
	          )
	        ]
	      )
	    ]
	  )
	};
	var img_emptyvue_type_template_id_42918b82_staticRenderFns = [];
	img_emptyvue_type_template_id_42918b82_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/empty/src/img-empty.vue?vue&type=template&id=42918b82&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/img-empty.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var img_emptyvue_type_script_lang_js_id = 0;
	/* harmony default export */ var img_emptyvue_type_script_lang_js_ = ({
	  name: 'ImgEmpty',
	  data: function data() {
	    return {
	      id: ++img_emptyvue_type_script_lang_js_id
	    };
	  }
	});
	// CONCATENATED MODULE: ./packages/empty/src/img-empty.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_img_emptyvue_type_script_lang_js_ = (img_emptyvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/empty/src/img-empty.vue





	/* normalize component */

	var img_empty_component = normalizeComponent(
	  src_img_emptyvue_type_script_lang_js_,
	  img_emptyvue_type_template_id_42918b82_render,
	  img_emptyvue_type_template_id_42918b82_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	img_empty_component.options.__file = "packages/empty/src/img-empty.vue";
	/* harmony default export */ var img_empty = (img_empty_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/index.vue?vue&type=script&lang=js&
	var srcvue_type_script_lang_js_components;

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//




	/* harmony default export */ var empty_srcvue_type_script_lang_js_ = ({
	  name: 'ElEmpty',
	  components: (srcvue_type_script_lang_js_components = {}, srcvue_type_script_lang_js_components[img_empty.name] = img_empty, srcvue_type_script_lang_js_components),
	  props: {
	    image: {
	      type: String,
	      default: ''
	    },
	    imageSize: Number,
	    description: {
	      type: String,
	      default: ''
	    }
	  },
	  computed: {
	    emptyDescription: function emptyDescription() {
	      return this.description || Object(lib_locale_["t"])('el.empty.description');
	    },
	    imageStyle: function imageStyle() {
	      return {
	        width: this.imageSize ? this.imageSize + 'px' : ''
	      };
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/empty/src/index.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_empty_srcvue_type_script_lang_js_ = (empty_srcvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/empty/src/index.vue





	/* normalize component */

	var empty_src_component = normalizeComponent(
	  packages_empty_srcvue_type_script_lang_js_,
	  srcvue_type_template_id_347ced91_render,
	  srcvue_type_template_id_347ced91_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	empty_src_component.options.__file = "packages/empty/src/index.vue";
	/* harmony default export */ var empty_src = (empty_src_component.exports);
	// CONCATENATED MODULE: ./packages/empty/index.js


	empty_src.install = function (Vue) {
	  Vue.component(empty_src.name, empty_src);
	};

	/* harmony default export */ var empty = (empty_src);
	// CONCATENATED MODULE: ./packages/descriptions/src/descriptions-row.js
	var descriptions_row_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	/* harmony default export */ var descriptions_row = ({
	  name: 'ElDescriptionsRow',
	  props: {
	    row: {
	      type: Array
	    }
	  },
	  inject: ['elDescriptions'],
	  render: function render(h) {
	    var elDescriptions = this.elDescriptions;

	    var row = (this.row || []).map(function (item) {
	      return descriptions_row_extends({}, item, {
	        label: item.slots.label || item.props.label
	      }, ['labelClassName', 'contentClassName', 'labelStyle', 'contentStyle'].reduce(function (res, key) {
	        res[key] = item.props[key] || elDescriptions[key];
	        return res;
	      }, {}));
	    });
	    if (elDescriptions.direction === 'vertical') {
	      return h('tbody', [h(
	        'tr',
	        { 'class': 'el-descriptions-row' },
	        [row.map(function (item) {
	          var _ref;

	          return h(
	            'th',
	            {
	              'class': (_ref = {
	                'el-descriptions-item__cell': true,
	                'el-descriptions-item__label': true,
	                'has-colon': elDescriptions.border ? false : elDescriptions.colon,
	                'is-bordered-label': elDescriptions.border
	              }, _ref[item.labelClassName] = true, _ref),
	              style: item.labelStyle,
	              attrs: { colSpan: item.props.span
	              }
	            },
	            [item.label]
	          );
	        })]
	      ), h(
	        'tr',
	        { 'class': 'el-descriptions-row' },
	        [row.map(function (item) {
	          return h(
	            'td',
	            {
	              'class': ['el-descriptions-item__cell', 'el-descriptions-item__content', item.contentClassName],
	              style: item.contentStyle,
	              attrs: { colSpan: item.props.span
	              }
	            },
	            [item.slots.default]
	          );
	        })]
	      )]);
	    }
	    if (elDescriptions.border) {
	      return h('tbody', [h(
	        'tr',
	        { 'class': 'el-descriptions-row' },
	        [row.map(function (item) {
	          var _ref2;

	          return [h(
	            'th',
	            {
	              'class': (_ref2 = {
	                'el-descriptions-item__cell': true,
	                'el-descriptions-item__label': true,
	                'is-bordered-label': elDescriptions.border
	              }, _ref2[item.labelClassName] = true, _ref2),
	              style: item.labelStyle,
	              attrs: { colSpan: '1'
	              }
	            },
	            [item.label]
	          ), h(
	            'td',
	            {
	              'class': ['el-descriptions-item__cell', 'el-descriptions-item__content', item.contentClassName],
	              style: item.contentStyle,
	              attrs: { colSpan: item.props.span * 2 - 1
	              }
	            },
	            [item.slots.default]
	          )];
	        })]
	      )]);
	    }
	    return h('tbody', [h(
	      'tr',
	      { 'class': 'el-descriptions-row' },
	      [row.map(function (item) {
	        var _ref3;

	        return h(
	          'td',
	          { 'class': 'el-descriptions-item el-descriptions-item__cell', attrs: { colSpan: item.props.span }
	          },
	          [h(
	            'div',
	            { 'class': 'el-descriptions-item__container' },
	            [h(
	              'span',
	              {
	                'class': (_ref3 = {
	                  'el-descriptions-item__label': true,
	                  'has-colon': elDescriptions.colon
	                }, _ref3[item.labelClassName] = true, _ref3),
	                style: item.labelStyle
	              },
	              [item.label]
	            ), h(
	              'span',
	              {
	                'class': ['el-descriptions-item__content', item.contentClassName],
	                style: item.contentStyle
	              },
	              [item.slots.default]
	            )]
	          )]
	        );
	      })]
	    )]);
	  }
	});
	// CONCATENATED MODULE: ./packages/descriptions/src/index.js
	var src_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var src_components;




	/* harmony default export */ var descriptions_src = ({
	  name: 'ElDescriptions',
	  components: (src_components = {}, src_components[descriptions_row.name] = descriptions_row, src_components),
	  props: {
	    border: {
	      type: Boolean,
	      default: false
	    },
	    column: {
	      type: Number,
	      default: 3
	    },
	    direction: {
	      type: String,
	      default: 'horizontal'
	    },
	    size: {
	      type: String
	      // validator: isValidComponentSize,
	    },
	    title: {
	      type: String,
	      default: ''
	    },
	    extra: {
	      type: String,
	      default: ''
	    },
	    labelStyle: {
	      type: Object
	    },
	    contentStyle: {
	      type: Object
	    },
	    labelClassName: {
	      type: String,
	      default: ''
	    },
	    contentClassName: {
	      type: String,
	      default: ''
	    },
	    colon: {
	      type: Boolean,
	      default: true
	    }
	  },
	  computed: {
	    descriptionsSize: function descriptionsSize() {
	      return this.size || (this.$ELEMENT || {}).size;
	    }
	  },
	  provide: function provide() {
	    return {
	      elDescriptions: this
	    };
	  },

	  methods: {
	    getOptionProps: function getOptionProps(vnode) {
	      if (vnode.componentOptions) {
	        var componentOptions = vnode.componentOptions;
	        var _componentOptions$pro = componentOptions.propsData,
	            propsData = _componentOptions$pro === undefined ? {} : _componentOptions$pro,
	            _componentOptions$Cto = componentOptions.Ctor,
	            Ctor = _componentOptions$Cto === undefined ? {} : _componentOptions$Cto;

	        var props = (Ctor.options || {}).props || {};
	        var res = {};
	        for (var k in props) {
	          var v = props[k];
	          var defaultValue = v.default;
	          if (defaultValue !== undefined) {
	            res[k] = Object(types_["isFunction"])(defaultValue) ? defaultValue.call(vnode) : defaultValue;
	          }
	        }
	        return src_extends({}, res, propsData);
	      }
	      return {};
	    },
	    getSlots: function getSlots(vnode) {
	      var _this = this;

	      var componentOptions = vnode.componentOptions || {};
	      var children = vnode.children || componentOptions.children || [];
	      var slots = {};
	      children.forEach(function (child) {
	        if (!_this.isEmptyElement(child)) {
	          var name = child.data && child.data.slot || 'default';
	          slots[name] = slots[name] || [];
	          if (child.tag === 'template') {
	            slots[name].push(child.children);
	          } else {
	            slots[name].push(child);
	          }
	        }
	      });
	      return src_extends({}, slots);
	    },
	    isEmptyElement: function isEmptyElement(c) {
	      return !(c.tag || c.text && c.text.trim() !== '');
	    },
	    filledNode: function filledNode(node, span, count) {
	      var isLast = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

	      if (!node.props) {
	        node.props = {};
	      }
	      if (span > count) {
	        node.props.span = count;
	      }
	      if (isLast) {
	        // set the max span, cause of the last td
	        node.props.span = count;
	      }
	      return node;
	    },
	    getRows: function getRows() {
	      var _this2 = this;

	      var children = (this.$slots.default || []).filter(function (vnode) {
	        return vnode.tag && vnode.componentOptions && vnode.componentOptions.Ctor.options.name === 'ElDescriptionsItem';
	      });
	      var nodes = children.map(function (vnode) {
	        return {
	          props: _this2.getOptionProps(vnode),
	          slots: _this2.getSlots(vnode),
	          vnode: vnode
	        };
	      });
	      var rows = [];
	      var temp = [];
	      var count = this.column;

	      nodes.forEach(function (node, index) {
	        var span = node.props.span || 1;

	        if (index === children.length - 1) {
	          temp.push(_this2.filledNode(node, span, count, true));
	          rows.push(temp);
	          return;
	        }

	        if (span < count) {
	          count -= span;
	          temp.push(node);
	        } else {
	          temp.push(_this2.filledNode(node, span, count));
	          rows.push(temp);
	          count = _this2.column;
	          temp = [];
	        }
	      });

	      return rows;
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    var title = this.title,
	        extra = this.extra,
	        border = this.border,
	        descriptionsSize = this.descriptionsSize,
	        $slots = this.$slots;

	    var rows = this.getRows();

	    return h(
	      'div',
	      { 'class': 'el-descriptions' },
	      [title || extra || $slots.title || $slots.extra ? h(
	        'div',
	        { 'class': 'el-descriptions__header' },
	        [h(
	          'div',
	          { 'class': 'el-descriptions__title' },
	          [$slots.title ? $slots.title : title]
	        ), h(
	          'div',
	          { 'class': 'el-descriptions__extra' },
	          [$slots.extra ? $slots.extra : extra]
	        )]
	      ) : null, h(
	        'div',
	        { 'class': 'el-descriptions__body' },
	        [h(
	          'table',
	          { 'class': ['el-descriptions__table', { 'is-bordered': border }, descriptionsSize ? 'el-descriptions--' + descriptionsSize : ''] },
	          [rows.map(function (row) {
	            return h(descriptions_row, {
	              attrs: { row: row }
	            });
	          })]
	        )]
	      )]
	    );
	  }
	});
	// CONCATENATED MODULE: ./packages/descriptions/index.js


	/* istanbul ignore next */
	descriptions_src.install = function install(Vue) {
	  Vue.component(descriptions_src.name, descriptions_src);
	};

	/* harmony default export */ var descriptions = (descriptions_src);
	// CONCATENATED MODULE: ./packages/descriptions/src/descriptions-item.js
	/* harmony default export */ var descriptions_item = ({
	  name: 'ElDescriptionsItem',
	  props: {
	    label: {
	      type: String,
	      default: ''
	    },
	    span: {
	      type: Number,
	      default: 1
	    },
	    contentClassName: {
	      type: String,
	      default: ''
	    },
	    contentStyle: {
	      type: Object
	    },
	    labelClassName: {
	      type: String,
	      default: ''
	    },
	    labelStyle: {
	      type: Object
	    }
	  },
	  render: function render() {
	    return null;
	  }
	});
	// CONCATENATED MODULE: ./packages/descriptions-item/index.js


	/* istanbul ignore next */
	descriptions_item.install = function install(Vue) {
	  Vue.component(descriptions_item.name, descriptions_item);
	};

	/* harmony default export */ var packages_descriptions_item = (descriptions_item);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/index.vue?vue&type=template&id=3408b139&
	var srcvue_type_template_id_3408b139_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "el-result" }, [
	    _c(
	      "div",
	      { staticClass: "el-result__icon" },
	      [
	        _vm._t("icon", [
	          _c(_vm.iconElement, { tag: "component", class: _vm.iconElement })
	        ])
	      ],
	      2
	    ),
	    _vm.title || _vm.$slots.title
	      ? _c(
	          "div",
	          { staticClass: "el-result__title" },
	          [_vm._t("title", [_c("p", [_vm._v(_vm._s(_vm.title))])])],
	          2
	        )
	      : _vm._e(),
	    _vm.subTitle || _vm.$slots.subTitle
	      ? _c(
	          "div",
	          { staticClass: "el-result__subtitle" },
	          [_vm._t("subTitle", [_c("p", [_vm._v(_vm._s(_vm.subTitle))])])],
	          2
	        )
	      : _vm._e(),
	    _vm.$slots.extra
	      ? _c("div", { staticClass: "el-result__extra" }, [_vm._t("extra")], 2)
	      : _vm._e()
	  ])
	};
	var srcvue_type_template_id_3408b139_staticRenderFns = [];
	srcvue_type_template_id_3408b139_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/result/src/index.vue?vue&type=template&id=3408b139&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-success.vue?vue&type=template&id=18119418&
	var icon_successvue_type_template_id_18119418_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    { attrs: { viewBox: "0 0 48 48", xmlns: "http://www.w3.org/2000/svg" } },
	    [
	      _c("path", {
	        attrs: {
	          d:
	            "M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M34.5548098,16.4485711 C33.9612228,15.8504763 32.9988282,15.8504763 32.4052412,16.4485711 L32.4052412,16.4485711 L21.413757,27.5805811 L21.413757,27.5805811 L21.4034642,27.590855 C21.0097542,27.9781674 20.3766105,27.9729811 19.9892981,27.5792711 L19.9892981,27.5792711 L15.5947588,23.1121428 C15.0011718,22.514048 14.0387772,22.514048 13.4451902,23.1121428 C12.8516033,23.7102376 12.8516033,24.6799409 13.4451902,25.2780357 L13.4451902,25.2780357 L19.6260786,31.5514289 C20.2196656,32.1495237 21.1820602,32.1495237 21.7756472,31.5514289 L21.7756472,31.5514289 L34.5548098,18.614464 C35.1483967,18.0163692 35.1483967,17.0466659 34.5548098,16.4485711 Z"
	        }
	      })
	    ]
	  )
	};
	var icon_successvue_type_template_id_18119418_staticRenderFns = [];
	icon_successvue_type_template_id_18119418_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/result/src/icon-success.vue?vue&type=template&id=18119418&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-success.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var icon_successvue_type_script_lang_js_ = ({
	  name: 'IconSuccess'
	});
	// CONCATENATED MODULE: ./packages/result/src/icon-success.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_icon_successvue_type_script_lang_js_ = (icon_successvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/result/src/icon-success.vue





	/* normalize component */

	var icon_success_component = normalizeComponent(
	  src_icon_successvue_type_script_lang_js_,
	  icon_successvue_type_template_id_18119418_render,
	  icon_successvue_type_template_id_18119418_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	icon_success_component.options.__file = "packages/result/src/icon-success.vue";
	/* harmony default export */ var icon_success = (icon_success_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-error.vue?vue&type=template&id=21199246&
	var icon_errorvue_type_template_id_21199246_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    { attrs: { viewBox: "0 0 48 48", xmlns: "http://www.w3.org/2000/svg" } },
	    [
	      _c("path", {
	        attrs: {
	          d:
	            "M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M32.57818,15.42182 C32.0157534,14.8593933 31.1038797,14.8593933 30.541453,15.42182 L30.541453,15.42182 L24.0006789,21.9625941 L17.458547,15.42182 C16.8961203,14.8593933 15.9842466,14.8593933 15.42182,15.42182 C14.8593933,15.9842466 14.8593933,16.8961203 15.42182,17.458547 L15.42182,17.458547 L21.9639519,23.9993211 L15.42182,30.541453 C14.8593933,31.1038797 14.8593933,32.0157534 15.42182,32.57818 C15.9842466,33.1406067 16.8961203,33.1406067 17.458547,32.57818 L17.458547,32.57818 L24.0006789,26.0360481 L30.541453,32.57818 C31.1038797,33.1406067 32.0157534,33.1406067 32.57818,32.57818 C33.1406067,32.0157534 33.1406067,31.1038797 32.57818,30.541453 L32.57818,30.541453 L26.0374059,23.9993211 L32.57818,17.458547 C33.1406067,16.8961203 33.1406067,15.9842466 32.57818,15.42182 Z"
	        }
	      })
	    ]
	  )
	};
	var icon_errorvue_type_template_id_21199246_staticRenderFns = [];
	icon_errorvue_type_template_id_21199246_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/result/src/icon-error.vue?vue&type=template&id=21199246&

	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-error.vue?vue&type=script&lang=js&
	//
	//
	//
	//
	//
	//
	//
	//

	/* harmony default export */ var icon_errorvue_type_script_lang_js_ = ({
	  name: 'IconError'
	});
	// CONCATENATED MODULE: ./packages/result/src/icon-error.vue?vue&type=script&lang=js&
	 /* harmony default export */ var src_icon_errorvue_type_script_lang_js_ = (icon_errorvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/result/src/icon-error.vue





	/* normalize component */

	var icon_error_component = normalizeComponent(
	  src_icon_errorvue_type_script_lang_js_,
	  icon_errorvue_type_template_id_21199246_render,
	  icon_errorvue_type_template_id_21199246_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	icon_error_component.options.__file = "packages/result/src/icon-error.vue";
	/* harmony default export */ var icon_error = (icon_error_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-warning.vue?vue&type=template&id=46fe8f31&
	var icon_warningvue_type_template_id_46fe8f31_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    { attrs: { viewBox: "0 0 48 48", xmlns: "http://www.w3.org/2000/svg" } },
	    [
	      _c("path", {
	        attrs: {
	          d:
	            "M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M24,31 C22.8954305,31 22,31.8954305 22,33 C22,34.1045695 22.8954305,35 24,35 C25.1045695,35 26,34.1045695 26,33 C26,31.8954305 25.1045695,31 24,31 Z M24,14 C23.1715729,14 22.5,14.6715729 22.5,15.5 L22.5,15.5 L22.5,27.5 C22.5,28.3284271 23.1715729,29 24,29 C24.8284271,29 25.5,28.3284271 25.5,27.5 L25.5,27.5 L25.5,15.5 C25.5,14.6715729 24.8284271,14 24,14 Z"
	        }
	      })
	    ]
	  )
	};
	var icon_warningvue_type_template_id_46fe8f31_staticRenderFns = [];
	icon_warningvue_type_template_id_46fe8f31_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/result/src/icon-warning.vue?vue&type=template&id=46fe8f31&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-warning.vue?vue&type=script&lang=ts&









	/* harmony default export */ var icon_warningvue_type_script_lang_ts_ = ({
	  name: 'IconWarning'
	});

	// CONCATENATED MODULE: ./packages/result/src/icon-warning.vue?vue&type=script&lang=ts&
	 /* harmony default export */ var src_icon_warningvue_type_script_lang_ts_ = (icon_warningvue_type_script_lang_ts_); 
	// CONCATENATED MODULE: ./packages/result/src/icon-warning.vue





	/* normalize component */

	var icon_warning_component = normalizeComponent(
	  src_icon_warningvue_type_script_lang_ts_,
	  icon_warningvue_type_template_id_46fe8f31_render,
	  icon_warningvue_type_template_id_46fe8f31_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	icon_warning_component.options.__file = "packages/result/src/icon-warning.vue";
	/* harmony default export */ var icon_warning = (icon_warning_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-info.vue?vue&type=template&id=19e3de69&
	var icon_infovue_type_template_id_19e3de69_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    { attrs: { viewBox: "0 0 48 48", xmlns: "http://www.w3.org/2000/svg" } },
	    [
	      _c("path", {
	        attrs: {
	          d:
	            "M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M24,19 L21,19 C20.1715729,19 19.5,19.6715729 19.5,20.5 C19.5,21.3284271 20.1715729,22 21,22 L21,22 L22.5,22 L22.5,31 L21,31 C20.1715729,31 19.5,31.6715729 19.5,32.5 C19.5,33.3284271 20.1715729,34 21,34 L21,34 L27,34 C27.8284271,34 28.5,33.3284271 28.5,32.5 C28.5,31.6715729 27.8284271,31 27,31 L27,31 L25.5,31 L25.5,20.5 C25.5,19.6715729 24.8284271,19 24,19 L24,19 Z M24,13 C22.8954305,13 22,13.8954305 22,15 C22,16.1045695 22.8954305,17 24,17 C25.1045695,17 26,16.1045695 26,15 C26,13.8954305 25.1045695,13 24,13 Z"
	        }
	      })
	    ]
	  )
	};
	var icon_infovue_type_template_id_19e3de69_staticRenderFns = [];
	icon_infovue_type_template_id_19e3de69_render._withStripped = true;


	// CONCATENATED MODULE: ./packages/result/src/icon-info.vue?vue&type=template&id=19e3de69&

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/icon-info.vue?vue&type=script&lang=ts&









	/* harmony default export */ var icon_infovue_type_script_lang_ts_ = ({
	  name: 'IconInfo'
	});

	// CONCATENATED MODULE: ./packages/result/src/icon-info.vue?vue&type=script&lang=ts&
	 /* harmony default export */ var src_icon_infovue_type_script_lang_ts_ = (icon_infovue_type_script_lang_ts_); 
	// CONCATENATED MODULE: ./packages/result/src/icon-info.vue





	/* normalize component */

	var icon_info_component = normalizeComponent(
	  src_icon_infovue_type_script_lang_ts_,
	  icon_infovue_type_template_id_19e3de69_render,
	  icon_infovue_type_template_id_19e3de69_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	icon_info_component.options.__file = "packages/result/src/icon-info.vue";
	/* harmony default export */ var icon_info = (icon_info_component.exports);
	// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/result/src/index.vue?vue&type=script&lang=js&
	var result_srcvue_type_script_lang_js_components;

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//






	var IconMap = {
	  success: 'icon-success',
	  warning: 'icon-warning',
	  error: 'icon-error',
	  info: 'icon-info'
	};

	/* harmony default export */ var result_srcvue_type_script_lang_js_ = ({
	  name: 'ElResult',
	  components: (result_srcvue_type_script_lang_js_components = {}, result_srcvue_type_script_lang_js_components[icon_success.name] = icon_success, result_srcvue_type_script_lang_js_components[icon_error.name] = icon_error, result_srcvue_type_script_lang_js_components[icon_warning.name] = icon_warning, result_srcvue_type_script_lang_js_components[icon_info.name] = icon_info, result_srcvue_type_script_lang_js_components),
	  props: {
	    title: {
	      type: String,
	      default: ''
	    },
	    subTitle: {
	      type: String,
	      default: ''
	    },
	    icon: {
	      type: String,
	      default: 'info'
	    }
	  },
	  computed: {
	    iconElement: function iconElement() {
	      var icon = this.icon;
	      return icon && IconMap[icon] ? IconMap[icon] : 'icon-info';
	    }
	  }
	});
	// CONCATENATED MODULE: ./packages/result/src/index.vue?vue&type=script&lang=js&
	 /* harmony default export */ var packages_result_srcvue_type_script_lang_js_ = (result_srcvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./packages/result/src/index.vue





	/* normalize component */

	var result_src_component = normalizeComponent(
	  packages_result_srcvue_type_script_lang_js_,
	  srcvue_type_template_id_3408b139_render,
	  srcvue_type_template_id_3408b139_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	result_src_component.options.__file = "packages/result/src/index.vue";
	/* harmony default export */ var result_src = (result_src_component.exports);
	// CONCATENATED MODULE: ./packages/result/index.js


	/* istanbul ignore next */
	result_src.install = function (Vue) {
	  Vue.component(result_src.name, result_src);
	};

	/* harmony default export */ var packages_result = (result_src);
	// CONCATENATED MODULE: ./src/index.js
	/* Automatically generated by './build/bin/build-entry.js' */





























































































	var components = [packages_pagination, dialog, packages_autocomplete, packages_dropdown, packages_dropdown_menu, packages_dropdown_item, packages_menu, packages_submenu, packages_menu_item, packages_menu_item_group, packages_input, packages_input_number, packages_radio, packages_radio_group, packages_radio_button, packages_checkbox, packages_checkbox_button, packages_checkbox_group, packages_switch, packages_select, packages_option, packages_option_group, packages_button, packages_button_group, packages_table, packages_table_column, packages_date_picker, packages_time_select, packages_time_picker, popover, packages_tooltip, packages_breadcrumb, packages_breadcrumb_item, packages_form, packages_form_item, packages_tabs, packages_tab_pane, packages_tag, packages_tree, packages_alert, slider, packages_icon, packages_row, packages_col, packages_upload, packages_progress, packages_spinner, badge, card, packages_rate, packages_steps, packages_step, carousel, scrollbar, carousel_item, packages_collapse, packages_collapse_item, packages_cascader, color_picker, transfer, packages_container, header, aside, packages_main, footer, timeline, timeline_item, packages_link, divider, packages_image, calendar, backtop, page_header, packages_cascader_panel, avatar, drawer, statistic, popconfirm, skeleton, skeleton_item, empty, descriptions, packages_descriptions_item, packages_result, collapse_transition_default.a];

	var src_install = function install(Vue) {
	  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	  lib_locale_default.a.use(opts.locale);
	  lib_locale_default.a.i18n(opts.i18n);

	  components.forEach(function (component) {
	    Vue.component(component.name, component);
	  });

	  Vue.use(infinite_scroll);
	  Vue.use(packages_loading.directive);

	  Vue.prototype.$ELEMENT = {
	    size: opts.size || '',
	    zIndex: opts.zIndex || 2000
	  };

	  Vue.prototype.$loading = packages_loading.service;
	  Vue.prototype.$msgbox = message_box;
	  Vue.prototype.$alert = message_box.alert;
	  Vue.prototype.$confirm = message_box.confirm;
	  Vue.prototype.$prompt = message_box.prompt;
	  Vue.prototype.$notify = notification;
	  Vue.prototype.$message = packages_message;
	};

	/* istanbul ignore if */
	if (typeof window !== 'undefined' && window.Vue) {
	  src_install(window.Vue);
	}

	/* harmony default export */ __webpack_exports__["default"] = ({
	  version: '2.15.14',
	  locale: lib_locale_default.a.use,
	  i18n: lib_locale_default.a.i18n,
	  install: src_install,
	  CollapseTransition: collapse_transition_default.a,
	  Loading: packages_loading,
	  Pagination: packages_pagination,
	  Dialog: dialog,
	  Autocomplete: packages_autocomplete,
	  Dropdown: packages_dropdown,
	  DropdownMenu: packages_dropdown_menu,
	  DropdownItem: packages_dropdown_item,
	  Menu: packages_menu,
	  Submenu: packages_submenu,
	  MenuItem: packages_menu_item,
	  MenuItemGroup: packages_menu_item_group,
	  Input: packages_input,
	  InputNumber: packages_input_number,
	  Radio: packages_radio,
	  RadioGroup: packages_radio_group,
	  RadioButton: packages_radio_button,
	  Checkbox: packages_checkbox,
	  CheckboxButton: packages_checkbox_button,
	  CheckboxGroup: packages_checkbox_group,
	  Switch: packages_switch,
	  Select: packages_select,
	  Option: packages_option,
	  OptionGroup: packages_option_group,
	  Button: packages_button,
	  ButtonGroup: packages_button_group,
	  Table: packages_table,
	  TableColumn: packages_table_column,
	  DatePicker: packages_date_picker,
	  TimeSelect: packages_time_select,
	  TimePicker: packages_time_picker,
	  Popover: popover,
	  Tooltip: packages_tooltip,
	  MessageBox: message_box,
	  Breadcrumb: packages_breadcrumb,
	  BreadcrumbItem: packages_breadcrumb_item,
	  Form: packages_form,
	  FormItem: packages_form_item,
	  Tabs: packages_tabs,
	  TabPane: packages_tab_pane,
	  Tag: packages_tag,
	  Tree: packages_tree,
	  Alert: packages_alert,
	  Notification: notification,
	  Slider: slider,
	  Icon: packages_icon,
	  Row: packages_row,
	  Col: packages_col,
	  Upload: packages_upload,
	  Progress: packages_progress,
	  Spinner: packages_spinner,
	  Message: packages_message,
	  Badge: badge,
	  Card: card,
	  Rate: packages_rate,
	  Steps: packages_steps,
	  Step: packages_step,
	  Carousel: carousel,
	  Scrollbar: scrollbar,
	  CarouselItem: carousel_item,
	  Collapse: packages_collapse,
	  CollapseItem: packages_collapse_item,
	  Cascader: packages_cascader,
	  ColorPicker: color_picker,
	  Transfer: transfer,
	  Container: packages_container,
	  Header: header,
	  Aside: aside,
	  Main: packages_main,
	  Footer: footer,
	  Timeline: timeline,
	  TimelineItem: timeline_item,
	  Link: packages_link,
	  Divider: divider,
	  Image: packages_image,
	  Calendar: calendar,
	  Backtop: backtop,
	  InfiniteScroll: infinite_scroll,
	  PageHeader: page_header,
	  CascaderPanel: packages_cascader_panel,
	  Avatar: avatar,
	  Drawer: drawer,
	  Statistic: statistic,
	  Popconfirm: popconfirm,
	  Skeleton: skeleton,
	  SkeletonItem: skeleton_item,
	  Empty: empty,
	  Descriptions: descriptions,
	  DescriptionsItem: packages_descriptions_item,
	  Result: packages_result
	});

	/***/ })
	/******/ ])["default"]; 
} (elementUi_common));

var elementUi_commonExports = elementUi_common.exports;

var vueCookies = {exports: {}};

/**
 * Vue Cookies v1.8.3
 * https://github.com/cmp-cc/vue-cookies
 *
 * Copyright 2016, cmp-cc
 * Released under the MIT license
 */

(function (module, exports) {
	(function () {

	  var defaultConfig = {
	    expires: '1d',
	    path: '; path=/',
	    domain: '',
	    secure: '',
	    sameSite: '; SameSite=Lax'
	  };

	  var VueCookies = {
	    // install of Vue
	    install: function (Vue, options) {
	      if (options) this.config(options.expires, options.path, options.domain, options.secure, options.sameSite);
	      if (Vue.prototype) Vue.prototype.$cookies = this;
	      if (Vue.config && Vue.config.globalProperties) {
	        Vue.config.globalProperties.$cookies = this;
	        Vue.provide('$cookies', this);
	      }
	      Vue.$cookies = this;
	    },
	    config: function (expires, path, domain, secure, sameSite) {
	      defaultConfig.expires = expires ? expires : '1d';
	      defaultConfig.path = path ? '; path=' + path : '; path=/';
	      defaultConfig.domain = domain ? '; domain=' + domain : '';
	      defaultConfig.secure = secure ? '; Secure' : '';
	      defaultConfig.sameSite = sameSite ? '; SameSite=' + sameSite : '; SameSite=Lax';
	    },
	    get: function (key) {
	      var value = decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\s*' + encodeURIComponent(key).replace(/[\-\.\+\*]/g, '\\$&') + '\\s*\\=\\s*([^;]*).*$)|^.*$'), '$1')) || null;

	      if (value && ((value.substring(0, 1) === '{' && value.substring(value.length - 1, value.length) === '}') || (value.substring(0, 1) === '[' && value.substring(value.length - 1, value.length) === ']'))) {
	        try {
	          value = JSON.parse(value);
	        } catch (e) {
	          return value;
	        }
	      }
	      return value;
	    },
	    set: function (key, value, expires, path, domain, secure, sameSite) {
	      if (!key) {
	        throw new Error('Cookie name is not found in the first argument.');
	      } else if (/^(?:expires|max\-age|path|domain|secure|SameSite)$/i.test(key)) {
	        throw new Error('Cookie name illegality. Cannot be set to ["expires","max-age","path","domain","secure","SameSite"]\t current key name: ' + key);
	      }
	      // support json object
	      if (value && typeof value === 'object') {
	        value = JSON.stringify(value);
	      }
	      var _expires = '';
	      expires = expires == undefined ? defaultConfig.expires : expires;
	      if (expires && expires != 0) {
	        switch (expires.constructor) {
	          case Number:
	            if (expires === Infinity || expires === -1) _expires = '; expires=Fri, 31 Dec 9999 23:59:59 GMT';
	            else _expires = '; max-age=' + expires;
	            break;
	          case String:
	            if (/^(?:\d+(y|m|d|h|min|s))$/i.test(expires)) {
	              // get capture number group
	              var _expireTime = expires.replace(/^(\d+)(?:y|m|d|h|min|s)$/i, '$1');
	              // get capture type group , to lower case
	              switch (expires.replace(/^(?:\d+)(y|m|d|h|min|s)$/i, '$1').toLowerCase()) {
	                  // Frequency sorting
	                case 'm':
	                  _expires = '; max-age=' + +_expireTime * 2592000;
	                  break; // 60 * 60 * 24 * 30
	                case 'd':
	                  _expires = '; max-age=' + +_expireTime * 86400;
	                  break; // 60 * 60 * 24
	                case 'h':
	                  _expires = '; max-age=' + +_expireTime * 3600;
	                  break; // 60 * 60
	                case 'min':
	                  _expires = '; max-age=' + +_expireTime * 60;
	                  break; // 60
	                case 's':
	                  _expires = '; max-age=' + _expireTime;
	                  break;
	                case 'y':
	                  _expires = '; max-age=' + +_expireTime * 31104000;
	                  break; // 60 * 60 * 24 * 30 * 12
	              }
	            } else {
	              _expires = '; expires=' + expires;
	            }
	            break;
	          case Date:
	            _expires = '; expires=' + expires.toUTCString();
	            break;
	        }
	      }
	      document.cookie =
	          encodeURIComponent(key) + '=' + encodeURIComponent(value) +
	          _expires +
	          (domain ? '; domain=' + domain : defaultConfig.domain) +
	          (path ? '; path=' + path : defaultConfig.path) +
	          (secure == undefined ? defaultConfig.secure : secure ? '; Secure' : '') +
	          (sameSite == undefined ? defaultConfig.sameSite : (sameSite ? '; SameSite=' + sameSite : ''));
	      return this;
	    },
	    remove: function (key, path, domain) {
	      if (!key || !this.isKey(key)) {
	        return false;
	      }
	      document.cookie = encodeURIComponent(key) +
	          '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' +
	          (domain ? '; domain=' + domain : defaultConfig.domain) +
	          (path ? '; path=' + path : defaultConfig.path) +
	          '; SameSite=Lax';
	      return true;
	    },
	    isKey: function (key) {
	      return (new RegExp('(?:^|;\\s*)' + encodeURIComponent(key).replace(/[\-\.\+\*]/g, '\\$&') + '\\s*\\=')).test(document.cookie);
	    },
	    keys: function () {
	      if (!document.cookie) return [];
	      var _keys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, '').split(/\s*(?:\=[^;]*)?;\s*/);
	      for (var _index = 0; _index < _keys.length; _index++) {
	        _keys[_index] = decodeURIComponent(_keys[_index]);
	      }
	      return _keys;
	    }
	  };

	  {
	    module.exports = VueCookies;
	  }
	  // vue-cookies can exist independently,no dependencies library
	  if (typeof window !== 'undefined') {
	    window.$cookies = VueCookies;
	  }

	})(); 
} (vueCookies));

var vueCookiesExports = vueCookies.exports;
var VueCookies = /*@__PURE__*/getDefaultExportFromCjs(vueCookiesExports);

const prefix = process.env.VUE_APP_CACHEPREFIX;
const _VueCookies = VueCookies;
const cookies = {
  get: key => {
    return _VueCookies.get(prefix + key);
  },
  set: (key, value, expires, path, domain, secure, sameSite) => {
    _VueCookies.set(prefix + key, value, expires, path, domain, secure, sameSite);
  },
  remove: (key, path, domain) => {
    _VueCookies.remove(prefix + key, path, domain);
  },
  isKey: key => {
    return _VueCookies.isKey(prefix + key);
  },
  keys: () => {
    return _VueCookies.keys();
  }
};

const createAxios = {
  baseURL: '/api',
  headers: {
    'Content-Type': 'application/json;charset=UTF-8'
  },
  timeout: 1000 * 60,
  withCredentials: false,
  responseType: 'json',
  responseEncoding: 'utf8'
};
const request = axios$1.create(createAxios);
const pending = [];
const CancelToken = axios$1.CancelToken;
const removePending = config => {
  for (const key in pending) {
    if (Object.prototype.hasOwnProperty.call(pending, key)) {
      const item = +key;
      const list = pending[key];
      // 当前请求在数组中存在时执行函数体
      if (list.url === config.url && list.method === config.method && JSON.stringify(list.params) === JSON.stringify(config.params) && JSON.stringify(list.data) === JSON.stringify(config.data)) {
        // 执行取消操作
        list.cancel('frequently');
        // 从数组中移除记录
        pending.splice(item, 1);
      }
    }
  }
};
// request 不支持泛型
// request.get post put 支持响应数据泛型
// 由于我们的后端又包装了一层数据data ，导致访问数据比较麻烦，所以又封装一层
// 控制登录过期的锁
let isRefreshing = false;
// 请求拦截器
request.interceptors.request.use(config => {
  removePending(config);
  config.cancelToken = new CancelToken(c => {
    if (config.url.indexOf('/code') < 0) {
      pending.push({
        url: config.url,
        method: config.method,
        params: config.params,
        data: config.data,
        cancel: c
      });
    }
  });
  // 是否需要设置 token
  const isToken = (config.headers || {}).isToken === false;
  if (cookies.get('Admin-Token') && !isToken) {
    config.headers['Authorization'] = cookies.get('Admin-Token');
    // 让每个请求携带自定义token 请根据实际情况自行修改
  }

  return config;
}, error => {
  return Promise.reject(error);
});
// 响应拦截器
request.interceptors.response.use(response => {
  const status = response.data.status;
  if (!status || status === 200) {
    return response.data;
  }
  if (status === 401) {
    // 防止多次弹出登录框
    if (isRefreshing) return Promise.reject(response);
    // 清除本地过去的登录状态
    elementUi_commonExports.MessageBox.confirm('登录状态已过期，请重新登录', '提示', {
      confirmButtonText: '确认',
      cancelButtonText: '取消',
      type: 'warning'
    }).then(() => {
      // 跳转到登录页
    }).catch(() => {
      // 抛出异常
    }).finally(() => {
      isRefreshing = false;
    });
    // 在内部消化掉这个业务异常
    return Promise.reject(response);
  }
  // 其他错误情况
  elementUi_commonExports.Message.error(response.data.msg || '请求失败，请稍后重试');
  return Promise.reject(response.data);
}, error => {
  //console.log('err' + JSON.stringify(error))
  let messages = '';
  const {
    message,
    response
  } = error;
  const msg = response && response.data ? response.data.msg : response;
  if (message == 'Network Error') {
    messages = '后端接口连接异常';
  } else if (message.includes('timeout')) {
    messages = '系统接口请求超时';
  } else if (message.includes('Request failed with status code')) {
    messages = '系统接口' + message.substr(message.length - 3) + '异常';
  } else if (message.includes('frequently')) {
    messages = '操作太频繁，请稍后再试';
  }
  if (!message.includes('frequently')) {
    elementUi_commonExports.Message({
      message: msg || messages,
      type: 'error',
      duration: 5 * 1000
    });
  } else {
    console.warn(messages);
  }
  return Promise.reject(error);
});
// 通过导出自定的request实例，来实现对axios的类型封装
var request$1 = (config => {
  return request(config).then(response => {
    return response;
  });
});

/**
 * 获取字典
 * @param code 字典ID
 * @returns Data
 */
const getCode = url => {
  return new Promise((resolve, reject) => {
    request$1({
      url,
      method: 'get'
    }).then(res => {
      resolve(res);
    }).catch(err => {
      reject(err);
    });
  });
};

/**
 * @param {Number} len uuid的长度
 * @param {Boolean} firstU 将返回的首字母置为"u"
 * @param {Nubmer} radix 生成uuid的基数(意味着返回的字符串都是这个基数),2-二进制,8-八进制,10-十进制,16-十六进制
 */
const uuid = function () {
  let len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;
  let firstU = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  let radix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');
  const uuid = [];
  radix = radix || chars.length;
  if (len) {
    // 如果指定uuid长度,只是取随机的字符,0|x为位运算,能去掉x的小数位,返回整数位
    for (let i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];
  } else {
    let r;
    // rfc4122标准要求返回的uuid中,某些位为固定的字符
    uuid[8] = '-';
    uuid[13] = '-';
    uuid[18] = '-';
    uuid[23] = '-';
    uuid[14] = '4';
    for (let i = 0; i < 36; i++) {
      if (!uuid[i]) {
        r = 0 | Math.random() * 16;
        uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];
      }
    }
  }
  // 移除第一个字符,并用u替代,因为第一个字符为数值时,该guuid不能用作id或者class
  if (firstU) {
    uuid.shift();
    return `u${uuid.join('')}`;
  }
  return uuid.join('');
};

let XlVirtualSelect = class XlVirtualSelect extends Vue {
  constructor() {
    super(...arguments);
    _defineProperty$1(this, "attribute", void 0);
    _defineProperty$1(this, "events", void 0);
    _defineProperty$1(this, "data", void 0);
    //所有数据
    _defineProperty$1(this, "props", void 0);
    // code 字典表码-----------------------------
    _defineProperty$1(this, "code", void 0);
    _defineProperty$1(this, "id", '');
    _defineProperty$1(this, "elwarp", null);
    _defineProperty$1(this, "values", '');
    _defineProperty$1(this, "label", '');
    _defineProperty$1(this, "loading", false);
    _defineProperty$1(this, "sourceData", []);
    //搜索时用到所有数据
    _defineProperty$1(this, "containerHeight", '100%');
    _defineProperty$1(this, "options", []);
    //每列高度
    _defineProperty$1(this, "itemHeight", 34);
    //可视区域高度
    _defineProperty$1(this, "screenHeight", 272);
    //偏移量
    _defineProperty$1(this, "startOffset", '');
    //起始索引
    _defineProperty$1(this, "start", 0);
    //结束索引
    _defineProperty$1(this, "end", 10);
    _defineProperty$1(this, "isSearch", false);
    //是否输入搜索过
    _defineProperty$1(this, "value", void 0);
  }
  onValueChanged(val) {
    setTimeout(() => {
      const select = this.$refs.list;
      let data = [];
      if (select.multiple) {
        if (val) {
          data = val.split(',');
        }
      } else {
        data = val || '';
      }
      this.values = data;
      this.handleChange();
    }, 0);
  }
  //获取真实显示列表数据
  get computedVisibleData() {
    return this.sourceData.slice(this.start, Math.min(this.end, this.sourceData.length));
  }
  //列表总高度
  get computedListHeight() {
    return BigInt(this.sourceData.length * this.itemHeight);
  }
  //可显示的列表项数
  get computedVisibleCount() {
    return Math.ceil(this.screenHeight / this.itemHeight) + 1;
  }
  async created() {
    this.id = 'custom-' + uuid();
    if (this.data) {
      this.options = this.data;
    }
    if (this.code) {
      const data = await this.getOption();
      this.options = data;
    }
    this.sourceData = JSON.parse(JSON.stringify(this.options));
  }
  async mounted() {
    await this.$nextTick();
    const div = document.createElement('div');
    div.classList.add('listPhantom');
    div.style.height = this.computedListHeight + 'px';
    this.elwarp = document.getElementsByClassName(this.id)[0];
    const el = this.elwarp.getElementsByClassName('el-select-dropdown__wrap')[0];
    el.appendChild(div);
    this.handleInit();
  }
  scrollEvent(e) {
    //当前滚动位置
    let scrollTop = e.target.scrollTop;
    //此时的开始索引
    this.start = Math.floor(scrollTop / this.itemHeight);
    //此时的结束索引
    this.end = this.start + this.computedVisibleCount;
    //此时的偏移量
    this.startOffset = `translate3d(0,${scrollTop - scrollTop % this.itemHeight}px,0)`;
    const sel = this.elwarp.getElementsByClassName('el-select-dropdown__list')[0];
    sel.style.transform = this.startOffset;
  }
  //页面初始化
  handleInit() {
    setTimeout(() => {
      if (this.value) {
        this.start = this.getStartPos();
      } else {
        this.start = 0; //列表开始索引
      }

      this.end = this.start + this.computedVisibleCount; //列表结束索引
      const scroll = this.elwarp.getElementsByClassName('el-select-dropdown__wrap')[0];
      scroll.addEventListener('scroll', this.scrollEvent);
    }, 10);
  }
  // 下拉框出现/隐藏时触发
  handleVisiblechange(boole) {
    if (boole) {
      this.$nextTick(() => {
        setTimeout(() => {
          let top = this.getStartPos() * this.itemHeight;
          let wrap = this.elwarp.getElementsByClassName('el-select-dropdown__wrap')[0];
          wrap.scrollTop = top + 1;
        }, 100);
      });
    } else {
      if (this.isSearch) {
        this.sourceData = JSON.parse(JSON.stringify(this.options));
        this.isSearch = false;
      }
    }
  }
  getStartPos() {
    let start = 0;
    const li = this.screenHeight / this.itemHeight;
    const select = this.$refs.list;
    const arg = select.multiple ? this.values[0] : this.values;
    let index = this.options.findIndex(o => o.value === arg) + 1;
    if (index > li) {
      start = index - li + 2;
    } else if (index === li) {
      start = 1;
    } else {
      start = 0;
    }
    return start;
  }
  handleFilterMethod(query) {
    if (query) {
      const data = this.options.filter(o => o.label.indexOf(query) > -1);
      this.sourceData = data;
      this.isSearch = true;
    }
  }
  // Emit装饰器，表示下面的函数的结尾会派发一个事件
  // 如果Emit装饰器没有参数，则派发下面的函数名的kabeb-case，本例即update-count
  // 函数的return值会被当作emit的第一个额外参数派发
  // 函数的参数会被跟在第一个额外参数后面派发
  // 但是按原写法直接this.$emit也没什么问题
  handleChange() {
    setTimeout(() => {
      let lable;
      const data = this.$refs.list.selected;
      if (Object.prototype.toString.call(data) === '[object Array]') {
        lable = data.map(item => item.label);
        lable = lable.join(',');
      } else {
        lable = data.label;
      }
      this.label = lable;
    }, 0);
    let data = '';
    if (Object.prototype.toString.call(this.values) === '[object Array]') {
      data = this.values.join(',');
    } else {
      data = this.values;
    }
    return data;
  }
  // 获取CODE这典
  getOption() {
    return new Promise((resolve, reject) => {
      getCode(this.$global.codeApi + this.code).then(res => {
        resolve(res.data);
      }).catch(err => reject(err));
    });
  }
};
__decorate([Prop({
  default() {
    return {};
  }
})], XlVirtualSelect.prototype, "attribute", void 0);
__decorate([Prop({
  default() {
    return {};
  }
})], XlVirtualSelect.prototype, "events", void 0);
__decorate([Prop(Array)], XlVirtualSelect.prototype, "data", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {
      value: 'value',
      label: 'label'
    };
  }
})], XlVirtualSelect.prototype, "props", void 0);
__decorate([Prop({
  type: String,
  default: ''
})], XlVirtualSelect.prototype, "code", void 0);
__decorate([Model('change', {
  type: String
})], XlVirtualSelect.prototype, "value", void 0);
__decorate([Watch('value', {
  immediate: true
})], XlVirtualSelect.prototype, "onValueChanged", null);
__decorate([Emit('change')], XlVirtualSelect.prototype, "handleChange", null);
XlVirtualSelect = __decorate([Component({
  name: 'XlVirtualSelect',
  components: {}
})], XlVirtualSelect);
var script$b = XlVirtualSelect;

/* script */
const __vue_script__$b = script$b;

/* template */
var __vue_render__$b = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_c("el-select", _vm._g(_vm._b({
    ref: "list",
    attrs: {
      "popper-class": "customSelect " + _vm.id,
      "filter-method": _vm.handleFilterMethod
    },
    on: {
      "visible-change": _vm.handleVisiblechange,
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "el-select", Object.assign({}, {
    //multiple: true,
    clearable: true,
    "collapse-tags": true,
    filterable: true,
    placeholder: "请选择"
  }, _vm.attribute), false), _vm.events), _vm._l(_vm.computedVisibleData, function (item) {
    return _c("el-option", {
      key: item.value,
      attrs: {
        label: item.label,
        value: item.value
      }
    });
  }), 1)], 1);
};
var __vue_staticRenderFns__$b = [];
__vue_render__$b._withStripped = true;

/* style */
const __vue_inject_styles__$b = function (inject) {
  if (!inject) return;
  inject("data-v-1866dbd6_0", {
    source: ".customSelect {\n  height: 258px;\n}\n.customSelect .el-scrollbar {\n  height: 100%;\n  overflow-x: hidden;\n}\n.customSelect .el-scrollbar .el-select-dropdown__wrap.el-scrollbar__wrap {\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.customSelect .el-scrollbar .el-select-dropdown__wrap.el-scrollbar__wrap .el-scrollbar__view.el-select-dropdown__list {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n}\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["D:\\xl-ui2\\packages\\virtual-select\\src\\main.vue", "main.vue"],
      "names": [],
      "mappings": "AAiSA;EACA,aAAA;AChSA;ADkSA;EACA,YAAA;EACA,kBAAA;AChSA;ADmSA;EACA,kBAAA;EACA,kBAAA;EACA,gBAAA;ACjSA;ADmSA;EACA,kBAAA;EACA,OAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;ACjSA;;AAEA,mCAAmC",
      "file": "main.vue",
      "sourcesContent": ["<template>\r\n  <div>\r\n    <!-- \r\n    multiple是否多选\r\n    filterable是否可搜索\r\n    remote是否为远程搜索\r\n    allow-create是否允许用户创建新条目，需配合 filterable 使用\r\n    reserve-keyword多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词\r\n    remote-method远程搜索方法\r\n    loading是否正在从远程获取数据\r\n    -->\r\n    <el-select\r\n      ref=\"list\"\r\n      v-model=\"values\"\r\n      :popper-class=\"'customSelect ' + id\"\r\n      v-bind=\"{\r\n        ...{\r\n          //multiple: true,\r\n          clearable: true,\r\n          'collapse-tags': true,\r\n          filterable: true,\r\n          placeholder: '请选择'\r\n        },\r\n        ...attribute\r\n      }\"\r\n      v-on=\"events\"\r\n      :filter-method=\"handleFilterMethod\"\r\n      @visible-change=\"handleVisiblechange\"\r\n      @change=\"handleChange\"\r\n    >\r\n      <el-option\r\n        v-for=\"item in computedVisibleData\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n      >\r\n      </el-option>\r\n    </el-select>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Vue,\r\n  Prop,\r\n  Watch,\r\n  Model,\r\n  Emit\r\n} from 'vue-property-decorator'\r\nimport { getCode } from '@/utils/api'\r\nimport { uuid } from '@/utils/common'\r\n\r\ninterface optionType {\r\n  label: string\r\n  value: string\r\n}\r\n\r\n@Component({\r\n  name: 'XlVirtualSelect',\r\n  components: {}\r\n})\r\nexport default class XlVirtualSelect extends Vue {\r\n  @Prop({\r\n    default() {\r\n      return {}\r\n    }\r\n  })\r\n  readonly attribute!: object\r\n\r\n  @Prop({\r\n    default() {\r\n      return {}\r\n    }\r\n  })\r\n  readonly events!: object\r\n\r\n  @Prop(Array) readonly data!: optionType[] //所有数据\r\n\r\n  @Prop({\r\n    type: Object,\r\n    default() {\r\n      return {\r\n        value: 'value',\r\n        label: 'label'\r\n      }\r\n    }\r\n  })\r\n  readonly props!: optionType\r\n  // code 字典表码-----------------------------\r\n  @Prop({\r\n    type: String,\r\n    default: ''\r\n  })\r\n  readonly code!: string\r\n\r\n  id = ''\r\n  elwarp: any = null\r\n  values: string | string[] = ''\r\n  label: string | string[] = ''\r\n  loading = false\r\n  sourceData: any[] = [] //搜索时用到所有数据\r\n  containerHeight = '100%'\r\n  options: optionType[] = []\r\n  //每列高度\r\n  itemHeight = 34\r\n  //可视区域高度\r\n  screenHeight = 272\r\n  //偏移量\r\n  startOffset = ''\r\n  //起始索引\r\n  start = 0\r\n  //结束索引\r\n  end = 10\r\n  isSearch = false //是否输入搜索过\r\n\r\n  @Model('change', { type: String }) readonly value!: string\r\n\r\n  @Watch('value', { immediate: true })\r\n  onValueChanged(val: string) {\r\n    setTimeout(() => {\r\n      const select: any = this.$refs.list\r\n      let data: string | string[] = []\r\n      if (select.multiple) {\r\n        if (val) {\r\n          data = val.split(',')\r\n        }\r\n      } else {\r\n        data = val || ''\r\n      }\r\n      this.values = data\r\n      this.handleChange()\r\n    }, 0)\r\n  }\r\n\r\n  //获取真实显示列表数据\r\n  get computedVisibleData() {\r\n    return this.sourceData.slice(\r\n      this.start,\r\n      Math.min(this.end, this.sourceData.length)\r\n    )\r\n  }\r\n  //列表总高度\r\n  get computedListHeight() {\r\n    return BigInt(this.sourceData.length * this.itemHeight)\r\n  }\r\n  //可显示的列表项数\r\n  get computedVisibleCount() {\r\n    return Math.ceil(this.screenHeight / this.itemHeight) + 1\r\n  }\r\n\r\n  async created() {\r\n    this.id = 'custom-' + uuid()\r\n    if (this.data) {\r\n      this.options = this.data\r\n    }\r\n    if (this.code) {\r\n      const data = await this.getOption()\r\n      this.options = data as []\r\n    }\r\n    this.sourceData = JSON.parse(JSON.stringify(this.options))\r\n  }\r\n\r\n  async mounted() {\r\n    await this.$nextTick()\r\n    const div = document.createElement('div')\r\n    div.classList.add('listPhantom')\r\n    div.style.height = this.computedListHeight + 'px'\r\n    this.elwarp = document.getElementsByClassName(this.id)[0]\r\n    const el = this.elwarp.getElementsByClassName('el-select-dropdown__wrap')[0]\r\n    el.appendChild(div)\r\n    this.handleInit()\r\n  }\r\n\r\n  private scrollEvent(e: any): void {\r\n    //当前滚动位置\r\n    let scrollTop = e.target.scrollTop\r\n    //此时的开始索引\r\n    this.start = Math.floor(scrollTop / this.itemHeight)\r\n    //此时的结束索引\r\n    this.end = this.start + this.computedVisibleCount\r\n    //此时的偏移量\r\n    this.startOffset = `translate3d(0,${\r\n      scrollTop - (scrollTop % this.itemHeight)\r\n    }px,0)`\r\n    const sel: any = this.elwarp.getElementsByClassName(\r\n      'el-select-dropdown__list'\r\n    )[0]\r\n\r\n    sel.style.transform = this.startOffset\r\n  }\r\n  //页面初始化\r\n  private handleInit(): void {\r\n    setTimeout(() => {\r\n      if (this.value) {\r\n        this.start = this.getStartPos()\r\n      } else {\r\n        this.start = 0 //列表开始索引\r\n      }\r\n\r\n      this.end = this.start + this.computedVisibleCount //列表结束索引\r\n      const scroll = this.elwarp.getElementsByClassName(\r\n        'el-select-dropdown__wrap'\r\n      )[0]\r\n      scroll.addEventListener('scroll', this.scrollEvent)\r\n    }, 10)\r\n  }\r\n  // 下拉框出现/隐藏时触发\r\n  public handleVisiblechange(boole: boolean) {\r\n    if (boole) {\r\n      this.$nextTick(() => {\r\n        setTimeout(() => {\r\n          let top = this.getStartPos() * this.itemHeight\r\n          let wrap = this.elwarp.getElementsByClassName(\r\n            'el-select-dropdown__wrap'\r\n          )[0]\r\n          wrap.scrollTop = top + 1\r\n        }, 100)\r\n      })\r\n    } else {\r\n      if (this.isSearch) {\r\n        this.sourceData = JSON.parse(JSON.stringify(this.options))\r\n        this.isSearch = false\r\n      }\r\n    }\r\n  }\r\n  private getStartPos(): number {\r\n    let start = 0\r\n    const li = this.screenHeight / this.itemHeight\r\n    const select: any = this.$refs.list\r\n    const arg = select.multiple ? this.values[0] : this.values\r\n    let index = this.options.findIndex(o => o.value === arg) + 1\r\n    if (index > li) {\r\n      start = index - li + 2\r\n    } else if (index === li) {\r\n      start = 1\r\n    } else {\r\n      start = 0\r\n    }\r\n    return start\r\n  }\r\n  public handleFilterMethod(query: string): void {\r\n    if (query) {\r\n      const data = this.options.filter(o => o.label.indexOf(query) > -1)\r\n      this.sourceData = data\r\n      this.isSearch = true\r\n    }\r\n  }\r\n\r\n  // Emit装饰器，表示下面的函数的结尾会派发一个事件\r\n  // 如果Emit装饰器没有参数，则派发下面的函数名的kabeb-case，本例即update-count\r\n  // 函数的return值会被当作emit的第一个额外参数派发\r\n  // 函数的参数会被跟在第一个额外参数后面派发\r\n  // 但是按原写法直接this.$emit也没什么问题\r\n\r\n  @Emit('change')\r\n  public handleChange(): string | string[] {\r\n    setTimeout(() => {\r\n      let lable\r\n      const data = (this.$refs.list as any).selected\r\n      if (Object.prototype.toString.call(data) === '[object Array]') {\r\n        lable = data.map((item: any) => item.label)\r\n        lable = lable.join(',')\r\n      } else {\r\n        lable = data.label\r\n      }\r\n      this.label = lable\r\n    }, 0)\r\n    let data = ''\r\n    if (Object.prototype.toString.call(this.values) === '[object Array]') {\r\n      data = (this.values as Array<string>).join(',')\r\n    } else {\r\n      data = this.values as string\r\n    }\r\n    return data\r\n  }\r\n\r\n  // 获取CODE这典\r\n  getOption() {\r\n    return new Promise((resolve, reject) => {\r\n      getCode(this.$global.codeApi + this.code)\r\n        .then((res: any) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch(err => reject(err))\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.customSelect {\r\n  height: 258px;\r\n\r\n  .el-scrollbar {\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n\r\n    & .el-select-dropdown__wrap {\r\n      &.el-scrollbar__wrap {\r\n        position: relative;\r\n        overflow-x: hidden;\r\n        overflow-y: auto;\r\n        .el-scrollbar__view {\r\n          &.el-select-dropdown__list {\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n", ".customSelect {\n  height: 258px;\n}\n.customSelect .el-scrollbar {\n  height: 100%;\n  overflow-x: hidden;\n}\n.customSelect .el-scrollbar .el-select-dropdown__wrap.el-scrollbar__wrap {\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.customSelect .el-scrollbar .el-select-dropdown__wrap.el-scrollbar__wrap .el-scrollbar__view.el-select-dropdown__list {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n}\n\n/*# sourceMappingURL=main.vue.map */"]
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$b = undefined;
/* module identifier */
const __vue_module_identifier__$b = undefined;
/* functional template */
const __vue_is_functional_template__$b = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$b = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$b,
  staticRenderFns: __vue_staticRenderFns__$b
}, __vue_inject_styles__$b, __vue_script__$b, __vue_scope_id__$b, __vue_is_functional_template__$b, __vue_module_identifier__$b, false, createInjector, undefined, undefined);

__vue_component__$b.install = Vue => {
  Vue.component(__vue_component__$b.extendOptions.name, __vue_component__$b);
};

let XlSelect = class XlSelect extends Vue {
  constructor() {
    super(...arguments);
    _defineProperty$1(this, "values", '');
    _defineProperty$1(this, "labels", '');
    _defineProperty$1(this, "options", []);
    //绑定属性
    _defineProperty$1(this, "attribute", void 0);
    //绑定事件
    _defineProperty$1(this, "events", void 0);
    //字段
    _defineProperty$1(this, "props", void 0);
    //回调
    _defineProperty$1(this, "value", void 0);
  }
  handleChange(e) {
    let data;
    if (e) {
      if (Object.prototype.toString.call(e) === '[object Array]') {
        data = this.options.filter(o => {
          return e.includes(o[this.props['value']]);
        });
        if (data.length) {
          let labArr = data.map(item => item[this.props.label]);
          this.labels = labArr.join(',');
        }
      } else {
        data = this.options.filter(o => {
          return o[this.props['value']] === e;
        });
        if (data.length) {
          this.labels = data[0][this.props.label];
        } else {
          this.labels = '';
        }
      }
    } else {
      this.labels = '';
    }
    this.attribute.labelname && this.handleLabelName();
    return this.values;
  }
  handleLabelName() {
    return this.labels;
  }
  handleWatch() {
    this.values = JSON.parse(JSON.stringify(this.value));
  }
  // ---------------------
  async mounted() {
    if (this.attribute.code) {
      const data = await this.getOption();
      this.options = data;
    } else if (this.attribute.data) {
      this.options = this.attribute.data;
    }
    if (this.value) {
      this.handleChange(this.value);
    }
  }
  // 获取CODE这典
  getOption() {
    return new Promise((resolve, reject) => {
      getCode(this.$global.codeApi + this.attribute.code).then(res => {
        resolve(res.data);
      }).catch(err => reject(err));
    });
  }
};
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlSelect.prototype, "attribute", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlSelect.prototype, "events", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {
      value: 'value',
      label: 'label'
    };
  }
})], XlSelect.prototype, "props", void 0);
__decorate([Model('change', {
  type: [String, Array]
})], XlSelect.prototype, "value", void 0);
__decorate([Emit('change')], XlSelect.prototype, "handleChange", null);
__decorate([Emit('update:labelName')], XlSelect.prototype, "handleLabelName", null);
__decorate([Watch('value', {
  immediate: true,
  deep: true
})], XlSelect.prototype, "handleWatch", null);
XlSelect = __decorate([Component({
  name: 'XlSelect',
  components: {}
})], XlSelect);
var script$a = XlSelect;

/* script */
const __vue_script__$a = script$a;

/* template */
var __vue_render__$a = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("el-select", _vm._g(_vm._b({
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "el-select", Object.assign({}, {
    clearable: true,
    filterable: true,
    placeholder: "请选择",
    "collapse-tags": true
  }, _vm.attribute), false), _vm.events), _vm._l(_vm.options, function (item) {
    return _c("el-option", {
      key: item.value,
      attrs: {
        label: item[_vm.props.label],
        value: item[_vm.props.value]
      }
    });
  }), 1);
};
var __vue_staticRenderFns__$a = [];
__vue_render__$a._withStripped = true;

/* style */
const __vue_inject_styles__$a = function (inject) {
  if (!inject) return;
  inject("data-v-40e57004_0", {
    source: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    map: {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$a = "data-v-40e57004";
/* module identifier */
const __vue_module_identifier__$a = undefined;
/* functional template */
const __vue_is_functional_template__$a = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$a = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$a,
  staticRenderFns: __vue_staticRenderFns__$a
}, __vue_inject_styles__$a, __vue_script__$a, __vue_scope_id__$a, __vue_is_functional_template__$a, __vue_module_identifier__$a, false, createInjector, undefined, undefined);

__vue_component__$a.install = Vue => {
  Vue.component(__vue_component__$a.extendOptions.name, __vue_component__$a);
};

let XlCheckBox = class XlCheckBox extends Vue {
  constructor() {
    super(...arguments);
    //选中值
    _defineProperty$1(this, "checkList", []);
    _defineProperty$1(this, "checkLable", '');
    _defineProperty$1(this, "optionVal", []);
    _defineProperty$1(this, "isIndeterminate", false);
    _defineProperty$1(this, "checkAll", false);
    //所有数据
    _defineProperty$1(this, "options", []);
    //字段参数
    _defineProperty$1(this, "props", void 0);
    // code 字典表码-----------------------------
    _defineProperty$1(this, "code", void 0);
    _defineProperty$1(this, "data", void 0);
    //是否显示全选
    _defineProperty$1(this, "isAll", void 0);
    //回调选中的值
    _defineProperty$1(this, "value", void 0);
  }
  handleChange(value) {
    const data = this.options.filter(item => {
      return this.checkList.includes(item[this.props['value']]);
    });
    let labArr = data.map(item => {
      return item[this.props.label];
    });
    this.checkLable = labArr.join(',');
    let checkedCount = value.length;
    this.checkAll = checkedCount === this.options.length;
    this.isIndeterminate = checkedCount > 0 && checkedCount < this.options.length;
    this.$attrs.labelname && this.handleLabelName();
    return this.checkList;
  }
  handleLabelName() {
    return this.checkLable;
  }
  handleWatch(val) {
    this.checkList = JSON.parse(JSON.stringify(val || []));
  }
  // ---------------------
  async mounted() {
    await this.$nextTick();
    if (this.code) {
      this.getOption();
    } else if (this.data) {
      this.options = this.data;
      this.optionVal = this.options.map(o => o[this.props['value']]);
      if (this.checkList.length) {
        this.handleChange(this.checkList);
      }
    }
  }
  //全选
  handleCheckAllChange(e) {
    this.checkList = e ? this.optionVal : [];
    this.isIndeterminate = false;
  }
  // 获取CODE这典
  getOption() {
    getCode(this.$global.codeApi + this.code).then(res => {
      this.options = res.data;
    }).catch(err => err);
  }
};
__decorate([Prop({
  type: Object,
  default() {
    return {
      value: 'value',
      label: 'label'
    };
  }
})], XlCheckBox.prototype, "props", void 0);
__decorate([Prop({
  type: String,
  default: ''
})], XlCheckBox.prototype, "code", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [];
  }
})], XlCheckBox.prototype, "data", void 0);
__decorate([Prop({
  type: Boolean,
  default: false
})], XlCheckBox.prototype, "isAll", void 0);
__decorate([Model('change', {
  type: [Array, String]
})], XlCheckBox.prototype, "value", void 0);
__decorate([Emit('change')], XlCheckBox.prototype, "handleChange", null);
__decorate([Emit('update:labelName')], XlCheckBox.prototype, "handleLabelName", null);
__decorate([Watch('value', {
  immediate: true
})], XlCheckBox.prototype, "handleWatch", null);
XlCheckBox = __decorate([Component({
  name: 'XlCheckBox',
  components: {}
})], XlCheckBox);
var script$9 = XlCheckBox;

/* script */
const __vue_script__$9 = script$9;

/* template */
var __vue_render__$9 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_vm.isAll ? _c("el-checkbox", {
    attrs: {
      indeterminate: _vm.isIndeterminate
    },
    on: {
      change: _vm.handleCheckAllChange
    },
    model: {
      value: _vm.checkAll,
      callback: function ($$v) {
        _vm.checkAll = $$v;
      },
      expression: "checkAll"
    }
  }, [_vm._v("全选")]) : _vm._e(), _vm._v(" "), _c("el-checkbox-group", {
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.checkList,
      callback: function ($$v) {
        _vm.checkList = $$v;
      },
      expression: "checkList"
    }
  }, _vm._l(_vm.options, function (item, index) {
    return _c("el-checkbox", _vm._b({
      key: index,
      attrs: {
        label: item[_vm.props["value"]]
      }
    }, "el-checkbox", _vm.$attrs, false), [_vm._v("\n      " + _vm._s(item[_vm.props["label"]]) + "\n    ")]);
  }), 1)], 1);
};
var __vue_staticRenderFns__$9 = [];
__vue_render__$9._withStripped = true;

/* style */
const __vue_inject_styles__$9 = function (inject) {
  if (!inject) return;
  inject("data-v-48734e0f_0", {
    source: "\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["main.vue"],
      "names": [],
      "mappings": ";;AAEA,mCAAmC",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$9 = "data-v-48734e0f";
/* module identifier */
const __vue_module_identifier__$9 = undefined;
/* functional template */
const __vue_is_functional_template__$9 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$9 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$9,
  staticRenderFns: __vue_staticRenderFns__$9
}, __vue_inject_styles__$9, __vue_script__$9, __vue_scope_id__$9, __vue_is_functional_template__$9, __vue_module_identifier__$9, false, createInjector, undefined, undefined);

__vue_component__$9.install = Vue => {
  Vue.component(__vue_component__$9.extendOptions.name, __vue_component__$9);
};

var speakTts = {};

var utils = {};

Object.defineProperty(utils, "__esModule", {
  value: true
});
utils.trim = utils.isObject = utils.isNil = utils.isNan = utils.size = utils.isString = utils.validateLocale = utils.splitSentences = void 0;

var splitSentences = function splitSentences() {
  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return text.replace(/\.+/g, '.|').replace(/\?/g, '?|').replace(/\!/g, '!|').split("|").map(function (sentence) {
    return trim(sentence);
  }).filter(Boolean);
};

utils.splitSentences = splitSentences;
var bcp47LocalePattern = /^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|\d{3}))?((?:-(?:[\da-z]{5,8}|\d[\da-z]{3}))*)?((?:-[\da-wy-z](?:-[\da-z]{2,8})+)*)?(-x(?:-[\da-z]{1,8})+)?$|^(x(?:-[\da-z]{1,8})+)$/i; // eslint-disable-line max-len

/**
 * Validate a locale string to test if it is bcp47 compliant
 * @param {String} locale The tag locale to parse
 * @return {Boolean} True if tag is bcp47 compliant false otherwise
 */

var validateLocale = function validateLocale(locale) {
  return typeof locale !== 'string' ? false : bcp47LocalePattern.test(locale);
};

utils.validateLocale = validateLocale;

var isString = function isString(value) {
  return typeof value === 'string' || value instanceof String;
};

utils.isString = isString;

var size = function size(value) {
  return value && Array.isArray(value) && value.length ? value.length : 0;
};

utils.size = size;

var isNan = function isNan(value) {
  return typeof value === "number" && isNaN(value);
};

utils.isNan = isNan;

var isNil = function isNil(value) {
  return value === null || value === undefined;
};

utils.isNil = isNil;

var isObject = function isObject(value) {
  return Object.prototype.toString.call(value) === '[object Object]';
};

utils.isObject = isObject;

var trim = function trim(value) {
  return isString(value) ? value.trim() : '';
};

utils.trim = trim;

Object.defineProperty(speakTts, "__esModule", {
  value: true
});
var default_1 = speakTts.default = void 0;

var _utils = utils;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var SpeakTTS =
/*#__PURE__*/
function () {
  function SpeakTTS() {
    _classCallCheck(this, SpeakTTS);

    this.browserSupport = 'speechSynthesis' in window && 'SpeechSynthesisUtterance' in window;
    this.synthesisVoice = null;
  }

  _createClass(SpeakTTS, [{
    key: "init",
    value: function init() {
      var _this = this;

      var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return new Promise(function (resolve, reject) {
        if (!_this.browserSupport) {
          reject('Your browser does not support Speech Synthesis');
        }

        var listeners = (0, _utils.isNil)(conf.listeners) ? {} : conf.listeners;
        var splitSentences = (0, _utils.isNil)(conf.splitSentences) ? true : conf.splitSentences;
        var lang = (0, _utils.isNil)(conf.lang) ? undefined : conf.lang;
        var volume = (0, _utils.isNil)(conf.volume) ? 1 : conf.volume;
        var rate = (0, _utils.isNil)(conf.rate) ? 1 : conf.rate;
        var pitch = (0, _utils.isNil)(conf.pitch) ? 1 : conf.pitch;
        var voice = (0, _utils.isNil)(conf.voice) ? undefined : conf.voice; // Attach event listeners

        Object.keys(listeners).forEach(function (listener) {
          var fn = listeners[listener];

          var newListener = function newListener(data) {
            fn && fn(data);
          };

          if (listener !== 'onvoiceschanged') {
            speechSynthesis[listener] = newListener;
          }
        });

        _this._loadVoices().then(function (voices) {
          // Handle callback onvoiceschanged by hand
          listeners['onvoiceschanged'] && listeners['onvoiceschanged'](voices); // Initialize values if necessary

          !(0, _utils.isNil)(lang) && _this.setLanguage(lang);
          !(0, _utils.isNil)(voice) && _this.setVoice(voice);
          !(0, _utils.isNil)(volume) && _this.setVolume(volume);
          !(0, _utils.isNil)(rate) && _this.setRate(rate);
          !(0, _utils.isNil)(pitch) && _this.setPitch(pitch);
          !(0, _utils.isNil)(splitSentences) && _this.setSplitSentences(splitSentences);
          resolve({
            voices: voices,
            lang: _this.lang,
            voice: _this.voice,
            volume: _this.volume,
            rate: _this.rate,
            pitch: _this.pitch,
            splitSentences: _this.splitSentences,
            browserSupport: _this.browserSupport
          });
        }).catch(function (e) {
          reject(e);
        });
      });
    }
  }, {
    key: "_fetchVoices",
    value: function _fetchVoices() {
      return new Promise(function (resolve, reject) {
        setTimeout(function () {
          var voices = speechSynthesis.getVoices();

          if ((0, _utils.size)(voices) > 0) {
            return resolve(voices);
          } else {
            return reject("Could not fetch voices");
          }
        }, 100);
      });
    }
  }, {
    key: "_loadVoices",
    value: function _loadVoices() {
      var _this2 = this;

      var remainingAttempts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
      return this._fetchVoices().catch(function (error) {
        if (remainingAttempts === 0) throw error;
        return _this2._loadVoices(remainingAttempts - 1);
      });
    }
  }, {
    key: "hasBrowserSupport",
    value: function hasBrowserSupport() {
      return this.browserSupport;
    }
  }, {
    key: "setVoice",
    value: function setVoice(voice) {
      var synthesisVoice;
      var voices = speechSynthesis.getVoices(); // set voice by name

      if ((0, _utils.isString)(voice)) {
        synthesisVoice = voices.find(function (v) {
          return v.name === voice;
        });
      } // Set the voice in conf if found


      if ((0, _utils.isObject)(voice)) {
        synthesisVoice = voice;
      }

      if (synthesisVoice) {
        this.synthesisVoice = synthesisVoice;
      } else {
        throw 'Error setting voice. The voice you passed is not valid or the voices have not been loaded yet.';
      }
    }
  }, {
    key: "setLanguage",
    value: function setLanguage(lang) {
      lang = lang.replace('_', '-'); // some Android versions seem to ignore BCP 47 and use an underscore character in language tag

      if ((0, _utils.validateLocale)(lang)) {
        this.lang = lang;
      } else {
        throw 'Error setting language. Please verify your locale is BCP47 format (http://schneegans.de/lv/?tags=es-FR&format=text)';
      }
    }
  }, {
    key: "setVolume",
    value: function setVolume(volume) {
      volume = parseFloat(volume);

      if (!(0, _utils.isNan)(volume) && volume >= 0 && volume <= 1) {
        this.volume = volume;
      } else {
        throw 'Error setting volume. Please verify your volume value is a number between 0 and 1.';
      }
    }
  }, {
    key: "setRate",
    value: function setRate(rate) {
      rate = parseFloat(rate);

      if (!(0, _utils.isNan)(rate) && rate >= 0 && rate <= 10) {
        this.rate = rate;
      } else {
        throw 'Error setting rate. Please verify your volume value is a number between 0 and 10.';
      }
    }
  }, {
    key: "setPitch",
    value: function setPitch(pitch) {
      pitch = parseFloat(pitch);

      if (!(0, _utils.isNan)(pitch) && pitch >= 0 && pitch <= 2) {
        this.pitch = pitch;
      } else {
        throw 'Error setting pitch. Please verify your pitch value is a number between 0 and 2.';
      }
    }
  }, {
    key: "setSplitSentences",
    value: function setSplitSentences(splitSentences) {
      this.splitSentences = splitSentences;
    }
  }, {
    key: "speak",
    value: function speak(data) {
      var _this3 = this;

      return new Promise(function (resolve, reject) {
        var text = data.text,
            _data$listeners = data.listeners,
            listeners = _data$listeners === void 0 ? {} : _data$listeners,
            _data$queue = data.queue,
            queue = _data$queue === void 0 ? true : _data$queue;
        var msg = (0, _utils.trim)(text);
        if ((0, _utils.isNil)(msg)) resolve(); // Stop current speech

        !queue && _this3.cancel(); // Split into sentences (for better result and bug with some versions of chrome)

        var utterances = [];
        var sentences = _this3.splitSentences ? (0, _utils.splitSentences)(msg) : [msg];
        sentences.forEach(function (sentence, index) {
          var isLast = index === (0, _utils.size)(sentences) - 1;
          var utterance = new SpeechSynthesisUtterance();
          if (_this3.synthesisVoice) utterance.voice = _this3.synthesisVoice;
          if (_this3.lang) utterance.lang = _this3.lang;
          if (_this3.volume) utterance.volume = _this3.volume; // 0 to 1

          if (_this3.rate) utterance.rate = _this3.rate; // 0.1 to 10

          if (_this3.pitch) utterance.pitch = _this3.pitch; //0 to 2

          utterance.text = sentence; // Attach event listeners

          Object.keys(listeners).forEach(function (listener) {
            var fn = listeners[listener];

            var newListener = function newListener(data) {
              fn && fn(data);

              if (listener === 'onerror') {
                reject({
                  utterances: utterances,
                  lastUtterance: utterance,
                  error: data
                });
              }

              if (listener === 'onend') {
                if (isLast) resolve({
                  utterances: utterances,
                  lastUtterance: utterance
                });
              }
            };

            utterance[listener] = newListener;
          });
          utterances.push(utterance);
          speechSynthesis.speak(utterance);
        });
      });
    }
  }, {
    key: "pending",
    value: function pending() {
      return speechSynthesis.pending;
    }
  }, {
    key: "paused",
    value: function paused() {
      return speechSynthesis.paused;
    }
  }, {
    key: "speaking",
    value: function speaking() {
      return speechSynthesis.speaking;
    }
  }, {
    key: "pause",
    value: function pause() {
      speechSynthesis.pause();
    }
  }, {
    key: "resume",
    value: function resume() {
      speechSynthesis.resume();
    }
  }, {
    key: "cancel",
    value: function cancel() {
      speechSynthesis.cancel();
    }
  }]);

  return SpeakTTS;
}();

var _default = SpeakTTS;
default_1 = speakTts.default = _default;

let speech = null;
let XlSpeakTts = class XlSpeakTts extends Vue {
  constructor() {
    super(...arguments);
    _defineProperty$1(this, "text", void 0);
  }
  created() {
    speech = new default_1();
    if (speech.hasBrowserSupport()) {
      speech.init({
        volume: 1,
        lang: 'zh-CN',
        rate: 1,
        pitch: 1,
        splitSentences: true,
        voice: 'Microsoft Yaoyao - Chinese (Simplified, PRC)',
        listeners: {
          // 事件
          onvoiceschanged: voices => {
            // console.log('事件声音已更改', voices);
          }
        }
      }).then(data => {
        //console.log('语音已准备好，声音可用')
      }).catch(e => {
        console.error('初始化时发生错误 : ', e);
      });
    } else {
      console.error('不支持语音合成');
    }
  }
  //调用方法播放声音
  handleSpeech() {
    console.log('开始播报');
    speech.speak({
      text: this.text
    }).then(() => {
      console.log('播报成功 !');
    }).catch(e => {
      console.error('An error occurred :', e);
    });
  }
};
__decorate([Prop({
  default: '您有新订单，请注意查看'
})], XlSpeakTts.prototype, "text", void 0);
XlSpeakTts = __decorate([Component({
  name: 'XlSpeakTts',
  components: {}
})], XlSpeakTts);
var script$8 = XlSpeakTts;

/* script */
const __vue_script__$8 = script$8;

/* template */
var __vue_render__$8 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div");
};
var __vue_staticRenderFns__$8 = [];
__vue_render__$8._withStripped = true;

/* style */
const __vue_inject_styles__$8 = function (inject) {
  if (!inject) return;
  inject("data-v-5a3b1b3e_0", {
    source: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    map: {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$8 = "data-v-5a3b1b3e";
/* module identifier */
const __vue_module_identifier__$8 = undefined;
/* functional template */
const __vue_is_functional_template__$8 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$8 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$8,
  staticRenderFns: __vue_staticRenderFns__$8
}, __vue_inject_styles__$8, __vue_script__$8, __vue_scope_id__$8, __vue_is_functional_template__$8, __vue_module_identifier__$8, false, createInjector, undefined, undefined);

__vue_component__$8.install = Vue => {
  Vue.component(__vue_component__$8.extendOptions.name, __vue_component__$8);
};

let XlFormItem = class XlFormItem extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "item", void 0);
    // model =======================
    _defineProperty$1(this, "value", void 0);
    // data ==========================
    _defineProperty$1(this, "values", '');
    _defineProperty$1(this, "labelName", '');
  }
  handleChange() {
    if (['select', 'cascader', 'radio', 'checkbox', 'tree'].includes(this.item.type)) {
      this.handleSetLabel();
    }
    return this.values || '';
  }
  handleWatchVal(e) {
    this.values = e || '';
  }
  // methods ==================
  handleSetLabel() {
    return this.labelName;
  }
};
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlFormItem.prototype, "item", void 0);
__decorate([Model('change', {
  type: [Array, String, Number]
})], XlFormItem.prototype, "value", void 0);
__decorate([Emit('change')], XlFormItem.prototype, "handleChange", null);
__decorate([Watch('value', {
  deep: true,
  immediate: true
})], XlFormItem.prototype, "handleWatchVal", null);
__decorate([Emit('labelname')], XlFormItem.prototype, "handleSetLabel", null);
XlFormItem = __decorate([Component({
  name: 'XlFormItem',
  components: {}
})], XlFormItem);
var script$7 = XlFormItem;

/* script */
const __vue_script__$7 = script$7;

/* template */
var __vue_render__$7 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("el-form-item", _vm._b({
    style: _vm.item.type === "text" ? "margin-bottom:0px" : "",
    attrs: {
      label: _vm.item.label,
      prop: _vm.item.prop
    }
  }, "el-form-item", _vm.item.formItemAttr, false), [_vm.item.type === "select" ? [_c("XlSelect", {
    attrs: {
      labelName: _vm.labelName,
      props: _vm.item.attribute.props || {
        value: "value",
        label: "label"
      },
      attribute: Object.assign({}, {
        placeholder: "请选择",
        clearable: true
      }, _vm.item.attribute),
      events: _vm.item.events
    },
    on: {
      "update:labelName": function ($event) {
        _vm.labelName = $event;
      },
      "update:label-name": function ($event) {
        _vm.labelName = $event;
      },
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  })] : _vm.item.type === "tree" ? [_c("XlTreeSelect", _vm._g({
    attrs: {
      labelName: _vm.labelName,
      attribute: _vm.item.attribute
    },
    on: {
      "update:labelName": function ($event) {
        _vm.labelName = $event;
      },
      "update:label-name": function ($event) {
        _vm.labelName = $event;
      },
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, _vm.item.events))] : _vm.item.type === "checkbox" ? [_c("XlCheckBox", _vm._g(_vm._b({
    attrs: {
      labelName: _vm.labelName,
      props: _vm.item.attribute.props || {
        value: "value",
        label: "label"
      }
    },
    on: {
      "update:labelName": function ($event) {
        _vm.labelName = $event;
      },
      "update:label-name": function ($event) {
        _vm.labelName = $event;
      },
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "XlCheckBox", _vm.item.attribute, false), _vm.item.events))] : _vm.item.type === "radio" ? [_c("XlRadio", _vm._g(_vm._b({
    attrs: {
      labelName: _vm.labelName,
      props: _vm.item.attribute.props || {
        value: "value",
        label: "label"
      }
    },
    on: {
      "update:labelName": function ($event) {
        _vm.labelName = $event;
      },
      "update:label-name": function ($event) {
        _vm.labelName = $event;
      },
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "XlRadio", _vm.item.attribute, false), _vm.item.events))] : _vm.item.type === "cascader" ? [_c("XlCascader", _vm._g(_vm._b({
    attrs: {
      labelName: _vm.labelName
    },
    on: {
      "update:labelName": function ($event) {
        _vm.labelName = $event;
      },
      "update:label-name": function ($event) {
        _vm.labelName = $event;
      },
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "XlCascader", Object.assign({}, {
    placeholder: "请输入",
    clearable: true
  }, _vm.item.attribute), false), _vm.item.events))] : _vm.item.type === "date" ? [_c("el-date-picker", _vm._g(_vm._b({
    attrs: {
      id: _vm.item.prop
    },
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "el-date-picker", Object.assign({}, {
    type: "datetime",
    placeholder: "选择日期时间",
    "default-time": _vm.$dayjs().format("HH:mm:ss"),
    "value-format": "yyyy-MM-dd HH:mm:ss"
  }, _vm.item.attribute), false), _vm.item.events))] : _vm.item.type === "date2" ? [_c("XlDatePicker2", {
    attrs: {
      attribute1: _vm.item.attribute1 || {},
      attribute2: _vm.item.attribute2 || {},
      events1: _vm.item.events1 || {},
      events2: _vm.item.events2 || {}
    },
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  })] : _vm.item.type === "switch" ? [_c("el-switch", _vm._g(_vm._b({
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "el-switch", Object.assign({}, {
    "active-value": "1",
    "inactive-value": "0"
  }, _vm.item.attribute), false), _vm.item.events))] : _vm.item.type === "textarea" ? [_c("el-input", _vm._g(_vm._b({
    attrs: {
      type: "textarea",
      id: _vm.item.prop,
      clearable: ""
    },
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = typeof $$v === "string" ? $$v.trim() : $$v;
      },
      expression: "values"
    }
  }, "el-input", Object.assign({}, {
    placeholder: "请输入",
    maxlength: 1000,
    "show-word-limit": true,
    rows: 4,
    resize: "none",
    clearable: true
  }, _vm.item.attribute), false), _vm.item.events))] : _vm.item.type === "text" ? [_vm._v(" " + _vm._s(_vm.values))] : [_c("el-input", _vm._g(_vm._b({
    attrs: {
      id: _vm.item.prop
    },
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = typeof $$v === "string" ? $$v.trim() : $$v;
      },
      expression: "values"
    }
  }, "el-input", Object.assign({}, {
    placeholder: "请输入",
    clearable: true
  }, _vm.item.attribute), false), _vm.item.events))]], 2);
};
var __vue_staticRenderFns__$7 = [];
__vue_render__$7._withStripped = true;

/* style */
const __vue_inject_styles__$7 = function (inject) {
  if (!inject) return;
  inject("data-v-a8f6e6aa_0", {
    source: "[data-v-a8f6e6aa] .el-date-editor,[data-v-a8f6e6aa] .el-cascader,[data-v-a8f6e6aa] .el-select {\n  width: 100%;\n}\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["D:\\xl-ui2\\packages\\form-item\\src\\main.vue", "main.vue"],
      "names": [],
      "mappings": "AAiNA;EAGA,WAAA;AChNA;;AAEA,mCAAmC",
      "file": "main.vue",
      "sourcesContent": ["<template>\r\n  <el-form-item\r\n    :label=\"item.label\"\r\n    :prop=\"item.prop\"\r\n    v-bind=\"item.formItemAttr\"\r\n    :style=\"item.type === 'text' ? 'margin-bottom:0px' : ''\"\r\n  >\r\n    <template v-if=\"item.type === 'select'\">\r\n      <XlSelect\r\n        v-model=\"values\"\r\n        :labelName.sync=\"labelName\"\r\n        :props=\"item.attribute.props || { value: 'value', label: 'label' }\"\r\n        :attribute=\"{\r\n          ...{\r\n            placeholder: '请选择',\r\n            clearable: true\r\n          },\r\n          ...item.attribute\r\n        }\"\r\n        :events=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'tree'\">\r\n      <XlTreeSelect\r\n        v-model=\"values\"\r\n        :labelName.sync=\"labelName\"\r\n        :attribute=\"item.attribute\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'checkbox'\">\r\n      <XlCheckBox\r\n        v-model=\"values\"\r\n        :labelName.sync=\"labelName\"\r\n        :props=\"item.attribute.props || { value: 'value', label: 'label' }\"\r\n        v-bind=\"item.attribute\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'radio'\">\r\n      <XlRadio\r\n        v-model=\"values\"\r\n        :labelName.sync=\"labelName\"\r\n        :props=\"item.attribute.props || { value: 'value', label: 'label' }\"\r\n        v-bind=\"item.attribute\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'cascader'\">\r\n      <XlCascader\r\n        v-model=\"values\"\r\n        :labelName.sync=\"labelName\"\r\n        v-bind=\"{\r\n          ...{\r\n            placeholder: '请输入',\r\n            clearable: true\r\n          },\r\n          ...item.attribute\r\n        }\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'date'\">\r\n      <el-date-picker\r\n        v-model=\"values\"\r\n        :id=\"item.prop\"\r\n        v-bind=\"{\r\n          ...{\r\n            type: 'datetime',\r\n            placeholder: '选择日期时间',\r\n            'default-time': $dayjs().format('HH:mm:ss'),\r\n            'value-format': 'yyyy-MM-dd HH:mm:ss'\r\n          },\r\n          ...item.attribute\r\n        }\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'date2'\">\r\n      <XlDatePicker2\r\n        v-model=\"values\"\r\n        :attribute1=\"item.attribute1 || {}\"\r\n        :attribute2=\"item.attribute2 || {}\"\r\n        :events1=\"item.events1 || {}\"\r\n        :events2=\"item.events2 || {}\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'switch'\">\r\n      <el-switch\r\n        v-model=\"values\"\r\n        v-bind=\"{\r\n          ...{ 'active-value': '1', 'inactive-value': '0' },\r\n          ...item.attribute\r\n        }\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      >\r\n      </el-switch>\r\n    </template>\r\n    <template v-else-if=\"item.type === 'textarea'\">\r\n      <el-input\r\n        v-model.trim=\"values\"\r\n        type=\"textarea\"\r\n        :id=\"item.prop\"\r\n        clearable\r\n        v-bind=\"{\r\n          ...{\r\n            placeholder: '请输入',\r\n            maxlength: 1000,\r\n            'show-word-limit': true,\r\n            rows: 4,\r\n            resize: 'none',\r\n            clearable: true\r\n          },\r\n          ...item.attribute\r\n        }\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n    <template v-else-if=\"item.type === 'text'\"> {{ values }}</template>\r\n    <template v-else>\r\n      <el-input\r\n        v-model.trim=\"values\"\r\n        :id=\"item.prop\"\r\n        v-bind=\"{\r\n          ...{\r\n            placeholder: '请输入',\r\n            clearable: true\r\n          },\r\n          ...item.attribute\r\n        }\"\r\n        v-on=\"item.events\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </template>\r\n  </el-form-item>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Emit,\r\n  Model,\r\n  Prop,\r\n  Vue,\r\n  Watch\r\n} from 'vue-property-decorator'\r\nimport { formItemType } from '@/utils/interface'\r\n\r\ntype valType = string | number | string[] | number[]\r\n\r\n@Component({\r\n  name: 'XlFormItem',\r\n  components: {}\r\n})\r\nexport default class XlFormItem extends Vue {\r\n  // prop ========================\r\n  @Prop({\r\n    type: Object,\r\n    default() {\r\n      return {}\r\n    }\r\n  })\r\n  readonly item!: formItemType\r\n\r\n  // model =======================\r\n  @Model('change', { type: [Array, String, Number] }) readonly value!:\r\n    | string\r\n    | string[]\r\n    | number\r\n  @Emit('change')\r\n  public handleChange(): valType {\r\n    if (\r\n      ['select', 'cascader', 'radio', 'checkbox', 'tree'].includes(\r\n        this.item.type\r\n      )\r\n    ) {\r\n      this.handleSetLabel()\r\n    }\r\n    return this.values || ''\r\n  }\r\n\r\n  // data ==========================\r\n  values: valType = ''\r\n  labelName: valType = ''\r\n\r\n  @Watch('value', { deep: true, immediate: true })\r\n  handleWatchVal(e: valType) {\r\n    this.values = e || ''\r\n  }\r\n\r\n  // methods ==================\r\n  @Emit('labelname')\r\n  public handleSetLabel(): valType {\r\n    return this.labelName\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n::v-deep {\r\n  .el-date-editor,\r\n  .el-cascader,\r\n  .el-select {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n", "::v-deep .el-date-editor,\n::v-deep .el-cascader,\n::v-deep .el-select {\n  width: 100%;\n}\n\n/*# sourceMappingURL=main.vue.map */"]
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$7 = "data-v-a8f6e6aa";
/* module identifier */
const __vue_module_identifier__$7 = undefined;
/* functional template */
const __vue_is_functional_template__$7 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$7 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$7,
  staticRenderFns: __vue_staticRenderFns__$7
}, __vue_inject_styles__$7, __vue_script__$7, __vue_scope_id__$7, __vue_is_functional_template__$7, __vue_module_identifier__$7, false, createInjector, undefined, undefined);

let XlForm = class XlForm extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "showButton", void 0);
    _defineProperty$1(this, "formItem", void 0);
    _defineProperty$1(this, "formData", void 0);
    _defineProperty$1(this, "formAttribute", void 0);
    _defineProperty$1(this, "rules", void 0);
    _defineProperty$1(this, "layout", void 0);
    _defineProperty$1(this, "confirmText", void 0);
    _defineProperty$1(this, "resetText", void 0);
    // data ==================================
    _defineProperty$1(this, "defaultFormData", {});
    _defineProperty$1(this, "form", {});
    _defineProperty$1(this, "label", {});
    // model =======================
    _defineProperty$1(this, "value", void 0);
  }
  handleChange(data) {
    return data;
  }
  // Watch ======================
  //=========================
  mounted() {
    this.defaultFormData = Object.assign({}, this.formData);
    this.form = Object.assign({}, this.formData);
  }
  handleSetLabel(data, prop) {
    if (prop) {
      this.$set(this.form, prop, data);
    }
  }
  //提交数据
  handleSubmit() {
    this.$refs.myform.validate((valid, error) => {
      if (valid) {
        let data = {
          ...this.form,
          ...this.label
        };
        for (const key in data) {
          if (Object.prototype.hasOwnProperty.call(data, key)) {
            const item = data[key];
            if (Object.prototype.toString.call(item) === '[object Array]') {
              data[key] = item.join(',');
            }
          }
        }
        this.$emit('change', data);
      } else {
        if (this.formAttribute['show-message'] === false) {
          for (const key in error) {
            if (Object.prototype.hasOwnProperty.call(error, key)) {
              const {
                message
              } = error[key][0];
              this.$message({
                message,
                type: 'error'
              });
              break;
            }
          }
        }
      }
    });
  }
  //重置表单
  handleResetForm() {
    this.form = Object.assign({}, this.defaultFormData);
  }
};
__decorate([Prop({
  type: Boolean,
  default: true
})], XlForm.prototype, "showButton", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [];
  }
})], XlForm.prototype, "formItem", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlForm.prototype, "formData", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlForm.prototype, "formAttribute", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlForm.prototype, "rules", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlForm.prototype, "layout", void 0);
__decorate([Prop({
  type: String,
  default: '保存'
})], XlForm.prototype, "confirmText", void 0);
__decorate([Prop({
  type: String,
  default: '重置'
})], XlForm.prototype, "resetText", void 0);
__decorate([Model('input', {
  type: Object
})], XlForm.prototype, "value", void 0);
__decorate([Emit('input')], XlForm.prototype, "handleChange", null);
XlForm = __decorate([Component({
  name: 'XlForm',
  components: {
    XlFormItem: __vue_component__$7
  }
})], XlForm);
var script$6 = XlForm;

/* script */
const __vue_script__$6 = script$6;

/* template */
var __vue_render__$6 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("el-form", _vm._b({
    ref: "myform",
    attrs: {
      model: _vm.form,
      rules: _vm.rules
    },
    nativeOn: {
      submit: function ($event) {
        $event.preventDefault();
        return _vm.handleSubmit($event);
      }
    }
  }, "el-form", Object.assign({}, {
    "label-width": "120px",
    "label-suffix": ":",
    inline: false,
    "label-position": "right"
  }, _vm.formAttribute), false), [_c("el-row", {
    attrs: {
      gutter: 0
    }
  }, [_vm._l(_vm.formItem, function (item, index) {
    return [_c("el-col", _vm._b({
      key: index
    }, "el-col", item.span ? {
      span: item.span
    } : Object.assign({}, {
      xs: 24,
      sm: 12,
      md: 8,
      lg: 6,
      xl: 6
    }, _vm.layout), false), [item.slotname ? [item.type === "custom" ? _vm._t(item.slotname, null, {
      row: item,
      form: _vm.form
    }) : _c("el-form-item", _vm._b({
      attrs: {
        label: item.label,
        prop: item.prop
      }
    }, "el-form-item", item.formItemAttr, false), [_vm._t(item.slotname, null, {
      row: item,
      form: _vm.form
    })], 2)] : _c("XlFormItem", {
      attrs: {
        item: item
      },
      on: {
        labelname: function ($event) {
          return _vm.handleSetLabel($event, item.attribute.labelname);
        }
      },
      model: {
        value: _vm.form[item["prop"]],
        callback: function ($$v) {
          _vm.$set(_vm.form, item["prop"], $$v);
        },
        expression: "form[item['prop']]"
      }
    })], 2)];
  })], 2), _vm._v(" "), _vm.showButton ? _vm._t("button", [_c("el-form-item", [_c("el-button", {
    attrs: {
      type: "primary",
      "native-type": "submit"
    }
  }, [_vm._v("\n        " + _vm._s(_vm.confirmText) + "\n      ")]), _vm._v(" "), _c("el-button", {
    on: {
      click: _vm.handleResetForm
    }
  }, [_vm._v("\n        " + _vm._s(_vm.resetText) + "\n      ")])], 1)]) : _vm._e()], 2);
};
var __vue_staticRenderFns__$6 = [];
__vue_render__$6._withStripped = true;

/* style */
const __vue_inject_styles__$6 = function (inject) {
  if (!inject) return;
  inject("data-v-087aaa02_0", {
    source: "\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["main.vue"],
      "names": [],
      "mappings": ";;AAEA,mCAAmC",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$6 = "data-v-087aaa02";
/* module identifier */
const __vue_module_identifier__$6 = undefined;
/* functional template */
const __vue_is_functional_template__$6 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$6 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$6,
  staticRenderFns: __vue_staticRenderFns__$6
}, __vue_inject_styles__$6, __vue_script__$6, __vue_scope_id__$6, __vue_is_functional_template__$6, __vue_module_identifier__$6, false, createInjector, undefined, undefined);

__vue_component__$6.install = Vue => {
  Vue.component(__vue_component__$6.extendOptions.name, __vue_component__$6);
};

let XlRadio = class XlRadio extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    //字段参数
    _defineProperty$1(this, "props", void 0);
    _defineProperty$1(this, "data", void 0);
    _defineProperty$1(this, "code", void 0);
    //data =========================
    _defineProperty$1(this, "checkValue", '');
    _defineProperty$1(this, "checkLable", '');
    //所有数据
    _defineProperty$1(this, "options", []);
    // model =======================
    // emit ========================
    //回调选中的值
    _defineProperty$1(this, "value", void 0);
  }
  handleChange(e) {
    const data = this.options.filter(o => o[this.props['value']] === e);
    if (data.length) {
      this.checkLable = data[0][this.props.label];
    }
    this.$attrs.labelname && this.handleLabelName();
    return e;
  }
  handleLabelName() {
    return this.checkLable;
  }
  handleWatch(val) {
    this.checkValue = JSON.parse(JSON.stringify(val || ''));
  }
  // ---------------------
  async mounted() {
    await this.$nextTick();
    if (this.code) {
      this.getOption();
    } else if (this.data) {
      this.options = this.data;
      if (this.checkValue) {
        this.handleChange(this.checkValue);
      }
    }
  }
  // 获取CODE这典
  getOption() {
    getCode(this.$global.codeApi + this.code).then(res => {
      this.options = res.data;
    }).catch(err => err);
  }
};
__decorate([Prop({
  type: Object,
  default() {
    return {
      value: 'value',
      label: 'label'
    };
  }
})], XlRadio.prototype, "props", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [];
  }
})], XlRadio.prototype, "data", void 0);
__decorate([Prop({
  type: String,
  default: ''
})], XlRadio.prototype, "code", void 0);
__decorate([Model('change', {
  type: String
})], XlRadio.prototype, "value", void 0);
__decorate([Emit('change')], XlRadio.prototype, "handleChange", null);
__decorate([Emit('update:labelName')], XlRadio.prototype, "handleLabelName", null);
__decorate([Watch('value', {
  immediate: true
})], XlRadio.prototype, "handleWatch", null);
XlRadio = __decorate([Component({
  name: 'XlRadio',
  components: {}
})], XlRadio);
var script$5 = XlRadio;

/* script */
const __vue_script__$5 = script$5;

/* template */
var __vue_render__$5 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("el-radio-group", {
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.checkValue,
      callback: function ($$v) {
        _vm.checkValue = $$v;
      },
      expression: "checkValue"
    }
  }, _vm._l(_vm.options, function (item, index) {
    return _c("el-radio", _vm._b({
      key: index,
      attrs: {
        label: item[_vm.props.value]
      }
    }, "el-radio", _vm.$attrs, false), [_vm._v("\n    " + _vm._s(item[_vm.props.label]) + "\n  ")]);
  }), 1);
};
var __vue_staticRenderFns__$5 = [];
__vue_render__$5._withStripped = true;

/* style */
const __vue_inject_styles__$5 = function (inject) {
  if (!inject) return;
  inject("data-v-2b0c73f4_0", {
    source: "\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["main.vue"],
      "names": [],
      "mappings": ";;AAEA,mCAAmC",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$5 = "data-v-2b0c73f4";
/* module identifier */
const __vue_module_identifier__$5 = undefined;
/* functional template */
const __vue_is_functional_template__$5 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$5 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$5,
  staticRenderFns: __vue_staticRenderFns__$5
}, __vue_inject_styles__$5, __vue_script__$5, __vue_scope_id__$5, __vue_is_functional_template__$5, __vue_module_identifier__$5, false, createInjector, undefined, undefined);

__vue_component__$5.install = Vue => {
  Vue.component(__vue_component__$5.extendOptions.name, __vue_component__$5);
};

const city = [{
  value: '110000',
  label: '北京',
  pid: '100000',
  children: [{
    value: '110100',
    label: '北京市',
    pid: '110000',
    children: [{
      value: '110101',
      label: '东城区',
      pid: '110100'
    }, {
      value: '110102',
      label: '西城区',
      pid: '110100'
    }, {
      value: '110105',
      label: '朝阳区',
      pid: '110100'
    }, {
      value: '110106',
      label: '丰台区',
      pid: '110100'
    }, {
      value: '110107',
      label: '石景山区',
      pid: '110100'
    }, {
      value: '110108',
      label: '海淀区',
      pid: '110100'
    }, {
      value: '110109',
      label: '门头沟区',
      pid: '110100'
    }, {
      value: '110111',
      label: '房山区',
      pid: '110100'
    }, {
      value: '110112',
      label: '通州区',
      pid: '110100'
    }, {
      value: '110113',
      label: '顺义区',
      pid: '110100'
    }, {
      value: '110114',
      label: '昌平区',
      pid: '110100'
    }, {
      value: '110115',
      label: '大兴区',
      pid: '110100'
    }, {
      value: '110116',
      label: '怀柔区',
      pid: '110100'
    }, {
      value: '110117',
      label: '平谷区',
      pid: '110100'
    }, {
      value: '110228',
      label: '密云县',
      pid: '110100'
    }, {
      value: '110229',
      label: '延庆县',
      pid: '110100'
    }]
  }]
}, {
  value: '120000',
  label: '天津',
  pid: '100000',
  children: [{
    value: '120100',
    label: '天津市',
    pid: '120000',
    children: [{
      value: '120101',
      label: '和平区',
      pid: '120100'
    }, {
      value: '120102',
      label: '河东区',
      pid: '120100'
    }, {
      value: '120103',
      label: '河西区',
      pid: '120100'
    }, {
      value: '120104',
      label: '南开区',
      pid: '120100'
    }, {
      value: '120105',
      label: '河北区',
      pid: '120100'
    }, {
      value: '120106',
      label: '红桥区',
      pid: '120100'
    }, {
      value: '120110',
      label: '东丽区',
      pid: '120100'
    }, {
      value: '120111',
      label: '西青区',
      pid: '120100'
    }, {
      value: '120112',
      label: '津南区',
      pid: '120100'
    }, {
      value: '120113',
      label: '北辰区',
      pid: '120100'
    }, {
      value: '120114',
      label: '武清区',
      pid: '120100'
    }, {
      value: '120115',
      label: '宝坻区',
      pid: '120100'
    }, {
      value: '120116',
      label: '滨海新区',
      pid: '120100'
    }, {
      value: '120221',
      label: '宁河县',
      pid: '120100'
    }, {
      value: '120223',
      label: '静海县',
      pid: '120100'
    }, {
      value: '120225',
      label: '蓟县',
      pid: '120100'
    }]
  }]
}, {
  value: '130000',
  label: '河北省',
  pid: '100000',
  children: [{
    value: '130100',
    label: '石家庄市',
    pid: '130000',
    children: [{
      value: '130102',
      label: '长安区',
      pid: '130100'
    }, {
      value: '130104',
      label: '桥西区',
      pid: '130100'
    }, {
      value: '130105',
      label: '新华区',
      pid: '130100'
    }, {
      value: '130107',
      label: '井陉矿区',
      pid: '130100'
    }, {
      value: '130108',
      label: '裕华区',
      pid: '130100'
    }, {
      value: '130109',
      label: '藁城区',
      pid: '130100'
    }, {
      value: '130110',
      label: '鹿泉区',
      pid: '130100'
    }, {
      value: '130111',
      label: '栾城区',
      pid: '130100'
    }, {
      value: '130121',
      label: '井陉县',
      pid: '130100'
    }, {
      value: '130123',
      label: '正定县',
      pid: '130100'
    }, {
      value: '130125',
      label: '行唐县',
      pid: '130100'
    }, {
      value: '130126',
      label: '灵寿县',
      pid: '130100'
    }, {
      value: '130127',
      label: '高邑县',
      pid: '130100'
    }, {
      value: '130128',
      label: '深泽县',
      pid: '130100'
    }, {
      value: '130129',
      label: '赞皇县',
      pid: '130100'
    }, {
      value: '130130',
      label: '无极县',
      pid: '130100'
    }, {
      value: '130131',
      label: '平山县',
      pid: '130100'
    }, {
      value: '130132',
      label: '元氏县',
      pid: '130100'
    }, {
      value: '130133',
      label: '赵县',
      pid: '130100'
    }, {
      value: '130181',
      label: '辛集市',
      pid: '130100'
    }, {
      value: '130183',
      label: '晋州市',
      pid: '130100'
    }, {
      value: '130184',
      label: '新乐市',
      pid: '130100'
    }]
  }, {
    value: '130200',
    label: '唐山市',
    pid: '130000',
    children: [{
      value: '130202',
      label: '路南区',
      pid: '130200'
    }, {
      value: '130203',
      label: '路北区',
      pid: '130200'
    }, {
      value: '130204',
      label: '古冶区',
      pid: '130200'
    }, {
      value: '130205',
      label: '开平区',
      pid: '130200'
    }, {
      value: '130207',
      label: '丰南区',
      pid: '130200'
    }, {
      value: '130208',
      label: '丰润区',
      pid: '130200'
    }, {
      value: '130209',
      label: '曹妃甸区',
      pid: '130200'
    }, {
      value: '130223',
      label: '滦县',
      pid: '130200'
    }, {
      value: '130224',
      label: '滦南县',
      pid: '130200'
    }, {
      value: '130225',
      label: '乐亭县',
      pid: '130200'
    }, {
      value: '130227',
      label: '迁西县',
      pid: '130200'
    }, {
      value: '130229',
      label: '玉田县',
      pid: '130200'
    }, {
      value: '130281',
      label: '遵化市',
      pid: '130200'
    }, {
      value: '130283',
      label: '迁安市',
      pid: '130200'
    }]
  }, {
    value: '130300',
    label: '秦皇岛市',
    pid: '130000',
    children: [{
      value: '130302',
      label: '海港区',
      pid: '130300'
    }, {
      value: '130303',
      label: '山海关区',
      pid: '130300'
    }, {
      value: '130304',
      label: '北戴河区',
      pid: '130300'
    }, {
      value: '130321',
      label: '青龙满族自治县',
      pid: '130300'
    }, {
      value: '130322',
      label: '昌黎县',
      pid: '130300'
    }, {
      value: '130323',
      label: '抚宁县',
      pid: '130300'
    }, {
      value: '130324',
      label: '卢龙县',
      pid: '130300'
    }]
  }, {
    value: '130400',
    label: '邯郸市',
    pid: '130000',
    children: [{
      value: '130402',
      label: '邯山区',
      pid: '130400'
    }, {
      value: '130403',
      label: '丛台区',
      pid: '130400'
    }, {
      value: '130404',
      label: '复兴区',
      pid: '130400'
    }, {
      value: '130406',
      label: '峰峰矿区',
      pid: '130400'
    }, {
      value: '130421',
      label: '邯郸县',
      pid: '130400'
    }, {
      value: '130423',
      label: '临漳县',
      pid: '130400'
    }, {
      value: '130424',
      label: '成安县',
      pid: '130400'
    }, {
      value: '130425',
      label: '大名县',
      pid: '130400'
    }, {
      value: '130426',
      label: '涉县',
      pid: '130400'
    }, {
      value: '130427',
      label: '磁县',
      pid: '130400'
    }, {
      value: '130428',
      label: '肥乡县',
      pid: '130400'
    }, {
      value: '130429',
      label: '永年县',
      pid: '130400'
    }, {
      value: '130430',
      label: '邱县',
      pid: '130400'
    }, {
      value: '130431',
      label: '鸡泽县',
      pid: '130400'
    }, {
      value: '130432',
      label: '广平县',
      pid: '130400'
    }, {
      value: '130433',
      label: '馆陶县',
      pid: '130400'
    }, {
      value: '130434',
      label: '魏县',
      pid: '130400'
    }, {
      value: '130435',
      label: '曲周县',
      pid: '130400'
    }, {
      value: '130481',
      label: '武安市',
      pid: '130400'
    }]
  }, {
    value: '130500',
    label: '邢台市',
    pid: '130000',
    children: [{
      value: '130502',
      label: '桥东区',
      pid: '130500'
    }, {
      value: '130503',
      label: '桥西区',
      pid: '130500'
    }, {
      value: '130521',
      label: '邢台县',
      pid: '130500'
    }, {
      value: '130522',
      label: '临城县',
      pid: '130500'
    }, {
      value: '130523',
      label: '内丘县',
      pid: '130500'
    }, {
      value: '130524',
      label: '柏乡县',
      pid: '130500'
    }, {
      value: '130525',
      label: '隆尧县',
      pid: '130500'
    }, {
      value: '130526',
      label: '任县',
      pid: '130500'
    }, {
      value: '130527',
      label: '南和县',
      pid: '130500'
    }, {
      value: '130528',
      label: '宁晋县',
      pid: '130500'
    }, {
      value: '130529',
      label: '巨鹿县',
      pid: '130500'
    }, {
      value: '130530',
      label: '新河县',
      pid: '130500'
    }, {
      value: '130531',
      label: '广宗县',
      pid: '130500'
    }, {
      value: '130532',
      label: '平乡县',
      pid: '130500'
    }, {
      value: '130533',
      label: '威县',
      pid: '130500'
    }, {
      value: '130534',
      label: '清河县',
      pid: '130500'
    }, {
      value: '130535',
      label: '临西县',
      pid: '130500'
    }, {
      value: '130581',
      label: '南宫市',
      pid: '130500'
    }, {
      value: '130582',
      label: '沙河市',
      pid: '130500'
    }]
  }, {
    value: '130600',
    label: '保定市',
    pid: '130000',
    children: [{
      value: '130602',
      label: '新市区',
      pid: '130600'
    }, {
      value: '130603',
      label: '北市区',
      pid: '130600'
    }, {
      value: '130604',
      label: '南市区',
      pid: '130600'
    }, {
      value: '130621',
      label: '满城县',
      pid: '130600'
    }, {
      value: '130622',
      label: '清苑县',
      pid: '130600'
    }, {
      value: '130623',
      label: '涞水县',
      pid: '130600'
    }, {
      value: '130624',
      label: '阜平县',
      pid: '130600'
    }, {
      value: '130625',
      label: '徐水县',
      pid: '130600'
    }, {
      value: '130626',
      label: '定兴县',
      pid: '130600'
    }, {
      value: '130627',
      label: '唐县',
      pid: '130600'
    }, {
      value: '130628',
      label: '高阳县',
      pid: '130600'
    }, {
      value: '130629',
      label: '容城县',
      pid: '130600'
    }, {
      value: '130630',
      label: '涞源县',
      pid: '130600'
    }, {
      value: '130631',
      label: '望都县',
      pid: '130600'
    }, {
      value: '130632',
      label: '安新县',
      pid: '130600'
    }, {
      value: '130633',
      label: '易县',
      pid: '130600'
    }, {
      value: '130634',
      label: '曲阳县',
      pid: '130600'
    }, {
      value: '130635',
      label: '蠡县',
      pid: '130600'
    }, {
      value: '130636',
      label: '顺平县',
      pid: '130600'
    }, {
      value: '130637',
      label: '博野县',
      pid: '130600'
    }, {
      value: '130638',
      label: '雄县',
      pid: '130600'
    }, {
      value: '130681',
      label: '涿州市',
      pid: '130600'
    }, {
      value: '130682',
      label: '定州市',
      pid: '130600'
    }, {
      value: '130683',
      label: '安国市',
      pid: '130600'
    }, {
      value: '130684',
      label: '高碑店市',
      pid: '130600'
    }]
  }, {
    value: '130700',
    label: '张家口市',
    pid: '130000',
    children: [{
      value: '130702',
      label: '桥东区',
      pid: '130700'
    }, {
      value: '130703',
      label: '桥西区',
      pid: '130700'
    }, {
      value: '130705',
      label: '宣化区',
      pid: '130700'
    }, {
      value: '130706',
      label: '下花园区',
      pid: '130700'
    }, {
      value: '130721',
      label: '宣化县',
      pid: '130700'
    }, {
      value: '130722',
      label: '张北县',
      pid: '130700'
    }, {
      value: '130723',
      label: '康保县',
      pid: '130700'
    }, {
      value: '130724',
      label: '沽源县',
      pid: '130700'
    }, {
      value: '130725',
      label: '尚义县',
      pid: '130700'
    }, {
      value: '130726',
      label: '蔚县',
      pid: '130700'
    }, {
      value: '130727',
      label: '阳原县',
      pid: '130700'
    }, {
      value: '130728',
      label: '怀安县',
      pid: '130700'
    }, {
      value: '130729',
      label: '万全县',
      pid: '130700'
    }, {
      value: '130730',
      label: '怀来县',
      pid: '130700'
    }, {
      value: '130731',
      label: '涿鹿县',
      pid: '130700'
    }, {
      value: '130732',
      label: '赤城县',
      pid: '130700'
    }, {
      value: '130733',
      label: '崇礼县',
      pid: '130700'
    }]
  }, {
    value: '130800',
    label: '承德市',
    pid: '130000',
    children: [{
      value: '130802',
      label: '双桥区',
      pid: '130800'
    }, {
      value: '130803',
      label: '双滦区',
      pid: '130800'
    }, {
      value: '130804',
      label: '鹰手营子矿区',
      pid: '130800'
    }, {
      value: '130821',
      label: '承德县',
      pid: '130800'
    }, {
      value: '130822',
      label: '兴隆县',
      pid: '130800'
    }, {
      value: '130823',
      label: '平泉县',
      pid: '130800'
    }, {
      value: '130824',
      label: '滦平县',
      pid: '130800'
    }, {
      value: '130825',
      label: '隆化县',
      pid: '130800'
    }, {
      value: '130826',
      label: '丰宁满族自治县',
      pid: '130800'
    }, {
      value: '130827',
      label: '宽城满族自治县',
      pid: '130800'
    }, {
      value: '130828',
      label: '围场满族蒙古族自治县',
      pid: '130800'
    }]
  }, {
    value: '130900',
    label: '沧州市',
    pid: '130000',
    children: [{
      value: '130902',
      label: '新华区',
      pid: '130900'
    }, {
      value: '130903',
      label: '运河区',
      pid: '130900'
    }, {
      value: '130921',
      label: '沧县',
      pid: '130900'
    }, {
      value: '130922',
      label: '青县',
      pid: '130900'
    }, {
      value: '130923',
      label: '东光县',
      pid: '130900'
    }, {
      value: '130924',
      label: '海兴县',
      pid: '130900'
    }, {
      value: '130925',
      label: '盐山县',
      pid: '130900'
    }, {
      value: '130926',
      label: '肃宁县',
      pid: '130900'
    }, {
      value: '130927',
      label: '南皮县',
      pid: '130900'
    }, {
      value: '130928',
      label: '吴桥县',
      pid: '130900'
    }, {
      value: '130929',
      label: '献县',
      pid: '130900'
    }, {
      value: '130930',
      label: '孟村回族自治县',
      pid: '130900'
    }, {
      value: '130981',
      label: '泊头市',
      pid: '130900'
    }, {
      value: '130982',
      label: '任丘市',
      pid: '130900'
    }, {
      value: '130983',
      label: '黄骅市',
      pid: '130900'
    }, {
      value: '130984',
      label: '河间市',
      pid: '130900'
    }]
  }, {
    value: '131000',
    label: '廊坊市',
    pid: '130000',
    children: [{
      value: '131002',
      label: '安次区',
      pid: '131000'
    }, {
      value: '131003',
      label: '广阳区',
      pid: '131000'
    }, {
      value: '131022',
      label: '固安县',
      pid: '131000'
    }, {
      value: '131023',
      label: '永清县',
      pid: '131000'
    }, {
      value: '131024',
      label: '香河县',
      pid: '131000'
    }, {
      value: '131025',
      label: '大城县',
      pid: '131000'
    }, {
      value: '131026',
      label: '文安县',
      pid: '131000'
    }, {
      value: '131028',
      label: '大厂回族自治县',
      pid: '131000'
    }, {
      value: '131081',
      label: '霸州市',
      pid: '131000'
    }, {
      value: '131082',
      label: '三河市',
      pid: '131000'
    }]
  }, {
    value: '131100',
    label: '衡水市',
    pid: '130000',
    children: [{
      value: '131102',
      label: '桃城区',
      pid: '131100'
    }, {
      value: '131121',
      label: '枣强县',
      pid: '131100'
    }, {
      value: '131122',
      label: '武邑县',
      pid: '131100'
    }, {
      value: '131123',
      label: '武强县',
      pid: '131100'
    }, {
      value: '131124',
      label: '饶阳县',
      pid: '131100'
    }, {
      value: '131125',
      label: '安平县',
      pid: '131100'
    }, {
      value: '131126',
      label: '故城县',
      pid: '131100'
    }, {
      value: '131127',
      label: '景县',
      pid: '131100'
    }, {
      value: '131128',
      label: '阜城县',
      pid: '131100'
    }, {
      value: '131181',
      label: '冀州市',
      pid: '131100'
    }, {
      value: '131182',
      label: '深州市',
      pid: '131100'
    }]
  }]
}, {
  value: '140000',
  label: '山西省',
  pid: '100000',
  children: [{
    value: '140100',
    label: '太原市',
    pid: '140000',
    children: [{
      value: '140105',
      label: '小店区',
      pid: '140100'
    }, {
      value: '140106',
      label: '迎泽区',
      pid: '140100'
    }, {
      value: '140107',
      label: '杏花岭区',
      pid: '140100'
    }, {
      value: '140108',
      label: '尖草坪区',
      pid: '140100'
    }, {
      value: '140109',
      label: '万柏林区',
      pid: '140100'
    }, {
      value: '140110',
      label: '晋源区',
      pid: '140100'
    }, {
      value: '140121',
      label: '清徐县',
      pid: '140100'
    }, {
      value: '140122',
      label: '阳曲县',
      pid: '140100'
    }, {
      value: '140123',
      label: '娄烦县',
      pid: '140100'
    }, {
      value: '140181',
      label: '古交市',
      pid: '140100'
    }]
  }, {
    value: '140200',
    label: '大同市',
    pid: '140000',
    children: [{
      value: '140202',
      label: '城区',
      pid: '140200'
    }, {
      value: '140203',
      label: '矿区',
      pid: '140200'
    }, {
      value: '140211',
      label: '南郊区',
      pid: '140200'
    }, {
      value: '140212',
      label: '新荣区',
      pid: '140200'
    }, {
      value: '140221',
      label: '阳高县',
      pid: '140200'
    }, {
      value: '140222',
      label: '天镇县',
      pid: '140200'
    }, {
      value: '140223',
      label: '广灵县',
      pid: '140200'
    }, {
      value: '140224',
      label: '灵丘县',
      pid: '140200'
    }, {
      value: '140225',
      label: '浑源县',
      pid: '140200'
    }, {
      value: '140226',
      label: '左云县',
      pid: '140200'
    }, {
      value: '140227',
      label: '大同县',
      pid: '140200'
    }]
  }, {
    value: '140300',
    label: '阳泉市',
    pid: '140000',
    children: [{
      value: '140302',
      label: '城区',
      pid: '140300'
    }, {
      value: '140303',
      label: '矿区',
      pid: '140300'
    }, {
      value: '140311',
      label: '郊区',
      pid: '140300'
    }, {
      value: '140321',
      label: '平定县',
      pid: '140300'
    }, {
      value: '140322',
      label: '盂县',
      pid: '140300'
    }]
  }, {
    value: '140400',
    label: '长治市',
    pid: '140000',
    children: [{
      value: '140402',
      label: '城区',
      pid: '140400'
    }, {
      value: '140411',
      label: '郊区',
      pid: '140400'
    }, {
      value: '140421',
      label: '长治县',
      pid: '140400'
    }, {
      value: '140423',
      label: '襄垣县',
      pid: '140400'
    }, {
      value: '140424',
      label: '屯留县',
      pid: '140400'
    }, {
      value: '140425',
      label: '平顺县',
      pid: '140400'
    }, {
      value: '140426',
      label: '黎城县',
      pid: '140400'
    }, {
      value: '140427',
      label: '壶关县',
      pid: '140400'
    }, {
      value: '140428',
      label: '长子县',
      pid: '140400'
    }, {
      value: '140429',
      label: '武乡县',
      pid: '140400'
    }, {
      value: '140430',
      label: '沁县',
      pid: '140400'
    }, {
      value: '140431',
      label: '沁源县',
      pid: '140400'
    }, {
      value: '140481',
      label: '潞城市',
      pid: '140400'
    }]
  }, {
    value: '140500',
    label: '晋城市',
    pid: '140000',
    children: [{
      value: '140502',
      label: '城区',
      pid: '140500'
    }, {
      value: '140521',
      label: '沁水县',
      pid: '140500'
    }, {
      value: '140522',
      label: '阳城县',
      pid: '140500'
    }, {
      value: '140524',
      label: '陵川县',
      pid: '140500'
    }, {
      value: '140525',
      label: '泽州县',
      pid: '140500'
    }, {
      value: '140581',
      label: '高平市',
      pid: '140500'
    }]
  }, {
    value: '140600',
    label: '朔州市',
    pid: '140000',
    children: [{
      value: '140602',
      label: '朔城区',
      pid: '140600'
    }, {
      value: '140603',
      label: '平鲁区',
      pid: '140600'
    }, {
      value: '140621',
      label: '山阴县',
      pid: '140600'
    }, {
      value: '140622',
      label: '应县',
      pid: '140600'
    }, {
      value: '140623',
      label: '右玉县',
      pid: '140600'
    }, {
      value: '140624',
      label: '怀仁县',
      pid: '140600'
    }]
  }, {
    value: '140700',
    label: '晋中市',
    pid: '140000',
    children: [{
      value: '140702',
      label: '榆次区',
      pid: '140700'
    }, {
      value: '140721',
      label: '榆社县',
      pid: '140700'
    }, {
      value: '140722',
      label: '左权县',
      pid: '140700'
    }, {
      value: '140723',
      label: '和顺县',
      pid: '140700'
    }, {
      value: '140724',
      label: '昔阳县',
      pid: '140700'
    }, {
      value: '140725',
      label: '寿阳县',
      pid: '140700'
    }, {
      value: '140726',
      label: '太谷县',
      pid: '140700'
    }, {
      value: '140727',
      label: '祁县',
      pid: '140700'
    }, {
      value: '140728',
      label: '平遥县',
      pid: '140700'
    }, {
      value: '140729',
      label: '灵石县',
      pid: '140700'
    }, {
      value: '140781',
      label: '介休市',
      pid: '140700'
    }]
  }, {
    value: '140800',
    label: '运城市',
    pid: '140000',
    children: [{
      value: '140802',
      label: '盐湖区',
      pid: '140800'
    }, {
      value: '140821',
      label: '临猗县',
      pid: '140800'
    }, {
      value: '140822',
      label: '万荣县',
      pid: '140800'
    }, {
      value: '140823',
      label: '闻喜县',
      pid: '140800'
    }, {
      value: '140824',
      label: '稷山县',
      pid: '140800'
    }, {
      value: '140825',
      label: '新绛县',
      pid: '140800'
    }, {
      value: '140826',
      label: '绛县',
      pid: '140800'
    }, {
      value: '140827',
      label: '垣曲县',
      pid: '140800'
    }, {
      value: '140828',
      label: '夏县',
      pid: '140800'
    }, {
      value: '140829',
      label: '平陆县',
      pid: '140800'
    }, {
      value: '140830',
      label: '芮城县',
      pid: '140800'
    }, {
      value: '140881',
      label: '永济市',
      pid: '140800'
    }, {
      value: '140882',
      label: '河津市',
      pid: '140800'
    }]
  }, {
    value: '140900',
    label: '忻州市',
    pid: '140000',
    children: [{
      value: '140902',
      label: '忻府区',
      pid: '140900'
    }, {
      value: '140921',
      label: '定襄县',
      pid: '140900'
    }, {
      value: '140922',
      label: '五台县',
      pid: '140900'
    }, {
      value: '140923',
      label: '代县',
      pid: '140900'
    }, {
      value: '140924',
      label: '繁峙县',
      pid: '140900'
    }, {
      value: '140925',
      label: '宁武县',
      pid: '140900'
    }, {
      value: '140926',
      label: '静乐县',
      pid: '140900'
    }, {
      value: '140927',
      label: '神池县',
      pid: '140900'
    }, {
      value: '140928',
      label: '五寨县',
      pid: '140900'
    }, {
      value: '140929',
      label: '岢岚县',
      pid: '140900'
    }, {
      value: '140930',
      label: '河曲县',
      pid: '140900'
    }, {
      value: '140931',
      label: '保德县',
      pid: '140900'
    }, {
      value: '140932',
      label: '偏关县',
      pid: '140900'
    }, {
      value: '140981',
      label: '原平市',
      pid: '140900'
    }]
  }, {
    value: '141000',
    label: '临汾市',
    pid: '140000',
    children: [{
      value: '141002',
      label: '尧都区',
      pid: '141000'
    }, {
      value: '141021',
      label: '曲沃县',
      pid: '141000'
    }, {
      value: '141022',
      label: '翼城县',
      pid: '141000'
    }, {
      value: '141023',
      label: '襄汾县',
      pid: '141000'
    }, {
      value: '141024',
      label: '洪洞县',
      pid: '141000'
    }, {
      value: '141025',
      label: '古县',
      pid: '141000'
    }, {
      value: '141026',
      label: '安泽县',
      pid: '141000'
    }, {
      value: '141027',
      label: '浮山县',
      pid: '141000'
    }, {
      value: '141028',
      label: '吉县',
      pid: '141000'
    }, {
      value: '141029',
      label: '乡宁县',
      pid: '141000'
    }, {
      value: '141030',
      label: '大宁县',
      pid: '141000'
    }, {
      value: '141031',
      label: '隰县',
      pid: '141000'
    }, {
      value: '141032',
      label: '永和县',
      pid: '141000'
    }, {
      value: '141033',
      label: '蒲县',
      pid: '141000'
    }, {
      value: '141034',
      label: '汾西县',
      pid: '141000'
    }, {
      value: '141081',
      label: '侯马市',
      pid: '141000'
    }, {
      value: '141082',
      label: '霍州市',
      pid: '141000'
    }]
  }, {
    value: '141100',
    label: '吕梁市',
    pid: '140000',
    children: [{
      value: '141102',
      label: '离石区',
      pid: '141100'
    }, {
      value: '141121',
      label: '文水县',
      pid: '141100'
    }, {
      value: '141122',
      label: '交城县',
      pid: '141100'
    }, {
      value: '141123',
      label: '兴县',
      pid: '141100'
    }, {
      value: '141124',
      label: '临县',
      pid: '141100'
    }, {
      value: '141125',
      label: '柳林县',
      pid: '141100'
    }, {
      value: '141126',
      label: '石楼县',
      pid: '141100'
    }, {
      value: '141127',
      label: '岚县',
      pid: '141100'
    }, {
      value: '141128',
      label: '方山县',
      pid: '141100'
    }, {
      value: '141129',
      label: '中阳县',
      pid: '141100'
    }, {
      value: '141130',
      label: '交口县',
      pid: '141100'
    }, {
      value: '141181',
      label: '孝义市',
      pid: '141100'
    }, {
      value: '141182',
      label: '汾阳市',
      pid: '141100'
    }]
  }]
}, {
  value: '150000',
  label: '内蒙古自治区',
  pid: '100000',
  children: [{
    value: '150100',
    label: '呼和浩特市',
    pid: '150000',
    children: [{
      value: '150102',
      label: '新城区',
      pid: '150100'
    }, {
      value: '150103',
      label: '回民区',
      pid: '150100'
    }, {
      value: '150104',
      label: '玉泉区',
      pid: '150100'
    }, {
      value: '150105',
      label: '赛罕区',
      pid: '150100'
    }, {
      value: '150121',
      label: '土默特左旗',
      pid: '150100'
    }, {
      value: '150122',
      label: '托克托县',
      pid: '150100'
    }, {
      value: '150123',
      label: '和林格尔县',
      pid: '150100'
    }, {
      value: '150124',
      label: '清水河县',
      pid: '150100'
    }, {
      value: '150125',
      label: '武川县',
      pid: '150100'
    }]
  }, {
    value: '150200',
    label: '包头市',
    pid: '150000',
    children: [{
      value: '150202',
      label: '东河区',
      pid: '150200'
    }, {
      value: '150203',
      label: '昆都仑区',
      pid: '150200'
    }, {
      value: '150204',
      label: '青山区',
      pid: '150200'
    }, {
      value: '150205',
      label: '石拐区',
      pid: '150200'
    }, {
      value: '150206',
      label: '白云鄂博矿区',
      pid: '150200'
    }, {
      value: '150207',
      label: '九原区',
      pid: '150200'
    }, {
      value: '150221',
      label: '土默特右旗',
      pid: '150200'
    }, {
      value: '150222',
      label: '固阳县',
      pid: '150200'
    }, {
      value: '150223',
      label: '达尔罕茂明安联合旗',
      pid: '150200'
    }]
  }, {
    value: '150300',
    label: '乌海市',
    pid: '150000',
    children: [{
      value: '150302',
      label: '海勃湾区',
      pid: '150300'
    }, {
      value: '150303',
      label: '海南区',
      pid: '150300'
    }, {
      value: '150304',
      label: '乌达区',
      pid: '150300'
    }]
  }, {
    value: '150400',
    label: '赤峰市',
    pid: '150000',
    children: [{
      value: '150402',
      label: '红山区',
      pid: '150400'
    }, {
      value: '150403',
      label: '元宝山区',
      pid: '150400'
    }, {
      value: '150404',
      label: '松山区',
      pid: '150400'
    }, {
      value: '150421',
      label: '阿鲁科尔沁旗',
      pid: '150400'
    }, {
      value: '150422',
      label: '巴林左旗',
      pid: '150400'
    }, {
      value: '150423',
      label: '巴林右旗',
      pid: '150400'
    }, {
      value: '150424',
      label: '林西县',
      pid: '150400'
    }, {
      value: '150425',
      label: '克什克腾旗',
      pid: '150400'
    }, {
      value: '150426',
      label: '翁牛特旗',
      pid: '150400'
    }, {
      value: '150428',
      label: '喀喇沁旗',
      pid: '150400'
    }, {
      value: '150429',
      label: '宁城县',
      pid: '150400'
    }, {
      value: '150430',
      label: '敖汉旗',
      pid: '150400'
    }]
  }, {
    value: '150500',
    label: '通辽市',
    pid: '150000',
    children: [{
      value: '150502',
      label: '科尔沁区',
      pid: '150500'
    }, {
      value: '150521',
      label: '科尔沁左翼中旗',
      pid: '150500'
    }, {
      value: '150522',
      label: '科尔沁左翼后旗',
      pid: '150500'
    }, {
      value: '150523',
      label: '开鲁县',
      pid: '150500'
    }, {
      value: '150524',
      label: '库伦旗',
      pid: '150500'
    }, {
      value: '150525',
      label: '奈曼旗',
      pid: '150500'
    }, {
      value: '150526',
      label: '扎鲁特旗',
      pid: '150500'
    }, {
      value: '150581',
      label: '霍林郭勒市',
      pid: '150500'
    }]
  }, {
    value: '150600',
    label: '鄂尔多斯市',
    pid: '150000',
    children: [{
      value: '150602',
      label: '东胜区',
      pid: '150600'
    }, {
      value: '150621',
      label: '达拉特旗',
      pid: '150600'
    }, {
      value: '150622',
      label: '准格尔旗',
      pid: '150600'
    }, {
      value: '150623',
      label: '鄂托克前旗',
      pid: '150600'
    }, {
      value: '150624',
      label: '鄂托克旗',
      pid: '150600'
    }, {
      value: '150625',
      label: '杭锦旗',
      pid: '150600'
    }, {
      value: '150626',
      label: '乌审旗',
      pid: '150600'
    }, {
      value: '150627',
      label: '伊金霍洛旗',
      pid: '150600'
    }]
  }, {
    value: '150700',
    label: '呼伦贝尔市',
    pid: '150000',
    children: [{
      value: '150702',
      label: '海拉尔区',
      pid: '150700'
    }, {
      value: '150703',
      label: '扎赉诺尔区',
      pid: '150700'
    }, {
      value: '150721',
      label: '阿荣旗',
      pid: '150700'
    }, {
      value: '150722',
      label: '莫力达瓦达斡尔族自治旗',
      pid: '150700'
    }, {
      value: '150723',
      label: '鄂伦春自治旗',
      pid: '150700'
    }, {
      value: '150724',
      label: '鄂温克族自治旗',
      pid: '150700'
    }, {
      value: '150725',
      label: '陈巴尔虎旗',
      pid: '150700'
    }, {
      value: '150726',
      label: '新巴尔虎左旗',
      pid: '150700'
    }, {
      value: '150727',
      label: '新巴尔虎右旗',
      pid: '150700'
    }, {
      value: '150781',
      label: '满洲里市',
      pid: '150700'
    }, {
      value: '150782',
      label: '牙克石市',
      pid: '150700'
    }, {
      value: '150783',
      label: '扎兰屯市',
      pid: '150700'
    }, {
      value: '150784',
      label: '额尔古纳市',
      pid: '150700'
    }, {
      value: '150785',
      label: '根河市',
      pid: '150700'
    }]
  }, {
    value: '150800',
    label: '巴彦淖尔市',
    pid: '150000',
    children: [{
      value: '150802',
      label: '临河区',
      pid: '150800'
    }, {
      value: '150821',
      label: '五原县',
      pid: '150800'
    }, {
      value: '150822',
      label: '磴口县',
      pid: '150800'
    }, {
      value: '150823',
      label: '乌拉特前旗',
      pid: '150800'
    }, {
      value: '150824',
      label: '乌拉特中旗',
      pid: '150800'
    }, {
      value: '150825',
      label: '乌拉特后旗',
      pid: '150800'
    }, {
      value: '150826',
      label: '杭锦后旗',
      pid: '150800'
    }]
  }, {
    value: '150900',
    label: '乌兰察布市',
    pid: '150000',
    children: [{
      value: '150902',
      label: '集宁区',
      pid: '150900'
    }, {
      value: '150921',
      label: '卓资县',
      pid: '150900'
    }, {
      value: '150922',
      label: '化德县',
      pid: '150900'
    }, {
      value: '150923',
      label: '商都县',
      pid: '150900'
    }, {
      value: '150924',
      label: '兴和县',
      pid: '150900'
    }, {
      value: '150925',
      label: '凉城县',
      pid: '150900'
    }, {
      value: '150926',
      label: '察哈尔右翼前旗',
      pid: '150900'
    }, {
      value: '150927',
      label: '察哈尔右翼中旗',
      pid: '150900'
    }, {
      value: '150928',
      label: '察哈尔右翼后旗',
      pid: '150900'
    }, {
      value: '150929',
      label: '四子王旗',
      pid: '150900'
    }, {
      value: '150981',
      label: '丰镇市',
      pid: '150900'
    }]
  }, {
    value: '152200',
    label: '兴安盟',
    pid: '150000',
    children: [{
      value: '152201',
      label: '乌兰浩特市',
      pid: '152200'
    }, {
      value: '152202',
      label: '阿尔山市',
      pid: '152200'
    }, {
      value: '152221',
      label: '科尔沁右翼前旗',
      pid: '152200'
    }, {
      value: '152222',
      label: '科尔沁右翼中旗',
      pid: '152200'
    }, {
      value: '152223',
      label: '扎赉特旗',
      pid: '152200'
    }, {
      value: '152224',
      label: '突泉县',
      pid: '152200'
    }]
  }, {
    value: '152500',
    label: '锡林郭勒盟',
    pid: '150000',
    children: [{
      value: '152501',
      label: '二连浩特市',
      pid: '152500'
    }, {
      value: '152502',
      label: '锡林浩特市',
      pid: '152500'
    }, {
      value: '152522',
      label: '阿巴嘎旗',
      pid: '152500'
    }, {
      value: '152523',
      label: '苏尼特左旗',
      pid: '152500'
    }, {
      value: '152524',
      label: '苏尼特右旗',
      pid: '152500'
    }, {
      value: '152525',
      label: '东乌珠穆沁旗',
      pid: '152500'
    }, {
      value: '152526',
      label: '西乌珠穆沁旗',
      pid: '152500'
    }, {
      value: '152527',
      label: '太仆寺旗',
      pid: '152500'
    }, {
      value: '152528',
      label: '镶黄旗',
      pid: '152500'
    }, {
      value: '152529',
      label: '正镶白旗',
      pid: '152500'
    }, {
      value: '152530',
      label: '正蓝旗',
      pid: '152500'
    }, {
      value: '152531',
      label: '多伦县',
      pid: '152500'
    }]
  }, {
    value: '152900',
    label: '阿拉善盟',
    pid: '150000',
    children: [{
      value: '152921',
      label: '阿拉善左旗',
      pid: '152900'
    }, {
      value: '152922',
      label: '阿拉善右旗',
      pid: '152900'
    }, {
      value: '152923',
      label: '额济纳旗',
      pid: '152900'
    }]
  }]
}, {
  value: '210000',
  label: '辽宁省',
  pid: '100000',
  children: [{
    value: '210100',
    label: '沈阳市',
    pid: '210000',
    children: [{
      value: '210102',
      label: '和平区',
      pid: '210100'
    }, {
      value: '210103',
      label: '沈河区',
      pid: '210100'
    }, {
      value: '210104',
      label: '大东区',
      pid: '210100'
    }, {
      value: '210105',
      label: '皇姑区',
      pid: '210100'
    }, {
      value: '210106',
      label: '铁西区',
      pid: '210100'
    }, {
      value: '210111',
      label: '苏家屯区',
      pid: '210100'
    }, {
      value: '210112',
      label: '浑南区',
      pid: '210100'
    }, {
      value: '210113',
      label: '沈北新区',
      pid: '210100'
    }, {
      value: '210114',
      label: '于洪区',
      pid: '210100'
    }, {
      value: '210122',
      label: '辽中县',
      pid: '210100'
    }, {
      value: '210123',
      label: '康平县',
      pid: '210100'
    }, {
      value: '210124',
      label: '法库县',
      pid: '210100'
    }, {
      value: '210181',
      label: '新民市',
      pid: '210100'
    }]
  }, {
    value: '210200',
    label: '大连市',
    pid: '210000',
    children: [{
      value: '210202',
      label: '中山区',
      pid: '210200'
    }, {
      value: '210203',
      label: '西岗区',
      pid: '210200'
    }, {
      value: '210204',
      label: '沙河口区',
      pid: '210200'
    }, {
      value: '210211',
      label: '甘井子区',
      pid: '210200'
    }, {
      value: '210212',
      label: '旅顺口区',
      pid: '210200'
    }, {
      value: '210213',
      label: '金州区',
      pid: '210200'
    }, {
      value: '210224',
      label: '长海县',
      pid: '210200'
    }, {
      value: '210281',
      label: '瓦房店市',
      pid: '210200'
    }, {
      value: '210282',
      label: '普兰店市',
      pid: '210200'
    }, {
      value: '210283',
      label: '庄河市',
      pid: '210200'
    }]
  }, {
    value: '210300',
    label: '鞍山市',
    pid: '210000',
    children: [{
      value: '210302',
      label: '铁东区',
      pid: '210300'
    }, {
      value: '210303',
      label: '铁西区',
      pid: '210300'
    }, {
      value: '210304',
      label: '立山区',
      pid: '210300'
    }, {
      value: '210311',
      label: '千山区',
      pid: '210300'
    }, {
      value: '210321',
      label: '台安县',
      pid: '210300'
    }, {
      value: '210323',
      label: '岫岩满族自治县',
      pid: '210300'
    }, {
      value: '210381',
      label: '海城市',
      pid: '210300'
    }]
  }, {
    value: '210400',
    label: '抚顺市',
    pid: '210000',
    children: [{
      value: '210402',
      label: '新抚区',
      pid: '210400'
    }, {
      value: '210403',
      label: '东洲区',
      pid: '210400'
    }, {
      value: '210404',
      label: '望花区',
      pid: '210400'
    }, {
      value: '210411',
      label: '顺城区',
      pid: '210400'
    }, {
      value: '210421',
      label: '抚顺县',
      pid: '210400'
    }, {
      value: '210422',
      label: '新宾满族自治县',
      pid: '210400'
    }, {
      value: '210423',
      label: '清原满族自治县',
      pid: '210400'
    }]
  }, {
    value: '210500',
    label: '本溪市',
    pid: '210000',
    children: [{
      value: '210502',
      label: '平山区',
      pid: '210500'
    }, {
      value: '210503',
      label: '溪湖区',
      pid: '210500'
    }, {
      value: '210504',
      label: '明山区',
      pid: '210500'
    }, {
      value: '210505',
      label: '南芬区',
      pid: '210500'
    }, {
      value: '210521',
      label: '本溪满族自治县',
      pid: '210500'
    }, {
      value: '210522',
      label: '桓仁满族自治县',
      pid: '210500'
    }]
  }, {
    value: '210600',
    label: '丹东市',
    pid: '210000',
    children: [{
      value: '210602',
      label: '元宝区',
      pid: '210600'
    }, {
      value: '210603',
      label: '振兴区',
      pid: '210600'
    }, {
      value: '210604',
      label: '振安区',
      pid: '210600'
    }, {
      value: '210624',
      label: '宽甸满族自治县',
      pid: '210600'
    }, {
      value: '210681',
      label: '东港市',
      pid: '210600'
    }, {
      value: '210682',
      label: '凤城市',
      pid: '210600'
    }]
  }, {
    value: '210700',
    label: '锦州市',
    pid: '210000',
    children: [{
      value: '210702',
      label: '古塔区',
      pid: '210700'
    }, {
      value: '210703',
      label: '凌河区',
      pid: '210700'
    }, {
      value: '210711',
      label: '太和区',
      pid: '210700'
    }, {
      value: '210726',
      label: '黑山县',
      pid: '210700'
    }, {
      value: '210727',
      label: '义县',
      pid: '210700'
    }, {
      value: '210781',
      label: '凌海市',
      pid: '210700'
    }, {
      value: '210782',
      label: '北镇市',
      pid: '210700'
    }]
  }, {
    value: '210800',
    label: '营口市',
    pid: '210000',
    children: [{
      value: '210802',
      label: '站前区',
      pid: '210800'
    }, {
      value: '210803',
      label: '西市区',
      pid: '210800'
    }, {
      value: '210804',
      label: '鲅鱼圈区',
      pid: '210800'
    }, {
      value: '210811',
      label: '老边区',
      pid: '210800'
    }, {
      value: '210881',
      label: '盖州市',
      pid: '210800'
    }, {
      value: '210882',
      label: '大石桥市',
      pid: '210800'
    }]
  }, {
    value: '210900',
    label: '阜新市',
    pid: '210000',
    children: [{
      value: '210902',
      label: '海州区',
      pid: '210900'
    }, {
      value: '210903',
      label: '新邱区',
      pid: '210900'
    }, {
      value: '210904',
      label: '太平区',
      pid: '210900'
    }, {
      value: '210905',
      label: '清河门区',
      pid: '210900'
    }, {
      value: '210911',
      label: '细河区',
      pid: '210900'
    }, {
      value: '210921',
      label: '阜新蒙古族自治县',
      pid: '210900'
    }, {
      value: '210922',
      label: '彰武县',
      pid: '210900'
    }]
  }, {
    value: '211000',
    label: '辽阳市',
    pid: '210000',
    children: [{
      value: '211002',
      label: '白塔区',
      pid: '211000'
    }, {
      value: '211003',
      label: '文圣区',
      pid: '211000'
    }, {
      value: '211004',
      label: '宏伟区',
      pid: '211000'
    }, {
      value: '211005',
      label: '弓长岭区',
      pid: '211000'
    }, {
      value: '211011',
      label: '太子河区',
      pid: '211000'
    }, {
      value: '211021',
      label: '辽阳县',
      pid: '211000'
    }, {
      value: '211081',
      label: '灯塔市',
      pid: '211000'
    }]
  }, {
    value: '211100',
    label: '盘锦市',
    pid: '210000',
    children: [{
      value: '211102',
      label: '双台子区',
      pid: '211100'
    }, {
      value: '211103',
      label: '兴隆台区',
      pid: '211100'
    }, {
      value: '211121',
      label: '大洼县',
      pid: '211100'
    }, {
      value: '211122',
      label: '盘山县',
      pid: '211100'
    }]
  }, {
    value: '211200',
    label: '铁岭市',
    pid: '210000',
    children: [{
      value: '211202',
      label: '银州区',
      pid: '211200'
    }, {
      value: '211204',
      label: '清河区',
      pid: '211200'
    }, {
      value: '211221',
      label: '铁岭县',
      pid: '211200'
    }, {
      value: '211223',
      label: '西丰县',
      pid: '211200'
    }, {
      value: '211224',
      label: '昌图县',
      pid: '211200'
    }, {
      value: '211281',
      label: '调兵山市',
      pid: '211200'
    }, {
      value: '211282',
      label: '开原市',
      pid: '211200'
    }]
  }, {
    value: '211300',
    label: '朝阳市',
    pid: '210000',
    children: [{
      value: '211302',
      label: '双塔区',
      pid: '211300'
    }, {
      value: '211303',
      label: '龙城区',
      pid: '211300'
    }, {
      value: '211321',
      label: '朝阳县',
      pid: '211300'
    }, {
      value: '211322',
      label: '建平县',
      pid: '211300'
    }, {
      value: '211324',
      label: '喀喇沁左翼蒙古族自治县',
      pid: '211300'
    }, {
      value: '211381',
      label: '北票市',
      pid: '211300'
    }, {
      value: '211382',
      label: '凌源市',
      pid: '211300'
    }]
  }, {
    value: '211400',
    label: '葫芦岛市',
    pid: '210000',
    children: [{
      value: '211402',
      label: '连山区',
      pid: '211400'
    }, {
      value: '211403',
      label: '龙港区',
      pid: '211400'
    }, {
      value: '211404',
      label: '南票区',
      pid: '211400'
    }, {
      value: '211421',
      label: '绥中县',
      pid: '211400'
    }, {
      value: '211422',
      label: '建昌县',
      pid: '211400'
    }, {
      value: '211481',
      label: '兴城市',
      pid: '211400'
    }]
  }, {
    value: '211500',
    label: '金普新区',
    pid: '210000',
    children: [{
      value: '211501',
      label: '金州新区',
      pid: '211500'
    }, {
      value: '211502',
      label: '普湾新区',
      pid: '211500'
    }, {
      value: '211503',
      label: '保税区',
      pid: '211500'
    }]
  }]
}, {
  value: '220000',
  label: '吉林省',
  pid: '100000',
  children: [{
    value: '220100',
    label: '长春市',
    pid: '220000',
    children: [{
      value: '220102',
      label: '南关区',
      pid: '220100'
    }, {
      value: '220103',
      label: '宽城区',
      pid: '220100'
    }, {
      value: '220104',
      label: '朝阳区',
      pid: '220100'
    }, {
      value: '220105',
      label: '二道区',
      pid: '220100'
    }, {
      value: '220106',
      label: '绿园区',
      pid: '220100'
    }, {
      value: '220112',
      label: '双阳区',
      pid: '220100'
    }, {
      value: '220113',
      label: '九台区',
      pid: '220100'
    }, {
      value: '220122',
      label: '农安县',
      pid: '220100'
    }, {
      value: '220182',
      label: '榆树市',
      pid: '220100'
    }, {
      value: '220183',
      label: '德惠市',
      pid: '220100'
    }]
  }, {
    value: '220200',
    label: '吉林市',
    pid: '220000',
    children: [{
      value: '220202',
      label: '昌邑区',
      pid: '220200'
    }, {
      value: '220203',
      label: '龙潭区',
      pid: '220200'
    }, {
      value: '220204',
      label: '船营区',
      pid: '220200'
    }, {
      value: '220211',
      label: '丰满区',
      pid: '220200'
    }, {
      value: '220221',
      label: '永吉县',
      pid: '220200'
    }, {
      value: '220281',
      label: '蛟河市',
      pid: '220200'
    }, {
      value: '220282',
      label: '桦甸市',
      pid: '220200'
    }, {
      value: '220283',
      label: '舒兰市',
      pid: '220200'
    }, {
      value: '220284',
      label: '磐石市',
      pid: '220200'
    }]
  }, {
    value: '220300',
    label: '四平市',
    pid: '220000',
    children: [{
      value: '220302',
      label: '铁西区',
      pid: '220300'
    }, {
      value: '220303',
      label: '铁东区',
      pid: '220300'
    }, {
      value: '220322',
      label: '梨树县',
      pid: '220300'
    }, {
      value: '220323',
      label: '伊通满族自治县',
      pid: '220300'
    }, {
      value: '220381',
      label: '公主岭市',
      pid: '220300'
    }, {
      value: '220382',
      label: '双辽市',
      pid: '220300'
    }]
  }, {
    value: '220400',
    label: '辽源市',
    pid: '220000',
    children: [{
      value: '220402',
      label: '龙山区',
      pid: '220400'
    }, {
      value: '220403',
      label: '西安区',
      pid: '220400'
    }, {
      value: '220421',
      label: '东丰县',
      pid: '220400'
    }, {
      value: '220422',
      label: '东辽县',
      pid: '220400'
    }]
  }, {
    value: '220500',
    label: '通化市',
    pid: '220000',
    children: [{
      value: '220502',
      label: '东昌区',
      pid: '220500'
    }, {
      value: '220503',
      label: '二道江区',
      pid: '220500'
    }, {
      value: '220521',
      label: '通化县',
      pid: '220500'
    }, {
      value: '220523',
      label: '辉南县',
      pid: '220500'
    }, {
      value: '220524',
      label: '柳河县',
      pid: '220500'
    }, {
      value: '220581',
      label: '梅河口市',
      pid: '220500'
    }, {
      value: '220582',
      label: '集安市',
      pid: '220500'
    }]
  }, {
    value: '220600',
    label: '白山市',
    pid: '220000',
    children: [{
      value: '220602',
      label: '浑江区',
      pid: '220600'
    }, {
      value: '220605',
      label: '江源区',
      pid: '220600'
    }, {
      value: '220621',
      label: '抚松县',
      pid: '220600'
    }, {
      value: '220622',
      label: '靖宇县',
      pid: '220600'
    }, {
      value: '220623',
      label: '长白朝鲜族自治县',
      pid: '220600'
    }, {
      value: '220681',
      label: '临江市',
      pid: '220600'
    }]
  }, {
    value: '220700',
    label: '松原市',
    pid: '220000',
    children: [{
      value: '220702',
      label: '宁江区',
      pid: '220700'
    }, {
      value: '220721',
      label: '前郭尔罗斯蒙古族自治县',
      pid: '220700'
    }, {
      value: '220722',
      label: '长岭县',
      pid: '220700'
    }, {
      value: '220723',
      label: '乾安县',
      pid: '220700'
    }, {
      value: '220781',
      label: '扶余市',
      pid: '220700'
    }]
  }, {
    value: '220800',
    label: '白城市',
    pid: '220000',
    children: [{
      value: '220802',
      label: '洮北区',
      pid: '220800'
    }, {
      value: '220821',
      label: '镇赉县',
      pid: '220800'
    }, {
      value: '220822',
      label: '通榆县',
      pid: '220800'
    }, {
      value: '220881',
      label: '洮南市',
      pid: '220800'
    }, {
      value: '220882',
      label: '大安市',
      pid: '220800'
    }]
  }, {
    value: '222400',
    label: '延边朝鲜族自治州',
    pid: '220000',
    children: [{
      value: '222401',
      label: '延吉市',
      pid: '222400'
    }, {
      value: '222402',
      label: '图们市',
      pid: '222400'
    }, {
      value: '222403',
      label: '敦化市',
      pid: '222400'
    }, {
      value: '222404',
      label: '珲春市',
      pid: '222400'
    }, {
      value: '222405',
      label: '龙井市',
      pid: '222400'
    }, {
      value: '222406',
      label: '和龙市',
      pid: '222400'
    }, {
      value: '222424',
      label: '汪清县',
      pid: '222400'
    }, {
      value: '222426',
      label: '安图县',
      pid: '222400'
    }]
  }]
}, {
  value: '230000',
  label: '黑龙江省',
  pid: '100000',
  children: [{
    value: '230100',
    label: '哈尔滨市',
    pid: '230000',
    children: [{
      value: '230102',
      label: '道里区',
      pid: '230100'
    }, {
      value: '230103',
      label: '南岗区',
      pid: '230100'
    }, {
      value: '230104',
      label: '道外区',
      pid: '230100'
    }, {
      value: '230108',
      label: '平房区',
      pid: '230100'
    }, {
      value: '230109',
      label: '松北区',
      pid: '230100'
    }, {
      value: '230110',
      label: '香坊区',
      pid: '230100'
    }, {
      value: '230111',
      label: '呼兰区',
      pid: '230100'
    }, {
      value: '230112',
      label: '阿城区',
      pid: '230100'
    }, {
      value: '230113',
      label: '双城区',
      pid: '230100'
    }, {
      value: '230123',
      label: '依兰县',
      pid: '230100'
    }, {
      value: '230124',
      label: '方正县',
      pid: '230100'
    }, {
      value: '230125',
      label: '宾县',
      pid: '230100'
    }, {
      value: '230126',
      label: '巴彦县',
      pid: '230100'
    }, {
      value: '230127',
      label: '木兰县',
      pid: '230100'
    }, {
      value: '230128',
      label: '通河县',
      pid: '230100'
    }, {
      value: '230129',
      label: '延寿县',
      pid: '230100'
    }, {
      value: '230183',
      label: '尚志市',
      pid: '230100'
    }, {
      value: '230184',
      label: '五常市',
      pid: '230100'
    }]
  }, {
    value: '230200',
    label: '齐齐哈尔市',
    pid: '230000',
    children: [{
      value: '230202',
      label: '龙沙区',
      pid: '230200'
    }, {
      value: '230203',
      label: '建华区',
      pid: '230200'
    }, {
      value: '230204',
      label: '铁锋区',
      pid: '230200'
    }, {
      value: '230205',
      label: '昂昂溪区',
      pid: '230200'
    }, {
      value: '230206',
      label: '富拉尔基区',
      pid: '230200'
    }, {
      value: '230207',
      label: '碾子山区',
      pid: '230200'
    }, {
      value: '230208',
      label: '梅里斯达斡尔族区',
      pid: '230200'
    }, {
      value: '230221',
      label: '龙江县',
      pid: '230200'
    }, {
      value: '230223',
      label: '依安县',
      pid: '230200'
    }, {
      value: '230224',
      label: '泰来县',
      pid: '230200'
    }, {
      value: '230225',
      label: '甘南县',
      pid: '230200'
    }, {
      value: '230227',
      label: '富裕县',
      pid: '230200'
    }, {
      value: '230229',
      label: '克山县',
      pid: '230200'
    }, {
      value: '230230',
      label: '克东县',
      pid: '230200'
    }, {
      value: '230231',
      label: '拜泉县',
      pid: '230200'
    }, {
      value: '230281',
      label: '讷河市',
      pid: '230200'
    }]
  }, {
    value: '230300',
    label: '鸡西市',
    pid: '230000',
    children: [{
      value: '230302',
      label: '鸡冠区',
      pid: '230300'
    }, {
      value: '230303',
      label: '恒山区',
      pid: '230300'
    }, {
      value: '230304',
      label: '滴道区',
      pid: '230300'
    }, {
      value: '230305',
      label: '梨树区',
      pid: '230300'
    }, {
      value: '230306',
      label: '城子河区',
      pid: '230300'
    }, {
      value: '230307',
      label: '麻山区',
      pid: '230300'
    }, {
      value: '230321',
      label: '鸡东县',
      pid: '230300'
    }, {
      value: '230381',
      label: '虎林市',
      pid: '230300'
    }, {
      value: '230382',
      label: '密山市',
      pid: '230300'
    }]
  }, {
    value: '230400',
    label: '鹤岗市',
    pid: '230000',
    children: [{
      value: '230402',
      label: '向阳区',
      pid: '230400'
    }, {
      value: '230403',
      label: '工农区',
      pid: '230400'
    }, {
      value: '230404',
      label: '南山区',
      pid: '230400'
    }, {
      value: '230405',
      label: '兴安区',
      pid: '230400'
    }, {
      value: '230406',
      label: '东山区',
      pid: '230400'
    }, {
      value: '230407',
      label: '兴山区',
      pid: '230400'
    }, {
      value: '230421',
      label: '萝北县',
      pid: '230400'
    }, {
      value: '230422',
      label: '绥滨县',
      pid: '230400'
    }]
  }, {
    value: '230500',
    label: '双鸭山市',
    pid: '230000',
    children: [{
      value: '230502',
      label: '尖山区',
      pid: '230500'
    }, {
      value: '230503',
      label: '岭东区',
      pid: '230500'
    }, {
      value: '230505',
      label: '四方台区',
      pid: '230500'
    }, {
      value: '230506',
      label: '宝山区',
      pid: '230500'
    }, {
      value: '230521',
      label: '集贤县',
      pid: '230500'
    }, {
      value: '230522',
      label: '友谊县',
      pid: '230500'
    }, {
      value: '230523',
      label: '宝清县',
      pid: '230500'
    }, {
      value: '230524',
      label: '饶河县',
      pid: '230500'
    }]
  }, {
    value: '230600',
    label: '大庆市',
    pid: '230000',
    children: [{
      value: '230602',
      label: '萨尔图区',
      pid: '230600'
    }, {
      value: '230603',
      label: '龙凤区',
      pid: '230600'
    }, {
      value: '230604',
      label: '让胡路区',
      pid: '230600'
    }, {
      value: '230605',
      label: '红岗区',
      pid: '230600'
    }, {
      value: '230606',
      label: '大同区',
      pid: '230600'
    }, {
      value: '230621',
      label: '肇州县',
      pid: '230600'
    }, {
      value: '230622',
      label: '肇源县',
      pid: '230600'
    }, {
      value: '230623',
      label: '林甸县',
      pid: '230600'
    }, {
      value: '230624',
      label: '杜尔伯特蒙古族自治县',
      pid: '230600'
    }]
  }, {
    value: '230700',
    label: '伊春市',
    pid: '230000',
    children: [{
      value: '230702',
      label: '伊春区',
      pid: '230700'
    }, {
      value: '230703',
      label: '南岔区',
      pid: '230700'
    }, {
      value: '230704',
      label: '友好区',
      pid: '230700'
    }, {
      value: '230705',
      label: '西林区',
      pid: '230700'
    }, {
      value: '230706',
      label: '翠峦区',
      pid: '230700'
    }, {
      value: '230707',
      label: '新青区',
      pid: '230700'
    }, {
      value: '230708',
      label: '美溪区',
      pid: '230700'
    }, {
      value: '230709',
      label: '金山屯区',
      pid: '230700'
    }, {
      value: '230710',
      label: '五营区',
      pid: '230700'
    }, {
      value: '230711',
      label: '乌马河区',
      pid: '230700'
    }, {
      value: '230712',
      label: '汤旺河区',
      pid: '230700'
    }, {
      value: '230713',
      label: '带岭区',
      pid: '230700'
    }, {
      value: '230714',
      label: '乌伊岭区',
      pid: '230700'
    }, {
      value: '230715',
      label: '红星区',
      pid: '230700'
    }, {
      value: '230716',
      label: '上甘岭区',
      pid: '230700'
    }, {
      value: '230722',
      label: '嘉荫县',
      pid: '230700'
    }, {
      value: '230781',
      label: '铁力市',
      pid: '230700'
    }]
  }, {
    value: '230800',
    label: '佳木斯市',
    pid: '230000',
    children: [{
      value: '230803',
      label: '向阳区',
      pid: '230800'
    }, {
      value: '230804',
      label: '前进区',
      pid: '230800'
    }, {
      value: '230805',
      label: '东风区',
      pid: '230800'
    }, {
      value: '230811',
      label: '郊区',
      pid: '230800'
    }, {
      value: '230822',
      label: '桦南县',
      pid: '230800'
    }, {
      value: '230826',
      label: '桦川县',
      pid: '230800'
    }, {
      value: '230828',
      label: '汤原县',
      pid: '230800'
    }, {
      value: '230833',
      label: '抚远县',
      pid: '230800'
    }, {
      value: '230881',
      label: '同江市',
      pid: '230800'
    }, {
      value: '230882',
      label: '富锦市',
      pid: '230800'
    }]
  }, {
    value: '230900',
    label: '七台河市',
    pid: '230000',
    children: [{
      value: '230902',
      label: '新兴区',
      pid: '230900'
    }, {
      value: '230903',
      label: '桃山区',
      pid: '230900'
    }, {
      value: '230904',
      label: '茄子河区',
      pid: '230900'
    }, {
      value: '230921',
      label: '勃利县',
      pid: '230900'
    }]
  }, {
    value: '231000',
    label: '牡丹江市',
    pid: '230000',
    children: [{
      value: '231002',
      label: '东安区',
      pid: '231000'
    }, {
      value: '231003',
      label: '阳明区',
      pid: '231000'
    }, {
      value: '231004',
      label: '爱民区',
      pid: '231000'
    }, {
      value: '231005',
      label: '西安区',
      pid: '231000'
    }, {
      value: '231024',
      label: '东宁县',
      pid: '231000'
    }, {
      value: '231025',
      label: '林口县',
      pid: '231000'
    }, {
      value: '231081',
      label: '绥芬河市',
      pid: '231000'
    }, {
      value: '231083',
      label: '海林市',
      pid: '231000'
    }, {
      value: '231084',
      label: '宁安市',
      pid: '231000'
    }, {
      value: '231085',
      label: '穆棱市',
      pid: '231000'
    }]
  }, {
    value: '231100',
    label: '黑河市',
    pid: '230000',
    children: [{
      value: '231102',
      label: '爱辉区',
      pid: '231100'
    }, {
      value: '231121',
      label: '嫩江县',
      pid: '231100'
    }, {
      value: '231123',
      label: '逊克县',
      pid: '231100'
    }, {
      value: '231124',
      label: '孙吴县',
      pid: '231100'
    }, {
      value: '231181',
      label: '北安市',
      pid: '231100'
    }, {
      value: '231182',
      label: '五大连池市',
      pid: '231100'
    }]
  }, {
    value: '231200',
    label: '绥化市',
    pid: '230000',
    children: [{
      value: '231202',
      label: '北林区',
      pid: '231200'
    }, {
      value: '231221',
      label: '望奎县',
      pid: '231200'
    }, {
      value: '231222',
      label: '兰西县',
      pid: '231200'
    }, {
      value: '231223',
      label: '青冈县',
      pid: '231200'
    }, {
      value: '231224',
      label: '庆安县',
      pid: '231200'
    }, {
      value: '231225',
      label: '明水县',
      pid: '231200'
    }, {
      value: '231226',
      label: '绥棱县',
      pid: '231200'
    }, {
      value: '231281',
      label: '安达市',
      pid: '231200'
    }, {
      value: '231282',
      label: '肇东市',
      pid: '231200'
    }, {
      value: '231283',
      label: '海伦市',
      pid: '231200'
    }]
  }, {
    value: '232700',
    label: '大兴安岭地区',
    pid: '230000',
    children: [{
      value: '232701',
      label: '加格达奇区',
      pid: '232700'
    }, {
      value: '232702',
      label: '新林区',
      pid: '232700'
    }, {
      value: '232703',
      label: '松岭区',
      pid: '232700'
    }, {
      value: '232704',
      label: '呼中区',
      pid: '232700'
    }, {
      value: '232721',
      label: '呼玛县',
      pid: '232700'
    }, {
      value: '232722',
      label: '塔河县',
      pid: '232700'
    }, {
      value: '232723',
      label: '漠河县',
      pid: '232700'
    }]
  }]
}, {
  value: '310000',
  label: '上海',
  pid: '100000',
  children: [{
    value: '310100',
    label: '上海市',
    pid: '310000',
    children: [{
      value: '310101',
      label: '黄浦区',
      pid: '310100'
    }, {
      value: '310104',
      label: '徐汇区',
      pid: '310100'
    }, {
      value: '310105',
      label: '长宁区',
      pid: '310100'
    }, {
      value: '310106',
      label: '静安区',
      pid: '310100'
    }, {
      value: '310107',
      label: '普陀区',
      pid: '310100'
    }, {
      value: '310108',
      label: '闸北区',
      pid: '310100'
    }, {
      value: '310109',
      label: '虹口区',
      pid: '310100'
    }, {
      value: '310110',
      label: '杨浦区',
      pid: '310100'
    }, {
      value: '310112',
      label: '闵行区',
      pid: '310100'
    }, {
      value: '310113',
      label: '宝山区',
      pid: '310100'
    }, {
      value: '310114',
      label: '嘉定区',
      pid: '310100'
    }, {
      value: '310115',
      label: '浦东新区',
      pid: '310100'
    }, {
      value: '310116',
      label: '金山区',
      pid: '310100'
    }, {
      value: '310117',
      label: '松江区',
      pid: '310100'
    }, {
      value: '310118',
      label: '青浦区',
      pid: '310100'
    }, {
      value: '310120',
      label: '奉贤区',
      pid: '310100'
    }, {
      value: '310230',
      label: '崇明县',
      pid: '310100'
    }]
  }]
}, {
  value: '320000',
  label: '江苏省',
  pid: '100000',
  children: [{
    value: '320100',
    label: '南京市',
    pid: '320000',
    children: [{
      value: '320102',
      label: '玄武区',
      pid: '320100'
    }, {
      value: '320104',
      label: '秦淮区',
      pid: '320100'
    }, {
      value: '320105',
      label: '建邺区',
      pid: '320100'
    }, {
      value: '320106',
      label: '鼓楼区',
      pid: '320100'
    }, {
      value: '320111',
      label: '浦口区',
      pid: '320100'
    }, {
      value: '320113',
      label: '栖霞区',
      pid: '320100'
    }, {
      value: '320114',
      label: '雨花台区',
      pid: '320100'
    }, {
      value: '320115',
      label: '江宁区',
      pid: '320100'
    }, {
      value: '320116',
      label: '六合区',
      pid: '320100'
    }, {
      value: '320117',
      label: '溧水区',
      pid: '320100'
    }, {
      value: '320118',
      label: '高淳区',
      pid: '320100'
    }]
  }, {
    value: '320200',
    label: '无锡市',
    pid: '320000',
    children: [{
      value: '320202',
      label: '崇安区',
      pid: '320200'
    }, {
      value: '320203',
      label: '南长区',
      pid: '320200'
    }, {
      value: '320204',
      label: '北塘区',
      pid: '320200'
    }, {
      value: '320205',
      label: '锡山区',
      pid: '320200'
    }, {
      value: '320206',
      label: '惠山区',
      pid: '320200'
    }, {
      value: '320211',
      label: '滨湖区',
      pid: '320200'
    }, {
      value: '320281',
      label: '江阴市',
      pid: '320200'
    }, {
      value: '320282',
      label: '宜兴市',
      pid: '320200'
    }]
  }, {
    value: '320300',
    label: '徐州市',
    pid: '320000',
    children: [{
      value: '320302',
      label: '鼓楼区',
      pid: '320300'
    }, {
      value: '320303',
      label: '云龙区',
      pid: '320300'
    }, {
      value: '320305',
      label: '贾汪区',
      pid: '320300'
    }, {
      value: '320311',
      label: '泉山区',
      pid: '320300'
    }, {
      value: '320312',
      label: '铜山区',
      pid: '320300'
    }, {
      value: '320321',
      label: '丰县',
      pid: '320300'
    }, {
      value: '320322',
      label: '沛县',
      pid: '320300'
    }, {
      value: '320324',
      label: '睢宁县',
      pid: '320300'
    }, {
      value: '320381',
      label: '新沂市',
      pid: '320300'
    }, {
      value: '320382',
      label: '邳州市',
      pid: '320300'
    }]
  }, {
    value: '320400',
    label: '常州市',
    pid: '320000',
    children: [{
      value: '320402',
      label: '天宁区',
      pid: '320400'
    }, {
      value: '320404',
      label: '钟楼区',
      pid: '320400'
    }, {
      value: '320405',
      label: '戚墅堰区',
      pid: '320400'
    }, {
      value: '320411',
      label: '新北区',
      pid: '320400'
    }, {
      value: '320412',
      label: '武进区',
      pid: '320400'
    }, {
      value: '320481',
      label: '溧阳市',
      pid: '320400'
    }, {
      value: '320482',
      label: '金坛市',
      pid: '320400'
    }]
  }, {
    value: '320500',
    label: '苏州市',
    pid: '320000',
    children: [{
      value: '320505',
      label: '虎丘区',
      pid: '320500'
    }, {
      value: '320506',
      label: '吴中区',
      pid: '320500'
    }, {
      value: '320507',
      label: '相城区',
      pid: '320500'
    }, {
      value: '320508',
      label: '姑苏区',
      pid: '320500'
    }, {
      value: '320509',
      label: '吴江区',
      pid: '320500'
    }, {
      value: '320581',
      label: '常熟市',
      pid: '320500'
    }, {
      value: '320582',
      label: '张家港市',
      pid: '320500'
    }, {
      value: '320583',
      label: '昆山市',
      pid: '320500'
    }, {
      value: '320585',
      label: '太仓市',
      pid: '320500'
    }]
  }, {
    value: '320600',
    label: '南通市',
    pid: '320000',
    children: [{
      value: '320602',
      label: '崇川区',
      pid: '320600'
    }, {
      value: '320611',
      label: '港闸区',
      pid: '320600'
    }, {
      value: '320612',
      label: '通州区',
      pid: '320600'
    }, {
      value: '320621',
      label: '海安县',
      pid: '320600'
    }, {
      value: '320623',
      label: '如东县',
      pid: '320600'
    }, {
      value: '320681',
      label: '启东市',
      pid: '320600'
    }, {
      value: '320682',
      label: '如皋市',
      pid: '320600'
    }, {
      value: '320684',
      label: '海门市',
      pid: '320600'
    }]
  }, {
    value: '320700',
    label: '连云港市',
    pid: '320000',
    children: [{
      value: '320703',
      label: '连云区',
      pid: '320700'
    }, {
      value: '320706',
      label: '海州区',
      pid: '320700'
    }, {
      value: '320707',
      label: '赣榆区',
      pid: '320700'
    }, {
      value: '320722',
      label: '东海县',
      pid: '320700'
    }, {
      value: '320723',
      label: '灌云县',
      pid: '320700'
    }, {
      value: '320724',
      label: '灌南县',
      pid: '320700'
    }]
  }, {
    value: '320800',
    label: '淮安市',
    pid: '320000',
    children: [{
      value: '320802',
      label: '清河区',
      pid: '320800'
    }, {
      value: '320803',
      label: '淮安区',
      pid: '320800'
    }, {
      value: '320804',
      label: '淮阴区',
      pid: '320800'
    }, {
      value: '320811',
      label: '清浦区',
      pid: '320800'
    }, {
      value: '320826',
      label: '涟水县',
      pid: '320800'
    }, {
      value: '320829',
      label: '洪泽县',
      pid: '320800'
    }, {
      value: '320830',
      label: '盱眙县',
      pid: '320800'
    }, {
      value: '320831',
      label: '金湖县',
      pid: '320800'
    }]
  }, {
    value: '320900',
    label: '盐城市',
    pid: '320000',
    children: [{
      value: '320902',
      label: '亭湖区',
      pid: '320900'
    }, {
      value: '320903',
      label: '盐都区',
      pid: '320900'
    }, {
      value: '320921',
      label: '响水县',
      pid: '320900'
    }, {
      value: '320922',
      label: '滨海县',
      pid: '320900'
    }, {
      value: '320923',
      label: '阜宁县',
      pid: '320900'
    }, {
      value: '320924',
      label: '射阳县',
      pid: '320900'
    }, {
      value: '320925',
      label: '建湖县',
      pid: '320900'
    }, {
      value: '320981',
      label: '东台市',
      pid: '320900'
    }, {
      value: '320982',
      label: '大丰市',
      pid: '320900'
    }]
  }, {
    value: '321000',
    label: '扬州市',
    pid: '320000',
    children: [{
      value: '321002',
      label: '广陵区',
      pid: '321000'
    }, {
      value: '321003',
      label: '邗江区',
      pid: '321000'
    }, {
      value: '321012',
      label: '江都区',
      pid: '321000'
    }, {
      value: '321023',
      label: '宝应县',
      pid: '321000'
    }, {
      value: '321081',
      label: '仪征市',
      pid: '321000'
    }, {
      value: '321084',
      label: '高邮市',
      pid: '321000'
    }]
  }, {
    value: '321100',
    label: '镇江市',
    pid: '320000',
    children: [{
      value: '321102',
      label: '京口区',
      pid: '321100'
    }, {
      value: '321111',
      label: '润州区',
      pid: '321100'
    }, {
      value: '321112',
      label: '丹徒区',
      pid: '321100'
    }, {
      value: '321181',
      label: '丹阳市',
      pid: '321100'
    }, {
      value: '321182',
      label: '扬中市',
      pid: '321100'
    }, {
      value: '321183',
      label: '句容市',
      pid: '321100'
    }]
  }, {
    value: '321200',
    label: '泰州市',
    pid: '320000',
    children: [{
      value: '321202',
      label: '海陵区',
      pid: '321200'
    }, {
      value: '321203',
      label: '高港区',
      pid: '321200'
    }, {
      value: '321204',
      label: '姜堰区',
      pid: '321200'
    }, {
      value: '321281',
      label: '兴化市',
      pid: '321200'
    }, {
      value: '321282',
      label: '靖江市',
      pid: '321200'
    }, {
      value: '321283',
      label: '泰兴市',
      pid: '321200'
    }]
  }, {
    value: '321300',
    label: '宿迁市',
    pid: '320000',
    children: [{
      value: '321302',
      label: '宿城区',
      pid: '321300'
    }, {
      value: '321311',
      label: '宿豫区',
      pid: '321300'
    }, {
      value: '321322',
      label: '沭阳县',
      pid: '321300'
    }, {
      value: '321323',
      label: '泗阳县',
      pid: '321300'
    }, {
      value: '321324',
      label: '泗洪县',
      pid: '321300'
    }]
  }]
}, {
  value: '330000',
  label: '浙江省',
  pid: '100000',
  children: [{
    value: '330100',
    label: '杭州市',
    pid: '330000',
    children: [{
      value: '330102',
      label: '上城区',
      pid: '330100'
    }, {
      value: '330103',
      label: '下城区',
      pid: '330100'
    }, {
      value: '330104',
      label: '江干区',
      pid: '330100'
    }, {
      value: '330105',
      label: '拱墅区',
      pid: '330100'
    }, {
      value: '330106',
      label: '西湖区',
      pid: '330100'
    }, {
      value: '330108',
      label: '滨江区',
      pid: '330100'
    }, {
      value: '330109',
      label: '萧山区',
      pid: '330100'
    }, {
      value: '330110',
      label: '余杭区',
      pid: '330100'
    }, {
      value: '330122',
      label: '桐庐县',
      pid: '330100'
    }, {
      value: '330127',
      label: '淳安县',
      pid: '330100'
    }, {
      value: '330182',
      label: '建德市',
      pid: '330100'
    }, {
      value: '330183',
      label: '富阳区',
      pid: '330100'
    }, {
      value: '330185',
      label: '临安市',
      pid: '330100'
    }]
  }, {
    value: '330200',
    label: '宁波市',
    pid: '330000',
    children: [{
      value: '330203',
      label: '海曙区',
      pid: '330200'
    }, {
      value: '330204',
      label: '江东区',
      pid: '330200'
    }, {
      value: '330205',
      label: '江北区',
      pid: '330200'
    }, {
      value: '330206',
      label: '北仑区',
      pid: '330200'
    }, {
      value: '330211',
      label: '镇海区',
      pid: '330200'
    }, {
      value: '330212',
      label: '鄞州区',
      pid: '330200'
    }, {
      value: '330225',
      label: '象山县',
      pid: '330200'
    }, {
      value: '330226',
      label: '宁海县',
      pid: '330200'
    }, {
      value: '330281',
      label: '余姚市',
      pid: '330200'
    }, {
      value: '330282',
      label: '慈溪市',
      pid: '330200'
    }, {
      value: '330283',
      label: '奉化市',
      pid: '330200'
    }]
  }, {
    value: '330300',
    label: '温州市',
    pid: '330000',
    children: [{
      value: '330302',
      label: '鹿城区',
      pid: '330300'
    }, {
      value: '330303',
      label: '龙湾区',
      pid: '330300'
    }, {
      value: '330304',
      label: '瓯海区',
      pid: '330300'
    }, {
      value: '330322',
      label: '洞头县',
      pid: '330300'
    }, {
      value: '330324',
      label: '永嘉县',
      pid: '330300'
    }, {
      value: '330326',
      label: '平阳县',
      pid: '330300'
    }, {
      value: '330327',
      label: '苍南县',
      pid: '330300'
    }, {
      value: '330328',
      label: '文成县',
      pid: '330300'
    }, {
      value: '330329',
      label: '泰顺县',
      pid: '330300'
    }, {
      value: '330381',
      label: '瑞安市',
      pid: '330300'
    }, {
      value: '330382',
      label: '乐清市',
      pid: '330300'
    }]
  }, {
    value: '330400',
    label: '嘉兴市',
    pid: '330000',
    children: [{
      value: '330402',
      label: '南湖区',
      pid: '330400'
    }, {
      value: '330411',
      label: '秀洲区',
      pid: '330400'
    }, {
      value: '330421',
      label: '嘉善县',
      pid: '330400'
    }, {
      value: '330424',
      label: '海盐县',
      pid: '330400'
    }, {
      value: '330481',
      label: '海宁市',
      pid: '330400'
    }, {
      value: '330482',
      label: '平湖市',
      pid: '330400'
    }, {
      value: '330483',
      label: '桐乡市',
      pid: '330400'
    }]
  }, {
    value: '330500',
    label: '湖州市',
    pid: '330000',
    children: [{
      value: '330502',
      label: '吴兴区',
      pid: '330500'
    }, {
      value: '330503',
      label: '南浔区',
      pid: '330500'
    }, {
      value: '330521',
      label: '德清县',
      pid: '330500'
    }, {
      value: '330522',
      label: '长兴县',
      pid: '330500'
    }, {
      value: '330523',
      label: '安吉县',
      pid: '330500'
    }]
  }, {
    value: '330600',
    label: '绍兴市',
    pid: '330000',
    children: [{
      value: '330602',
      label: '越城区',
      pid: '330600'
    }, {
      value: '330603',
      label: '柯桥区',
      pid: '330600'
    }, {
      value: '330604',
      label: '上虞区',
      pid: '330600'
    }, {
      value: '330624',
      label: '新昌县',
      pid: '330600'
    }, {
      value: '330681',
      label: '诸暨市',
      pid: '330600'
    }, {
      value: '330683',
      label: '嵊州市',
      pid: '330600'
    }]
  }, {
    value: '330700',
    label: '金华市',
    pid: '330000',
    children: [{
      value: '330702',
      label: '婺城区',
      pid: '330700'
    }, {
      value: '330703',
      label: '金东区',
      pid: '330700'
    }, {
      value: '330723',
      label: '武义县',
      pid: '330700'
    }, {
      value: '330726',
      label: '浦江县',
      pid: '330700'
    }, {
      value: '330727',
      label: '磐安县',
      pid: '330700'
    }, {
      value: '330781',
      label: '兰溪市',
      pid: '330700'
    }, {
      value: '330782',
      label: '义乌市',
      pid: '330700'
    }, {
      value: '330783',
      label: '东阳市',
      pid: '330700'
    }, {
      value: '330784',
      label: '永康市',
      pid: '330700'
    }]
  }, {
    value: '330800',
    label: '衢州市',
    pid: '330000',
    children: [{
      value: '330802',
      label: '柯城区',
      pid: '330800'
    }, {
      value: '330803',
      label: '衢江区',
      pid: '330800'
    }, {
      value: '330822',
      label: '常山县',
      pid: '330800'
    }, {
      value: '330824',
      label: '开化县',
      pid: '330800'
    }, {
      value: '330825',
      label: '龙游县',
      pid: '330800'
    }, {
      value: '330881',
      label: '江山市',
      pid: '330800'
    }]
  }, {
    value: '330900',
    label: '舟山市',
    pid: '330000',
    children: [{
      value: '330902',
      label: '定海区',
      pid: '330900'
    }, {
      value: '330903',
      label: '普陀区',
      pid: '330900'
    }, {
      value: '330921',
      label: '岱山县',
      pid: '330900'
    }, {
      value: '330922',
      label: '嵊泗县',
      pid: '330900'
    }]
  }, {
    value: '331000',
    label: '台州市',
    pid: '330000',
    children: [{
      value: '331002',
      label: '椒江区',
      pid: '331000'
    }, {
      value: '331003',
      label: '黄岩区',
      pid: '331000'
    }, {
      value: '331004',
      label: '路桥区',
      pid: '331000'
    }, {
      value: '331021',
      label: '玉环县',
      pid: '331000'
    }, {
      value: '331022',
      label: '三门县',
      pid: '331000'
    }, {
      value: '331023',
      label: '天台县',
      pid: '331000'
    }, {
      value: '331024',
      label: '仙居县',
      pid: '331000'
    }, {
      value: '331081',
      label: '温岭市',
      pid: '331000'
    }, {
      value: '331082',
      label: '临海市',
      pid: '331000'
    }]
  }, {
    value: '331100',
    label: '丽水市',
    pid: '330000',
    children: [{
      value: '331102',
      label: '莲都区',
      pid: '331100'
    }, {
      value: '331121',
      label: '青田县',
      pid: '331100'
    }, {
      value: '331122',
      label: '缙云县',
      pid: '331100'
    }, {
      value: '331123',
      label: '遂昌县',
      pid: '331100'
    }, {
      value: '331124',
      label: '松阳县',
      pid: '331100'
    }, {
      value: '331125',
      label: '云和县',
      pid: '331100'
    }, {
      value: '331126',
      label: '庆元县',
      pid: '331100'
    }, {
      value: '331127',
      label: '景宁畲族自治县',
      pid: '331100'
    }, {
      value: '331181',
      label: '龙泉市',
      pid: '331100'
    }]
  }, {
    value: '331200',
    label: '舟山群岛新区',
    pid: '330000',
    children: [{
      value: '331201',
      label: '金塘岛',
      pid: '331200'
    }, {
      value: '331202',
      label: '六横岛',
      pid: '331200'
    }, {
      value: '331203',
      label: '衢山岛',
      pid: '331200'
    }, {
      value: '331204',
      label: '舟山本岛西北部',
      pid: '331200'
    }, {
      value: '331205',
      label: '岱山岛西南部',
      pid: '331200'
    }, {
      value: '331206',
      label: '泗礁岛',
      pid: '331200'
    }, {
      value: '331207',
      label: '朱家尖岛',
      pid: '331200'
    }, {
      value: '331208',
      label: '洋山岛',
      pid: '331200'
    }, {
      value: '331209',
      label: '长涂岛',
      pid: '331200'
    }, {
      value: '331210',
      label: '虾峙岛',
      pid: '331200'
    }]
  }]
}, {
  value: '340000',
  label: '安徽省',
  pid: '100000',
  children: [{
    value: '340100',
    label: '合肥市',
    pid: '340000',
    children: [{
      value: '340102',
      label: '瑶海区',
      pid: '340100'
    }, {
      value: '340103',
      label: '庐阳区',
      pid: '340100'
    }, {
      value: '340104',
      label: '蜀山区',
      pid: '340100'
    }, {
      value: '340111',
      label: '包河区',
      pid: '340100'
    }, {
      value: '340121',
      label: '长丰县',
      pid: '340100'
    }, {
      value: '340122',
      label: '肥东县',
      pid: '340100'
    }, {
      value: '340123',
      label: '肥西县',
      pid: '340100'
    }, {
      value: '340124',
      label: '庐江县',
      pid: '340100'
    }, {
      value: '340181',
      label: '巢湖市',
      pid: '340100'
    }]
  }, {
    value: '340200',
    label: '芜湖市',
    pid: '340000',
    children: [{
      value: '340202',
      label: '镜湖区',
      pid: '340200'
    }, {
      value: '340203',
      label: '弋江区',
      pid: '340200'
    }, {
      value: '340207',
      label: '鸠江区',
      pid: '340200'
    }, {
      value: '340208',
      label: '三山区',
      pid: '340200'
    }, {
      value: '340221',
      label: '芜湖县',
      pid: '340200'
    }, {
      value: '340222',
      label: '繁昌县',
      pid: '340200'
    }, {
      value: '340223',
      label: '南陵县',
      pid: '340200'
    }, {
      value: '340225',
      label: '无为县',
      pid: '340200'
    }]
  }, {
    value: '340300',
    label: '蚌埠市',
    pid: '340000',
    children: [{
      value: '340302',
      label: '龙子湖区',
      pid: '340300'
    }, {
      value: '340303',
      label: '蚌山区',
      pid: '340300'
    }, {
      value: '340304',
      label: '禹会区',
      pid: '340300'
    }, {
      value: '340311',
      label: '淮上区',
      pid: '340300'
    }, {
      value: '340321',
      label: '怀远县',
      pid: '340300'
    }, {
      value: '340322',
      label: '五河县',
      pid: '340300'
    }, {
      value: '340323',
      label: '固镇县',
      pid: '340300'
    }]
  }, {
    value: '340400',
    label: '淮南市',
    pid: '340000',
    children: [{
      value: '340402',
      label: '大通区',
      pid: '340400'
    }, {
      value: '340403',
      label: '田家庵区',
      pid: '340400'
    }, {
      value: '340404',
      label: '谢家集区',
      pid: '340400'
    }, {
      value: '340405',
      label: '八公山区',
      pid: '340400'
    }, {
      value: '340406',
      label: '潘集区',
      pid: '340400'
    }, {
      value: '340421',
      label: '凤台县',
      pid: '340400'
    }]
  }, {
    value: '340500',
    label: '马鞍山市',
    pid: '340000',
    children: [{
      value: '340503',
      label: '花山区',
      pid: '340500'
    }, {
      value: '340504',
      label: '雨山区',
      pid: '340500'
    }, {
      value: '340506',
      label: '博望区',
      pid: '340500'
    }, {
      value: '340521',
      label: '当涂县',
      pid: '340500'
    }, {
      value: '340522',
      label: '含山县',
      pid: '340500'
    }, {
      value: '340523',
      label: '和县',
      pid: '340500'
    }]
  }, {
    value: '340600',
    label: '淮北市',
    pid: '340000',
    children: [{
      value: '340602',
      label: '杜集区',
      pid: '340600'
    }, {
      value: '340603',
      label: '相山区',
      pid: '340600'
    }, {
      value: '340604',
      label: '烈山区',
      pid: '340600'
    }, {
      value: '340621',
      label: '濉溪县',
      pid: '340600'
    }]
  }, {
    value: '340700',
    label: '铜陵市',
    pid: '340000',
    children: [{
      value: '340702',
      label: '铜官山区',
      pid: '340700'
    }, {
      value: '340703',
      label: '狮子山区',
      pid: '340700'
    }, {
      value: '340711',
      label: '郊区',
      pid: '340700'
    }, {
      value: '340721',
      label: '铜陵县',
      pid: '340700'
    }]
  }, {
    value: '340800',
    label: '安庆市',
    pid: '340000',
    children: [{
      value: '340802',
      label: '迎江区',
      pid: '340800'
    }, {
      value: '340803',
      label: '大观区',
      pid: '340800'
    }, {
      value: '340811',
      label: '宜秀区',
      pid: '340800'
    }, {
      value: '340822',
      label: '怀宁县',
      pid: '340800'
    }, {
      value: '340823',
      label: '枞阳县',
      pid: '340800'
    }, {
      value: '340824',
      label: '潜山县',
      pid: '340800'
    }, {
      value: '340825',
      label: '太湖县',
      pid: '340800'
    }, {
      value: '340826',
      label: '宿松县',
      pid: '340800'
    }, {
      value: '340827',
      label: '望江县',
      pid: '340800'
    }, {
      value: '340828',
      label: '岳西县',
      pid: '340800'
    }, {
      value: '340881',
      label: '桐城市',
      pid: '340800'
    }]
  }, {
    value: '341000',
    label: '黄山市',
    pid: '340000',
    children: [{
      value: '341002',
      label: '屯溪区',
      pid: '341000'
    }, {
      value: '341003',
      label: '黄山区',
      pid: '341000'
    }, {
      value: '341004',
      label: '徽州区',
      pid: '341000'
    }, {
      value: '341021',
      label: '歙县',
      pid: '341000'
    }, {
      value: '341022',
      label: '休宁县',
      pid: '341000'
    }, {
      value: '341023',
      label: '黟县',
      pid: '341000'
    }, {
      value: '341024',
      label: '祁门县',
      pid: '341000'
    }]
  }, {
    value: '341100',
    label: '滁州市',
    pid: '340000',
    children: [{
      value: '341102',
      label: '琅琊区',
      pid: '341100'
    }, {
      value: '341103',
      label: '南谯区',
      pid: '341100'
    }, {
      value: '341122',
      label: '来安县',
      pid: '341100'
    }, {
      value: '341124',
      label: '全椒县',
      pid: '341100'
    }, {
      value: '341125',
      label: '定远县',
      pid: '341100'
    }, {
      value: '341126',
      label: '凤阳县',
      pid: '341100'
    }, {
      value: '341181',
      label: '天长市',
      pid: '341100'
    }, {
      value: '341182',
      label: '明光市',
      pid: '341100'
    }]
  }, {
    value: '341200',
    label: '阜阳市',
    pid: '340000',
    children: [{
      value: '341202',
      label: '颍州区',
      pid: '341200'
    }, {
      value: '341203',
      label: '颍东区',
      pid: '341200'
    }, {
      value: '341204',
      label: '颍泉区',
      pid: '341200'
    }, {
      value: '341221',
      label: '临泉县',
      pid: '341200'
    }, {
      value: '341222',
      label: '太和县',
      pid: '341200'
    }, {
      value: '341225',
      label: '阜南县',
      pid: '341200'
    }, {
      value: '341226',
      label: '颍上县',
      pid: '341200'
    }, {
      value: '341282',
      label: '界首市',
      pid: '341200'
    }]
  }, {
    value: '341300',
    label: '宿州市',
    pid: '340000',
    children: [{
      value: '341302',
      label: '埇桥区',
      pid: '341300'
    }, {
      value: '341321',
      label: '砀山县',
      pid: '341300'
    }, {
      value: '341322',
      label: '萧县',
      pid: '341300'
    }, {
      value: '341323',
      label: '灵璧县',
      pid: '341300'
    }, {
      value: '341324',
      label: '泗县',
      pid: '341300'
    }]
  }, {
    value: '341500',
    label: '六安市',
    pid: '340000',
    children: [{
      value: '341502',
      label: '金安区',
      pid: '341500'
    }, {
      value: '341503',
      label: '裕安区',
      pid: '341500'
    }, {
      value: '341521',
      label: '寿县',
      pid: '341500'
    }, {
      value: '341522',
      label: '霍邱县',
      pid: '341500'
    }, {
      value: '341523',
      label: '舒城县',
      pid: '341500'
    }, {
      value: '341524',
      label: '金寨县',
      pid: '341500'
    }, {
      value: '341525',
      label: '霍山县',
      pid: '341500'
    }]
  }, {
    value: '341600',
    label: '亳州市',
    pid: '340000',
    children: [{
      value: '341602',
      label: '谯城区',
      pid: '341600'
    }, {
      value: '341621',
      label: '涡阳县',
      pid: '341600'
    }, {
      value: '341622',
      label: '蒙城县',
      pid: '341600'
    }, {
      value: '341623',
      label: '利辛县',
      pid: '341600'
    }]
  }, {
    value: '341700',
    label: '池州市',
    pid: '340000',
    children: [{
      value: '341702',
      label: '贵池区',
      pid: '341700'
    }, {
      value: '341721',
      label: '东至县',
      pid: '341700'
    }, {
      value: '341722',
      label: '石台县',
      pid: '341700'
    }, {
      value: '341723',
      label: '青阳县',
      pid: '341700'
    }]
  }, {
    value: '341800',
    label: '宣城市',
    pid: '340000',
    children: [{
      value: '341802',
      label: '宣州区',
      pid: '341800'
    }, {
      value: '341821',
      label: '郎溪县',
      pid: '341800'
    }, {
      value: '341822',
      label: '广德县',
      pid: '341800'
    }, {
      value: '341823',
      label: '泾县',
      pid: '341800'
    }, {
      value: '341824',
      label: '绩溪县',
      pid: '341800'
    }, {
      value: '341825',
      label: '旌德县',
      pid: '341800'
    }, {
      value: '341881',
      label: '宁国市',
      pid: '341800'
    }]
  }]
}, {
  value: '350000',
  label: '福建省',
  pid: '100000',
  children: [{
    value: '350100',
    label: '福州市',
    pid: '350000',
    children: [{
      value: '350102',
      label: '鼓楼区',
      pid: '350100'
    }, {
      value: '350103',
      label: '台江区',
      pid: '350100'
    }, {
      value: '350104',
      label: '仓山区',
      pid: '350100'
    }, {
      value: '350105',
      label: '马尾区',
      pid: '350100'
    }, {
      value: '350111',
      label: '晋安区',
      pid: '350100'
    }, {
      value: '350121',
      label: '闽侯县',
      pid: '350100'
    }, {
      value: '350122',
      label: '连江县',
      pid: '350100'
    }, {
      value: '350123',
      label: '罗源县',
      pid: '350100'
    }, {
      value: '350124',
      label: '闽清县',
      pid: '350100'
    }, {
      value: '350125',
      label: '永泰县',
      pid: '350100'
    }, {
      value: '350128',
      label: '平潭县',
      pid: '350100'
    }, {
      value: '350181',
      label: '福清市',
      pid: '350100'
    }, {
      value: '350182',
      label: '长乐市',
      pid: '350100'
    }]
  }, {
    value: '350200',
    label: '厦门市',
    pid: '350000',
    children: [{
      value: '350203',
      label: '思明区',
      pid: '350200'
    }, {
      value: '350205',
      label: '海沧区',
      pid: '350200'
    }, {
      value: '350206',
      label: '湖里区',
      pid: '350200'
    }, {
      value: '350211',
      label: '集美区',
      pid: '350200'
    }, {
      value: '350212',
      label: '同安区',
      pid: '350200'
    }, {
      value: '350213',
      label: '翔安区',
      pid: '350200'
    }]
  }, {
    value: '350300',
    label: '莆田市',
    pid: '350000',
    children: [{
      value: '350302',
      label: '城厢区',
      pid: '350300'
    }, {
      value: '350303',
      label: '涵江区',
      pid: '350300'
    }, {
      value: '350304',
      label: '荔城区',
      pid: '350300'
    }, {
      value: '350305',
      label: '秀屿区',
      pid: '350300'
    }, {
      value: '350322',
      label: '仙游县',
      pid: '350300'
    }]
  }, {
    value: '350400',
    label: '三明市',
    pid: '350000',
    children: [{
      value: '350402',
      label: '梅列区',
      pid: '350400'
    }, {
      value: '350403',
      label: '三元区',
      pid: '350400'
    }, {
      value: '350421',
      label: '明溪县',
      pid: '350400'
    }, {
      value: '350423',
      label: '清流县',
      pid: '350400'
    }, {
      value: '350424',
      label: '宁化县',
      pid: '350400'
    }, {
      value: '350425',
      label: '大田县',
      pid: '350400'
    }, {
      value: '350426',
      label: '尤溪县',
      pid: '350400'
    }, {
      value: '350427',
      label: '沙县',
      pid: '350400'
    }, {
      value: '350428',
      label: '将乐县',
      pid: '350400'
    }, {
      value: '350429',
      label: '泰宁县',
      pid: '350400'
    }, {
      value: '350430',
      label: '建宁县',
      pid: '350400'
    }, {
      value: '350481',
      label: '永安市',
      pid: '350400'
    }]
  }, {
    value: '350500',
    label: '泉州市',
    pid: '350000',
    children: [{
      value: '350502',
      label: '鲤城区',
      pid: '350500'
    }, {
      value: '350503',
      label: '丰泽区',
      pid: '350500'
    }, {
      value: '350504',
      label: '洛江区',
      pid: '350500'
    }, {
      value: '350505',
      label: '泉港区',
      pid: '350500'
    }, {
      value: '350521',
      label: '惠安县',
      pid: '350500'
    }, {
      value: '350524',
      label: '安溪县',
      pid: '350500'
    }, {
      value: '350525',
      label: '永春县',
      pid: '350500'
    }, {
      value: '350526',
      label: '德化县',
      pid: '350500'
    }, {
      value: '350527',
      label: '金门县',
      pid: '350500'
    }, {
      value: '350581',
      label: '石狮市',
      pid: '350500'
    }, {
      value: '350582',
      label: '晋江市',
      pid: '350500'
    }, {
      value: '350583',
      label: '南安市',
      pid: '350500'
    }]
  }, {
    value: '350600',
    label: '漳州市',
    pid: '350000',
    children: [{
      value: '350602',
      label: '芗城区',
      pid: '350600'
    }, {
      value: '350603',
      label: '龙文区',
      pid: '350600'
    }, {
      value: '350622',
      label: '云霄县',
      pid: '350600'
    }, {
      value: '350623',
      label: '漳浦县',
      pid: '350600'
    }, {
      value: '350624',
      label: '诏安县',
      pid: '350600'
    }, {
      value: '350625',
      label: '长泰县',
      pid: '350600'
    }, {
      value: '350626',
      label: '东山县',
      pid: '350600'
    }, {
      value: '350627',
      label: '南靖县',
      pid: '350600'
    }, {
      value: '350628',
      label: '平和县',
      pid: '350600'
    }, {
      value: '350629',
      label: '华安县',
      pid: '350600'
    }, {
      value: '350681',
      label: '龙海市',
      pid: '350600'
    }]
  }, {
    value: '350700',
    label: '南平市',
    pid: '350000',
    children: [{
      value: '350702',
      label: '延平区',
      pid: '350700'
    }, {
      value: '350703',
      label: '建阳区',
      pid: '350700'
    }, {
      value: '350721',
      label: '顺昌县',
      pid: '350700'
    }, {
      value: '350722',
      label: '浦城县',
      pid: '350700'
    }, {
      value: '350723',
      label: '光泽县',
      pid: '350700'
    }, {
      value: '350724',
      label: '松溪县',
      pid: '350700'
    }, {
      value: '350725',
      label: '政和县',
      pid: '350700'
    }, {
      value: '350781',
      label: '邵武市',
      pid: '350700'
    }, {
      value: '350782',
      label: '武夷山市',
      pid: '350700'
    }, {
      value: '350783',
      label: '建瓯市',
      pid: '350700'
    }]
  }, {
    value: '350800',
    label: '龙岩市',
    pid: '350000',
    children: [{
      value: '350802',
      label: '新罗区',
      pid: '350800'
    }, {
      value: '350821',
      label: '长汀县',
      pid: '350800'
    }, {
      value: '350822',
      label: '永定区',
      pid: '350800'
    }, {
      value: '350823',
      label: '上杭县',
      pid: '350800'
    }, {
      value: '350824',
      label: '武平县',
      pid: '350800'
    }, {
      value: '350825',
      label: '连城县',
      pid: '350800'
    }, {
      value: '350881',
      label: '漳平市',
      pid: '350800'
    }]
  }, {
    value: '350900',
    label: '宁德市',
    pid: '350000',
    children: [{
      value: '350902',
      label: '蕉城区',
      pid: '350900'
    }, {
      value: '350921',
      label: '霞浦县',
      pid: '350900'
    }, {
      value: '350922',
      label: '古田县',
      pid: '350900'
    }, {
      value: '350923',
      label: '屏南县',
      pid: '350900'
    }, {
      value: '350924',
      label: '寿宁县',
      pid: '350900'
    }, {
      value: '350925',
      label: '周宁县',
      pid: '350900'
    }, {
      value: '350926',
      label: '柘荣县',
      pid: '350900'
    }, {
      value: '350981',
      label: '福安市',
      pid: '350900'
    }, {
      value: '350982',
      label: '福鼎市',
      pid: '350900'
    }]
  }]
}, {
  value: '360000',
  label: '江西省',
  pid: '100000',
  children: [{
    value: '360100',
    label: '南昌市',
    pid: '360000',
    children: [{
      value: '360102',
      label: '东湖区',
      pid: '360100'
    }, {
      value: '360103',
      label: '西湖区',
      pid: '360100'
    }, {
      value: '360104',
      label: '青云谱区',
      pid: '360100'
    }, {
      value: '360105',
      label: '湾里区',
      pid: '360100'
    }, {
      value: '360111',
      label: '青山湖区',
      pid: '360100'
    }, {
      value: '360121',
      label: '南昌县',
      pid: '360100'
    }, {
      value: '360122',
      label: '新建县',
      pid: '360100'
    }, {
      value: '360123',
      label: '安义县',
      pid: '360100'
    }, {
      value: '360124',
      label: '进贤县',
      pid: '360100'
    }]
  }, {
    value: '360200',
    label: '景德镇市',
    pid: '360000',
    children: [{
      value: '360202',
      label: '昌江区',
      pid: '360200'
    }, {
      value: '360203',
      label: '珠山区',
      pid: '360200'
    }, {
      value: '360222',
      label: '浮梁县',
      pid: '360200'
    }, {
      value: '360281',
      label: '乐平市',
      pid: '360200'
    }]
  }, {
    value: '360300',
    label: '萍乡市',
    pid: '360000',
    children: [{
      value: '360302',
      label: '安源区',
      pid: '360300'
    }, {
      value: '360313',
      label: '湘东区',
      pid: '360300'
    }, {
      value: '360321',
      label: '莲花县',
      pid: '360300'
    }, {
      value: '360322',
      label: '上栗县',
      pid: '360300'
    }, {
      value: '360323',
      label: '芦溪县',
      pid: '360300'
    }]
  }, {
    value: '360400',
    label: '九江市',
    pid: '360000',
    children: [{
      value: '360402',
      label: '庐山区',
      pid: '360400'
    }, {
      value: '360403',
      label: '浔阳区',
      pid: '360400'
    }, {
      value: '360421',
      label: '九江县',
      pid: '360400'
    }, {
      value: '360423',
      label: '武宁县',
      pid: '360400'
    }, {
      value: '360424',
      label: '修水县',
      pid: '360400'
    }, {
      value: '360425',
      label: '永修县',
      pid: '360400'
    }, {
      value: '360426',
      label: '德安县',
      pid: '360400'
    }, {
      value: '360427',
      label: '星子县',
      pid: '360400'
    }, {
      value: '360428',
      label: '都昌县',
      pid: '360400'
    }, {
      value: '360429',
      label: '湖口县',
      pid: '360400'
    }, {
      value: '360430',
      label: '彭泽县',
      pid: '360400'
    }, {
      value: '360481',
      label: '瑞昌市',
      pid: '360400'
    }, {
      value: '360482',
      label: '共青城市',
      pid: '360400'
    }]
  }, {
    value: '360500',
    label: '新余市',
    pid: '360000',
    children: [{
      value: '360502',
      label: '渝水区',
      pid: '360500'
    }, {
      value: '360521',
      label: '分宜县',
      pid: '360500'
    }]
  }, {
    value: '360600',
    label: '鹰潭市',
    pid: '360000',
    children: [{
      value: '360602',
      label: '月湖区',
      pid: '360600'
    }, {
      value: '360622',
      label: '余江县',
      pid: '360600'
    }, {
      value: '360681',
      label: '贵溪市',
      pid: '360600'
    }]
  }, {
    value: '360700',
    label: '赣州市',
    pid: '360000',
    children: [{
      value: '360702',
      label: '章贡区',
      pid: '360700'
    }, {
      value: '360703',
      label: '南康区',
      pid: '360700'
    }, {
      value: '360721',
      label: '赣县',
      pid: '360700'
    }, {
      value: '360722',
      label: '信丰县',
      pid: '360700'
    }, {
      value: '360723',
      label: '大余县',
      pid: '360700'
    }, {
      value: '360724',
      label: '上犹县',
      pid: '360700'
    }, {
      value: '360725',
      label: '崇义县',
      pid: '360700'
    }, {
      value: '360726',
      label: '安远县',
      pid: '360700'
    }, {
      value: '360727',
      label: '龙南县',
      pid: '360700'
    }, {
      value: '360728',
      label: '定南县',
      pid: '360700'
    }, {
      value: '360729',
      label: '全南县',
      pid: '360700'
    }, {
      value: '360730',
      label: '宁都县',
      pid: '360700'
    }, {
      value: '360731',
      label: '于都县',
      pid: '360700'
    }, {
      value: '360732',
      label: '兴国县',
      pid: '360700'
    }, {
      value: '360733',
      label: '会昌县',
      pid: '360700'
    }, {
      value: '360734',
      label: '寻乌县',
      pid: '360700'
    }, {
      value: '360735',
      label: '石城县',
      pid: '360700'
    }, {
      value: '360781',
      label: '瑞金市',
      pid: '360700'
    }]
  }, {
    value: '360800',
    label: '吉安市',
    pid: '360000',
    children: [{
      value: '360802',
      label: '吉州区',
      pid: '360800'
    }, {
      value: '360803',
      label: '青原区',
      pid: '360800'
    }, {
      value: '360821',
      label: '吉安县',
      pid: '360800'
    }, {
      value: '360822',
      label: '吉水县',
      pid: '360800'
    }, {
      value: '360823',
      label: '峡江县',
      pid: '360800'
    }, {
      value: '360824',
      label: '新干县',
      pid: '360800'
    }, {
      value: '360825',
      label: '永丰县',
      pid: '360800'
    }, {
      value: '360826',
      label: '泰和县',
      pid: '360800'
    }, {
      value: '360827',
      label: '遂川县',
      pid: '360800'
    }, {
      value: '360828',
      label: '万安县',
      pid: '360800'
    }, {
      value: '360829',
      label: '安福县',
      pid: '360800'
    }, {
      value: '360830',
      label: '永新县',
      pid: '360800'
    }, {
      value: '360881',
      label: '井冈山市',
      pid: '360800'
    }]
  }, {
    value: '360900',
    label: '宜春市',
    pid: '360000',
    children: [{
      value: '360902',
      label: '袁州区',
      pid: '360900'
    }, {
      value: '360921',
      label: '奉新县',
      pid: '360900'
    }, {
      value: '360922',
      label: '万载县',
      pid: '360900'
    }, {
      value: '360923',
      label: '上高县',
      pid: '360900'
    }, {
      value: '360924',
      label: '宜丰县',
      pid: '360900'
    }, {
      value: '360925',
      label: '靖安县',
      pid: '360900'
    }, {
      value: '360926',
      label: '铜鼓县',
      pid: '360900'
    }, {
      value: '360981',
      label: '丰城市',
      pid: '360900'
    }, {
      value: '360982',
      label: '樟树市',
      pid: '360900'
    }, {
      value: '360983',
      label: '高安市',
      pid: '360900'
    }]
  }, {
    value: '361000',
    label: '抚州市',
    pid: '360000',
    children: [{
      value: '361002',
      label: '临川区',
      pid: '361000'
    }, {
      value: '361021',
      label: '南城县',
      pid: '361000'
    }, {
      value: '361022',
      label: '黎川县',
      pid: '361000'
    }, {
      value: '361023',
      label: '南丰县',
      pid: '361000'
    }, {
      value: '361024',
      label: '崇仁县',
      pid: '361000'
    }, {
      value: '361025',
      label: '乐安县',
      pid: '361000'
    }, {
      value: '361026',
      label: '宜黄县',
      pid: '361000'
    }, {
      value: '361027',
      label: '金溪县',
      pid: '361000'
    }, {
      value: '361028',
      label: '资溪县',
      pid: '361000'
    }, {
      value: '361029',
      label: '东乡县',
      pid: '361000'
    }, {
      value: '361030',
      label: '广昌县',
      pid: '361000'
    }]
  }, {
    value: '361100',
    label: '上饶市',
    pid: '360000',
    children: [{
      value: '361102',
      label: '信州区',
      pid: '361100'
    }, {
      value: '361121',
      label: '上饶县',
      pid: '361100'
    }, {
      value: '361122',
      label: '广丰县',
      pid: '361100'
    }, {
      value: '361123',
      label: '玉山县',
      pid: '361100'
    }, {
      value: '361124',
      label: '铅山县',
      pid: '361100'
    }, {
      value: '361125',
      label: '横峰县',
      pid: '361100'
    }, {
      value: '361126',
      label: '弋阳县',
      pid: '361100'
    }, {
      value: '361127',
      label: '余干县',
      pid: '361100'
    }, {
      value: '361128',
      label: '鄱阳县',
      pid: '361100'
    }, {
      value: '361129',
      label: '万年县',
      pid: '361100'
    }, {
      value: '361130',
      label: '婺源县',
      pid: '361100'
    }, {
      value: '361181',
      label: '德兴市',
      pid: '361100'
    }]
  }]
}, {
  value: '370000',
  label: '山东省',
  pid: '100000',
  children: [{
    value: '370100',
    label: '济南市',
    pid: '370000',
    children: [{
      value: '370102',
      label: '历下区',
      pid: '370100'
    }, {
      value: '370103',
      label: '市中区',
      pid: '370100'
    }, {
      value: '370104',
      label: '槐荫区',
      pid: '370100'
    }, {
      value: '370105',
      label: '天桥区',
      pid: '370100'
    }, {
      value: '370112',
      label: '历城区',
      pid: '370100'
    }, {
      value: '370113',
      label: '长清区',
      pid: '370100'
    }, {
      value: '370124',
      label: '平阴县',
      pid: '370100'
    }, {
      value: '370125',
      label: '济阳县',
      pid: '370100'
    }, {
      value: '370126',
      label: '商河县',
      pid: '370100'
    }, {
      value: '370181',
      label: '章丘市',
      pid: '370100'
    }]
  }, {
    value: '370200',
    label: '青岛市',
    pid: '370000',
    children: [{
      value: '370202',
      label: '市南区',
      pid: '370200'
    }, {
      value: '370203',
      label: '市北区',
      pid: '370200'
    }, {
      value: '370211',
      label: '黄岛区',
      pid: '370200'
    }, {
      value: '370212',
      label: '崂山区',
      pid: '370200'
    }, {
      value: '370213',
      label: '李沧区',
      pid: '370200'
    }, {
      value: '370214',
      label: '城阳区',
      pid: '370200'
    }, {
      value: '370281',
      label: '胶州市',
      pid: '370200'
    }, {
      value: '370282',
      label: '即墨市',
      pid: '370200'
    }, {
      value: '370283',
      label: '平度市',
      pid: '370200'
    }, {
      value: '370285',
      label: '莱西市',
      pid: '370200'
    }, {
      value: '370286',
      label: '西海岸新区',
      pid: '370200'
    }]
  }, {
    value: '370300',
    label: '淄博市',
    pid: '370000',
    children: [{
      value: '370302',
      label: '淄川区',
      pid: '370300'
    }, {
      value: '370303',
      label: '张店区',
      pid: '370300'
    }, {
      value: '370304',
      label: '博山区',
      pid: '370300'
    }, {
      value: '370305',
      label: '临淄区',
      pid: '370300'
    }, {
      value: '370306',
      label: '周村区',
      pid: '370300'
    }, {
      value: '370321',
      label: '桓台县',
      pid: '370300'
    }, {
      value: '370322',
      label: '高青县',
      pid: '370300'
    }, {
      value: '370323',
      label: '沂源县',
      pid: '370300'
    }]
  }, {
    value: '370400',
    label: '枣庄市',
    pid: '370000',
    children: [{
      value: '370402',
      label: '市中区',
      pid: '370400'
    }, {
      value: '370403',
      label: '薛城区',
      pid: '370400'
    }, {
      value: '370404',
      label: '峄城区',
      pid: '370400'
    }, {
      value: '370405',
      label: '台儿庄区',
      pid: '370400'
    }, {
      value: '370406',
      label: '山亭区',
      pid: '370400'
    }, {
      value: '370481',
      label: '滕州市',
      pid: '370400'
    }]
  }, {
    value: '370500',
    label: '东营市',
    pid: '370000',
    children: [{
      value: '370502',
      label: '东营区',
      pid: '370500'
    }, {
      value: '370503',
      label: '河口区',
      pid: '370500'
    }, {
      value: '370521',
      label: '垦利县',
      pid: '370500'
    }, {
      value: '370522',
      label: '利津县',
      pid: '370500'
    }, {
      value: '370523',
      label: '广饶县',
      pid: '370500'
    }]
  }, {
    value: '370600',
    label: '烟台市',
    pid: '370000',
    children: [{
      value: '370602',
      label: '芝罘区',
      pid: '370600'
    }, {
      value: '370611',
      label: '福山区',
      pid: '370600'
    }, {
      value: '370612',
      label: '牟平区',
      pid: '370600'
    }, {
      value: '370613',
      label: '莱山区',
      pid: '370600'
    }, {
      value: '370634',
      label: '长岛县',
      pid: '370600'
    }, {
      value: '370681',
      label: '龙口市',
      pid: '370600'
    }, {
      value: '370682',
      label: '莱阳市',
      pid: '370600'
    }, {
      value: '370683',
      label: '莱州市',
      pid: '370600'
    }, {
      value: '370684',
      label: '蓬莱市',
      pid: '370600'
    }, {
      value: '370685',
      label: '招远市',
      pid: '370600'
    }, {
      value: '370686',
      label: '栖霞市',
      pid: '370600'
    }, {
      value: '370687',
      label: '海阳市',
      pid: '370600'
    }]
  }, {
    value: '370700',
    label: '潍坊市',
    pid: '370000',
    children: [{
      value: '370702',
      label: '潍城区',
      pid: '370700'
    }, {
      value: '370703',
      label: '寒亭区',
      pid: '370700'
    }, {
      value: '370704',
      label: '坊子区',
      pid: '370700'
    }, {
      value: '370705',
      label: '奎文区',
      pid: '370700'
    }, {
      value: '370724',
      label: '临朐县',
      pid: '370700'
    }, {
      value: '370725',
      label: '昌乐县',
      pid: '370700'
    }, {
      value: '370781',
      label: '青州市',
      pid: '370700'
    }, {
      value: '370782',
      label: '诸城市',
      pid: '370700'
    }, {
      value: '370783',
      label: '寿光市',
      pid: '370700'
    }, {
      value: '370784',
      label: '安丘市',
      pid: '370700'
    }, {
      value: '370785',
      label: '高密市',
      pid: '370700'
    }, {
      value: '370786',
      label: '昌邑市',
      pid: '370700'
    }]
  }, {
    value: '370800',
    label: '济宁市',
    pid: '370000',
    children: [{
      value: '370811',
      label: '任城区',
      pid: '370800'
    }, {
      value: '370812',
      label: '兖州区',
      pid: '370800'
    }, {
      value: '370826',
      label: '微山县',
      pid: '370800'
    }, {
      value: '370827',
      label: '鱼台县',
      pid: '370800'
    }, {
      value: '370828',
      label: '金乡县',
      pid: '370800'
    }, {
      value: '370829',
      label: '嘉祥县',
      pid: '370800'
    }, {
      value: '370830',
      label: '汶上县',
      pid: '370800'
    }, {
      value: '370831',
      label: '泗水县',
      pid: '370800'
    }, {
      value: '370832',
      label: '梁山县',
      pid: '370800'
    }, {
      value: '370881',
      label: '曲阜市',
      pid: '370800'
    }, {
      value: '370883',
      label: '邹城市',
      pid: '370800'
    }]
  }, {
    value: '370900',
    label: '泰安市',
    pid: '370000',
    children: [{
      value: '370902',
      label: '泰山区',
      pid: '370900'
    }, {
      value: '370911',
      label: '岱岳区',
      pid: '370900'
    }, {
      value: '370921',
      label: '宁阳县',
      pid: '370900'
    }, {
      value: '370923',
      label: '东平县',
      pid: '370900'
    }, {
      value: '370982',
      label: '新泰市',
      pid: '370900'
    }, {
      value: '370983',
      label: '肥城市',
      pid: '370900'
    }]
  }, {
    value: '371000',
    label: '威海市',
    pid: '370000',
    children: [{
      value: '371002',
      label: '环翠区',
      pid: '371000'
    }, {
      value: '371003',
      label: '文登区',
      pid: '371000'
    }, {
      value: '371082',
      label: '荣成市',
      pid: '371000'
    }, {
      value: '371083',
      label: '乳山市',
      pid: '371000'
    }]
  }, {
    value: '371100',
    label: '日照市',
    pid: '370000',
    children: [{
      value: '371102',
      label: '东港区',
      pid: '371100'
    }, {
      value: '371103',
      label: '岚山区',
      pid: '371100'
    }, {
      value: '371121',
      label: '五莲县',
      pid: '371100'
    }, {
      value: '371122',
      label: '莒县',
      pid: '371100'
    }]
  }, {
    value: '371200',
    label: '莱芜市',
    pid: '370000',
    children: [{
      value: '371202',
      label: '莱城区',
      pid: '371200'
    }, {
      value: '371203',
      label: '钢城区',
      pid: '371200'
    }]
  }, {
    value: '371300',
    label: '临沂市',
    pid: '370000',
    children: [{
      value: '371302',
      label: '兰山区',
      pid: '371300'
    }, {
      value: '371311',
      label: '罗庄区',
      pid: '371300'
    }, {
      value: '371312',
      label: '河东区',
      pid: '371300'
    }, {
      value: '371321',
      label: '沂南县',
      pid: '371300'
    }, {
      value: '371322',
      label: '郯城县',
      pid: '371300'
    }, {
      value: '371323',
      label: '沂水县',
      pid: '371300'
    }, {
      value: '371324',
      label: '兰陵县',
      pid: '371300'
    }, {
      value: '371325',
      label: '费县',
      pid: '371300'
    }, {
      value: '371326',
      label: '平邑县',
      pid: '371300'
    }, {
      value: '371327',
      label: '莒南县',
      pid: '371300'
    }, {
      value: '371328',
      label: '蒙阴县',
      pid: '371300'
    }, {
      value: '371329',
      label: '临沭县',
      pid: '371300'
    }]
  }, {
    value: '371400',
    label: '德州市',
    pid: '370000',
    children: [{
      value: '371402',
      label: '德城区',
      pid: '371400'
    }, {
      value: '371403',
      label: '陵城区',
      pid: '371400'
    }, {
      value: '371422',
      label: '宁津县',
      pid: '371400'
    }, {
      value: '371423',
      label: '庆云县',
      pid: '371400'
    }, {
      value: '371424',
      label: '临邑县',
      pid: '371400'
    }, {
      value: '371425',
      label: '齐河县',
      pid: '371400'
    }, {
      value: '371426',
      label: '平原县',
      pid: '371400'
    }, {
      value: '371427',
      label: '夏津县',
      pid: '371400'
    }, {
      value: '371428',
      label: '武城县',
      pid: '371400'
    }, {
      value: '371481',
      label: '乐陵市',
      pid: '371400'
    }, {
      value: '371482',
      label: '禹城市',
      pid: '371400'
    }]
  }, {
    value: '371500',
    label: '聊城市',
    pid: '370000',
    children: [{
      value: '371502',
      label: '东昌府区',
      pid: '371500'
    }, {
      value: '371521',
      label: '阳谷县',
      pid: '371500'
    }, {
      value: '371522',
      label: '莘县',
      pid: '371500'
    }, {
      value: '371523',
      label: '茌平县',
      pid: '371500'
    }, {
      value: '371524',
      label: '东阿县',
      pid: '371500'
    }, {
      value: '371525',
      label: '冠县',
      pid: '371500'
    }, {
      value: '371526',
      label: '高唐县',
      pid: '371500'
    }, {
      value: '371581',
      label: '临清市',
      pid: '371500'
    }]
  }, {
    value: '371600',
    label: '滨州市',
    pid: '370000',
    children: [{
      value: '371602',
      label: '滨城区',
      pid: '371600'
    }, {
      value: '371603',
      label: '沾化区',
      pid: '371600'
    }, {
      value: '371621',
      label: '惠民县',
      pid: '371600'
    }, {
      value: '371622',
      label: '阳信县',
      pid: '371600'
    }, {
      value: '371623',
      label: '无棣县',
      pid: '371600'
    }, {
      value: '371625',
      label: '博兴县',
      pid: '371600'
    }, {
      value: '371626',
      label: '邹平县',
      pid: '371600'
    }, {
      value: '371627',
      label: '北海新区',
      pid: '371600'
    }]
  }, {
    value: '371700',
    label: '菏泽市',
    pid: '370000',
    children: [{
      value: '371702',
      label: '牡丹区',
      pid: '371700'
    }, {
      value: '371721',
      label: '曹县',
      pid: '371700'
    }, {
      value: '371722',
      label: '单县',
      pid: '371700'
    }, {
      value: '371723',
      label: '成武县',
      pid: '371700'
    }, {
      value: '371724',
      label: '巨野县',
      pid: '371700'
    }, {
      value: '371725',
      label: '郓城县',
      pid: '371700'
    }, {
      value: '371726',
      label: '鄄城县',
      pid: '371700'
    }, {
      value: '371727',
      label: '定陶县',
      pid: '371700'
    }, {
      value: '371728',
      label: '东明县',
      pid: '371700'
    }]
  }]
}, {
  value: '410000',
  label: '河南省',
  pid: '100000',
  children: [{
    value: '410100',
    label: '郑州市',
    pid: '410000',
    children: [{
      value: '410102',
      label: '中原区',
      pid: '410100'
    }, {
      value: '410103',
      label: '二七区',
      pid: '410100'
    }, {
      value: '410104',
      label: '管城回族区',
      pid: '410100'
    }, {
      value: '410105',
      label: '金水区',
      pid: '410100'
    }, {
      value: '410106',
      label: '上街区',
      pid: '410100'
    }, {
      value: '410108',
      label: '惠济区',
      pid: '410100'
    }, {
      value: '410122',
      label: '中牟县',
      pid: '410100'
    }, {
      value: '410181',
      label: '巩义市',
      pid: '410100'
    }, {
      value: '410182',
      label: '荥阳市',
      pid: '410100'
    }, {
      value: '410183',
      label: '新密市',
      pid: '410100'
    }, {
      value: '410184',
      label: '新郑市',
      pid: '410100'
    }, {
      value: '410185',
      label: '登封市',
      pid: '410100'
    }]
  }, {
    value: '410200',
    label: '开封市',
    pid: '410000',
    children: [{
      value: '410202',
      label: '龙亭区',
      pid: '410200'
    }, {
      value: '410203',
      label: '顺河回族区',
      pid: '410200'
    }, {
      value: '410204',
      label: '鼓楼区',
      pid: '410200'
    }, {
      value: '410205',
      label: '禹王台区',
      pid: '410200'
    }, {
      value: '410212',
      label: '祥符区',
      pid: '410200'
    }, {
      value: '410221',
      label: '杞县',
      pid: '410200'
    }, {
      value: '410222',
      label: '通许县',
      pid: '410200'
    }, {
      value: '410223',
      label: '尉氏县',
      pid: '410200'
    }, {
      value: '410225',
      label: '兰考县',
      pid: '410200'
    }]
  }, {
    value: '410300',
    label: '洛阳市',
    pid: '410000',
    children: [{
      value: '410302',
      label: '老城区',
      pid: '410300'
    }, {
      value: '410303',
      label: '西工区',
      pid: '410300'
    }, {
      value: '410304',
      label: '瀍河回族区',
      pid: '410300'
    }, {
      value: '410305',
      label: '涧西区',
      pid: '410300'
    }, {
      value: '410306',
      label: '吉利区',
      pid: '410300'
    }, {
      value: '410311',
      label: '洛龙区',
      pid: '410300'
    }, {
      value: '410322',
      label: '孟津县',
      pid: '410300'
    }, {
      value: '410323',
      label: '新安县',
      pid: '410300'
    }, {
      value: '410324',
      label: '栾川县',
      pid: '410300'
    }, {
      value: '410325',
      label: '嵩县',
      pid: '410300'
    }, {
      value: '410326',
      label: '汝阳县',
      pid: '410300'
    }, {
      value: '410327',
      label: '宜阳县',
      pid: '410300'
    }, {
      value: '410328',
      label: '洛宁县',
      pid: '410300'
    }, {
      value: '410329',
      label: '伊川县',
      pid: '410300'
    }, {
      value: '410381',
      label: '偃师市',
      pid: '410300'
    }]
  }, {
    value: '410400',
    label: '平顶山市',
    pid: '410000',
    children: [{
      value: '410402',
      label: '新华区',
      pid: '410400'
    }, {
      value: '410403',
      label: '卫东区',
      pid: '410400'
    }, {
      value: '410404',
      label: '石龙区',
      pid: '410400'
    }, {
      value: '410411',
      label: '湛河区',
      pid: '410400'
    }, {
      value: '410421',
      label: '宝丰县',
      pid: '410400'
    }, {
      value: '410422',
      label: '叶县',
      pid: '410400'
    }, {
      value: '410423',
      label: '鲁山县',
      pid: '410400'
    }, {
      value: '410425',
      label: '郏县',
      pid: '410400'
    }, {
      value: '410481',
      label: '舞钢市',
      pid: '410400'
    }, {
      value: '410482',
      label: '汝州市',
      pid: '410400'
    }]
  }, {
    value: '410500',
    label: '安阳市',
    pid: '410000',
    children: [{
      value: '410502',
      label: '文峰区',
      pid: '410500'
    }, {
      value: '410503',
      label: '北关区',
      pid: '410500'
    }, {
      value: '410505',
      label: '殷都区',
      pid: '410500'
    }, {
      value: '410506',
      label: '龙安区',
      pid: '410500'
    }, {
      value: '410522',
      label: '安阳县',
      pid: '410500'
    }, {
      value: '410523',
      label: '汤阴县',
      pid: '410500'
    }, {
      value: '410526',
      label: '滑县',
      pid: '410500'
    }, {
      value: '410527',
      label: '内黄县',
      pid: '410500'
    }, {
      value: '410581',
      label: '林州市',
      pid: '410500'
    }]
  }, {
    value: '410600',
    label: '鹤壁市',
    pid: '410000',
    children: [{
      value: '410602',
      label: '鹤山区',
      pid: '410600'
    }, {
      value: '410603',
      label: '山城区',
      pid: '410600'
    }, {
      value: '410611',
      label: '淇滨区',
      pid: '410600'
    }, {
      value: '410621',
      label: '浚县',
      pid: '410600'
    }, {
      value: '410622',
      label: '淇县',
      pid: '410600'
    }]
  }, {
    value: '410700',
    label: '新乡市',
    pid: '410000',
    children: [{
      value: '410702',
      label: '红旗区',
      pid: '410700'
    }, {
      value: '410703',
      label: '卫滨区',
      pid: '410700'
    }, {
      value: '410704',
      label: '凤泉区',
      pid: '410700'
    }, {
      value: '410711',
      label: '牧野区',
      pid: '410700'
    }, {
      value: '410721',
      label: '新乡县',
      pid: '410700'
    }, {
      value: '410724',
      label: '获嘉县',
      pid: '410700'
    }, {
      value: '410725',
      label: '原阳县',
      pid: '410700'
    }, {
      value: '410726',
      label: '延津县',
      pid: '410700'
    }, {
      value: '410727',
      label: '封丘县',
      pid: '410700'
    }, {
      value: '410728',
      label: '长垣县',
      pid: '410700'
    }, {
      value: '410781',
      label: '卫辉市',
      pid: '410700'
    }, {
      value: '410782',
      label: '辉县市',
      pid: '410700'
    }]
  }, {
    value: '410800',
    label: '焦作市',
    pid: '410000',
    children: [{
      value: '410802',
      label: '解放区',
      pid: '410800'
    }, {
      value: '410803',
      label: '中站区',
      pid: '410800'
    }, {
      value: '410804',
      label: '马村区',
      pid: '410800'
    }, {
      value: '410811',
      label: '山阳区',
      pid: '410800'
    }, {
      value: '410821',
      label: '修武县',
      pid: '410800'
    }, {
      value: '410822',
      label: '博爱县',
      pid: '410800'
    }, {
      value: '410823',
      label: '武陟县',
      pid: '410800'
    }, {
      value: '410825',
      label: '温县',
      pid: '410800'
    }, {
      value: '410882',
      label: '沁阳市',
      pid: '410800'
    }, {
      value: '410883',
      label: '孟州市',
      pid: '410800'
    }]
  }, {
    value: '410900',
    label: '濮阳市',
    pid: '410000',
    children: [{
      value: '410902',
      label: '华龙区',
      pid: '410900'
    }, {
      value: '410922',
      label: '清丰县',
      pid: '410900'
    }, {
      value: '410923',
      label: '南乐县',
      pid: '410900'
    }, {
      value: '410926',
      label: '范县',
      pid: '410900'
    }, {
      value: '410927',
      label: '台前县',
      pid: '410900'
    }, {
      value: '410928',
      label: '濮阳县',
      pid: '410900'
    }]
  }, {
    value: '411000',
    label: '许昌市',
    pid: '410000',
    children: [{
      value: '411002',
      label: '魏都区',
      pid: '411000'
    }, {
      value: '411023',
      label: '许昌县',
      pid: '411000'
    }, {
      value: '411024',
      label: '鄢陵县',
      pid: '411000'
    }, {
      value: '411025',
      label: '襄城县',
      pid: '411000'
    }, {
      value: '411081',
      label: '禹州市',
      pid: '411000'
    }, {
      value: '411082',
      label: '长葛市',
      pid: '411000'
    }]
  }, {
    value: '411100',
    label: '漯河市',
    pid: '410000',
    children: [{
      value: '411102',
      label: '源汇区',
      pid: '411100'
    }, {
      value: '411103',
      label: '郾城区',
      pid: '411100'
    }, {
      value: '411104',
      label: '召陵区',
      pid: '411100'
    }, {
      value: '411121',
      label: '舞阳县',
      pid: '411100'
    }, {
      value: '411122',
      label: '临颍县',
      pid: '411100'
    }]
  }, {
    value: '411200',
    label: '三门峡市',
    pid: '410000',
    children: [{
      value: '411202',
      label: '湖滨区',
      pid: '411200'
    }, {
      value: '411221',
      label: '渑池县',
      pid: '411200'
    }, {
      value: '411222',
      label: '陕县',
      pid: '411200'
    }, {
      value: '411224',
      label: '卢氏县',
      pid: '411200'
    }, {
      value: '411281',
      label: '义马市',
      pid: '411200'
    }, {
      value: '411282',
      label: '灵宝市',
      pid: '411200'
    }]
  }, {
    value: '411300',
    label: '南阳市',
    pid: '410000',
    children: [{
      value: '411302',
      label: '宛城区',
      pid: '411300'
    }, {
      value: '411303',
      label: '卧龙区',
      pid: '411300'
    }, {
      value: '411321',
      label: '南召县',
      pid: '411300'
    }, {
      value: '411322',
      label: '方城县',
      pid: '411300'
    }, {
      value: '411323',
      label: '西峡县',
      pid: '411300'
    }, {
      value: '411324',
      label: '镇平县',
      pid: '411300'
    }, {
      value: '411325',
      label: '内乡县',
      pid: '411300'
    }, {
      value: '411326',
      label: '淅川县',
      pid: '411300'
    }, {
      value: '411327',
      label: '社旗县',
      pid: '411300'
    }, {
      value: '411328',
      label: '唐河县',
      pid: '411300'
    }, {
      value: '411329',
      label: '新野县',
      pid: '411300'
    }, {
      value: '411330',
      label: '桐柏县',
      pid: '411300'
    }, {
      value: '411381',
      label: '邓州市',
      pid: '411300'
    }]
  }, {
    value: '411400',
    label: '商丘市',
    pid: '410000',
    children: [{
      value: '411402',
      label: '梁园区',
      pid: '411400'
    }, {
      value: '411403',
      label: '睢阳区',
      pid: '411400'
    }, {
      value: '411421',
      label: '民权县',
      pid: '411400'
    }, {
      value: '411422',
      label: '睢县',
      pid: '411400'
    }, {
      value: '411423',
      label: '宁陵县',
      pid: '411400'
    }, {
      value: '411424',
      label: '柘城县',
      pid: '411400'
    }, {
      value: '411425',
      label: '虞城县',
      pid: '411400'
    }, {
      value: '411426',
      label: '夏邑县',
      pid: '411400'
    }, {
      value: '411481',
      label: '永城市',
      pid: '411400'
    }]
  }, {
    value: '411500',
    label: '信阳市',
    pid: '410000',
    children: [{
      value: '411502',
      label: '浉河区',
      pid: '411500'
    }, {
      value: '411503',
      label: '平桥区',
      pid: '411500'
    }, {
      value: '411521',
      label: '罗山县',
      pid: '411500'
    }, {
      value: '411522',
      label: '光山县',
      pid: '411500'
    }, {
      value: '411523',
      label: '新县',
      pid: '411500'
    }, {
      value: '411524',
      label: '商城县',
      pid: '411500'
    }, {
      value: '411525',
      label: '固始县',
      pid: '411500'
    }, {
      value: '411526',
      label: '潢川县',
      pid: '411500'
    }, {
      value: '411527',
      label: '淮滨县',
      pid: '411500'
    }, {
      value: '411528',
      label: '息县',
      pid: '411500'
    }]
  }, {
    value: '411600',
    label: '周口市',
    pid: '410000',
    children: [{
      value: '411602',
      label: '川汇区',
      pid: '411600'
    }, {
      value: '411621',
      label: '扶沟县',
      pid: '411600'
    }, {
      value: '411622',
      label: '西华县',
      pid: '411600'
    }, {
      value: '411623',
      label: '商水县',
      pid: '411600'
    }, {
      value: '411624',
      label: '沈丘县',
      pid: '411600'
    }, {
      value: '411625',
      label: '郸城县',
      pid: '411600'
    }, {
      value: '411626',
      label: '淮阳县',
      pid: '411600'
    }, {
      value: '411627',
      label: '太康县',
      pid: '411600'
    }, {
      value: '411628',
      label: '鹿邑县',
      pid: '411600'
    }, {
      value: '411681',
      label: '项城市',
      pid: '411600'
    }]
  }, {
    value: '411700',
    label: '驻马店市',
    pid: '410000',
    children: [{
      value: '411702',
      label: '驿城区',
      pid: '411700'
    }, {
      value: '411721',
      label: '西平县',
      pid: '411700'
    }, {
      value: '411722',
      label: '上蔡县',
      pid: '411700'
    }, {
      value: '411723',
      label: '平舆县',
      pid: '411700'
    }, {
      value: '411724',
      label: '正阳县',
      pid: '411700'
    }, {
      value: '411725',
      label: '确山县',
      pid: '411700'
    }, {
      value: '411726',
      label: '泌阳县',
      pid: '411700'
    }, {
      value: '411727',
      label: '汝南县',
      pid: '411700'
    }, {
      value: '411728',
      label: '遂平县',
      pid: '411700'
    }, {
      value: '411729',
      label: '新蔡县',
      pid: '411700'
    }]
  }, {
    value: '419000',
    label: '直辖县级',
    pid: '410000',
    children: [{
      value: '419001',
      label: '济源市',
      pid: '419000'
    }]
  }]
}, {
  value: '420000',
  label: '湖北省',
  pid: '100000',
  children: [{
    value: '420100',
    label: '武汉市',
    pid: '420000',
    children: [{
      value: '420102',
      label: '江岸区',
      pid: '420100'
    }, {
      value: '420103',
      label: '江汉区',
      pid: '420100'
    }, {
      value: '420104',
      label: '硚口区',
      pid: '420100'
    }, {
      value: '420105',
      label: '汉阳区',
      pid: '420100'
    }, {
      value: '420106',
      label: '武昌区',
      pid: '420100'
    }, {
      value: '420107',
      label: '青山区',
      pid: '420100'
    }, {
      value: '420111',
      label: '洪山区',
      pid: '420100'
    }, {
      value: '420112',
      label: '东西湖区',
      pid: '420100'
    }, {
      value: '420113',
      label: '汉南区',
      pid: '420100'
    }, {
      value: '420114',
      label: '蔡甸区',
      pid: '420100'
    }, {
      value: '420115',
      label: '江夏区',
      pid: '420100'
    }, {
      value: '420116',
      label: '黄陂区',
      pid: '420100'
    }, {
      value: '420117',
      label: '新洲区',
      pid: '420100'
    }]
  }, {
    value: '420200',
    label: '黄石市',
    pid: '420000',
    children: [{
      value: '420202',
      label: '黄石港区',
      pid: '420200'
    }, {
      value: '420203',
      label: '西塞山区',
      pid: '420200'
    }, {
      value: '420204',
      label: '下陆区',
      pid: '420200'
    }, {
      value: '420205',
      label: '铁山区',
      pid: '420200'
    }, {
      value: '420222',
      label: '阳新县',
      pid: '420200'
    }, {
      value: '420281',
      label: '大冶市',
      pid: '420200'
    }]
  }, {
    value: '420300',
    label: '十堰市',
    pid: '420000',
    children: [{
      value: '420302',
      label: '茅箭区',
      pid: '420300'
    }, {
      value: '420303',
      label: '张湾区',
      pid: '420300'
    }, {
      value: '420304',
      label: '郧阳区',
      pid: '420300'
    }, {
      value: '420322',
      label: '郧西县',
      pid: '420300'
    }, {
      value: '420323',
      label: '竹山县',
      pid: '420300'
    }, {
      value: '420324',
      label: '竹溪县',
      pid: '420300'
    }, {
      value: '420325',
      label: '房县',
      pid: '420300'
    }, {
      value: '420381',
      label: '丹江口市',
      pid: '420300'
    }]
  }, {
    value: '420500',
    label: '宜昌市',
    pid: '420000',
    children: [{
      value: '420502',
      label: '西陵区',
      pid: '420500'
    }, {
      value: '420503',
      label: '伍家岗区',
      pid: '420500'
    }, {
      value: '420504',
      label: '点军区',
      pid: '420500'
    }, {
      value: '420505',
      label: '猇亭区',
      pid: '420500'
    }, {
      value: '420506',
      label: '夷陵区',
      pid: '420500'
    }, {
      value: '420525',
      label: '远安县',
      pid: '420500'
    }, {
      value: '420526',
      label: '兴山县',
      pid: '420500'
    }, {
      value: '420527',
      label: '秭归县',
      pid: '420500'
    }, {
      value: '420528',
      label: '长阳土家族自治县',
      pid: '420500'
    }, {
      value: '420529',
      label: '五峰土家族自治县',
      pid: '420500'
    }, {
      value: '420581',
      label: '宜都市',
      pid: '420500'
    }, {
      value: '420582',
      label: '当阳市',
      pid: '420500'
    }, {
      value: '420583',
      label: '枝江市',
      pid: '420500'
    }]
  }, {
    value: '420600',
    label: '襄阳市',
    pid: '420000',
    children: [{
      value: '420602',
      label: '襄城区',
      pid: '420600'
    }, {
      value: '420606',
      label: '樊城区',
      pid: '420600'
    }, {
      value: '420607',
      label: '襄州区',
      pid: '420600'
    }, {
      value: '420624',
      label: '南漳县',
      pid: '420600'
    }, {
      value: '420625',
      label: '谷城县',
      pid: '420600'
    }, {
      value: '420626',
      label: '保康县',
      pid: '420600'
    }, {
      value: '420682',
      label: '老河口市',
      pid: '420600'
    }, {
      value: '420683',
      label: '枣阳市',
      pid: '420600'
    }, {
      value: '420684',
      label: '宜城市',
      pid: '420600'
    }]
  }, {
    value: '420700',
    label: '鄂州市',
    pid: '420000',
    children: [{
      value: '420702',
      label: '梁子湖区',
      pid: '420700'
    }, {
      value: '420703',
      label: '华容区',
      pid: '420700'
    }, {
      value: '420704',
      label: '鄂城区',
      pid: '420700'
    }]
  }, {
    value: '420800',
    label: '荆门市',
    pid: '420000',
    children: [{
      value: '420802',
      label: '东宝区',
      pid: '420800'
    }, {
      value: '420804',
      label: '掇刀区',
      pid: '420800'
    }, {
      value: '420821',
      label: '京山县',
      pid: '420800'
    }, {
      value: '420822',
      label: '沙洋县',
      pid: '420800'
    }, {
      value: '420881',
      label: '钟祥市',
      pid: '420800'
    }]
  }, {
    value: '420900',
    label: '孝感市',
    pid: '420000',
    children: [{
      value: '420902',
      label: '孝南区',
      pid: '420900'
    }, {
      value: '420921',
      label: '孝昌县',
      pid: '420900'
    }, {
      value: '420922',
      label: '大悟县',
      pid: '420900'
    }, {
      value: '420923',
      label: '云梦县',
      pid: '420900'
    }, {
      value: '420981',
      label: '应城市',
      pid: '420900'
    }, {
      value: '420982',
      label: '安陆市',
      pid: '420900'
    }, {
      value: '420984',
      label: '汉川市',
      pid: '420900'
    }]
  }, {
    value: '421000',
    label: '荆州市',
    pid: '420000',
    children: [{
      value: '421002',
      label: '沙市区',
      pid: '421000'
    }, {
      value: '421003',
      label: '荆州区',
      pid: '421000'
    }, {
      value: '421022',
      label: '公安县',
      pid: '421000'
    }, {
      value: '421023',
      label: '监利县',
      pid: '421000'
    }, {
      value: '421024',
      label: '江陵县',
      pid: '421000'
    }, {
      value: '421081',
      label: '石首市',
      pid: '421000'
    }, {
      value: '421083',
      label: '洪湖市',
      pid: '421000'
    }, {
      value: '421087',
      label: '松滋市',
      pid: '421000'
    }]
  }, {
    value: '421100',
    label: '黄冈市',
    pid: '420000',
    children: [{
      value: '421102',
      label: '黄州区',
      pid: '421100'
    }, {
      value: '421121',
      label: '团风县',
      pid: '421100'
    }, {
      value: '421122',
      label: '红安县',
      pid: '421100'
    }, {
      value: '421123',
      label: '罗田县',
      pid: '421100'
    }, {
      value: '421124',
      label: '英山县',
      pid: '421100'
    }, {
      value: '421125',
      label: '浠水县',
      pid: '421100'
    }, {
      value: '421126',
      label: '蕲春县',
      pid: '421100'
    }, {
      value: '421127',
      label: '黄梅县',
      pid: '421100'
    }, {
      value: '421181',
      label: '麻城市',
      pid: '421100'
    }, {
      value: '421182',
      label: '武穴市',
      pid: '421100'
    }]
  }, {
    value: '421200',
    label: '咸宁市',
    pid: '420000',
    children: [{
      value: '421202',
      label: '咸安区',
      pid: '421200'
    }, {
      value: '421221',
      label: '嘉鱼县',
      pid: '421200'
    }, {
      value: '421222',
      label: '通城县',
      pid: '421200'
    }, {
      value: '421223',
      label: '崇阳县',
      pid: '421200'
    }, {
      value: '421224',
      label: '通山县',
      pid: '421200'
    }, {
      value: '421281',
      label: '赤壁市',
      pid: '421200'
    }]
  }, {
    value: '421300',
    label: '随州市',
    pid: '420000',
    children: [{
      value: '421303',
      label: '曾都区',
      pid: '421300'
    }, {
      value: '421321',
      label: '随县',
      pid: '421300'
    }, {
      value: '421381',
      label: '广水市',
      pid: '421300'
    }]
  }, {
    value: '422800',
    label: '恩施土家族苗族自治州',
    pid: '420000',
    children: [{
      value: '422801',
      label: '恩施市',
      pid: '422800'
    }, {
      value: '422802',
      label: '利川市',
      pid: '422800'
    }, {
      value: '422822',
      label: '建始县',
      pid: '422800'
    }, {
      value: '422823',
      label: '巴东县',
      pid: '422800'
    }, {
      value: '422825',
      label: '宣恩县',
      pid: '422800'
    }, {
      value: '422826',
      label: '咸丰县',
      pid: '422800'
    }, {
      value: '422827',
      label: '来凤县',
      pid: '422800'
    }, {
      value: '422828',
      label: '鹤峰县',
      pid: '422800'
    }]
  }, {
    value: '429000',
    label: '直辖县级',
    pid: '420000',
    children: [{
      value: '429004',
      label: '仙桃市',
      pid: '429000'
    }, {
      value: '429005',
      label: '潜江市',
      pid: '429000'
    }, {
      value: '429006',
      label: '天门市',
      pid: '429000'
    }, {
      value: '429021',
      label: '神农架林区',
      pid: '429000'
    }]
  }]
}, {
  value: '430000',
  label: '湖南省',
  pid: '100000',
  children: [{
    value: '430100',
    label: '长沙市',
    pid: '430000',
    children: [{
      value: '430102',
      label: '芙蓉区',
      pid: '430100'
    }, {
      value: '430103',
      label: '天心区',
      pid: '430100'
    }, {
      value: '430104',
      label: '岳麓区',
      pid: '430100'
    }, {
      value: '430105',
      label: '开福区',
      pid: '430100'
    }, {
      value: '430111',
      label: '雨花区',
      pid: '430100'
    }, {
      value: '430112',
      label: '望城区',
      pid: '430100'
    }, {
      value: '430121',
      label: '长沙县',
      pid: '430100'
    }, {
      value: '430124',
      label: '宁乡县',
      pid: '430100'
    }, {
      value: '430181',
      label: '浏阳市',
      pid: '430100'
    }]
  }, {
    value: '430200',
    label: '株洲市',
    pid: '430000',
    children: [{
      value: '430202',
      label: '荷塘区',
      pid: '430200'
    }, {
      value: '430203',
      label: '芦淞区',
      pid: '430200'
    }, {
      value: '430204',
      label: '石峰区',
      pid: '430200'
    }, {
      value: '430211',
      label: '天元区',
      pid: '430200'
    }, {
      value: '430221',
      label: '株洲县',
      pid: '430200'
    }, {
      value: '430223',
      label: '攸县',
      pid: '430200'
    }, {
      value: '430224',
      label: '茶陵县',
      pid: '430200'
    }, {
      value: '430225',
      label: '炎陵县',
      pid: '430200'
    }, {
      value: '430281',
      label: '醴陵市',
      pid: '430200'
    }]
  }, {
    value: '430300',
    label: '湘潭市',
    pid: '430000',
    children: [{
      value: '430302',
      label: '雨湖区',
      pid: '430300'
    }, {
      value: '430304',
      label: '岳塘区',
      pid: '430300'
    }, {
      value: '430321',
      label: '湘潭县',
      pid: '430300'
    }, {
      value: '430381',
      label: '湘乡市',
      pid: '430300'
    }, {
      value: '430382',
      label: '韶山市',
      pid: '430300'
    }]
  }, {
    value: '430400',
    label: '衡阳市',
    pid: '430000',
    children: [{
      value: '430405',
      label: '珠晖区',
      pid: '430400'
    }, {
      value: '430406',
      label: '雁峰区',
      pid: '430400'
    }, {
      value: '430407',
      label: '石鼓区',
      pid: '430400'
    }, {
      value: '430408',
      label: '蒸湘区',
      pid: '430400'
    }, {
      value: '430412',
      label: '南岳区',
      pid: '430400'
    }, {
      value: '430421',
      label: '衡阳县',
      pid: '430400'
    }, {
      value: '430422',
      label: '衡南县',
      pid: '430400'
    }, {
      value: '430423',
      label: '衡山县',
      pid: '430400'
    }, {
      value: '430424',
      label: '衡东县',
      pid: '430400'
    }, {
      value: '430426',
      label: '祁东县',
      pid: '430400'
    }, {
      value: '430481',
      label: '耒阳市',
      pid: '430400'
    }, {
      value: '430482',
      label: '常宁市',
      pid: '430400'
    }]
  }, {
    value: '430500',
    label: '邵阳市',
    pid: '430000',
    children: [{
      value: '430502',
      label: '双清区',
      pid: '430500'
    }, {
      value: '430503',
      label: '大祥区',
      pid: '430500'
    }, {
      value: '430511',
      label: '北塔区',
      pid: '430500'
    }, {
      value: '430521',
      label: '邵东县',
      pid: '430500'
    }, {
      value: '430522',
      label: '新邵县',
      pid: '430500'
    }, {
      value: '430523',
      label: '邵阳县',
      pid: '430500'
    }, {
      value: '430524',
      label: '隆回县',
      pid: '430500'
    }, {
      value: '430525',
      label: '洞口县',
      pid: '430500'
    }, {
      value: '430527',
      label: '绥宁县',
      pid: '430500'
    }, {
      value: '430528',
      label: '新宁县',
      pid: '430500'
    }, {
      value: '430529',
      label: '城步苗族自治县',
      pid: '430500'
    }, {
      value: '430581',
      label: '武冈市',
      pid: '430500'
    }]
  }, {
    value: '430600',
    label: '岳阳市',
    pid: '430000',
    children: [{
      value: '430602',
      label: '岳阳楼区',
      pid: '430600'
    }, {
      value: '430603',
      label: '云溪区',
      pid: '430600'
    }, {
      value: '430611',
      label: '君山区',
      pid: '430600'
    }, {
      value: '430621',
      label: '岳阳县',
      pid: '430600'
    }, {
      value: '430623',
      label: '华容县',
      pid: '430600'
    }, {
      value: '430624',
      label: '湘阴县',
      pid: '430600'
    }, {
      value: '430626',
      label: '平江县',
      pid: '430600'
    }, {
      value: '430681',
      label: '汨罗市',
      pid: '430600'
    }, {
      value: '430682',
      label: '临湘市',
      pid: '430600'
    }]
  }, {
    value: '430700',
    label: '常德市',
    pid: '430000',
    children: [{
      value: '430702',
      label: '武陵区',
      pid: '430700'
    }, {
      value: '430703',
      label: '鼎城区',
      pid: '430700'
    }, {
      value: '430721',
      label: '安乡县',
      pid: '430700'
    }, {
      value: '430722',
      label: '汉寿县',
      pid: '430700'
    }, {
      value: '430723',
      label: '澧县',
      pid: '430700'
    }, {
      value: '430724',
      label: '临澧县',
      pid: '430700'
    }, {
      value: '430725',
      label: '桃源县',
      pid: '430700'
    }, {
      value: '430726',
      label: '石门县',
      pid: '430700'
    }, {
      value: '430781',
      label: '津市市',
      pid: '430700'
    }]
  }, {
    value: '430800',
    label: '张家界市',
    pid: '430000',
    children: [{
      value: '430802',
      label: '永定区',
      pid: '430800'
    }, {
      value: '430811',
      label: '武陵源区',
      pid: '430800'
    }, {
      value: '430821',
      label: '慈利县',
      pid: '430800'
    }, {
      value: '430822',
      label: '桑植县',
      pid: '430800'
    }]
  }, {
    value: '430900',
    label: '益阳市',
    pid: '430000',
    children: [{
      value: '430902',
      label: '资阳区',
      pid: '430900'
    }, {
      value: '430903',
      label: '赫山区',
      pid: '430900'
    }, {
      value: '430921',
      label: '南县',
      pid: '430900'
    }, {
      value: '430922',
      label: '桃江县',
      pid: '430900'
    }, {
      value: '430923',
      label: '安化县',
      pid: '430900'
    }, {
      value: '430981',
      label: '沅江市',
      pid: '430900'
    }]
  }, {
    value: '431000',
    label: '郴州市',
    pid: '430000',
    children: [{
      value: '431002',
      label: '北湖区',
      pid: '431000'
    }, {
      value: '431003',
      label: '苏仙区',
      pid: '431000'
    }, {
      value: '431021',
      label: '桂阳县',
      pid: '431000'
    }, {
      value: '431022',
      label: '宜章县',
      pid: '431000'
    }, {
      value: '431023',
      label: '永兴县',
      pid: '431000'
    }, {
      value: '431024',
      label: '嘉禾县',
      pid: '431000'
    }, {
      value: '431025',
      label: '临武县',
      pid: '431000'
    }, {
      value: '431026',
      label: '汝城县',
      pid: '431000'
    }, {
      value: '431027',
      label: '桂东县',
      pid: '431000'
    }, {
      value: '431028',
      label: '安仁县',
      pid: '431000'
    }, {
      value: '431081',
      label: '资兴市',
      pid: '431000'
    }]
  }, {
    value: '431100',
    label: '永州市',
    pid: '430000',
    children: [{
      value: '431102',
      label: '零陵区',
      pid: '431100'
    }, {
      value: '431103',
      label: '冷水滩区',
      pid: '431100'
    }, {
      value: '431121',
      label: '祁阳县',
      pid: '431100'
    }, {
      value: '431122',
      label: '东安县',
      pid: '431100'
    }, {
      value: '431123',
      label: '双牌县',
      pid: '431100'
    }, {
      value: '431124',
      label: '道县',
      pid: '431100'
    }, {
      value: '431125',
      label: '江永县',
      pid: '431100'
    }, {
      value: '431126',
      label: '宁远县',
      pid: '431100'
    }, {
      value: '431127',
      label: '蓝山县',
      pid: '431100'
    }, {
      value: '431128',
      label: '新田县',
      pid: '431100'
    }, {
      value: '431129',
      label: '江华瑶族自治县',
      pid: '431100'
    }]
  }, {
    value: '431200',
    label: '怀化市',
    pid: '430000',
    children: [{
      value: '431202',
      label: '鹤城区',
      pid: '431200'
    }, {
      value: '431221',
      label: '中方县',
      pid: '431200'
    }, {
      value: '431222',
      label: '沅陵县',
      pid: '431200'
    }, {
      value: '431223',
      label: '辰溪县',
      pid: '431200'
    }, {
      value: '431224',
      label: '溆浦县',
      pid: '431200'
    }, {
      value: '431225',
      label: '会同县',
      pid: '431200'
    }, {
      value: '431226',
      label: '麻阳苗族自治县',
      pid: '431200'
    }, {
      value: '431227',
      label: '新晃侗族自治县',
      pid: '431200'
    }, {
      value: '431228',
      label: '芷江侗族自治县',
      pid: '431200'
    }, {
      value: '431229',
      label: '靖州苗族侗族自治县',
      pid: '431200'
    }, {
      value: '431230',
      label: '通道侗族自治县',
      pid: '431200'
    }, {
      value: '431281',
      label: '洪江市',
      pid: '431200'
    }]
  }, {
    value: '431300',
    label: '娄底市',
    pid: '430000',
    children: [{
      value: '431302',
      label: '娄星区',
      pid: '431300'
    }, {
      value: '431321',
      label: '双峰县',
      pid: '431300'
    }, {
      value: '431322',
      label: '新化县',
      pid: '431300'
    }, {
      value: '431381',
      label: '冷水江市',
      pid: '431300'
    }, {
      value: '431382',
      label: '涟源市',
      pid: '431300'
    }]
  }, {
    value: '433100',
    label: '湘西土家族苗族自治州',
    pid: '430000',
    children: [{
      value: '433101',
      label: '吉首市',
      pid: '433100'
    }, {
      value: '433122',
      label: '泸溪县',
      pid: '433100'
    }, {
      value: '433123',
      label: '凤凰县',
      pid: '433100'
    }, {
      value: '433124',
      label: '花垣县',
      pid: '433100'
    }, {
      value: '433125',
      label: '保靖县',
      pid: '433100'
    }, {
      value: '433126',
      label: '古丈县',
      pid: '433100'
    }, {
      value: '433127',
      label: '永顺县',
      pid: '433100'
    }, {
      value: '433130',
      label: '龙山县',
      pid: '433100'
    }]
  }]
}, {
  value: '440000',
  label: '广东省',
  pid: '100000',
  children: [{
    value: '440100',
    label: '广州市',
    pid: '440000',
    children: [{
      value: '440103',
      label: '荔湾区',
      pid: '440100'
    }, {
      value: '440104',
      label: '越秀区',
      pid: '440100'
    }, {
      value: '440105',
      label: '海珠区',
      pid: '440100'
    }, {
      value: '440106',
      label: '天河区',
      pid: '440100'
    }, {
      value: '440111',
      label: '白云区',
      pid: '440100'
    }, {
      value: '440112',
      label: '黄埔区',
      pid: '440100'
    }, {
      value: '440113',
      label: '番禺区',
      pid: '440100'
    }, {
      value: '440114',
      label: '花都区',
      pid: '440100'
    }, {
      value: '440115',
      label: '南沙区',
      pid: '440100'
    }, {
      value: '440117',
      label: '从化区',
      pid: '440100'
    }, {
      value: '440118',
      label: '增城区',
      pid: '440100'
    }]
  }, {
    value: '440200',
    label: '韶关市',
    pid: '440000',
    children: [{
      value: '440203',
      label: '武江区',
      pid: '440200'
    }, {
      value: '440204',
      label: '浈江区',
      pid: '440200'
    }, {
      value: '440205',
      label: '曲江区',
      pid: '440200'
    }, {
      value: '440222',
      label: '始兴县',
      pid: '440200'
    }, {
      value: '440224',
      label: '仁化县',
      pid: '440200'
    }, {
      value: '440229',
      label: '翁源县',
      pid: '440200'
    }, {
      value: '440232',
      label: '乳源瑶族自治县',
      pid: '440200'
    }, {
      value: '440233',
      label: '新丰县',
      pid: '440200'
    }, {
      value: '440281',
      label: '乐昌市',
      pid: '440200'
    }, {
      value: '440282',
      label: '南雄市',
      pid: '440200'
    }]
  }, {
    value: '440300',
    label: '深圳市',
    pid: '440000',
    children: [{
      value: '440303',
      label: '罗湖区',
      pid: '440300'
    }, {
      value: '440304',
      label: '福田区',
      pid: '440300'
    }, {
      value: '440305',
      label: '南山区',
      pid: '440300'
    }, {
      value: '440306',
      label: '宝安区',
      pid: '440300'
    }, {
      value: '440307',
      label: '龙岗区',
      pid: '440300'
    }, {
      value: '440308',
      label: '盐田区',
      pid: '440300'
    }, {
      value: '440309',
      label: '光明新区',
      pid: '440300'
    }, {
      value: '440310',
      label: '坪山新区',
      pid: '440300'
    }, {
      value: '440311',
      label: '大鹏新区',
      pid: '440300'
    }, {
      value: '440312',
      label: '龙华新区',
      pid: '440300'
    }]
  }, {
    value: '440400',
    label: '珠海市',
    pid: '440000',
    children: [{
      value: '440402',
      label: '香洲区',
      pid: '440400'
    }, {
      value: '440403',
      label: '斗门区',
      pid: '440400'
    }, {
      value: '440404',
      label: '金湾区',
      pid: '440400'
    }]
  }, {
    value: '440500',
    label: '汕头市',
    pid: '440000',
    children: [{
      value: '440507',
      label: '龙湖区',
      pid: '440500'
    }, {
      value: '440511',
      label: '金平区',
      pid: '440500'
    }, {
      value: '440512',
      label: '濠江区',
      pid: '440500'
    }, {
      value: '440513',
      label: '潮阳区',
      pid: '440500'
    }, {
      value: '440514',
      label: '潮南区',
      pid: '440500'
    }, {
      value: '440515',
      label: '澄海区',
      pid: '440500'
    }, {
      value: '440523',
      label: '南澳县',
      pid: '440500'
    }]
  }, {
    value: '440600',
    label: '佛山市',
    pid: '440000',
    children: [{
      value: '440604',
      label: '禅城区',
      pid: '440600'
    }, {
      value: '440605',
      label: '南海区',
      pid: '440600'
    }, {
      value: '440606',
      label: '顺德区',
      pid: '440600'
    }, {
      value: '440607',
      label: '三水区',
      pid: '440600'
    }, {
      value: '440608',
      label: '高明区',
      pid: '440600'
    }]
  }, {
    value: '440700',
    label: '江门市',
    pid: '440000',
    children: [{
      value: '440703',
      label: '蓬江区',
      pid: '440700'
    }, {
      value: '440704',
      label: '江海区',
      pid: '440700'
    }, {
      value: '440705',
      label: '新会区',
      pid: '440700'
    }, {
      value: '440781',
      label: '台山市',
      pid: '440700'
    }, {
      value: '440783',
      label: '开平市',
      pid: '440700'
    }, {
      value: '440784',
      label: '鹤山市',
      pid: '440700'
    }, {
      value: '440785',
      label: '恩平市',
      pid: '440700'
    }]
  }, {
    value: '440800',
    label: '湛江市',
    pid: '440000',
    children: [{
      value: '440802',
      label: '赤坎区',
      pid: '440800'
    }, {
      value: '440803',
      label: '霞山区',
      pid: '440800'
    }, {
      value: '440804',
      label: '坡头区',
      pid: '440800'
    }, {
      value: '440811',
      label: '麻章区',
      pid: '440800'
    }, {
      value: '440823',
      label: '遂溪县',
      pid: '440800'
    }, {
      value: '440825',
      label: '徐闻县',
      pid: '440800'
    }, {
      value: '440881',
      label: '廉江市',
      pid: '440800'
    }, {
      value: '440882',
      label: '雷州市',
      pid: '440800'
    }, {
      value: '440883',
      label: '吴川市',
      pid: '440800'
    }]
  }, {
    value: '440900',
    label: '茂名市',
    pid: '440000',
    children: [{
      value: '440902',
      label: '茂南区',
      pid: '440900'
    }, {
      value: '440904',
      label: '电白区',
      pid: '440900'
    }, {
      value: '440981',
      label: '高州市',
      pid: '440900'
    }, {
      value: '440982',
      label: '化州市',
      pid: '440900'
    }, {
      value: '440983',
      label: '信宜市',
      pid: '440900'
    }]
  }, {
    value: '441200',
    label: '肇庆市',
    pid: '440000',
    children: [{
      value: '441202',
      label: '端州区',
      pid: '441200'
    }, {
      value: '441203',
      label: '鼎湖区',
      pid: '441200'
    }, {
      value: '441223',
      label: '广宁县',
      pid: '441200'
    }, {
      value: '441224',
      label: '怀集县',
      pid: '441200'
    }, {
      value: '441225',
      label: '封开县',
      pid: '441200'
    }, {
      value: '441226',
      label: '德庆县',
      pid: '441200'
    }, {
      value: '441283',
      label: '高要市',
      pid: '441200'
    }, {
      value: '441284',
      label: '四会市',
      pid: '441200'
    }]
  }, {
    value: '441300',
    label: '惠州市',
    pid: '440000',
    children: [{
      value: '441302',
      label: '惠城区',
      pid: '441300'
    }, {
      value: '441303',
      label: '惠阳区',
      pid: '441300'
    }, {
      value: '441322',
      label: '博罗县',
      pid: '441300'
    }, {
      value: '441323',
      label: '惠东县',
      pid: '441300'
    }, {
      value: '441324',
      label: '龙门县',
      pid: '441300'
    }]
  }, {
    value: '441400',
    label: '梅州市',
    pid: '440000',
    children: [{
      value: '441402',
      label: '梅江区',
      pid: '441400'
    }, {
      value: '441403',
      label: '梅县区',
      pid: '441400'
    }, {
      value: '441422',
      label: '大埔县',
      pid: '441400'
    }, {
      value: '441423',
      label: '丰顺县',
      pid: '441400'
    }, {
      value: '441424',
      label: '五华县',
      pid: '441400'
    }, {
      value: '441426',
      label: '平远县',
      pid: '441400'
    }, {
      value: '441427',
      label: '蕉岭县',
      pid: '441400'
    }, {
      value: '441481',
      label: '兴宁市',
      pid: '441400'
    }]
  }, {
    value: '441500',
    label: '汕尾市',
    pid: '440000',
    children: [{
      value: '441502',
      label: '城区',
      pid: '441500'
    }, {
      value: '441521',
      label: '海丰县',
      pid: '441500'
    }, {
      value: '441523',
      label: '陆河县',
      pid: '441500'
    }, {
      value: '441581',
      label: '陆丰市',
      pid: '441500'
    }]
  }, {
    value: '441600',
    label: '河源市',
    pid: '440000',
    children: [{
      value: '441602',
      label: '源城区',
      pid: '441600'
    }, {
      value: '441621',
      label: '紫金县',
      pid: '441600'
    }, {
      value: '441622',
      label: '龙川县',
      pid: '441600'
    }, {
      value: '441623',
      label: '连平县',
      pid: '441600'
    }, {
      value: '441624',
      label: '和平县',
      pid: '441600'
    }, {
      value: '441625',
      label: '东源县',
      pid: '441600'
    }]
  }, {
    value: '441700',
    label: '阳江市',
    pid: '440000',
    children: [{
      value: '441702',
      label: '江城区',
      pid: '441700'
    }, {
      value: '441704',
      label: '阳东区',
      pid: '441700'
    }, {
      value: '441721',
      label: '阳西县',
      pid: '441700'
    }, {
      value: '441781',
      label: '阳春市',
      pid: '441700'
    }]
  }, {
    value: '441800',
    label: '清远市',
    pid: '440000',
    children: [{
      value: '441802',
      label: '清城区',
      pid: '441800'
    }, {
      value: '441803',
      label: '清新区',
      pid: '441800'
    }, {
      value: '441821',
      label: '佛冈县',
      pid: '441800'
    }, {
      value: '441823',
      label: '阳山县',
      pid: '441800'
    }, {
      value: '441825',
      label: '连山壮族瑶族自治县',
      pid: '441800'
    }, {
      value: '441826',
      label: '连南瑶族自治县',
      pid: '441800'
    }, {
      value: '441881',
      label: '英德市',
      pid: '441800'
    }, {
      value: '441882',
      label: '连州市',
      pid: '441800'
    }]
  }, {
    value: '441900',
    label: '东莞市',
    pid: '440000',
    children: [{
      value: '441901',
      label: '莞城区',
      pid: '441900'
    }, {
      value: '441902',
      label: '南城区',
      pid: '441900'
    }, {
      value: '441904',
      label: '万江区',
      pid: '441900'
    }, {
      value: '441905',
      label: '石碣镇',
      pid: '441900'
    }, {
      value: '441906',
      label: '石龙镇',
      pid: '441900'
    }, {
      value: '441907',
      label: '茶山镇',
      pid: '441900'
    }, {
      value: '441908',
      label: '石排镇',
      pid: '441900'
    }, {
      value: '441909',
      label: '企石镇',
      pid: '441900'
    }, {
      value: '441910',
      label: '横沥镇',
      pid: '441900'
    }, {
      value: '441911',
      label: '桥头镇',
      pid: '441900'
    }, {
      value: '441912',
      label: '谢岗镇',
      pid: '441900'
    }, {
      value: '441913',
      label: '东坑镇',
      pid: '441900'
    }, {
      value: '441914',
      label: '常平镇',
      pid: '441900'
    }, {
      value: '441915',
      label: '寮步镇',
      pid: '441900'
    }, {
      value: '441916',
      label: '大朗镇',
      pid: '441900'
    }, {
      value: '441917',
      label: '麻涌镇',
      pid: '441900'
    }, {
      value: '441918',
      label: '中堂镇',
      pid: '441900'
    }, {
      value: '441919',
      label: '高埗镇',
      pid: '441900'
    }, {
      value: '441920',
      label: '樟木头镇',
      pid: '441900'
    }, {
      value: '441921',
      label: '大岭山镇',
      pid: '441900'
    }, {
      value: '441922',
      label: '望牛墩镇',
      pid: '441900'
    }, {
      value: '441923',
      label: '黄江镇',
      pid: '441900'
    }, {
      value: '441924',
      label: '洪梅镇',
      pid: '441900'
    }, {
      value: '441925',
      label: '清溪镇',
      pid: '441900'
    }, {
      value: '441926',
      label: '沙田镇',
      pid: '441900'
    }, {
      value: '441927',
      label: '道滘镇',
      pid: '441900'
    }, {
      value: '441928',
      label: '塘厦镇',
      pid: '441900'
    }, {
      value: '441929',
      label: '虎门镇',
      pid: '441900'
    }, {
      value: '441930',
      label: '厚街镇',
      pid: '441900'
    }, {
      value: '441931',
      label: '凤岗镇',
      pid: '441900'
    }, {
      value: '441932',
      label: '长安镇',
      pid: '441900'
    }]
  }, {
    value: '442000',
    label: '中山市',
    pid: '440000',
    children: [{
      value: '442001',
      label: '石岐区',
      pid: '442000'
    }, {
      value: '442004',
      label: '南区',
      pid: '442000'
    }, {
      value: '442005',
      label: '五桂山区',
      pid: '442000'
    }, {
      value: '442006',
      label: '火炬开发区',
      pid: '442000'
    }, {
      value: '442007',
      label: '黄圃镇',
      pid: '442000'
    }, {
      value: '442008',
      label: '南头镇',
      pid: '442000'
    }, {
      value: '442009',
      label: '东凤镇',
      pid: '442000'
    }, {
      value: '442010',
      label: '阜沙镇',
      pid: '442000'
    }, {
      value: '442011',
      label: '小榄镇',
      pid: '442000'
    }, {
      value: '442012',
      label: '东升镇',
      pid: '442000'
    }, {
      value: '442013',
      label: '古镇镇',
      pid: '442000'
    }, {
      value: '442014',
      label: '横栏镇',
      pid: '442000'
    }, {
      value: '442015',
      label: '三角镇',
      pid: '442000'
    }, {
      value: '442016',
      label: '民众镇',
      pid: '442000'
    }, {
      value: '442017',
      label: '南朗镇',
      pid: '442000'
    }, {
      value: '442018',
      label: '港口镇',
      pid: '442000'
    }, {
      value: '442019',
      label: '大涌镇',
      pid: '442000'
    }, {
      value: '442020',
      label: '沙溪镇',
      pid: '442000'
    }, {
      value: '442021',
      label: '三乡镇',
      pid: '442000'
    }, {
      value: '442022',
      label: '板芙镇',
      pid: '442000'
    }, {
      value: '442023',
      label: '神湾镇',
      pid: '442000'
    }, {
      value: '442024',
      label: '坦洲镇',
      pid: '442000'
    }]
  }, {
    value: '445100',
    label: '潮州市',
    pid: '440000',
    children: [{
      value: '445102',
      label: '湘桥区',
      pid: '445100'
    }, {
      value: '445103',
      label: '潮安区',
      pid: '445100'
    }, {
      value: '445122',
      label: '饶平县',
      pid: '445100'
    }]
  }, {
    value: '445200',
    label: '揭阳市',
    pid: '440000',
    children: [{
      value: '445202',
      label: '榕城区',
      pid: '445200'
    }, {
      value: '445203',
      label: '揭东区',
      pid: '445200'
    }, {
      value: '445222',
      label: '揭西县',
      pid: '445200'
    }, {
      value: '445224',
      label: '惠来县',
      pid: '445200'
    }, {
      value: '445281',
      label: '普宁市',
      pid: '445200'
    }]
  }, {
    value: '445300',
    label: '云浮市',
    pid: '440000',
    children: [{
      value: '445302',
      label: '云城区',
      pid: '445300'
    }, {
      value: '445303',
      label: '云安区',
      pid: '445300'
    }, {
      value: '445321',
      label: '新兴县',
      pid: '445300'
    }, {
      value: '445322',
      label: '郁南县',
      pid: '445300'
    }, {
      value: '445381',
      label: '罗定市',
      pid: '445300'
    }]
  }]
}, {
  value: '450000',
  label: '广西壮族自治区',
  pid: '100000',
  children: [{
    value: '450100',
    label: '南宁市',
    pid: '450000',
    children: [{
      value: '450102',
      label: '兴宁区',
      pid: '450100'
    }, {
      value: '450103',
      label: '青秀区',
      pid: '450100'
    }, {
      value: '450105',
      label: '江南区',
      pid: '450100'
    }, {
      value: '450107',
      label: '西乡塘区',
      pid: '450100'
    }, {
      value: '450108',
      label: '良庆区',
      pid: '450100'
    }, {
      value: '450109',
      label: '邕宁区',
      pid: '450100'
    }, {
      value: '450122',
      label: '武鸣县',
      pid: '450100'
    }, {
      value: '450123',
      label: '隆安县',
      pid: '450100'
    }, {
      value: '450124',
      label: '马山县',
      pid: '450100'
    }, {
      value: '450125',
      label: '上林县',
      pid: '450100'
    }, {
      value: '450126',
      label: '宾阳县',
      pid: '450100'
    }, {
      value: '450127',
      label: '横县',
      pid: '450100'
    }, {
      value: '450128',
      label: '埌东新区',
      pid: '450100'
    }]
  }, {
    value: '450200',
    label: '柳州市',
    pid: '450000',
    children: [{
      value: '450202',
      label: '城中区',
      pid: '450200'
    }, {
      value: '450203',
      label: '鱼峰区',
      pid: '450200'
    }, {
      value: '450204',
      label: '柳南区',
      pid: '450200'
    }, {
      value: '450205',
      label: '柳北区',
      pid: '450200'
    }, {
      value: '450221',
      label: '柳江县',
      pid: '450200'
    }, {
      value: '450222',
      label: '柳城县',
      pid: '450200'
    }, {
      value: '450223',
      label: '鹿寨县',
      pid: '450200'
    }, {
      value: '450224',
      label: '融安县',
      pid: '450200'
    }, {
      value: '450225',
      label: '融水苗族自治县',
      pid: '450200'
    }, {
      value: '450226',
      label: '三江侗族自治县',
      pid: '450200'
    }, {
      value: '450227',
      label: '柳东新区',
      pid: '450200'
    }]
  }, {
    value: '450300',
    label: '桂林市',
    pid: '450000',
    children: [{
      value: '450302',
      label: '秀峰区',
      pid: '450300'
    }, {
      value: '450303',
      label: '叠彩区',
      pid: '450300'
    }, {
      value: '450304',
      label: '象山区',
      pid: '450300'
    }, {
      value: '450305',
      label: '七星区',
      pid: '450300'
    }, {
      value: '450311',
      label: '雁山区',
      pid: '450300'
    }, {
      value: '450312',
      label: '临桂区',
      pid: '450300'
    }, {
      value: '450321',
      label: '阳朔县',
      pid: '450300'
    }, {
      value: '450323',
      label: '灵川县',
      pid: '450300'
    }, {
      value: '450324',
      label: '全州县',
      pid: '450300'
    }, {
      value: '450325',
      label: '兴安县',
      pid: '450300'
    }, {
      value: '450326',
      label: '永福县',
      pid: '450300'
    }, {
      value: '450327',
      label: '灌阳县',
      pid: '450300'
    }, {
      value: '450328',
      label: '龙胜各族自治县',
      pid: '450300'
    }, {
      value: '450329',
      label: '资源县',
      pid: '450300'
    }, {
      value: '450330',
      label: '平乐县',
      pid: '450300'
    }, {
      value: '450331',
      label: '荔浦县',
      pid: '450300'
    }, {
      value: '450332',
      label: '恭城瑶族自治县',
      pid: '450300'
    }]
  }, {
    value: '450400',
    label: '梧州市',
    pid: '450000',
    children: [{
      value: '450403',
      label: '万秀区',
      pid: '450400'
    }, {
      value: '450405',
      label: '长洲区',
      pid: '450400'
    }, {
      value: '450406',
      label: '龙圩区',
      pid: '450400'
    }, {
      value: '450421',
      label: '苍梧县',
      pid: '450400'
    }, {
      value: '450422',
      label: '藤县',
      pid: '450400'
    }, {
      value: '450423',
      label: '蒙山县',
      pid: '450400'
    }, {
      value: '450481',
      label: '岑溪市',
      pid: '450400'
    }]
  }, {
    value: '450500',
    label: '北海市',
    pid: '450000',
    children: [{
      value: '450502',
      label: '海城区',
      pid: '450500'
    }, {
      value: '450503',
      label: '银海区',
      pid: '450500'
    }, {
      value: '450512',
      label: '铁山港区',
      pid: '450500'
    }, {
      value: '450521',
      label: '合浦县',
      pid: '450500'
    }]
  }, {
    value: '450600',
    label: '防城港市',
    pid: '450000',
    children: [{
      value: '450602',
      label: '港口区',
      pid: '450600'
    }, {
      value: '450603',
      label: '防城区',
      pid: '450600'
    }, {
      value: '450621',
      label: '上思县',
      pid: '450600'
    }, {
      value: '450681',
      label: '东兴市',
      pid: '450600'
    }]
  }, {
    value: '450700',
    label: '钦州市',
    pid: '450000',
    children: [{
      value: '450702',
      label: '钦南区',
      pid: '450700'
    }, {
      value: '450703',
      label: '钦北区',
      pid: '450700'
    }, {
      value: '450721',
      label: '灵山县',
      pid: '450700'
    }, {
      value: '450722',
      label: '浦北县',
      pid: '450700'
    }]
  }, {
    value: '450800',
    label: '贵港市',
    pid: '450000',
    children: [{
      value: '450802',
      label: '港北区',
      pid: '450800'
    }, {
      value: '450803',
      label: '港南区',
      pid: '450800'
    }, {
      value: '450804',
      label: '覃塘区',
      pid: '450800'
    }, {
      value: '450821',
      label: '平南县',
      pid: '450800'
    }, {
      value: '450881',
      label: '桂平市',
      pid: '450800'
    }]
  }, {
    value: '450900',
    label: '玉林市',
    pid: '450000',
    children: [{
      value: '450902',
      label: '玉州区',
      pid: '450900'
    }, {
      value: '450903',
      label: '福绵区',
      pid: '450900'
    }, {
      value: '450904',
      label: '玉东新区',
      pid: '450900'
    }, {
      value: '450921',
      label: '容县',
      pid: '450900'
    }, {
      value: '450922',
      label: '陆川县',
      pid: '450900'
    }, {
      value: '450923',
      label: '博白县',
      pid: '450900'
    }, {
      value: '450924',
      label: '兴业县',
      pid: '450900'
    }, {
      value: '450981',
      label: '北流市',
      pid: '450900'
    }]
  }, {
    value: '451000',
    label: '百色市',
    pid: '450000',
    children: [{
      value: '451002',
      label: '右江区',
      pid: '451000'
    }, {
      value: '451021',
      label: '田阳县',
      pid: '451000'
    }, {
      value: '451022',
      label: '田东县',
      pid: '451000'
    }, {
      value: '451023',
      label: '平果县',
      pid: '451000'
    }, {
      value: '451024',
      label: '德保县',
      pid: '451000'
    }, {
      value: '451025',
      label: '靖西县',
      pid: '451000'
    }, {
      value: '451026',
      label: '那坡县',
      pid: '451000'
    }, {
      value: '451027',
      label: '凌云县',
      pid: '451000'
    }, {
      value: '451028',
      label: '乐业县',
      pid: '451000'
    }, {
      value: '451029',
      label: '田林县',
      pid: '451000'
    }, {
      value: '451030',
      label: '西林县',
      pid: '451000'
    }, {
      value: '451031',
      label: '隆林各族自治县',
      pid: '451000'
    }]
  }, {
    value: '451100',
    label: '贺州市',
    pid: '450000',
    children: [{
      value: '451102',
      label: '八步区',
      pid: '451100'
    }, {
      value: '451121',
      label: '昭平县',
      pid: '451100'
    }, {
      value: '451122',
      label: '钟山县',
      pid: '451100'
    }, {
      value: '451123',
      label: '富川瑶族自治县',
      pid: '451100'
    }, {
      value: '451124',
      label: '平桂管理区',
      pid: '451100'
    }]
  }, {
    value: '451200',
    label: '河池市',
    pid: '450000',
    children: [{
      value: '451202',
      label: '金城江区',
      pid: '451200'
    }, {
      value: '451221',
      label: '南丹县',
      pid: '451200'
    }, {
      value: '451222',
      label: '天峨县',
      pid: '451200'
    }, {
      value: '451223',
      label: '凤山县',
      pid: '451200'
    }, {
      value: '451224',
      label: '东兰县',
      pid: '451200'
    }, {
      value: '451225',
      label: '罗城仫佬族自治县',
      pid: '451200'
    }, {
      value: '451226',
      label: '环江毛南族自治县',
      pid: '451200'
    }, {
      value: '451227',
      label: '巴马瑶族自治县',
      pid: '451200'
    }, {
      value: '451228',
      label: '都安瑶族自治县',
      pid: '451200'
    }, {
      value: '451229',
      label: '大化瑶族自治县',
      pid: '451200'
    }, {
      value: '451281',
      label: '宜州市',
      pid: '451200'
    }]
  }, {
    value: '451300',
    label: '来宾市',
    pid: '450000',
    children: [{
      value: '451302',
      label: '兴宾区',
      pid: '451300'
    }, {
      value: '451321',
      label: '忻城县',
      pid: '451300'
    }, {
      value: '451322',
      label: '象州县',
      pid: '451300'
    }, {
      value: '451323',
      label: '武宣县',
      pid: '451300'
    }, {
      value: '451324',
      label: '金秀瑶族自治县',
      pid: '451300'
    }, {
      value: '451381',
      label: '合山市',
      pid: '451300'
    }]
  }, {
    value: '451400',
    label: '崇左市',
    pid: '450000',
    children: [{
      value: '451402',
      label: '江州区',
      pid: '451400'
    }, {
      value: '451421',
      label: '扶绥县',
      pid: '451400'
    }, {
      value: '451422',
      label: '宁明县',
      pid: '451400'
    }, {
      value: '451423',
      label: '龙州县',
      pid: '451400'
    }, {
      value: '451424',
      label: '大新县',
      pid: '451400'
    }, {
      value: '451425',
      label: '天等县',
      pid: '451400'
    }, {
      value: '451481',
      label: '凭祥市',
      pid: '451400'
    }]
  }]
}, {
  value: '460000',
  label: '海南省',
  pid: '100000',
  children: [{
    value: '460100',
    label: '海口市',
    pid: '460000',
    children: [{
      value: '460105',
      label: '秀英区',
      pid: '460100'
    }, {
      value: '460106',
      label: '龙华区',
      pid: '460100'
    }, {
      value: '460107',
      label: '琼山区',
      pid: '460100'
    }, {
      value: '460108',
      label: '美兰区',
      pid: '460100'
    }]
  }, {
    value: '460200',
    label: '三亚市',
    pid: '460000',
    children: [{
      value: '460202',
      label: '海棠区',
      pid: '460200'
    }, {
      value: '460203',
      label: '吉阳区',
      pid: '460200'
    }, {
      value: '460204',
      label: '天涯区',
      pid: '460200'
    }, {
      value: '460205',
      label: '崖州区',
      pid: '460200'
    }]
  }, {
    value: '460300',
    label: '三沙市',
    pid: '460000',
    children: [{
      value: '460321',
      label: '西沙群岛',
      pid: '460300'
    }, {
      value: '460322',
      label: '南沙群岛',
      pid: '460300'
    }, {
      value: '460323',
      label: '中沙群岛',
      pid: '460300'
    }]
  }, {
    value: '469000',
    label: '直辖县级',
    pid: '460000',
    children: [{
      value: '469001',
      label: '五指山市',
      pid: '469000'
    }, {
      value: '469002',
      label: '琼海市',
      pid: '469000'
    }, {
      value: '469003',
      label: '儋州市',
      pid: '469000'
    }, {
      value: '469005',
      label: '文昌市',
      pid: '469000'
    }, {
      value: '469006',
      label: '万宁市',
      pid: '469000'
    }, {
      value: '469007',
      label: '东方市',
      pid: '469000'
    }, {
      value: '469021',
      label: '定安县',
      pid: '469000'
    }, {
      value: '469022',
      label: '屯昌县',
      pid: '469000'
    }, {
      value: '469023',
      label: '澄迈县',
      pid: '469000'
    }, {
      value: '469024',
      label: '临高县',
      pid: '469000'
    }, {
      value: '469025',
      label: '白沙黎族自治县',
      pid: '469000'
    }, {
      value: '469026',
      label: '昌江黎族自治县',
      pid: '469000'
    }, {
      value: '469027',
      label: '乐东黎族自治县',
      pid: '469000'
    }, {
      value: '469028',
      label: '陵水黎族自治县',
      pid: '469000'
    }, {
      value: '469029',
      label: '保亭黎族苗族自治县',
      pid: '469000'
    }, {
      value: '469030',
      label: '琼中黎族苗族自治县',
      pid: '469000'
    }]
  }]
}, {
  value: '500000',
  label: '重庆',
  pid: '100000',
  children: [{
    value: '500100',
    label: '重庆市',
    pid: '500000',
    children: [{
      value: '500101',
      label: '万州区',
      pid: '500100'
    }, {
      value: '500102',
      label: '涪陵区',
      pid: '500100'
    }, {
      value: '500103',
      label: '渝中区',
      pid: '500100'
    }, {
      value: '500104',
      label: '大渡口区',
      pid: '500100'
    }, {
      value: '500105',
      label: '江北区',
      pid: '500100'
    }, {
      value: '500106',
      label: '沙坪坝区',
      pid: '500100'
    }, {
      value: '500107',
      label: '九龙坡区',
      pid: '500100'
    }, {
      value: '500108',
      label: '南岸区',
      pid: '500100'
    }, {
      value: '500109',
      label: '北碚区',
      pid: '500100'
    }, {
      value: '500110',
      label: '綦江区',
      pid: '500100'
    }, {
      value: '500111',
      label: '大足区',
      pid: '500100'
    }, {
      value: '500112',
      label: '渝北区',
      pid: '500100'
    }, {
      value: '500113',
      label: '巴南区',
      pid: '500100'
    }, {
      value: '500114',
      label: '黔江区',
      pid: '500100'
    }, {
      value: '500115',
      label: '长寿区',
      pid: '500100'
    }, {
      value: '500116',
      label: '江津区',
      pid: '500100'
    }, {
      value: '500117',
      label: '合川区',
      pid: '500100'
    }, {
      value: '500118',
      label: '永川区',
      pid: '500100'
    }, {
      value: '500119',
      label: '南川区',
      pid: '500100'
    }, {
      value: '500120',
      label: '璧山区',
      pid: '500100'
    }, {
      value: '500151',
      label: '铜梁区',
      pid: '500100'
    }, {
      value: '500223',
      label: '潼南县',
      pid: '500100'
    }, {
      value: '500226',
      label: '荣昌县',
      pid: '500100'
    }, {
      value: '500228',
      label: '梁平县',
      pid: '500100'
    }, {
      value: '500229',
      label: '城口县',
      pid: '500100'
    }, {
      value: '500230',
      label: '丰都县',
      pid: '500100'
    }, {
      value: '500231',
      label: '垫江县',
      pid: '500100'
    }, {
      value: '500232',
      label: '武隆县',
      pid: '500100'
    }, {
      value: '500233',
      label: '忠县',
      pid: '500100'
    }, {
      value: '500234',
      label: '开县',
      pid: '500100'
    }, {
      value: '500235',
      label: '云阳县',
      pid: '500100'
    }, {
      value: '500236',
      label: '奉节县',
      pid: '500100'
    }, {
      value: '500237',
      label: '巫山县',
      pid: '500100'
    }, {
      value: '500238',
      label: '巫溪县',
      pid: '500100'
    }, {
      value: '500240',
      label: '石柱土家族自治县',
      pid: '500100'
    }, {
      value: '500241',
      label: '秀山土家族苗族自治县',
      pid: '500100'
    }, {
      value: '500242',
      label: '酉阳土家族苗族自治县',
      pid: '500100'
    }, {
      value: '500243',
      label: '彭水苗族土家族自治县',
      pid: '500100'
    }]
  }, {
    value: '500300',
    label: '两江新区',
    pid: '500000',
    children: [{
      value: '500301',
      label: '北部新区',
      pid: '500300'
    }, {
      value: '500302',
      label: '保税港区',
      pid: '500300'
    }, {
      value: '500303',
      label: '工业园区',
      pid: '500300'
    }]
  }]
}, {
  value: '510000',
  label: '四川省',
  pid: '100000',
  children: [{
    value: '510100',
    label: '成都市',
    pid: '510000',
    children: [{
      value: '510104',
      label: '锦江区',
      pid: '510100'
    }, {
      value: '510105',
      label: '青羊区',
      pid: '510100'
    }, {
      value: '510106',
      label: '金牛区',
      pid: '510100'
    }, {
      value: '510107',
      label: '武侯区',
      pid: '510100'
    }, {
      value: '510108',
      label: '成华区',
      pid: '510100'
    }, {
      value: '510112',
      label: '龙泉驿区',
      pid: '510100'
    }, {
      value: '510113',
      label: '青白江区',
      pid: '510100'
    }, {
      value: '510114',
      label: '新都区',
      pid: '510100'
    }, {
      value: '510115',
      label: '温江区',
      pid: '510100'
    }, {
      value: '510121',
      label: '金堂县',
      pid: '510100'
    }, {
      value: '510122',
      label: '双流县',
      pid: '510100'
    }, {
      value: '510124',
      label: '郫县',
      pid: '510100'
    }, {
      value: '510129',
      label: '大邑县',
      pid: '510100'
    }, {
      value: '510131',
      label: '蒲江县',
      pid: '510100'
    }, {
      value: '510132',
      label: '新津县',
      pid: '510100'
    }, {
      value: '510181',
      label: '都江堰市',
      pid: '510100'
    }, {
      value: '510182',
      label: '彭州市',
      pid: '510100'
    }, {
      value: '510183',
      label: '邛崃市',
      pid: '510100'
    }, {
      value: '510184',
      label: '崇州市',
      pid: '510100'
    }]
  }, {
    value: '510300',
    label: '自贡市',
    pid: '510000',
    children: [{
      value: '510302',
      label: '自流井区',
      pid: '510300'
    }, {
      value: '510303',
      label: '贡井区',
      pid: '510300'
    }, {
      value: '510304',
      label: '大安区',
      pid: '510300'
    }, {
      value: '510311',
      label: '沿滩区',
      pid: '510300'
    }, {
      value: '510321',
      label: '荣县',
      pid: '510300'
    }, {
      value: '510322',
      label: '富顺县',
      pid: '510300'
    }]
  }, {
    value: '510400',
    label: '攀枝花市',
    pid: '510000',
    children: [{
      value: '510402',
      label: '东区',
      pid: '510400'
    }, {
      value: '510403',
      label: '西区',
      pid: '510400'
    }, {
      value: '510411',
      label: '仁和区',
      pid: '510400'
    }, {
      value: '510421',
      label: '米易县',
      pid: '510400'
    }, {
      value: '510422',
      label: '盐边县',
      pid: '510400'
    }]
  }, {
    value: '510500',
    label: '泸州市',
    pid: '510000',
    children: [{
      value: '510502',
      label: '江阳区',
      pid: '510500'
    }, {
      value: '510503',
      label: '纳溪区',
      pid: '510500'
    }, {
      value: '510504',
      label: '龙马潭区',
      pid: '510500'
    }, {
      value: '510521',
      label: '泸县',
      pid: '510500'
    }, {
      value: '510522',
      label: '合江县',
      pid: '510500'
    }, {
      value: '510524',
      label: '叙永县',
      pid: '510500'
    }, {
      value: '510525',
      label: '古蔺县',
      pid: '510500'
    }]
  }, {
    value: '510600',
    label: '德阳市',
    pid: '510000',
    children: [{
      value: '510603',
      label: '旌阳区',
      pid: '510600'
    }, {
      value: '510623',
      label: '中江县',
      pid: '510600'
    }, {
      value: '510626',
      label: '罗江县',
      pid: '510600'
    }, {
      value: '510681',
      label: '广汉市',
      pid: '510600'
    }, {
      value: '510682',
      label: '什邡市',
      pid: '510600'
    }, {
      value: '510683',
      label: '绵竹市',
      pid: '510600'
    }]
  }, {
    value: '510700',
    label: '绵阳市',
    pid: '510000',
    children: [{
      value: '510703',
      label: '涪城区',
      pid: '510700'
    }, {
      value: '510704',
      label: '游仙区',
      pid: '510700'
    }, {
      value: '510722',
      label: '三台县',
      pid: '510700'
    }, {
      value: '510723',
      label: '盐亭县',
      pid: '510700'
    }, {
      value: '510724',
      label: '安县',
      pid: '510700'
    }, {
      value: '510725',
      label: '梓潼县',
      pid: '510700'
    }, {
      value: '510726',
      label: '北川羌族自治县',
      pid: '510700'
    }, {
      value: '510727',
      label: '平武县',
      pid: '510700'
    }, {
      value: '510781',
      label: '江油市',
      pid: '510700'
    }]
  }, {
    value: '510800',
    label: '广元市',
    pid: '510000',
    children: [{
      value: '510802',
      label: '利州区',
      pid: '510800'
    }, {
      value: '510811',
      label: '昭化区',
      pid: '510800'
    }, {
      value: '510812',
      label: '朝天区',
      pid: '510800'
    }, {
      value: '510821',
      label: '旺苍县',
      pid: '510800'
    }, {
      value: '510822',
      label: '青川县',
      pid: '510800'
    }, {
      value: '510823',
      label: '剑阁县',
      pid: '510800'
    }, {
      value: '510824',
      label: '苍溪县',
      pid: '510800'
    }]
  }, {
    value: '510900',
    label: '遂宁市',
    pid: '510000',
    children: [{
      value: '510903',
      label: '船山区',
      pid: '510900'
    }, {
      value: '510904',
      label: '安居区',
      pid: '510900'
    }, {
      value: '510921',
      label: '蓬溪县',
      pid: '510900'
    }, {
      value: '510922',
      label: '射洪县',
      pid: '510900'
    }, {
      value: '510923',
      label: '大英县',
      pid: '510900'
    }]
  }, {
    value: '511000',
    label: '内江市',
    pid: '510000',
    children: [{
      value: '511002',
      label: '市中区',
      pid: '511000'
    }, {
      value: '511011',
      label: '东兴区',
      pid: '511000'
    }, {
      value: '511024',
      label: '威远县',
      pid: '511000'
    }, {
      value: '511025',
      label: '资中县',
      pid: '511000'
    }, {
      value: '511028',
      label: '隆昌县',
      pid: '511000'
    }]
  }, {
    value: '511100',
    label: '乐山市',
    pid: '510000',
    children: [{
      value: '511102',
      label: '市中区',
      pid: '511100'
    }, {
      value: '511111',
      label: '沙湾区',
      pid: '511100'
    }, {
      value: '511112',
      label: '五通桥区',
      pid: '511100'
    }, {
      value: '511113',
      label: '金口河区',
      pid: '511100'
    }, {
      value: '511123',
      label: '犍为县',
      pid: '511100'
    }, {
      value: '511124',
      label: '井研县',
      pid: '511100'
    }, {
      value: '511126',
      label: '夹江县',
      pid: '511100'
    }, {
      value: '511129',
      label: '沐川县',
      pid: '511100'
    }, {
      value: '511132',
      label: '峨边彝族自治县',
      pid: '511100'
    }, {
      value: '511133',
      label: '马边彝族自治县',
      pid: '511100'
    }, {
      value: '511181',
      label: '峨眉山市',
      pid: '511100'
    }]
  }, {
    value: '511300',
    label: '南充市',
    pid: '510000',
    children: [{
      value: '511302',
      label: '顺庆区',
      pid: '511300'
    }, {
      value: '511303',
      label: '高坪区',
      pid: '511300'
    }, {
      value: '511304',
      label: '嘉陵区',
      pid: '511300'
    }, {
      value: '511321',
      label: '南部县',
      pid: '511300'
    }, {
      value: '511322',
      label: '营山县',
      pid: '511300'
    }, {
      value: '511323',
      label: '蓬安县',
      pid: '511300'
    }, {
      value: '511324',
      label: '仪陇县',
      pid: '511300'
    }, {
      value: '511325',
      label: '西充县',
      pid: '511300'
    }, {
      value: '511381',
      label: '阆中市',
      pid: '511300'
    }]
  }, {
    value: '511400',
    label: '眉山市',
    pid: '510000',
    children: [{
      value: '511402',
      label: '东坡区',
      pid: '511400'
    }, {
      value: '511403',
      label: '彭山区',
      pid: '511400'
    }, {
      value: '511421',
      label: '仁寿县',
      pid: '511400'
    }, {
      value: '511423',
      label: '洪雅县',
      pid: '511400'
    }, {
      value: '511424',
      label: '丹棱县',
      pid: '511400'
    }, {
      value: '511425',
      label: '青神县',
      pid: '511400'
    }]
  }, {
    value: '511500',
    label: '宜宾市',
    pid: '510000',
    children: [{
      value: '511502',
      label: '翠屏区',
      pid: '511500'
    }, {
      value: '511503',
      label: '南溪区',
      pid: '511500'
    }, {
      value: '511521',
      label: '宜宾县',
      pid: '511500'
    }, {
      value: '511523',
      label: '江安县',
      pid: '511500'
    }, {
      value: '511524',
      label: '长宁县',
      pid: '511500'
    }, {
      value: '511525',
      label: '高县',
      pid: '511500'
    }, {
      value: '511526',
      label: '珙县',
      pid: '511500'
    }, {
      value: '511527',
      label: '筠连县',
      pid: '511500'
    }, {
      value: '511528',
      label: '兴文县',
      pid: '511500'
    }, {
      value: '511529',
      label: '屏山县',
      pid: '511500'
    }]
  }, {
    value: '511600',
    label: '广安市',
    pid: '510000',
    children: [{
      value: '511602',
      label: '广安区',
      pid: '511600'
    }, {
      value: '511603',
      label: '前锋区',
      pid: '511600'
    }, {
      value: '511621',
      label: '岳池县',
      pid: '511600'
    }, {
      value: '511622',
      label: '武胜县',
      pid: '511600'
    }, {
      value: '511623',
      label: '邻水县',
      pid: '511600'
    }, {
      value: '511681',
      label: '华蓥市',
      pid: '511600'
    }]
  }, {
    value: '511700',
    label: '达州市',
    pid: '510000',
    children: [{
      value: '511702',
      label: '通川区',
      pid: '511700'
    }, {
      value: '511703',
      label: '达川区',
      pid: '511700'
    }, {
      value: '511722',
      label: '宣汉县',
      pid: '511700'
    }, {
      value: '511723',
      label: '开江县',
      pid: '511700'
    }, {
      value: '511724',
      label: '大竹县',
      pid: '511700'
    }, {
      value: '511725',
      label: '渠县',
      pid: '511700'
    }, {
      value: '511781',
      label: '万源市',
      pid: '511700'
    }]
  }, {
    value: '511800',
    label: '雅安市',
    pid: '510000',
    children: [{
      value: '511802',
      label: '雨城区',
      pid: '511800'
    }, {
      value: '511803',
      label: '名山区',
      pid: '511800'
    }, {
      value: '511822',
      label: '荥经县',
      pid: '511800'
    }, {
      value: '511823',
      label: '汉源县',
      pid: '511800'
    }, {
      value: '511824',
      label: '石棉县',
      pid: '511800'
    }, {
      value: '511825',
      label: '天全县',
      pid: '511800'
    }, {
      value: '511826',
      label: '芦山县',
      pid: '511800'
    }, {
      value: '511827',
      label: '宝兴县',
      pid: '511800'
    }]
  }, {
    value: '511900',
    label: '巴中市',
    pid: '510000',
    children: [{
      value: '511902',
      label: '巴州区',
      pid: '511900'
    }, {
      value: '511903',
      label: '恩阳区',
      pid: '511900'
    }, {
      value: '511921',
      label: '通江县',
      pid: '511900'
    }, {
      value: '511922',
      label: '南江县',
      pid: '511900'
    }, {
      value: '511923',
      label: '平昌县',
      pid: '511900'
    }]
  }, {
    value: '512000',
    label: '资阳市',
    pid: '510000',
    children: [{
      value: '512002',
      label: '雁江区',
      pid: '512000'
    }, {
      value: '512021',
      label: '安岳县',
      pid: '512000'
    }, {
      value: '512022',
      label: '乐至县',
      pid: '512000'
    }, {
      value: '512081',
      label: '简阳市',
      pid: '512000'
    }]
  }, {
    value: '513200',
    label: '阿坝藏族羌族自治州',
    pid: '510000',
    children: [{
      value: '513221',
      label: '汶川县',
      pid: '513200'
    }, {
      value: '513222',
      label: '理县',
      pid: '513200'
    }, {
      value: '513223',
      label: '茂县',
      pid: '513200'
    }, {
      value: '513224',
      label: '松潘县',
      pid: '513200'
    }, {
      value: '513225',
      label: '九寨沟县',
      pid: '513200'
    }, {
      value: '513226',
      label: '金川县',
      pid: '513200'
    }, {
      value: '513227',
      label: '小金县',
      pid: '513200'
    }, {
      value: '513228',
      label: '黑水县',
      pid: '513200'
    }, {
      value: '513229',
      label: '马尔康县',
      pid: '513200'
    }, {
      value: '513230',
      label: '壤塘县',
      pid: '513200'
    }, {
      value: '513231',
      label: '阿坝县',
      pid: '513200'
    }, {
      value: '513232',
      label: '若尔盖县',
      pid: '513200'
    }, {
      value: '513233',
      label: '红原县',
      pid: '513200'
    }]
  }, {
    value: '513300',
    label: '甘孜藏族自治州',
    pid: '510000',
    children: [{
      value: '513321',
      label: '康定县',
      pid: '513300'
    }, {
      value: '513322',
      label: '泸定县',
      pid: '513300'
    }, {
      value: '513323',
      label: '丹巴县',
      pid: '513300'
    }, {
      value: '513324',
      label: '九龙县',
      pid: '513300'
    }, {
      value: '513325',
      label: '雅江县',
      pid: '513300'
    }, {
      value: '513326',
      label: '道孚县',
      pid: '513300'
    }, {
      value: '513327',
      label: '炉霍县',
      pid: '513300'
    }, {
      value: '513328',
      label: '甘孜县',
      pid: '513300'
    }, {
      value: '513329',
      label: '新龙县',
      pid: '513300'
    }, {
      value: '513330',
      label: '德格县',
      pid: '513300'
    }, {
      value: '513331',
      label: '白玉县',
      pid: '513300'
    }, {
      value: '513332',
      label: '石渠县',
      pid: '513300'
    }, {
      value: '513333',
      label: '色达县',
      pid: '513300'
    }, {
      value: '513334',
      label: '理塘县',
      pid: '513300'
    }, {
      value: '513335',
      label: '巴塘县',
      pid: '513300'
    }, {
      value: '513336',
      label: '乡城县',
      pid: '513300'
    }, {
      value: '513337',
      label: '稻城县',
      pid: '513300'
    }, {
      value: '513338',
      label: '得荣县',
      pid: '513300'
    }]
  }, {
    value: '513400',
    label: '凉山彝族自治州',
    pid: '510000',
    children: [{
      value: '513401',
      label: '西昌市',
      pid: '513400'
    }, {
      value: '513422',
      label: '木里藏族自治县',
      pid: '513400'
    }, {
      value: '513423',
      label: '盐源县',
      pid: '513400'
    }, {
      value: '513424',
      label: '德昌县',
      pid: '513400'
    }, {
      value: '513425',
      label: '会理县',
      pid: '513400'
    }, {
      value: '513426',
      label: '会东县',
      pid: '513400'
    }, {
      value: '513427',
      label: '宁南县',
      pid: '513400'
    }, {
      value: '513428',
      label: '普格县',
      pid: '513400'
    }, {
      value: '513429',
      label: '布拖县',
      pid: '513400'
    }, {
      value: '513430',
      label: '金阳县',
      pid: '513400'
    }, {
      value: '513431',
      label: '昭觉县',
      pid: '513400'
    }, {
      value: '513432',
      label: '喜德县',
      pid: '513400'
    }, {
      value: '513433',
      label: '冕宁县',
      pid: '513400'
    }, {
      value: '513434',
      label: '越西县',
      pid: '513400'
    }, {
      value: '513435',
      label: '甘洛县',
      pid: '513400'
    }, {
      value: '513436',
      label: '美姑县',
      pid: '513400'
    }, {
      value: '513437',
      label: '雷波县',
      pid: '513400'
    }]
  }]
}, {
  value: '520000',
  label: '贵州省',
  pid: '100000',
  children: [{
    value: '520100',
    label: '贵阳市',
    pid: '520000',
    children: [{
      value: '520102',
      label: '南明区',
      pid: '520100'
    }, {
      value: '520103',
      label: '云岩区',
      pid: '520100'
    }, {
      value: '520111',
      label: '花溪区',
      pid: '520100'
    }, {
      value: '520112',
      label: '乌当区',
      pid: '520100'
    }, {
      value: '520113',
      label: '白云区',
      pid: '520100'
    }, {
      value: '520115',
      label: '观山湖区',
      pid: '520100'
    }, {
      value: '520121',
      label: '开阳县',
      pid: '520100'
    }, {
      value: '520122',
      label: '息烽县',
      pid: '520100'
    }, {
      value: '520123',
      label: '修文县',
      pid: '520100'
    }, {
      value: '520181',
      label: '清镇市',
      pid: '520100'
    }]
  }, {
    value: '520200',
    label: '六盘水市',
    pid: '520000',
    children: [{
      value: '520201',
      label: '钟山区',
      pid: '520200'
    }, {
      value: '520203',
      label: '六枝特区',
      pid: '520200'
    }, {
      value: '520221',
      label: '水城县',
      pid: '520200'
    }, {
      value: '520222',
      label: '盘县',
      pid: '520200'
    }]
  }, {
    value: '520300',
    label: '遵义市',
    pid: '520000',
    children: [{
      value: '520302',
      label: '红花岗区',
      pid: '520300'
    }, {
      value: '520303',
      label: '汇川区',
      pid: '520300'
    }, {
      value: '520321',
      label: '遵义县',
      pid: '520300'
    }, {
      value: '520322',
      label: '桐梓县',
      pid: '520300'
    }, {
      value: '520323',
      label: '绥阳县',
      pid: '520300'
    }, {
      value: '520324',
      label: '正安县',
      pid: '520300'
    }, {
      value: '520325',
      label: '道真仡佬族苗族自治县',
      pid: '520300'
    }, {
      value: '520326',
      label: '务川仡佬族苗族自治县',
      pid: '520300'
    }, {
      value: '520327',
      label: '凤冈县',
      pid: '520300'
    }, {
      value: '520328',
      label: '湄潭县',
      pid: '520300'
    }, {
      value: '520329',
      label: '余庆县',
      pid: '520300'
    }, {
      value: '520330',
      label: '习水县',
      pid: '520300'
    }, {
      value: '520381',
      label: '赤水市',
      pid: '520300'
    }, {
      value: '520382',
      label: '仁怀市',
      pid: '520300'
    }]
  }, {
    value: '520400',
    label: '安顺市',
    pid: '520000',
    children: [{
      value: '520402',
      label: '西秀区',
      pid: '520400'
    }, {
      value: '520421',
      label: '平坝区',
      pid: '520400'
    }, {
      value: '520422',
      label: '普定县',
      pid: '520400'
    }, {
      value: '520423',
      label: '镇宁布依族苗族自治县',
      pid: '520400'
    }, {
      value: '520424',
      label: '关岭布依族苗族自治县',
      pid: '520400'
    }, {
      value: '520425',
      label: '紫云苗族布依族自治县',
      pid: '520400'
    }]
  }, {
    value: '520500',
    label: '毕节市',
    pid: '520000',
    children: [{
      value: '520502',
      label: '七星关区',
      pid: '520500'
    }, {
      value: '520521',
      label: '大方县',
      pid: '520500'
    }, {
      value: '520522',
      label: '黔西县',
      pid: '520500'
    }, {
      value: '520523',
      label: '金沙县',
      pid: '520500'
    }, {
      value: '520524',
      label: '织金县',
      pid: '520500'
    }, {
      value: '520525',
      label: '纳雍县',
      pid: '520500'
    }, {
      value: '520526',
      label: '威宁彝族回族苗族自治县',
      pid: '520500'
    }, {
      value: '520527',
      label: '赫章县',
      pid: '520500'
    }]
  }, {
    value: '520600',
    label: '铜仁市',
    pid: '520000',
    children: [{
      value: '520602',
      label: '碧江区',
      pid: '520600'
    }, {
      value: '520603',
      label: '万山区',
      pid: '520600'
    }, {
      value: '520621',
      label: '江口县',
      pid: '520600'
    }, {
      value: '520622',
      label: '玉屏侗族自治县',
      pid: '520600'
    }, {
      value: '520623',
      label: '石阡县',
      pid: '520600'
    }, {
      value: '520624',
      label: '思南县',
      pid: '520600'
    }, {
      value: '520625',
      label: '印江土家族苗族自治县',
      pid: '520600'
    }, {
      value: '520626',
      label: '德江县',
      pid: '520600'
    }, {
      value: '520627',
      label: '沿河土家族自治县',
      pid: '520600'
    }, {
      value: '520628',
      label: '松桃苗族自治县',
      pid: '520600'
    }]
  }, {
    value: '522300',
    label: '黔西南布依族苗族自治州',
    pid: '520000',
    children: [{
      value: '522301',
      label: '兴义市 ',
      pid: '522300'
    }, {
      value: '522322',
      label: '兴仁县',
      pid: '522300'
    }, {
      value: '522323',
      label: '普安县',
      pid: '522300'
    }, {
      value: '522324',
      label: '晴隆县',
      pid: '522300'
    }, {
      value: '522325',
      label: '贞丰县',
      pid: '522300'
    }, {
      value: '522326',
      label: '望谟县',
      pid: '522300'
    }, {
      value: '522327',
      label: '册亨县',
      pid: '522300'
    }, {
      value: '522328',
      label: '安龙县',
      pid: '522300'
    }]
  }, {
    value: '522600',
    label: '黔东南苗族侗族自治州',
    pid: '520000',
    children: [{
      value: '522601',
      label: '凯里市',
      pid: '522600'
    }, {
      value: '522622',
      label: '黄平县',
      pid: '522600'
    }, {
      value: '522623',
      label: '施秉县',
      pid: '522600'
    }, {
      value: '522624',
      label: '三穗县',
      pid: '522600'
    }, {
      value: '522625',
      label: '镇远县',
      pid: '522600'
    }, {
      value: '522626',
      label: '岑巩县',
      pid: '522600'
    }, {
      value: '522627',
      label: '天柱县',
      pid: '522600'
    }, {
      value: '522628',
      label: '锦屏县',
      pid: '522600'
    }, {
      value: '522629',
      label: '剑河县',
      pid: '522600'
    }, {
      value: '522630',
      label: '台江县',
      pid: '522600'
    }, {
      value: '522631',
      label: '黎平县',
      pid: '522600'
    }, {
      value: '522632',
      label: '榕江县',
      pid: '522600'
    }, {
      value: '522633',
      label: '从江县',
      pid: '522600'
    }, {
      value: '522634',
      label: '雷山县',
      pid: '522600'
    }, {
      value: '522635',
      label: '麻江县',
      pid: '522600'
    }, {
      value: '522636',
      label: '丹寨县',
      pid: '522600'
    }]
  }, {
    value: '522700',
    label: '黔南布依族苗族自治州',
    pid: '520000',
    children: [{
      value: '522701',
      label: '都匀市',
      pid: '522700'
    }, {
      value: '522702',
      label: '福泉市',
      pid: '522700'
    }, {
      value: '522722',
      label: '荔波县',
      pid: '522700'
    }, {
      value: '522723',
      label: '贵定县',
      pid: '522700'
    }, {
      value: '522725',
      label: '瓮安县',
      pid: '522700'
    }, {
      value: '522726',
      label: '独山县',
      pid: '522700'
    }, {
      value: '522727',
      label: '平塘县',
      pid: '522700'
    }, {
      value: '522728',
      label: '罗甸县',
      pid: '522700'
    }, {
      value: '522729',
      label: '长顺县',
      pid: '522700'
    }, {
      value: '522730',
      label: '龙里县',
      pid: '522700'
    }, {
      value: '522731',
      label: '惠水县',
      pid: '522700'
    }, {
      value: '522732',
      label: '三都水族自治县',
      pid: '522700'
    }]
  }]
}, {
  value: '530000',
  label: '云南省',
  pid: '100000',
  children: [{
    value: '530100',
    label: '昆明市',
    pid: '530000',
    children: [{
      value: '530102',
      label: '五华区',
      pid: '530100'
    }, {
      value: '530103',
      label: '盘龙区',
      pid: '530100'
    }, {
      value: '530111',
      label: '官渡区',
      pid: '530100'
    }, {
      value: '530112',
      label: '西山区',
      pid: '530100'
    }, {
      value: '530113',
      label: '东川区',
      pid: '530100'
    }, {
      value: '530114',
      label: '呈贡区',
      pid: '530100'
    }, {
      value: '530122',
      label: '晋宁县',
      pid: '530100'
    }, {
      value: '530124',
      label: '富民县',
      pid: '530100'
    }, {
      value: '530125',
      label: '宜良县',
      pid: '530100'
    }, {
      value: '530126',
      label: '石林彝族自治县',
      pid: '530100'
    }, {
      value: '530127',
      label: '嵩明县',
      pid: '530100'
    }, {
      value: '530128',
      label: '禄劝彝族苗族自治县',
      pid: '530100'
    }, {
      value: '530129',
      label: '寻甸回族彝族自治县 ',
      pid: '530100'
    }, {
      value: '530181',
      label: '安宁市',
      pid: '530100'
    }]
  }, {
    value: '530300',
    label: '曲靖市',
    pid: '530000',
    children: [{
      value: '530302',
      label: '麒麟区',
      pid: '530300'
    }, {
      value: '530321',
      label: '马龙县',
      pid: '530300'
    }, {
      value: '530322',
      label: '陆良县',
      pid: '530300'
    }, {
      value: '530323',
      label: '师宗县',
      pid: '530300'
    }, {
      value: '530324',
      label: '罗平县',
      pid: '530300'
    }, {
      value: '530325',
      label: '富源县',
      pid: '530300'
    }, {
      value: '530326',
      label: '会泽县',
      pid: '530300'
    }, {
      value: '530328',
      label: '沾益县',
      pid: '530300'
    }, {
      value: '530381',
      label: '宣威市',
      pid: '530300'
    }]
  }, {
    value: '530400',
    label: '玉溪市',
    pid: '530000',
    children: [{
      value: '530402',
      label: '红塔区',
      pid: '530400'
    }, {
      value: '530421',
      label: '江川县',
      pid: '530400'
    }, {
      value: '530422',
      label: '澄江县',
      pid: '530400'
    }, {
      value: '530423',
      label: '通海县',
      pid: '530400'
    }, {
      value: '530424',
      label: '华宁县',
      pid: '530400'
    }, {
      value: '530425',
      label: '易门县',
      pid: '530400'
    }, {
      value: '530426',
      label: '峨山彝族自治县',
      pid: '530400'
    }, {
      value: '530427',
      label: '新平彝族傣族自治县',
      pid: '530400'
    }, {
      value: '530428',
      label: '元江哈尼族彝族傣族自治县',
      pid: '530400'
    }]
  }, {
    value: '530500',
    label: '保山市',
    pid: '530000',
    children: [{
      value: '530502',
      label: '隆阳区',
      pid: '530500'
    }, {
      value: '530521',
      label: '施甸县',
      pid: '530500'
    }, {
      value: '530522',
      label: '腾冲县',
      pid: '530500'
    }, {
      value: '530523',
      label: '龙陵县',
      pid: '530500'
    }, {
      value: '530524',
      label: '昌宁县',
      pid: '530500'
    }]
  }, {
    value: '530600',
    label: '昭通市',
    pid: '530000',
    children: [{
      value: '530602',
      label: '昭阳区',
      pid: '530600'
    }, {
      value: '530621',
      label: '鲁甸县',
      pid: '530600'
    }, {
      value: '530622',
      label: '巧家县',
      pid: '530600'
    }, {
      value: '530623',
      label: '盐津县',
      pid: '530600'
    }, {
      value: '530624',
      label: '大关县',
      pid: '530600'
    }, {
      value: '530625',
      label: '永善县',
      pid: '530600'
    }, {
      value: '530626',
      label: '绥江县',
      pid: '530600'
    }, {
      value: '530627',
      label: '镇雄县',
      pid: '530600'
    }, {
      value: '530628',
      label: '彝良县',
      pid: '530600'
    }, {
      value: '530629',
      label: '威信县',
      pid: '530600'
    }, {
      value: '530630',
      label: '水富县',
      pid: '530600'
    }]
  }, {
    value: '530700',
    label: '丽江市',
    pid: '530000',
    children: [{
      value: '530702',
      label: '古城区',
      pid: '530700'
    }, {
      value: '530721',
      label: '玉龙纳西族自治县',
      pid: '530700'
    }, {
      value: '530722',
      label: '永胜县',
      pid: '530700'
    }, {
      value: '530723',
      label: '华坪县',
      pid: '530700'
    }, {
      value: '530724',
      label: '宁蒗彝族自治县',
      pid: '530700'
    }]
  }, {
    value: '530800',
    label: '普洱市',
    pid: '530000',
    children: [{
      value: '530802',
      label: '思茅区',
      pid: '530800'
    }, {
      value: '530821',
      label: '宁洱哈尼族彝族自治县',
      pid: '530800'
    }, {
      value: '530822',
      label: '墨江哈尼族自治县',
      pid: '530800'
    }, {
      value: '530823',
      label: '景东彝族自治县',
      pid: '530800'
    }, {
      value: '530824',
      label: '景谷傣族彝族自治县',
      pid: '530800'
    }, {
      value: '530825',
      label: '镇沅彝族哈尼族拉祜族自治县',
      pid: '530800'
    }, {
      value: '530826',
      label: '江城哈尼族彝族自治县',
      pid: '530800'
    }, {
      value: '530827',
      label: '孟连傣族拉祜族佤族自治县',
      pid: '530800'
    }, {
      value: '530828',
      label: '澜沧拉祜族自治县',
      pid: '530800'
    }, {
      value: '530829',
      label: '西盟佤族自治县',
      pid: '530800'
    }]
  }, {
    value: '530900',
    label: '临沧市',
    pid: '530000',
    children: [{
      value: '530902',
      label: '临翔区',
      pid: '530900'
    }, {
      value: '530921',
      label: '凤庆县',
      pid: '530900'
    }, {
      value: '530922',
      label: '云县',
      pid: '530900'
    }, {
      value: '530923',
      label: '永德县',
      pid: '530900'
    }, {
      value: '530924',
      label: '镇康县',
      pid: '530900'
    }, {
      value: '530925',
      label: '双江拉祜族佤族布朗族傣族自治县',
      pid: '530900'
    }, {
      value: '530926',
      label: '耿马傣族佤族自治县',
      pid: '530900'
    }, {
      value: '530927',
      label: '沧源佤族自治县',
      pid: '530900'
    }]
  }, {
    value: '532300',
    label: '楚雄彝族自治州',
    pid: '530000',
    children: [{
      value: '532301',
      label: '楚雄市',
      pid: '532300'
    }, {
      value: '532322',
      label: '双柏县',
      pid: '532300'
    }, {
      value: '532323',
      label: '牟定县',
      pid: '532300'
    }, {
      value: '532324',
      label: '南华县',
      pid: '532300'
    }, {
      value: '532325',
      label: '姚安县',
      pid: '532300'
    }, {
      value: '532326',
      label: '大姚县',
      pid: '532300'
    }, {
      value: '532327',
      label: '永仁县',
      pid: '532300'
    }, {
      value: '532328',
      label: '元谋县',
      pid: '532300'
    }, {
      value: '532329',
      label: '武定县',
      pid: '532300'
    }, {
      value: '532331',
      label: '禄丰县',
      pid: '532300'
    }]
  }, {
    value: '532500',
    label: '红河哈尼族彝族自治州',
    pid: '530000',
    children: [{
      value: '532501',
      label: '个旧市',
      pid: '532500'
    }, {
      value: '532502',
      label: '开远市',
      pid: '532500'
    }, {
      value: '532503',
      label: '蒙自市',
      pid: '532500'
    }, {
      value: '532504',
      label: '弥勒市',
      pid: '532500'
    }, {
      value: '532523',
      label: '屏边苗族自治县',
      pid: '532500'
    }, {
      value: '532524',
      label: '建水县',
      pid: '532500'
    }, {
      value: '532525',
      label: '石屏县',
      pid: '532500'
    }, {
      value: '532527',
      label: '泸西县',
      pid: '532500'
    }, {
      value: '532528',
      label: '元阳县',
      pid: '532500'
    }, {
      value: '532529',
      label: '红河县',
      pid: '532500'
    }, {
      value: '532530',
      label: '金平苗族瑶族傣族自治县',
      pid: '532500'
    }, {
      value: '532531',
      label: '绿春县',
      pid: '532500'
    }, {
      value: '532532',
      label: '河口瑶族自治县',
      pid: '532500'
    }]
  }, {
    value: '532600',
    label: '文山壮族苗族自治州',
    pid: '530000',
    children: [{
      value: '532601',
      label: '文山市',
      pid: '532600'
    }, {
      value: '532622',
      label: '砚山县',
      pid: '532600'
    }, {
      value: '532623',
      label: '西畴县',
      pid: '532600'
    }, {
      value: '532624',
      label: '麻栗坡县',
      pid: '532600'
    }, {
      value: '532625',
      label: '马关县',
      pid: '532600'
    }, {
      value: '532626',
      label: '丘北县',
      pid: '532600'
    }, {
      value: '532627',
      label: '广南县',
      pid: '532600'
    }, {
      value: '532628',
      label: '富宁县',
      pid: '532600'
    }]
  }, {
    value: '532800',
    label: '西双版纳傣族自治州',
    pid: '530000',
    children: [{
      value: '532801',
      label: '景洪市',
      pid: '532800'
    }, {
      value: '532822',
      label: '勐海县',
      pid: '532800'
    }, {
      value: '532823',
      label: '勐腊县',
      pid: '532800'
    }]
  }, {
    value: '532900',
    label: '大理白族自治州',
    pid: '530000',
    children: [{
      value: '532901',
      label: '大理市',
      pid: '532900'
    }, {
      value: '532922',
      label: '漾濞彝族自治县',
      pid: '532900'
    }, {
      value: '532923',
      label: '祥云县',
      pid: '532900'
    }, {
      value: '532924',
      label: '宾川县',
      pid: '532900'
    }, {
      value: '532925',
      label: '弥渡县',
      pid: '532900'
    }, {
      value: '532926',
      label: '南涧彝族自治县',
      pid: '532900'
    }, {
      value: '532927',
      label: '巍山彝族回族自治县',
      pid: '532900'
    }, {
      value: '532928',
      label: '永平县',
      pid: '532900'
    }, {
      value: '532929',
      label: '云龙县',
      pid: '532900'
    }, {
      value: '532930',
      label: '洱源县',
      pid: '532900'
    }, {
      value: '532931',
      label: '剑川县',
      pid: '532900'
    }, {
      value: '532932',
      label: '鹤庆县',
      pid: '532900'
    }]
  }, {
    value: '533100',
    label: '德宏傣族景颇族自治州',
    pid: '530000',
    children: [{
      value: '533102',
      label: '瑞丽市',
      pid: '533100'
    }, {
      value: '533103',
      label: '芒市',
      pid: '533100'
    }, {
      value: '533122',
      label: '梁河县',
      pid: '533100'
    }, {
      value: '533123',
      label: '盈江县',
      pid: '533100'
    }, {
      value: '533124',
      label: '陇川县',
      pid: '533100'
    }]
  }, {
    value: '533300',
    label: '怒江傈僳族自治州',
    pid: '530000',
    children: [{
      value: '533321',
      label: '泸水县',
      pid: '533300'
    }, {
      value: '533323',
      label: '福贡县',
      pid: '533300'
    }, {
      value: '533324',
      label: '贡山独龙族怒族自治县',
      pid: '533300'
    }, {
      value: '533325',
      label: '兰坪白族普米族自治县',
      pid: '533300'
    }]
  }, {
    value: '533400',
    label: '迪庆藏族自治州',
    pid: '530000',
    children: [{
      value: '533421',
      label: '香格里拉市',
      pid: '533400'
    }, {
      value: '533422',
      label: '德钦县',
      pid: '533400'
    }, {
      value: '533423',
      label: '维西傈僳族自治县',
      pid: '533400'
    }]
  }]
}, {
  value: '540000',
  label: '西藏自治区',
  pid: '100000',
  children: [{
    value: '540100',
    label: '拉萨市',
    pid: '540000',
    children: [{
      value: '540102',
      label: '城关区',
      pid: '540100'
    }, {
      value: '540121',
      label: '林周县',
      pid: '540100'
    }, {
      value: '540122',
      label: '当雄县',
      pid: '540100'
    }, {
      value: '540123',
      label: '尼木县',
      pid: '540100'
    }, {
      value: '540124',
      label: '曲水县',
      pid: '540100'
    }, {
      value: '540125',
      label: '堆龙德庆县',
      pid: '540100'
    }, {
      value: '540126',
      label: '达孜县',
      pid: '540100'
    }, {
      value: '540127',
      label: '墨竹工卡县',
      pid: '540100'
    }]
  }, {
    value: '540200',
    label: '日喀则市',
    pid: '540000',
    children: [{
      value: '540202',
      label: '桑珠孜区',
      pid: '540200'
    }, {
      value: '540221',
      label: '南木林县',
      pid: '540200'
    }, {
      value: '540222',
      label: '江孜县',
      pid: '540200'
    }, {
      value: '540223',
      label: '定日县',
      pid: '540200'
    }, {
      value: '540224',
      label: '萨迦县',
      pid: '540200'
    }, {
      value: '540225',
      label: '拉孜县',
      pid: '540200'
    }, {
      value: '540226',
      label: '昂仁县',
      pid: '540200'
    }, {
      value: '540227',
      label: '谢通门县',
      pid: '540200'
    }, {
      value: '540228',
      label: '白朗县',
      pid: '540200'
    }, {
      value: '540229',
      label: '仁布县',
      pid: '540200'
    }, {
      value: '540230',
      label: '康马县',
      pid: '540200'
    }, {
      value: '540231',
      label: '定结县',
      pid: '540200'
    }, {
      value: '540232',
      label: '仲巴县',
      pid: '540200'
    }, {
      value: '540233',
      label: '亚东县',
      pid: '540200'
    }, {
      value: '540234',
      label: '吉隆县',
      pid: '540200'
    }, {
      value: '540235',
      label: '聂拉木县',
      pid: '540200'
    }, {
      value: '540236',
      label: '萨嘎县',
      pid: '540200'
    }, {
      value: '540237',
      label: '岗巴县',
      pid: '540200'
    }]
  }, {
    value: '540300',
    label: '昌都市',
    pid: '540000',
    children: [{
      value: '540302',
      label: '卡若区',
      pid: '540300'
    }, {
      value: '540321',
      label: '江达县',
      pid: '540300'
    }, {
      value: '540322',
      label: '贡觉县',
      pid: '540300'
    }, {
      value: '540323',
      label: '类乌齐县',
      pid: '540300'
    }, {
      value: '540324',
      label: '丁青县',
      pid: '540300'
    }, {
      value: '540325',
      label: '察雅县',
      pid: '540300'
    }, {
      value: '540326',
      label: '八宿县',
      pid: '540300'
    }, {
      value: '540327',
      label: '左贡县',
      pid: '540300'
    }, {
      value: '540328',
      label: '芒康县',
      pid: '540300'
    }, {
      value: '540329',
      label: '洛隆县',
      pid: '540300'
    }, {
      value: '540330',
      label: '边坝县',
      pid: '540300'
    }]
  }, {
    value: '542200',
    label: '山南地区',
    pid: '540000',
    children: [{
      value: '542221',
      label: '乃东县',
      pid: '542200'
    }, {
      value: '542222',
      label: '扎囊县',
      pid: '542200'
    }, {
      value: '542223',
      label: '贡嘎县',
      pid: '542200'
    }, {
      value: '542224',
      label: '桑日县',
      pid: '542200'
    }, {
      value: '542225',
      label: '琼结县',
      pid: '542200'
    }, {
      value: '542226',
      label: '曲松县',
      pid: '542200'
    }, {
      value: '542227',
      label: '措美县',
      pid: '542200'
    }, {
      value: '542228',
      label: '洛扎县',
      pid: '542200'
    }, {
      value: '542229',
      label: '加查县',
      pid: '542200'
    }, {
      value: '542231',
      label: '隆子县',
      pid: '542200'
    }, {
      value: '542232',
      label: '错那县',
      pid: '542200'
    }, {
      value: '542233',
      label: '浪卡子县',
      pid: '542200'
    }]
  }, {
    value: '542400',
    label: '那曲地区',
    pid: '540000',
    children: [{
      value: '542421',
      label: '那曲县',
      pid: '542400'
    }, {
      value: '542422',
      label: '嘉黎县',
      pid: '542400'
    }, {
      value: '542423',
      label: '比如县',
      pid: '542400'
    }, {
      value: '542424',
      label: '聂荣县',
      pid: '542400'
    }, {
      value: '542425',
      label: '安多县',
      pid: '542400'
    }, {
      value: '542426',
      label: '申扎县',
      pid: '542400'
    }, {
      value: '542427',
      label: '索县',
      pid: '542400'
    }, {
      value: '542428',
      label: '班戈县',
      pid: '542400'
    }, {
      value: '542429',
      label: '巴青县',
      pid: '542400'
    }, {
      value: '542430',
      label: '尼玛县',
      pid: '542400'
    }, {
      value: '542431',
      label: '双湖县',
      pid: '542400'
    }]
  }, {
    value: '542500',
    label: '阿里地区',
    pid: '540000',
    children: [{
      value: '542521',
      label: '普兰县',
      pid: '542500'
    }, {
      value: '542522',
      label: '札达县',
      pid: '542500'
    }, {
      value: '542523',
      label: '噶尔县',
      pid: '542500'
    }, {
      value: '542524',
      label: '日土县',
      pid: '542500'
    }, {
      value: '542525',
      label: '革吉县',
      pid: '542500'
    }, {
      value: '542526',
      label: '改则县',
      pid: '542500'
    }, {
      value: '542527',
      label: '措勤县',
      pid: '542500'
    }]
  }, {
    value: '542600',
    label: '林芝地区',
    pid: '540000',
    children: [{
      value: '542621',
      label: '林芝县',
      pid: '542600'
    }, {
      value: '542622',
      label: '工布江达县',
      pid: '542600'
    }, {
      value: '542623',
      label: '米林县',
      pid: '542600'
    }, {
      value: '542624',
      label: '墨脱县',
      pid: '542600'
    }, {
      value: '542625',
      label: '波密县',
      pid: '542600'
    }, {
      value: '542626',
      label: '察隅县',
      pid: '542600'
    }, {
      value: '542627',
      label: '朗县',
      pid: '542600'
    }]
  }]
}, {
  value: '610000',
  label: '陕西省',
  pid: '100000',
  children: [{
    value: '610100',
    label: '西安市',
    pid: '610000',
    children: [{
      value: '610102',
      label: '新城区',
      pid: '610100'
    }, {
      value: '610103',
      label: '碑林区',
      pid: '610100'
    }, {
      value: '610104',
      label: '莲湖区',
      pid: '610100'
    }, {
      value: '610111',
      label: '灞桥区',
      pid: '610100'
    }, {
      value: '610112',
      label: '未央区',
      pid: '610100'
    }, {
      value: '610113',
      label: '雁塔区',
      pid: '610100'
    }, {
      value: '610114',
      label: '阎良区',
      pid: '610100'
    }, {
      value: '610115',
      label: '临潼区',
      pid: '610100'
    }, {
      value: '610116',
      label: '长安区',
      pid: '610100'
    }, {
      value: '610122',
      label: '蓝田县',
      pid: '610100'
    }, {
      value: '610124',
      label: '周至县',
      pid: '610100'
    }, {
      value: '610125',
      label: '户县',
      pid: '610100'
    }, {
      value: '610126',
      label: '高陵区',
      pid: '610100'
    }]
  }, {
    value: '610200',
    label: '铜川市',
    pid: '610000',
    children: [{
      value: '610202',
      label: '王益区',
      pid: '610200'
    }, {
      value: '610203',
      label: '印台区',
      pid: '610200'
    }, {
      value: '610204',
      label: '耀州区',
      pid: '610200'
    }, {
      value: '610222',
      label: '宜君县',
      pid: '610200'
    }]
  }, {
    value: '610300',
    label: '宝鸡市',
    pid: '610000',
    children: [{
      value: '610302',
      label: '渭滨区',
      pid: '610300'
    }, {
      value: '610303',
      label: '金台区',
      pid: '610300'
    }, {
      value: '610304',
      label: '陈仓区',
      pid: '610300'
    }, {
      value: '610322',
      label: '凤翔县',
      pid: '610300'
    }, {
      value: '610323',
      label: '岐山县',
      pid: '610300'
    }, {
      value: '610324',
      label: '扶风县',
      pid: '610300'
    }, {
      value: '610326',
      label: '眉县',
      pid: '610300'
    }, {
      value: '610327',
      label: '陇县',
      pid: '610300'
    }, {
      value: '610328',
      label: '千阳县',
      pid: '610300'
    }, {
      value: '610329',
      label: '麟游县',
      pid: '610300'
    }, {
      value: '610330',
      label: '凤县',
      pid: '610300'
    }, {
      value: '610331',
      label: '太白县',
      pid: '610300'
    }]
  }, {
    value: '610400',
    label: '咸阳市',
    pid: '610000',
    children: [{
      value: '610402',
      label: '秦都区',
      pid: '610400'
    }, {
      value: '610403',
      label: '杨陵区',
      pid: '610400'
    }, {
      value: '610404',
      label: '渭城区',
      pid: '610400'
    }, {
      value: '610422',
      label: '三原县',
      pid: '610400'
    }, {
      value: '610423',
      label: '泾阳县',
      pid: '610400'
    }, {
      value: '610424',
      label: '乾县',
      pid: '610400'
    }, {
      value: '610425',
      label: '礼泉县',
      pid: '610400'
    }, {
      value: '610426',
      label: '永寿县',
      pid: '610400'
    }, {
      value: '610427',
      label: '彬县',
      pid: '610400'
    }, {
      value: '610428',
      label: '长武县',
      pid: '610400'
    }, {
      value: '610429',
      label: '旬邑县',
      pid: '610400'
    }, {
      value: '610430',
      label: '淳化县',
      pid: '610400'
    }, {
      value: '610431',
      label: '武功县',
      pid: '610400'
    }, {
      value: '610481',
      label: '兴平市',
      pid: '610400'
    }]
  }, {
    value: '610500',
    label: '渭南市',
    pid: '610000',
    children: [{
      value: '610502',
      label: '临渭区',
      pid: '610500'
    }, {
      value: '610521',
      label: '华县',
      pid: '610500'
    }, {
      value: '610522',
      label: '潼关县',
      pid: '610500'
    }, {
      value: '610523',
      label: '大荔县',
      pid: '610500'
    }, {
      value: '610524',
      label: '合阳县',
      pid: '610500'
    }, {
      value: '610525',
      label: '澄城县',
      pid: '610500'
    }, {
      value: '610526',
      label: '蒲城县',
      pid: '610500'
    }, {
      value: '610527',
      label: '白水县',
      pid: '610500'
    }, {
      value: '610528',
      label: '富平县',
      pid: '610500'
    }, {
      value: '610581',
      label: '韩城市',
      pid: '610500'
    }, {
      value: '610582',
      label: '华阴市',
      pid: '610500'
    }]
  }, {
    value: '610600',
    label: '延安市',
    pid: '610000',
    children: [{
      value: '610602',
      label: '宝塔区',
      pid: '610600'
    }, {
      value: '610621',
      label: '延长县',
      pid: '610600'
    }, {
      value: '610622',
      label: '延川县',
      pid: '610600'
    }, {
      value: '610623',
      label: '子长县',
      pid: '610600'
    }, {
      value: '610624',
      label: '安塞县',
      pid: '610600'
    }, {
      value: '610625',
      label: '志丹县',
      pid: '610600'
    }, {
      value: '610626',
      label: '吴起县',
      pid: '610600'
    }, {
      value: '610627',
      label: '甘泉县',
      pid: '610600'
    }, {
      value: '610628',
      label: '富县',
      pid: '610600'
    }, {
      value: '610629',
      label: '洛川县',
      pid: '610600'
    }, {
      value: '610630',
      label: '宜川县',
      pid: '610600'
    }, {
      value: '610631',
      label: '黄龙县',
      pid: '610600'
    }, {
      value: '610632',
      label: '黄陵县',
      pid: '610600'
    }]
  }, {
    value: '610700',
    label: '汉中市',
    pid: '610000',
    children: [{
      value: '610702',
      label: '汉台区',
      pid: '610700'
    }, {
      value: '610721',
      label: '南郑县',
      pid: '610700'
    }, {
      value: '610722',
      label: '城固县',
      pid: '610700'
    }, {
      value: '610723',
      label: '洋县',
      pid: '610700'
    }, {
      value: '610724',
      label: '西乡县',
      pid: '610700'
    }, {
      value: '610725',
      label: '勉县',
      pid: '610700'
    }, {
      value: '610726',
      label: '宁强县',
      pid: '610700'
    }, {
      value: '610727',
      label: '略阳县',
      pid: '610700'
    }, {
      value: '610728',
      label: '镇巴县',
      pid: '610700'
    }, {
      value: '610729',
      label: '留坝县',
      pid: '610700'
    }, {
      value: '610730',
      label: '佛坪县',
      pid: '610700'
    }]
  }, {
    value: '610800',
    label: '榆林市',
    pid: '610000',
    children: [{
      value: '610802',
      label: '榆阳区',
      pid: '610800'
    }, {
      value: '610821',
      label: '神木县',
      pid: '610800'
    }, {
      value: '610822',
      label: '府谷县',
      pid: '610800'
    }, {
      value: '610823',
      label: '横山县',
      pid: '610800'
    }, {
      value: '610824',
      label: '靖边县',
      pid: '610800'
    }, {
      value: '610825',
      label: '定边县',
      pid: '610800'
    }, {
      value: '610826',
      label: '绥德县',
      pid: '610800'
    }, {
      value: '610827',
      label: '米脂县',
      pid: '610800'
    }, {
      value: '610828',
      label: '佳县',
      pid: '610800'
    }, {
      value: '610829',
      label: '吴堡县',
      pid: '610800'
    }, {
      value: '610830',
      label: '清涧县',
      pid: '610800'
    }, {
      value: '610831',
      label: '子洲县',
      pid: '610800'
    }]
  }, {
    value: '610900',
    label: '安康市',
    pid: '610000',
    children: [{
      value: '610902',
      label: '汉滨区',
      pid: '610900'
    }, {
      value: '610921',
      label: '汉阴县',
      pid: '610900'
    }, {
      value: '610922',
      label: '石泉县',
      pid: '610900'
    }, {
      value: '610923',
      label: '宁陕县',
      pid: '610900'
    }, {
      value: '610924',
      label: '紫阳县',
      pid: '610900'
    }, {
      value: '610925',
      label: '岚皋县',
      pid: '610900'
    }, {
      value: '610926',
      label: '平利县',
      pid: '610900'
    }, {
      value: '610927',
      label: '镇坪县',
      pid: '610900'
    }, {
      value: '610928',
      label: '旬阳县',
      pid: '610900'
    }, {
      value: '610929',
      label: '白河县',
      pid: '610900'
    }]
  }, {
    value: '611000',
    label: '商洛市',
    pid: '610000',
    children: [{
      value: '611002',
      label: '商州区',
      pid: '611000'
    }, {
      value: '611021',
      label: '洛南县',
      pid: '611000'
    }, {
      value: '611022',
      label: '丹凤县',
      pid: '611000'
    }, {
      value: '611023',
      label: '商南县',
      pid: '611000'
    }, {
      value: '611024',
      label: '山阳县',
      pid: '611000'
    }, {
      value: '611025',
      label: '镇安县',
      pid: '611000'
    }, {
      value: '611026',
      label: '柞水县',
      pid: '611000'
    }]
  }, {
    value: '611100',
    label: '西咸新区',
    pid: '610000',
    children: [{
      value: '611101',
      label: '空港新城',
      pid: '611100'
    }, {
      value: '611102',
      label: '沣东新城',
      pid: '611100'
    }, {
      value: '611103',
      label: '秦汉新城',
      pid: '611100'
    }, {
      value: '611104',
      label: '沣西新城',
      pid: '611100'
    }, {
      value: '611105',
      label: '泾河新城',
      pid: '611100'
    }]
  }]
}, {
  value: '620000',
  label: '甘肃省',
  pid: '100000',
  children: [{
    value: '620100',
    label: '兰州市',
    pid: '620000',
    children: [{
      value: '620102',
      label: '城关区',
      pid: '620100'
    }, {
      value: '620103',
      label: '七里河区',
      pid: '620100'
    }, {
      value: '620104',
      label: '西固区',
      pid: '620100'
    }, {
      value: '620105',
      label: '安宁区',
      pid: '620100'
    }, {
      value: '620111',
      label: '红古区',
      pid: '620100'
    }, {
      value: '620121',
      label: '永登县',
      pid: '620100'
    }, {
      value: '620122',
      label: '皋兰县',
      pid: '620100'
    }, {
      value: '620123',
      label: '榆中县',
      pid: '620100'
    }]
  }, {
    value: '620200',
    label: '嘉峪关市',
    pid: '620000',
    children: [{
      value: '620201',
      label: '雄关区',
      pid: '620200'
    }, {
      value: '620202',
      label: '长城区',
      pid: '620200'
    }, {
      value: '620203',
      label: '镜铁区',
      pid: '620200'
    }]
  }, {
    value: '620300',
    label: '金昌市',
    pid: '620000',
    children: [{
      value: '620302',
      label: '金川区',
      pid: '620300'
    }, {
      value: '620321',
      label: '永昌县',
      pid: '620300'
    }]
  }, {
    value: '620400',
    label: '白银市',
    pid: '620000',
    children: [{
      value: '620402',
      label: '白银区',
      pid: '620400'
    }, {
      value: '620403',
      label: '平川区',
      pid: '620400'
    }, {
      value: '620421',
      label: '靖远县',
      pid: '620400'
    }, {
      value: '620422',
      label: '会宁县',
      pid: '620400'
    }, {
      value: '620423',
      label: '景泰县',
      pid: '620400'
    }]
  }, {
    value: '620500',
    label: '天水市',
    pid: '620000',
    children: [{
      value: '620502',
      label: '秦州区',
      pid: '620500'
    }, {
      value: '620503',
      label: '麦积区',
      pid: '620500'
    }, {
      value: '620521',
      label: '清水县',
      pid: '620500'
    }, {
      value: '620522',
      label: '秦安县',
      pid: '620500'
    }, {
      value: '620523',
      label: '甘谷县',
      pid: '620500'
    }, {
      value: '620524',
      label: '武山县',
      pid: '620500'
    }, {
      value: '620525',
      label: '张家川回族自治县',
      pid: '620500'
    }]
  }, {
    value: '620600',
    label: '武威市',
    pid: '620000',
    children: [{
      value: '620602',
      label: '凉州区',
      pid: '620600'
    }, {
      value: '620621',
      label: '民勤县',
      pid: '620600'
    }, {
      value: '620622',
      label: '古浪县',
      pid: '620600'
    }, {
      value: '620623',
      label: '天祝藏族自治县',
      pid: '620600'
    }]
  }, {
    value: '620700',
    label: '张掖市',
    pid: '620000',
    children: [{
      value: '620702',
      label: '甘州区',
      pid: '620700'
    }, {
      value: '620721',
      label: '肃南裕固族自治县',
      pid: '620700'
    }, {
      value: '620722',
      label: '民乐县',
      pid: '620700'
    }, {
      value: '620723',
      label: '临泽县',
      pid: '620700'
    }, {
      value: '620724',
      label: '高台县',
      pid: '620700'
    }, {
      value: '620725',
      label: '山丹县',
      pid: '620700'
    }]
  }, {
    value: '620800',
    label: '平凉市',
    pid: '620000',
    children: [{
      value: '620802',
      label: '崆峒区',
      pid: '620800'
    }, {
      value: '620821',
      label: '泾川县',
      pid: '620800'
    }, {
      value: '620822',
      label: '灵台县',
      pid: '620800'
    }, {
      value: '620823',
      label: '崇信县',
      pid: '620800'
    }, {
      value: '620824',
      label: '华亭县',
      pid: '620800'
    }, {
      value: '620825',
      label: '庄浪县',
      pid: '620800'
    }, {
      value: '620826',
      label: '静宁县',
      pid: '620800'
    }]
  }, {
    value: '620900',
    label: '酒泉市',
    pid: '620000',
    children: [{
      value: '620902',
      label: '肃州区',
      pid: '620900'
    }, {
      value: '620921',
      label: '金塔县',
      pid: '620900'
    }, {
      value: '620922',
      label: '瓜州县',
      pid: '620900'
    }, {
      value: '620923',
      label: '肃北蒙古族自治县',
      pid: '620900'
    }, {
      value: '620924',
      label: '阿克塞哈萨克族自治县',
      pid: '620900'
    }, {
      value: '620981',
      label: '玉门市',
      pid: '620900'
    }, {
      value: '620982',
      label: '敦煌市',
      pid: '620900'
    }]
  }, {
    value: '621000',
    label: '庆阳市',
    pid: '620000',
    children: [{
      value: '621002',
      label: '西峰区',
      pid: '621000'
    }, {
      value: '621021',
      label: '庆城县',
      pid: '621000'
    }, {
      value: '621022',
      label: '环县',
      pid: '621000'
    }, {
      value: '621023',
      label: '华池县',
      pid: '621000'
    }, {
      value: '621024',
      label: '合水县',
      pid: '621000'
    }, {
      value: '621025',
      label: '正宁县',
      pid: '621000'
    }, {
      value: '621026',
      label: '宁县',
      pid: '621000'
    }, {
      value: '621027',
      label: '镇原县',
      pid: '621000'
    }]
  }, {
    value: '621100',
    label: '定西市',
    pid: '620000',
    children: [{
      value: '621102',
      label: '安定区',
      pid: '621100'
    }, {
      value: '621121',
      label: '通渭县',
      pid: '621100'
    }, {
      value: '621122',
      label: '陇西县',
      pid: '621100'
    }, {
      value: '621123',
      label: '渭源县',
      pid: '621100'
    }, {
      value: '621124',
      label: '临洮县',
      pid: '621100'
    }, {
      value: '621125',
      label: '漳县',
      pid: '621100'
    }, {
      value: '621126',
      label: '岷县',
      pid: '621100'
    }]
  }, {
    value: '621200',
    label: '陇南市',
    pid: '620000',
    children: [{
      value: '621202',
      label: '武都区',
      pid: '621200'
    }, {
      value: '621221',
      label: '成县',
      pid: '621200'
    }, {
      value: '621222',
      label: '文县',
      pid: '621200'
    }, {
      value: '621223',
      label: '宕昌县',
      pid: '621200'
    }, {
      value: '621224',
      label: '康县',
      pid: '621200'
    }, {
      value: '621225',
      label: '西和县',
      pid: '621200'
    }, {
      value: '621226',
      label: '礼县',
      pid: '621200'
    }, {
      value: '621227',
      label: '徽县',
      pid: '621200'
    }, {
      value: '621228',
      label: '两当县',
      pid: '621200'
    }]
  }, {
    value: '622900',
    label: '临夏回族自治州',
    pid: '620000',
    children: [{
      value: '622901',
      label: '临夏市',
      pid: '622900'
    }, {
      value: '622921',
      label: '临夏县',
      pid: '622900'
    }, {
      value: '622922',
      label: '康乐县',
      pid: '622900'
    }, {
      value: '622923',
      label: '永靖县',
      pid: '622900'
    }, {
      value: '622924',
      label: '广河县',
      pid: '622900'
    }, {
      value: '622925',
      label: '和政县',
      pid: '622900'
    }, {
      value: '622926',
      label: '东乡族自治县',
      pid: '622900'
    }, {
      value: '622927',
      label: '积石山保安族东乡族撒拉族自治县',
      pid: '622900'
    }]
  }, {
    value: '623000',
    label: '甘南藏族自治州',
    pid: '620000',
    children: [{
      value: '623001',
      label: '合作市',
      pid: '623000'
    }, {
      value: '623021',
      label: '临潭县',
      pid: '623000'
    }, {
      value: '623022',
      label: '卓尼县',
      pid: '623000'
    }, {
      value: '623023',
      label: '舟曲县',
      pid: '623000'
    }, {
      value: '623024',
      label: '迭部县',
      pid: '623000'
    }, {
      value: '623025',
      label: '玛曲县',
      pid: '623000'
    }, {
      value: '623026',
      label: '碌曲县',
      pid: '623000'
    }, {
      value: '623027',
      label: '夏河县',
      pid: '623000'
    }]
  }]
}, {
  value: '630000',
  label: '青海省',
  pid: '100000',
  children: [{
    value: '630100',
    label: '西宁市',
    pid: '630000',
    children: [{
      value: '630102',
      label: '城东区',
      pid: '630100'
    }, {
      value: '630103',
      label: '城中区',
      pid: '630100'
    }, {
      value: '630104',
      label: '城西区',
      pid: '630100'
    }, {
      value: '630105',
      label: '城北区',
      pid: '630100'
    }, {
      value: '630121',
      label: '大通回族土族自治县',
      pid: '630100'
    }, {
      value: '630122',
      label: '湟中县',
      pid: '630100'
    }, {
      value: '630123',
      label: '湟源县',
      pid: '630100'
    }]
  }, {
    value: '630200',
    label: '海东市',
    pid: '630000',
    children: [{
      value: '630202',
      label: '乐都区',
      pid: '630200'
    }, {
      value: '630221',
      label: '平安县',
      pid: '630200'
    }, {
      value: '630222',
      label: '民和回族土族自治县',
      pid: '630200'
    }, {
      value: '630223',
      label: '互助土族自治县',
      pid: '630200'
    }, {
      value: '630224',
      label: '化隆回族自治县',
      pid: '630200'
    }, {
      value: '630225',
      label: '循化撒拉族自治县',
      pid: '630200'
    }]
  }, {
    value: '632200',
    label: '海北藏族自治州',
    pid: '630000',
    children: [{
      value: '632221',
      label: '门源回族自治县',
      pid: '632200'
    }, {
      value: '632222',
      label: '祁连县',
      pid: '632200'
    }, {
      value: '632223',
      label: '海晏县',
      pid: '632200'
    }, {
      value: '632224',
      label: '刚察县',
      pid: '632200'
    }]
  }, {
    value: '632300',
    label: '黄南藏族自治州',
    pid: '630000',
    children: [{
      value: '632321',
      label: '同仁县',
      pid: '632300'
    }, {
      value: '632322',
      label: '尖扎县',
      pid: '632300'
    }, {
      value: '632323',
      label: '泽库县',
      pid: '632300'
    }, {
      value: '632324',
      label: '河南蒙古族自治县',
      pid: '632300'
    }]
  }, {
    value: '632500',
    label: '海南藏族自治州',
    pid: '630000',
    children: [{
      value: '632521',
      label: '共和县',
      pid: '632500'
    }, {
      value: '632522',
      label: '同德县',
      pid: '632500'
    }, {
      value: '632523',
      label: '贵德县',
      pid: '632500'
    }, {
      value: '632524',
      label: '兴海县',
      pid: '632500'
    }, {
      value: '632525',
      label: '贵南县',
      pid: '632500'
    }]
  }, {
    value: '632600',
    label: '果洛藏族自治州',
    pid: '630000',
    children: [{
      value: '632621',
      label: '玛沁县',
      pid: '632600'
    }, {
      value: '632622',
      label: '班玛县',
      pid: '632600'
    }, {
      value: '632623',
      label: '甘德县',
      pid: '632600'
    }, {
      value: '632624',
      label: '达日县',
      pid: '632600'
    }, {
      value: '632625',
      label: '久治县',
      pid: '632600'
    }, {
      value: '632626',
      label: '玛多县',
      pid: '632600'
    }]
  }, {
    value: '632700',
    label: '玉树藏族自治州',
    pid: '630000',
    children: [{
      value: '632701',
      label: '玉树市',
      pid: '632700'
    }, {
      value: '632722',
      label: '杂多县',
      pid: '632700'
    }, {
      value: '632723',
      label: '称多县',
      pid: '632700'
    }, {
      value: '632724',
      label: '治多县',
      pid: '632700'
    }, {
      value: '632725',
      label: '囊谦县',
      pid: '632700'
    }, {
      value: '632726',
      label: '曲麻莱县',
      pid: '632700'
    }]
  }, {
    value: '632800',
    label: '海西蒙古族藏族自治州',
    pid: '630000',
    children: [{
      value: '632801',
      label: '格尔木市',
      pid: '632800'
    }, {
      value: '632802',
      label: '德令哈市',
      pid: '632800'
    }, {
      value: '632821',
      label: '乌兰县',
      pid: '632800'
    }, {
      value: '632822',
      label: '都兰县',
      pid: '632800'
    }, {
      value: '632823',
      label: '天峻县',
      pid: '632800'
    }]
  }]
}, {
  value: '640000',
  label: '宁夏回族自治区',
  pid: '100000',
  children: [{
    value: '640100',
    label: '银川市',
    pid: '640000',
    children: [{
      value: '640104',
      label: '兴庆区',
      pid: '640100'
    }, {
      value: '640105',
      label: '西夏区',
      pid: '640100'
    }, {
      value: '640106',
      label: '金凤区',
      pid: '640100'
    }, {
      value: '640121',
      label: '永宁县',
      pid: '640100'
    }, {
      value: '640122',
      label: '贺兰县',
      pid: '640100'
    }, {
      value: '640181',
      label: '灵武市',
      pid: '640100'
    }]
  }, {
    value: '640200',
    label: '石嘴山市',
    pid: '640000',
    children: [{
      value: '640202',
      label: '大武口区',
      pid: '640200'
    }, {
      value: '640205',
      label: '惠农区',
      pid: '640200'
    }, {
      value: '640221',
      label: '平罗县',
      pid: '640200'
    }]
  }, {
    value: '640300',
    label: '吴忠市',
    pid: '640000',
    children: [{
      value: '640302',
      label: '利通区',
      pid: '640300'
    }, {
      value: '640303',
      label: '红寺堡区',
      pid: '640300'
    }, {
      value: '640323',
      label: '盐池县',
      pid: '640300'
    }, {
      value: '640324',
      label: '同心县',
      pid: '640300'
    }, {
      value: '640381',
      label: '青铜峡市',
      pid: '640300'
    }]
  }, {
    value: '640400',
    label: '固原市',
    pid: '640000',
    children: [{
      value: '640402',
      label: '原州区',
      pid: '640400'
    }, {
      value: '640422',
      label: '西吉县',
      pid: '640400'
    }, {
      value: '640423',
      label: '隆德县',
      pid: '640400'
    }, {
      value: '640424',
      label: '泾源县',
      pid: '640400'
    }, {
      value: '640425',
      label: '彭阳县',
      pid: '640400'
    }]
  }, {
    value: '640500',
    label: '中卫市',
    pid: '640000',
    children: [{
      value: '640502',
      label: '沙坡头区',
      pid: '640500'
    }, {
      value: '640521',
      label: '中宁县',
      pid: '640500'
    }, {
      value: '640522',
      label: '海原县',
      pid: '640500'
    }]
  }]
}, {
  value: '650000',
  label: '新疆维吾尔自治区',
  pid: '100000',
  children: [{
    value: '650100',
    label: '乌鲁木齐市',
    pid: '650000',
    children: [{
      value: '650102',
      label: '天山区',
      pid: '650100'
    }, {
      value: '650103',
      label: '沙依巴克区',
      pid: '650100'
    }, {
      value: '650104',
      label: '新市区',
      pid: '650100'
    }, {
      value: '650105',
      label: '水磨沟区',
      pid: '650100'
    }, {
      value: '650106',
      label: '头屯河区',
      pid: '650100'
    }, {
      value: '650107',
      label: '达坂城区',
      pid: '650100'
    }, {
      value: '650109',
      label: '米东区',
      pid: '650100'
    }, {
      value: '650121',
      label: '乌鲁木齐县',
      pid: '650100'
    }]
  }, {
    value: '650200',
    label: '克拉玛依市',
    pid: '650000',
    children: [{
      value: '650202',
      label: '独山子区',
      pid: '650200'
    }, {
      value: '650203',
      label: '克拉玛依区',
      pid: '650200'
    }, {
      value: '650204',
      label: '白碱滩区',
      pid: '650200'
    }, {
      value: '650205',
      label: '乌尔禾区',
      pid: '650200'
    }]
  }, {
    value: '652100',
    label: '吐鲁番地区',
    pid: '650000',
    children: [{
      value: '652101',
      label: '吐鲁番市',
      pid: '652100'
    }, {
      value: '652122',
      label: '鄯善县',
      pid: '652100'
    }, {
      value: '652123',
      label: '托克逊县',
      pid: '652100'
    }]
  }, {
    value: '652200',
    label: '哈密地区',
    pid: '650000',
    children: [{
      value: '652201',
      label: '哈密市',
      pid: '652200'
    }, {
      value: '652222',
      label: '巴里坤哈萨克自治县',
      pid: '652200'
    }, {
      value: '652223',
      label: '伊吾县',
      pid: '652200'
    }]
  }, {
    value: '652300',
    label: '昌吉回族自治州',
    pid: '650000',
    children: [{
      value: '652301',
      label: '昌吉市',
      pid: '652300'
    }, {
      value: '652302',
      label: '阜康市',
      pid: '652300'
    }, {
      value: '652323',
      label: '呼图壁县',
      pid: '652300'
    }, {
      value: '652324',
      label: '玛纳斯县',
      pid: '652300'
    }, {
      value: '652325',
      label: '奇台县',
      pid: '652300'
    }, {
      value: '652327',
      label: '吉木萨尔县',
      pid: '652300'
    }, {
      value: '652328',
      label: '木垒哈萨克自治县',
      pid: '652300'
    }]
  }, {
    value: '652700',
    label: '博尔塔拉蒙古自治州',
    pid: '650000',
    children: [{
      value: '652701',
      label: '博乐市',
      pid: '652700'
    }, {
      value: '652702',
      label: '阿拉山口市',
      pid: '652700'
    }, {
      value: '652722',
      label: '精河县',
      pid: '652700'
    }, {
      value: '652723',
      label: '温泉县',
      pid: '652700'
    }]
  }, {
    value: '652800',
    label: '巴音郭楞蒙古自治州',
    pid: '650000',
    children: [{
      value: '652801',
      label: '库尔勒市',
      pid: '652800'
    }, {
      value: '652822',
      label: '轮台县',
      pid: '652800'
    }, {
      value: '652823',
      label: '尉犁县',
      pid: '652800'
    }, {
      value: '652824',
      label: '若羌县',
      pid: '652800'
    }, {
      value: '652825',
      label: '且末县',
      pid: '652800'
    }, {
      value: '652826',
      label: '焉耆回族自治县',
      pid: '652800'
    }, {
      value: '652827',
      label: '和静县',
      pid: '652800'
    }, {
      value: '652828',
      label: '和硕县',
      pid: '652800'
    }, {
      value: '652829',
      label: '博湖县',
      pid: '652800'
    }]
  }, {
    value: '652900',
    label: '阿克苏地区',
    pid: '650000',
    children: [{
      value: '652901',
      label: '阿克苏市',
      pid: '652900'
    }, {
      value: '652922',
      label: '温宿县',
      pid: '652900'
    }, {
      value: '652923',
      label: '库车县',
      pid: '652900'
    }, {
      value: '652924',
      label: '沙雅县',
      pid: '652900'
    }, {
      value: '652925',
      label: '新和县',
      pid: '652900'
    }, {
      value: '652926',
      label: '拜城县',
      pid: '652900'
    }, {
      value: '652927',
      label: '乌什县',
      pid: '652900'
    }, {
      value: '652928',
      label: '阿瓦提县',
      pid: '652900'
    }, {
      value: '652929',
      label: '柯坪县',
      pid: '652900'
    }]
  }, {
    value: '653000',
    label: '克孜勒苏柯尔克孜自治州',
    pid: '650000',
    children: [{
      value: '653001',
      label: '阿图什市',
      pid: '653000'
    }, {
      value: '653022',
      label: '阿克陶县',
      pid: '653000'
    }, {
      value: '653023',
      label: '阿合奇县',
      pid: '653000'
    }, {
      value: '653024',
      label: '乌恰县',
      pid: '653000'
    }]
  }, {
    value: '653100',
    label: '喀什地区',
    pid: '650000',
    children: [{
      value: '653101',
      label: '喀什市',
      pid: '653100'
    }, {
      value: '653121',
      label: '疏附县',
      pid: '653100'
    }, {
      value: '653122',
      label: '疏勒县',
      pid: '653100'
    }, {
      value: '653123',
      label: '英吉沙县',
      pid: '653100'
    }, {
      value: '653124',
      label: '泽普县',
      pid: '653100'
    }, {
      value: '653125',
      label: '莎车县',
      pid: '653100'
    }, {
      value: '653126',
      label: '叶城县',
      pid: '653100'
    }, {
      value: '653127',
      label: '麦盖提县',
      pid: '653100'
    }, {
      value: '653128',
      label: '岳普湖县',
      pid: '653100'
    }, {
      value: '653129',
      label: '伽师县',
      pid: '653100'
    }, {
      value: '653130',
      label: '巴楚县',
      pid: '653100'
    }, {
      value: '653131',
      label: '塔什库尔干塔吉克自治县',
      pid: '653100'
    }]
  }, {
    value: '653200',
    label: '和田地区',
    pid: '650000',
    children: [{
      value: '653201',
      label: '和田市',
      pid: '653200'
    }, {
      value: '653221',
      label: '和田县',
      pid: '653200'
    }, {
      value: '653222',
      label: '墨玉县',
      pid: '653200'
    }, {
      value: '653223',
      label: '皮山县',
      pid: '653200'
    }, {
      value: '653224',
      label: '洛浦县',
      pid: '653200'
    }, {
      value: '653225',
      label: '策勒县',
      pid: '653200'
    }, {
      value: '653226',
      label: '于田县',
      pid: '653200'
    }, {
      value: '653227',
      label: '民丰县',
      pid: '653200'
    }]
  }, {
    value: '654000',
    label: '伊犁哈萨克自治州',
    pid: '650000',
    children: [{
      value: '654002',
      label: '伊宁市',
      pid: '654000'
    }, {
      value: '654003',
      label: '奎屯市',
      pid: '654000'
    }, {
      value: '654004',
      label: '霍尔果斯市',
      pid: '654000'
    }, {
      value: '654021',
      label: '伊宁县',
      pid: '654000'
    }, {
      value: '654022',
      label: '察布查尔锡伯自治县',
      pid: '654000'
    }, {
      value: '654023',
      label: '霍城县',
      pid: '654000'
    }, {
      value: '654024',
      label: '巩留县',
      pid: '654000'
    }, {
      value: '654025',
      label: '新源县',
      pid: '654000'
    }, {
      value: '654026',
      label: '昭苏县',
      pid: '654000'
    }, {
      value: '654027',
      label: '特克斯县',
      pid: '654000'
    }, {
      value: '654028',
      label: '尼勒克县',
      pid: '654000'
    }]
  }, {
    value: '654200',
    label: '塔城地区',
    pid: '650000',
    children: [{
      value: '654201',
      label: '塔城市',
      pid: '654200'
    }, {
      value: '654202',
      label: '乌苏市',
      pid: '654200'
    }, {
      value: '654221',
      label: '额敏县',
      pid: '654200'
    }, {
      value: '654223',
      label: '沙湾县',
      pid: '654200'
    }, {
      value: '654224',
      label: '托里县',
      pid: '654200'
    }, {
      value: '654225',
      label: '裕民县',
      pid: '654200'
    }, {
      value: '654226',
      label: '和布克赛尔蒙古自治县',
      pid: '654200'
    }]
  }, {
    value: '654300',
    label: '阿勒泰地区',
    pid: '650000',
    children: [{
      value: '654301',
      label: '阿勒泰市',
      pid: '654300'
    }, {
      value: '654321',
      label: '布尔津县',
      pid: '654300'
    }, {
      value: '654322',
      label: '富蕴县',
      pid: '654300'
    }, {
      value: '654323',
      label: '福海县',
      pid: '654300'
    }, {
      value: '654324',
      label: '哈巴河县',
      pid: '654300'
    }, {
      value: '654325',
      label: '青河县',
      pid: '654300'
    }, {
      value: '654326',
      label: '吉木乃县',
      pid: '654300'
    }]
  }, {
    value: '659000',
    label: '直辖县级',
    pid: '650000',
    children: [{
      value: '659001',
      label: '石河子市',
      pid: '659000'
    }, {
      value: '659002',
      label: '阿拉尔市',
      pid: '659000'
    }, {
      value: '659003',
      label: '图木舒克市',
      pid: '659000'
    }, {
      value: '659004',
      label: '五家渠市',
      pid: '659000'
    }, {
      value: '659005',
      label: '北屯市',
      pid: '659000'
    }, {
      value: '659006',
      label: '铁门关市',
      pid: '659000'
    }, {
      value: '659007',
      label: '双河市',
      pid: '659000'
    }]
  }]
}, {
  value: '710000',
  label: '台湾',
  pid: '100000',
  children: [{
    value: '710100',
    label: '台北市',
    pid: '710000',
    children: [{
      value: '710101',
      label: '松山区',
      pid: '710100'
    }, {
      value: '710102',
      label: '信义区',
      pid: '710100'
    }, {
      value: '710103',
      label: '大安区',
      pid: '710100'
    }, {
      value: '710104',
      label: '中山区',
      pid: '710100'
    }, {
      value: '710105',
      label: '中正区',
      pid: '710100'
    }, {
      value: '710106',
      label: '大同区',
      pid: '710100'
    }, {
      value: '710107',
      label: '万华区',
      pid: '710100'
    }, {
      value: '710108',
      label: '文山区',
      pid: '710100'
    }, {
      value: '710109',
      label: '南港区',
      pid: '710100'
    }, {
      value: '710110',
      label: '内湖区',
      pid: '710100'
    }, {
      value: '710111',
      label: '士林区',
      pid: '710100'
    }, {
      value: '710112',
      label: '北投区',
      pid: '710100'
    }]
  }, {
    value: '710200',
    label: '高雄市',
    pid: '710000',
    children: [{
      value: '710201',
      label: '盐埕区',
      pid: '710200'
    }, {
      value: '710202',
      label: '鼓山区',
      pid: '710200'
    }, {
      value: '710203',
      label: '左营区',
      pid: '710200'
    }, {
      value: '710204',
      label: '楠梓区',
      pid: '710200'
    }, {
      value: '710205',
      label: '三民区',
      pid: '710200'
    }, {
      value: '710206',
      label: '新兴区',
      pid: '710200'
    }, {
      value: '710207',
      label: '前金区',
      pid: '710200'
    }, {
      value: '710208',
      label: '苓雅区',
      pid: '710200'
    }, {
      value: '710209',
      label: '前镇区',
      pid: '710200'
    }, {
      value: '710210',
      label: '旗津区',
      pid: '710200'
    }, {
      value: '710211',
      label: '小港区',
      pid: '710200'
    }, {
      value: '710212',
      label: '凤山区',
      pid: '710200'
    }, {
      value: '710213',
      label: '林园区',
      pid: '710200'
    }, {
      value: '710214',
      label: '大寮区',
      pid: '710200'
    }, {
      value: '710215',
      label: '大树区',
      pid: '710200'
    }, {
      value: '710216',
      label: '大社区',
      pid: '710200'
    }, {
      value: '710217',
      label: '仁武区',
      pid: '710200'
    }, {
      value: '710218',
      label: '鸟松区',
      pid: '710200'
    }, {
      value: '710219',
      label: '冈山区',
      pid: '710200'
    }, {
      value: '710220',
      label: '桥头区',
      pid: '710200'
    }, {
      value: '710221',
      label: '燕巢区',
      pid: '710200'
    }, {
      value: '710222',
      label: '田寮区',
      pid: '710200'
    }, {
      value: '710223',
      label: '阿莲区',
      pid: '710200'
    }, {
      value: '710224',
      label: '路竹区',
      pid: '710200'
    }, {
      value: '710225',
      label: '湖内区',
      pid: '710200'
    }, {
      value: '710226',
      label: '茄萣区',
      pid: '710200'
    }, {
      value: '710227',
      label: '永安区',
      pid: '710200'
    }, {
      value: '710228',
      label: '弥陀区',
      pid: '710200'
    }, {
      value: '710229',
      label: '梓官区',
      pid: '710200'
    }, {
      value: '710230',
      label: '旗山区',
      pid: '710200'
    }, {
      value: '710231',
      label: '美浓区',
      pid: '710200'
    }, {
      value: '710232',
      label: '六龟区',
      pid: '710200'
    }, {
      value: '710233',
      label: '甲仙区',
      pid: '710200'
    }, {
      value: '710234',
      label: '杉林区',
      pid: '710200'
    }, {
      value: '710235',
      label: '内门区',
      pid: '710200'
    }, {
      value: '710236',
      label: '茂林区',
      pid: '710200'
    }, {
      value: '710237',
      label: '桃源区',
      pid: '710200'
    }, {
      value: '710238',
      label: '那玛夏区',
      pid: '710200'
    }]
  }, {
    value: '710300',
    label: '基隆市',
    pid: '710000',
    children: [{
      value: '710301',
      label: '中正区',
      pid: '710300'
    }, {
      value: '710302',
      label: '七堵区',
      pid: '710300'
    }, {
      value: '710303',
      label: '暖暖区',
      pid: '710300'
    }, {
      value: '710304',
      label: '仁爱区',
      pid: '710300'
    }, {
      value: '710305',
      label: '中山区',
      pid: '710300'
    }, {
      value: '710306',
      label: '安乐区',
      pid: '710300'
    }, {
      value: '710307',
      label: '信义区',
      pid: '710300'
    }]
  }, {
    value: '710400',
    label: '台中市',
    pid: '710000',
    children: [{
      value: '710401',
      label: '中区',
      pid: '710400'
    }, {
      value: '710402',
      label: '东区',
      pid: '710400'
    }, {
      value: '710403',
      label: '南区',
      pid: '710400'
    }, {
      value: '710404',
      label: '西区',
      pid: '710400'
    }, {
      value: '710405',
      label: '北区',
      pid: '710400'
    }, {
      value: '710406',
      label: '西屯区',
      pid: '710400'
    }, {
      value: '710407',
      label: '南屯区',
      pid: '710400'
    }, {
      value: '710408',
      label: '北屯区',
      pid: '710400'
    }, {
      value: '710409',
      label: '丰原区',
      pid: '710400'
    }, {
      value: '710410',
      label: '东势区',
      pid: '710400'
    }, {
      value: '710411',
      label: '大甲区',
      pid: '710400'
    }, {
      value: '710412',
      label: '清水区',
      pid: '710400'
    }, {
      value: '710413',
      label: '沙鹿区',
      pid: '710400'
    }, {
      value: '710414',
      label: '梧栖区',
      pid: '710400'
    }, {
      value: '710415',
      label: '后里区',
      pid: '710400'
    }, {
      value: '710416',
      label: '神冈区',
      pid: '710400'
    }, {
      value: '710417',
      label: '潭子区',
      pid: '710400'
    }, {
      value: '710418',
      label: '大雅区',
      pid: '710400'
    }, {
      value: '710419',
      label: '新社区',
      pid: '710400'
    }, {
      value: '710420',
      label: '石冈区',
      pid: '710400'
    }, {
      value: '710421',
      label: '外埔区',
      pid: '710400'
    }, {
      value: '710422',
      label: '大安区',
      pid: '710400'
    }, {
      value: '710423',
      label: '乌日区',
      pid: '710400'
    }, {
      value: '710424',
      label: '大肚区',
      pid: '710400'
    }, {
      value: '710425',
      label: '龙井区',
      pid: '710400'
    }, {
      value: '710426',
      label: '雾峰区',
      pid: '710400'
    }, {
      value: '710427',
      label: '太平区',
      pid: '710400'
    }, {
      value: '710428',
      label: '大里区',
      pid: '710400'
    }, {
      value: '710429',
      label: '和平区',
      pid: '710400'
    }]
  }, {
    value: '710500',
    label: '台南市',
    pid: '710000',
    children: [{
      value: '710501',
      label: '东区',
      pid: '710500'
    }, {
      value: '710502',
      label: '南区',
      pid: '710500'
    }, {
      value: '710504',
      label: '北区',
      pid: '710500'
    }, {
      value: '710506',
      label: '安南区',
      pid: '710500'
    }, {
      value: '710507',
      label: '安平区',
      pid: '710500'
    }, {
      value: '710508',
      label: '中西区',
      pid: '710500'
    }, {
      value: '710509',
      label: '新营区',
      pid: '710500'
    }, {
      value: '710510',
      label: '盐水区',
      pid: '710500'
    }, {
      value: '710511',
      label: '白河区',
      pid: '710500'
    }, {
      value: '710512',
      label: '柳营区',
      pid: '710500'
    }, {
      value: '710513',
      label: '后壁区',
      pid: '710500'
    }, {
      value: '710514',
      label: '东山区',
      pid: '710500'
    }, {
      value: '710515',
      label: '麻豆区',
      pid: '710500'
    }, {
      value: '710516',
      label: '下营区',
      pid: '710500'
    }, {
      value: '710517',
      label: '六甲区',
      pid: '710500'
    }, {
      value: '710518',
      label: '官田区',
      pid: '710500'
    }, {
      value: '710519',
      label: '大内区',
      pid: '710500'
    }, {
      value: '710520',
      label: '佳里区',
      pid: '710500'
    }, {
      value: '710521',
      label: '学甲区',
      pid: '710500'
    }, {
      value: '710522',
      label: '西港区',
      pid: '710500'
    }, {
      value: '710523',
      label: '七股区',
      pid: '710500'
    }, {
      value: '710524',
      label: '将军区',
      pid: '710500'
    }, {
      value: '710525',
      label: '北门区',
      pid: '710500'
    }, {
      value: '710526',
      label: '新化区',
      pid: '710500'
    }, {
      value: '710527',
      label: '善化区',
      pid: '710500'
    }, {
      value: '710528',
      label: '新市区',
      pid: '710500'
    }, {
      value: '710529',
      label: '安定区',
      pid: '710500'
    }, {
      value: '710530',
      label: '山上区',
      pid: '710500'
    }, {
      value: '710531',
      label: '玉井区',
      pid: '710500'
    }, {
      value: '710532',
      label: '楠西区',
      pid: '710500'
    }, {
      value: '710533',
      label: '南化区',
      pid: '710500'
    }, {
      value: '710534',
      label: '左镇区',
      pid: '710500'
    }, {
      value: '710535',
      label: '仁德区',
      pid: '710500'
    }, {
      value: '710536',
      label: '归仁区',
      pid: '710500'
    }, {
      value: '710537',
      label: '关庙区',
      pid: '710500'
    }, {
      value: '710538',
      label: '龙崎区',
      pid: '710500'
    }, {
      value: '710539',
      label: '永康区',
      pid: '710500'
    }]
  }, {
    value: '710600',
    label: '新竹市',
    pid: '710000',
    children: [{
      value: '710601',
      label: '东区',
      pid: '710600'
    }, {
      value: '710602',
      label: '北区',
      pid: '710600'
    }, {
      value: '710603',
      label: '香山区',
      pid: '710600'
    }]
  }, {
    value: '710700',
    label: '嘉义市',
    pid: '710000',
    children: [{
      value: '710701',
      label: '东区',
      pid: '710700'
    }, {
      value: '710702',
      label: '西区',
      pid: '710700'
    }]
  }, {
    value: '710800',
    label: '新北市',
    pid: '710000',
    children: [{
      value: '710801',
      label: '板桥区',
      pid: '710800'
    }, {
      value: '710802',
      label: '三重区',
      pid: '710800'
    }, {
      value: '710803',
      label: '中和区',
      pid: '710800'
    }, {
      value: '710804',
      label: '永和区',
      pid: '710800'
    }, {
      value: '710805',
      label: '新庄区',
      pid: '710800'
    }, {
      value: '710806',
      label: '新店区',
      pid: '710800'
    }, {
      value: '710807',
      label: '树林区',
      pid: '710800'
    }, {
      value: '710808',
      label: '莺歌区',
      pid: '710800'
    }, {
      value: '710809',
      label: '三峡区',
      pid: '710800'
    }, {
      value: '710810',
      label: '淡水区',
      pid: '710800'
    }, {
      value: '710811',
      label: '汐止区',
      pid: '710800'
    }, {
      value: '710812',
      label: '瑞芳区',
      pid: '710800'
    }, {
      value: '710813',
      label: '土城区',
      pid: '710800'
    }, {
      value: '710814',
      label: '芦洲区',
      pid: '710800'
    }, {
      value: '710815',
      label: '五股区',
      pid: '710800'
    }, {
      value: '710816',
      label: '泰山区',
      pid: '710800'
    }, {
      value: '710817',
      label: '林口区',
      pid: '710800'
    }, {
      value: '710818',
      label: '深坑区',
      pid: '710800'
    }, {
      value: '710819',
      label: '石碇区',
      pid: '710800'
    }, {
      value: '710820',
      label: '坪林区',
      pid: '710800'
    }, {
      value: '710821',
      label: '三芝区',
      pid: '710800'
    }, {
      value: '710822',
      label: '石门区',
      pid: '710800'
    }, {
      value: '710823',
      label: '八里区',
      pid: '710800'
    }, {
      value: '710824',
      label: '平溪区',
      pid: '710800'
    }, {
      value: '710825',
      label: '双溪区',
      pid: '710800'
    }, {
      value: '710826',
      label: '贡寮区',
      pid: '710800'
    }, {
      value: '710827',
      label: '金山区',
      pid: '710800'
    }, {
      value: '710828',
      label: '万里区',
      pid: '710800'
    }, {
      value: '710829',
      label: '乌来区',
      pid: '710800'
    }]
  }, {
    value: '712200',
    label: '宜兰县',
    pid: '710000',
    children: [{
      value: '712201',
      label: '宜兰市',
      pid: '712200'
    }, {
      value: '712221',
      label: '罗东镇',
      pid: '712200'
    }, {
      value: '712222',
      label: '苏澳镇',
      pid: '712200'
    }, {
      value: '712223',
      label: '头城镇',
      pid: '712200'
    }, {
      value: '712224',
      label: '礁溪乡',
      pid: '712200'
    }, {
      value: '712225',
      label: '壮围乡',
      pid: '712200'
    }, {
      value: '712226',
      label: '员山乡',
      pid: '712200'
    }, {
      value: '712227',
      label: '冬山乡',
      pid: '712200'
    }, {
      value: '712228',
      label: '五结乡',
      pid: '712200'
    }, {
      value: '712229',
      label: '三星乡',
      pid: '712200'
    }, {
      value: '712230',
      label: '大同乡',
      pid: '712200'
    }, {
      value: '712231',
      label: '南澳乡',
      pid: '712200'
    }]
  }, {
    value: '712300',
    label: '桃园县',
    pid: '710000',
    children: [{
      value: '712301',
      label: '桃园市',
      pid: '712300'
    }, {
      value: '712302',
      label: '中坜市',
      pid: '712300'
    }, {
      value: '712303',
      label: '平镇市',
      pid: '712300'
    }, {
      value: '712304',
      label: '八德市',
      pid: '712300'
    }, {
      value: '712305',
      label: '杨梅市',
      pid: '712300'
    }, {
      value: '712306',
      label: '芦竹市',
      pid: '712300'
    }, {
      value: '712321',
      label: '大溪镇',
      pid: '712300'
    }, {
      value: '712324',
      label: '大园乡',
      pid: '712300'
    }, {
      value: '712325',
      label: '龟山乡',
      pid: '712300'
    }, {
      value: '712327',
      label: '龙潭乡',
      pid: '712300'
    }, {
      value: '712329',
      label: '新屋乡',
      pid: '712300'
    }, {
      value: '712330',
      label: '观音乡',
      pid: '712300'
    }, {
      value: '712331',
      label: '复兴乡',
      pid: '712300'
    }]
  }, {
    value: '712400',
    label: '新竹县',
    pid: '710000',
    children: [{
      value: '712401',
      label: '竹北市',
      pid: '712400'
    }, {
      value: '712421',
      label: '竹东镇',
      pid: '712400'
    }, {
      value: '712422',
      label: '新埔镇',
      pid: '712400'
    }, {
      value: '712423',
      label: '关西镇',
      pid: '712400'
    }, {
      value: '712424',
      label: '湖口乡',
      pid: '712400'
    }, {
      value: '712425',
      label: '新丰乡',
      pid: '712400'
    }, {
      value: '712426',
      label: '芎林乡',
      pid: '712400'
    }, {
      value: '712427',
      label: '横山乡',
      pid: '712400'
    }, {
      value: '712428',
      label: '北埔乡',
      pid: '712400'
    }, {
      value: '712429',
      label: '宝山乡',
      pid: '712400'
    }, {
      value: '712430',
      label: '峨眉乡',
      pid: '712400'
    }, {
      value: '712431',
      label: '尖石乡',
      pid: '712400'
    }, {
      value: '712432',
      label: '五峰乡',
      pid: '712400'
    }]
  }, {
    value: '712500',
    label: '苗栗县',
    pid: '710000',
    children: [{
      value: '712501',
      label: '苗栗市',
      pid: '712500'
    }, {
      value: '712521',
      label: '苑里镇',
      pid: '712500'
    }, {
      value: '712522',
      label: '通霄镇',
      pid: '712500'
    }, {
      value: '712523',
      label: '竹南镇',
      pid: '712500'
    }, {
      value: '712524',
      label: '头份镇',
      pid: '712500'
    }, {
      value: '712525',
      label: '后龙镇',
      pid: '712500'
    }, {
      value: '712526',
      label: '卓兰镇',
      pid: '712500'
    }, {
      value: '712527',
      label: '大湖乡',
      pid: '712500'
    }, {
      value: '712528',
      label: '公馆乡',
      pid: '712500'
    }, {
      value: '712529',
      label: '铜锣乡',
      pid: '712500'
    }, {
      value: '712530',
      label: '南庄乡',
      pid: '712500'
    }, {
      value: '712531',
      label: '头屋乡',
      pid: '712500'
    }, {
      value: '712532',
      label: '三义乡',
      pid: '712500'
    }, {
      value: '712533',
      label: '西湖乡',
      pid: '712500'
    }, {
      value: '712534',
      label: '造桥乡',
      pid: '712500'
    }, {
      value: '712535',
      label: '三湾乡',
      pid: '712500'
    }, {
      value: '712536',
      label: '狮潭乡',
      pid: '712500'
    }, {
      value: '712537',
      label: '泰安乡',
      pid: '712500'
    }]
  }, {
    value: '712700',
    label: '彰化县',
    pid: '710000',
    children: [{
      value: '712701',
      label: '彰化市',
      pid: '712700'
    }, {
      value: '712721',
      label: '鹿港镇',
      pid: '712700'
    }, {
      value: '712722',
      label: '和美镇',
      pid: '712700'
    }, {
      value: '712723',
      label: '线西乡',
      pid: '712700'
    }, {
      value: '712724',
      label: '伸港乡',
      pid: '712700'
    }, {
      value: '712725',
      label: '福兴乡',
      pid: '712700'
    }, {
      value: '712726',
      label: '秀水乡',
      pid: '712700'
    }, {
      value: '712727',
      label: '花坛乡',
      pid: '712700'
    }, {
      value: '712728',
      label: '芬园乡',
      pid: '712700'
    }, {
      value: '712729',
      label: '员林镇',
      pid: '712700'
    }, {
      value: '712730',
      label: '溪湖镇',
      pid: '712700'
    }, {
      value: '712731',
      label: '田中镇',
      pid: '712700'
    }, {
      value: '712732',
      label: '大村乡',
      pid: '712700'
    }, {
      value: '712733',
      label: '埔盐乡',
      pid: '712700'
    }, {
      value: '712734',
      label: '埔心乡',
      pid: '712700'
    }, {
      value: '712735',
      label: '永靖乡',
      pid: '712700'
    }, {
      value: '712736',
      label: '社头乡',
      pid: '712700'
    }, {
      value: '712737',
      label: '二水乡',
      pid: '712700'
    }, {
      value: '712738',
      label: '北斗镇',
      pid: '712700'
    }, {
      value: '712739',
      label: '二林镇',
      pid: '712700'
    }, {
      value: '712740',
      label: '田尾乡',
      pid: '712700'
    }, {
      value: '712741',
      label: '埤头乡',
      pid: '712700'
    }, {
      value: '712742',
      label: '芳苑乡',
      pid: '712700'
    }, {
      value: '712743',
      label: '大城乡',
      pid: '712700'
    }, {
      value: '712744',
      label: '竹塘乡',
      pid: '712700'
    }, {
      value: '712745',
      label: '溪州乡',
      pid: '712700'
    }]
  }, {
    value: '712800',
    label: '南投县',
    pid: '710000',
    children: [{
      value: '712801',
      label: '南投市',
      pid: '712800'
    }, {
      value: '712821',
      label: '埔里镇',
      pid: '712800'
    }, {
      value: '712822',
      label: '草屯镇',
      pid: '712800'
    }, {
      value: '712823',
      label: '竹山镇',
      pid: '712800'
    }, {
      value: '712824',
      label: '集集镇',
      pid: '712800'
    }, {
      value: '712825',
      label: '名间乡',
      pid: '712800'
    }, {
      value: '712826',
      label: '鹿谷乡',
      pid: '712800'
    }, {
      value: '712827',
      label: '中寮乡',
      pid: '712800'
    }, {
      value: '712828',
      label: '鱼池乡',
      pid: '712800'
    }, {
      value: '712829',
      label: '国姓乡',
      pid: '712800'
    }, {
      value: '712830',
      label: '水里乡',
      pid: '712800'
    }, {
      value: '712831',
      label: '信义乡',
      pid: '712800'
    }, {
      value: '712832',
      label: '仁爱乡',
      pid: '712800'
    }]
  }, {
    value: '712900',
    label: '云林县',
    pid: '710000',
    children: [{
      value: '712901',
      label: '斗六市',
      pid: '712900'
    }, {
      value: '712921',
      label: '斗南镇',
      pid: '712900'
    }, {
      value: '712922',
      label: '虎尾镇',
      pid: '712900'
    }, {
      value: '712923',
      label: '西螺镇',
      pid: '712900'
    }, {
      value: '712924',
      label: '土库镇',
      pid: '712900'
    }, {
      value: '712925',
      label: '北港镇',
      pid: '712900'
    }, {
      value: '712926',
      label: '古坑乡',
      pid: '712900'
    }, {
      value: '712927',
      label: '大埤乡',
      pid: '712900'
    }, {
      value: '712928',
      label: '莿桐乡',
      pid: '712900'
    }, {
      value: '712929',
      label: '林内乡',
      pid: '712900'
    }, {
      value: '712930',
      label: '二仑乡',
      pid: '712900'
    }, {
      value: '712931',
      label: '仑背乡',
      pid: '712900'
    }, {
      value: '712932',
      label: '麦寮乡',
      pid: '712900'
    }, {
      value: '712933',
      label: '东势乡',
      pid: '712900'
    }, {
      value: '712934',
      label: '褒忠乡',
      pid: '712900'
    }, {
      value: '712935',
      label: '台西乡',
      pid: '712900'
    }, {
      value: '712936',
      label: '元长乡',
      pid: '712900'
    }, {
      value: '712937',
      label: '四湖乡',
      pid: '712900'
    }, {
      value: '712938',
      label: '口湖乡',
      pid: '712900'
    }, {
      value: '712939',
      label: '水林乡',
      pid: '712900'
    }]
  }, {
    value: '713000',
    label: '嘉义县',
    pid: '710000',
    children: [{
      value: '713001',
      label: '太保市',
      pid: '713000'
    }, {
      value: '713002',
      label: '朴子市',
      pid: '713000'
    }, {
      value: '713023',
      label: '布袋镇',
      pid: '713000'
    }, {
      value: '713024',
      label: '大林镇',
      pid: '713000'
    }, {
      value: '713025',
      label: '民雄乡',
      pid: '713000'
    }, {
      value: '713026',
      label: '溪口乡',
      pid: '713000'
    }, {
      value: '713027',
      label: '新港乡',
      pid: '713000'
    }, {
      value: '713028',
      label: '六脚乡',
      pid: '713000'
    }, {
      value: '713029',
      label: '东石乡',
      pid: '713000'
    }, {
      value: '713030',
      label: '义竹乡',
      pid: '713000'
    }, {
      value: '713031',
      label: '鹿草乡',
      pid: '713000'
    }, {
      value: '713032',
      label: '水上乡',
      pid: '713000'
    }, {
      value: '713033',
      label: '中埔乡',
      pid: '713000'
    }, {
      value: '713034',
      label: '竹崎乡',
      pid: '713000'
    }, {
      value: '713035',
      label: '梅山乡',
      pid: '713000'
    }, {
      value: '713036',
      label: '番路乡',
      pid: '713000'
    }, {
      value: '713037',
      label: '大埔乡',
      pid: '713000'
    }, {
      value: '713038',
      label: '阿里山乡',
      pid: '713000'
    }]
  }, {
    value: '713300',
    label: '屏东县',
    pid: '710000',
    children: [{
      value: '713301',
      label: '屏东市',
      pid: '713300'
    }, {
      value: '713321',
      label: '潮州镇',
      pid: '713300'
    }, {
      value: '713322',
      label: '东港镇',
      pid: '713300'
    }, {
      value: '713323',
      label: '恒春镇',
      pid: '713300'
    }, {
      value: '713324',
      label: '万丹乡',
      pid: '713300'
    }, {
      value: '713325',
      label: '长治乡',
      pid: '713300'
    }, {
      value: '713326',
      label: '麟洛乡',
      pid: '713300'
    }, {
      value: '713327',
      label: '九如乡',
      pid: '713300'
    }, {
      value: '713328',
      label: '里港乡',
      pid: '713300'
    }, {
      value: '713329',
      label: '盐埔乡',
      pid: '713300'
    }, {
      value: '713330',
      label: '高树乡',
      pid: '713300'
    }, {
      value: '713331',
      label: '万峦乡',
      pid: '713300'
    }, {
      value: '713332',
      label: '内埔乡',
      pid: '713300'
    }, {
      value: '713333',
      label: '竹田乡',
      pid: '713300'
    }, {
      value: '713334',
      label: '新埤乡',
      pid: '713300'
    }, {
      value: '713335',
      label: '枋寮乡',
      pid: '713300'
    }, {
      value: '713336',
      label: '新园乡',
      pid: '713300'
    }, {
      value: '713337',
      label: '崁顶乡',
      pid: '713300'
    }, {
      value: '713338',
      label: '林边乡',
      pid: '713300'
    }, {
      value: '713339',
      label: '南州乡',
      pid: '713300'
    }, {
      value: '713340',
      label: '佳冬乡',
      pid: '713300'
    }, {
      value: '713341',
      label: '琉球乡',
      pid: '713300'
    }, {
      value: '713342',
      label: '车城乡',
      pid: '713300'
    }, {
      value: '713343',
      label: '满州乡',
      pid: '713300'
    }, {
      value: '713344',
      label: '枋山乡',
      pid: '713300'
    }, {
      value: '713345',
      label: '三地门乡',
      pid: '713300'
    }, {
      value: '713346',
      label: '雾台乡',
      pid: '713300'
    }, {
      value: '713347',
      label: '玛家乡',
      pid: '713300'
    }, {
      value: '713348',
      label: '泰武乡',
      pid: '713300'
    }, {
      value: '713349',
      label: '来义乡',
      pid: '713300'
    }, {
      value: '713350',
      label: '春日乡',
      pid: '713300'
    }, {
      value: '713351',
      label: '狮子乡',
      pid: '713300'
    }, {
      value: '713352',
      label: '牡丹乡',
      pid: '713300'
    }]
  }, {
    value: '713400',
    label: '台东县',
    pid: '710000',
    children: [{
      value: '713401',
      label: '台东市',
      pid: '713400'
    }, {
      value: '713421',
      label: '成功镇',
      pid: '713400'
    }, {
      value: '713422',
      label: '关山镇',
      pid: '713400'
    }, {
      value: '713423',
      label: '卑南乡',
      pid: '713400'
    }, {
      value: '713424',
      label: '鹿野乡',
      pid: '713400'
    }, {
      value: '713425',
      label: '池上乡',
      pid: '713400'
    }, {
      value: '713426',
      label: '东河乡',
      pid: '713400'
    }, {
      value: '713427',
      label: '长滨乡',
      pid: '713400'
    }, {
      value: '713428',
      label: '太麻里乡',
      pid: '713400'
    }, {
      value: '713429',
      label: '大武乡',
      pid: '713400'
    }, {
      value: '713430',
      label: '绿岛乡',
      pid: '713400'
    }, {
      value: '713431',
      label: '海端乡',
      pid: '713400'
    }, {
      value: '713432',
      label: '延平乡',
      pid: '713400'
    }, {
      value: '713433',
      label: '金峰乡',
      pid: '713400'
    }, {
      value: '713434',
      label: '达仁乡',
      pid: '713400'
    }, {
      value: '713435',
      label: '兰屿乡',
      pid: '713400'
    }]
  }, {
    value: '713500',
    label: '花莲县',
    pid: '710000',
    children: [{
      value: '713501',
      label: '花莲市',
      pid: '713500'
    }, {
      value: '713521',
      label: '凤林镇',
      pid: '713500'
    }, {
      value: '713522',
      label: '玉里镇',
      pid: '713500'
    }, {
      value: '713523',
      label: '新城乡',
      pid: '713500'
    }, {
      value: '713524',
      label: '吉安乡',
      pid: '713500'
    }, {
      value: '713525',
      label: '寿丰乡',
      pid: '713500'
    }, {
      value: '713526',
      label: '光复乡',
      pid: '713500'
    }, {
      value: '713527',
      label: '丰滨乡',
      pid: '713500'
    }, {
      value: '713528',
      label: '瑞穗乡',
      pid: '713500'
    }, {
      value: '713529',
      label: '富里乡',
      pid: '713500'
    }, {
      value: '713530',
      label: '秀林乡',
      pid: '713500'
    }, {
      value: '713531',
      label: '万荣乡',
      pid: '713500'
    }, {
      value: '713532',
      label: '卓溪乡',
      pid: '713500'
    }]
  }, {
    value: '713600',
    label: '澎湖县',
    pid: '710000',
    children: [{
      value: '713601',
      label: '马公市',
      pid: '713600'
    }, {
      value: '713621',
      label: '湖西乡',
      pid: '713600'
    }, {
      value: '713622',
      label: '白沙乡',
      pid: '713600'
    }, {
      value: '713623',
      label: '西屿乡',
      pid: '713600'
    }, {
      value: '713624',
      label: '望安乡',
      pid: '713600'
    }, {
      value: '713625',
      label: '七美乡',
      pid: '713600'
    }]
  }, {
    value: '713700',
    label: '金门县',
    pid: '710000',
    children: [{
      value: '713701',
      label: '金城镇',
      pid: '713700'
    }, {
      value: '713702',
      label: '金湖镇',
      pid: '713700'
    }, {
      value: '713703',
      label: '金沙镇',
      pid: '713700'
    }, {
      value: '713704',
      label: '金宁乡',
      pid: '713700'
    }, {
      value: '713705',
      label: '烈屿乡',
      pid: '713700'
    }, {
      value: '713706',
      label: '乌丘乡',
      pid: '713700'
    }]
  }, {
    value: '713800',
    label: '连江县',
    pid: '710000',
    children: [{
      value: '713801',
      label: '南竿乡',
      pid: '713800'
    }, {
      value: '713802',
      label: '北竿乡',
      pid: '713800'
    }, {
      value: '713803',
      label: '莒光乡',
      pid: '713800'
    }, {
      value: '713804',
      label: '东引乡',
      pid: '713800'
    }]
  }]
}, {
  value: '810000',
  label: '香港特别行政区',
  pid: '100000',
  children: [{
    value: '810100',
    label: '香港岛',
    pid: '810000',
    children: [{
      value: '810101',
      label: '中西区',
      pid: '810100'
    }, {
      value: '810102',
      label: '湾仔区',
      pid: '810100'
    }, {
      value: '810103',
      label: '东区',
      pid: '810100'
    }, {
      value: '810104',
      label: '南区',
      pid: '810100'
    }]
  }, {
    value: '810200',
    label: '九龙',
    pid: '810000',
    children: [{
      value: '810201',
      label: '油尖旺区',
      pid: '810200'
    }, {
      value: '810202',
      label: '深水埗区',
      pid: '810200'
    }, {
      value: '810203',
      label: '九龙城区',
      pid: '810200'
    }, {
      value: '810204',
      label: '黄大仙区',
      pid: '810200'
    }, {
      value: '810205',
      label: '观塘区',
      pid: '810200'
    }]
  }, {
    value: '810300',
    label: '新界',
    pid: '810000',
    children: [{
      value: '810301',
      label: '荃湾区',
      pid: '810300'
    }, {
      value: '810302',
      label: '屯门区',
      pid: '810300'
    }, {
      value: '810303',
      label: '元朗区',
      pid: '810300'
    }, {
      value: '810304',
      label: '北区',
      pid: '810300'
    }, {
      value: '810305',
      label: '大埔区',
      pid: '810300'
    }, {
      value: '810306',
      label: '西贡区',
      pid: '810300'
    }, {
      value: '810307',
      label: '沙田区',
      pid: '810300'
    }, {
      value: '810308',
      label: '葵青区',
      pid: '810300'
    }, {
      value: '810309',
      label: '离岛区',
      pid: '810300'
    }]
  }]
}, {
  value: '820000',
  label: '澳门特别行政区',
  pid: '100000',
  children: [{
    value: '820100',
    label: '澳门半岛',
    pid: '820000',
    children: [{
      value: '820101',
      label: '花地玛堂区',
      pid: '820100'
    }, {
      value: '820102',
      label: '圣安多尼堂区',
      pid: '820100'
    }, {
      value: '820103',
      label: '大堂区',
      pid: '820100'
    }, {
      value: '820104',
      label: '望德堂区',
      pid: '820100'
    }, {
      value: '820105',
      label: '风顺堂区',
      pid: '820100'
    }]
  }, {
    value: '820200',
    label: '氹仔岛',
    pid: '820000',
    children: [{
      value: '820201',
      label: '嘉模堂区',
      pid: '820200'
    }]
  }, {
    value: '820300',
    label: '路环岛',
    pid: '820000',
    children: [{
      value: '820301',
      label: '圣方济各堂区',
      pid: '820300'
    }]
  }]
}, {
  value: '900000',
  label: '钓鱼岛',
  pid: '100000'
}];

let XlCascader = class XlCascader extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "props", void 0);
    //绑定事件
    _defineProperty$1(this, "events", void 0);
    // model =======================
    _defineProperty$1(this, "value", void 0);
    // data ======================
    _defineProperty$1(this, "values", []);
    _defineProperty$1(this, "labels", '');
    _defineProperty$1(this, "options", city);
  }
  // emit ========================
  handleChange(e) {
    let cascader = this.$refs.cascader;
    let nodes = cascader.getCheckedNodes();
    if (nodes.length) {
      let {
        pathLabels
      } = nodes[0];
      if (pathLabels.length) {
        this.labels = pathLabels.join(',');
      } else {
        this.labels = '';
      }
    } else {
      this.labels = '';
    }
    this.$attrs.labelname && this.handleLabelName();
    return e;
  }
  handleLabelName() {
    return this.labels;
  }
  handleWatch(val) {
    this.values = JSON.parse(JSON.stringify(val || []));
  }
  async mounted() {
    await this.$nextTick();
    const data = this.$attrs.data;
    if (data) {
      this.options = data;
    }
    if (this.values && this.values.length) {
      this.handleChange(this.values);
    }
  }
};
__decorate([Prop({
  type: Object,
  default() {
    return {
      value: 'value',
      label: 'label',
      children: 'children',
      leaf: 'leaf'
    };
  }
})], XlCascader.prototype, "props", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlCascader.prototype, "events", void 0);
__decorate([Model('change', {
  type: [String, Array]
})], XlCascader.prototype, "value", void 0);
__decorate([Emit('change')], XlCascader.prototype, "handleChange", null);
__decorate([Emit('update:labelName')], XlCascader.prototype, "handleLabelName", null);
__decorate([Watch('value', {
  immediate: true
})], XlCascader.prototype, "handleWatch", null);
XlCascader = __decorate([Component({
  name: 'XlCascader',
  components: {}
})], XlCascader);
var script$4 = XlCascader;

/* script */
const __vue_script__$4 = script$4;

/* template */
var __vue_render__$4 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_c("el-cascader", _vm._g(_vm._b({
    ref: "cascader",
    attrs: {
      options: _vm.options,
      props: _vm.props,
      clearable: ""
    },
    on: {
      change: _vm.handleChange
    },
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "el-cascader", Object.assign({}, {
    filterable: true
  }, _vm.$attrs || {}), false), _vm.events))], 1);
};
var __vue_staticRenderFns__$4 = [];
__vue_render__$4._withStripped = true;

/* style */
const __vue_inject_styles__$4 = function (inject) {
  if (!inject) return;
  inject("data-v-7dc9a082_0", {
    source: ".el-cascader[data-v-7dc9a082] {\n  height: 40px;\n}\n.el-cascader--medium[data-v-7dc9a082] {\n  height: 36px;\n}\n.el-cascader--small[data-v-7dc9a082] {\n  height: 32px;\n}\n.el-cascader--mini[data-v-7dc9a082] {\n  height: 28px;\n}\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["D:\\xl-ui2\\packages\\cascader\\src\\main.vue", "main.vue"],
      "names": [],
      "mappings": "AA+GA;EACA,YAAA;AC9GA;AD+GA;EACA,YAAA;AC7GA;AD+GA;EACA,YAAA;AC7GA;AD+GA;EACA,YAAA;AC7GA;;AAEA,mCAAmC",
      "file": "main.vue",
      "sourcesContent": ["<template>\r\n  <div>\r\n    <el-cascader\r\n      ref=\"cascader\"\r\n      v-model=\"values\"\r\n      :options=\"options\"\r\n      :props=\"props\"\r\n      clearable\r\n      v-bind=\"{\r\n        ...{\r\n          filterable: true\r\n        },\r\n        ...($attrs || {})\r\n      }\"\r\n      v-on=\"events\"\r\n      @change=\"handleChange\"\r\n    ></el-cascader>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  Component,\r\n  Emit,\r\n  Model,\r\n  Prop,\r\n  Vue,\r\n  Watch\r\n} from 'vue-property-decorator'\r\nimport { city } from '@/utils/city'\r\n\r\n@Component({\r\n  name: 'XlCascader',\r\n  components: {}\r\n})\r\nexport default class XlCascader extends Vue {\r\n  // prop ========================\r\n  @Prop({\r\n    type: Object,\r\n    default() {\r\n      return {\r\n        value: 'value',\r\n        label: 'label',\r\n        children: 'children',\r\n        leaf: 'leaf'\r\n      }\r\n    }\r\n  })\r\n  readonly props!: object\r\n\r\n  //绑定事件\r\n  @Prop({\r\n    type: Object,\r\n    default() {\r\n      return {}\r\n    }\r\n  })\r\n  readonly events!: object\r\n\r\n  // model =======================\r\n  @Model('change', { type: [String, Array] }) readonly value!: string | []\r\n\r\n  // emit ========================\r\n\r\n  @Emit('change')\r\n  handleChange(e: Array<string>) {\r\n    let cascader = this.$refs.cascader as any\r\n    let nodes = cascader.getCheckedNodes()\r\n    if (nodes.length) {\r\n      let { pathLabels } = nodes[0]\r\n      if (pathLabels.length) {\r\n        this.labels = pathLabels.join(',')\r\n      } else {\r\n        this.labels = ''\r\n      }\r\n    } else {\r\n      this.labels = ''\r\n    }\r\n    this.$attrs.labelname && this.handleLabelName()\r\n    return e\r\n  }\r\n\r\n  @Emit('update:labelName')\r\n  public handleLabelName() {\r\n    return this.labels\r\n  }\r\n\r\n  @Watch('value', { immediate: true })\r\n  public handleWatch(val: string[] | string): void {\r\n    this.values = JSON.parse(JSON.stringify(val || []))\r\n  }\r\n\r\n  // data ======================\r\n  values = []\r\n  labels = ''\r\n  options = city\r\n\r\n  async mounted() {\r\n    await this.$nextTick()\r\n    const data = (this.$attrs as any).data\r\n    if (data) {\r\n      this.options = data\r\n    }\r\n    if (this.values && this.values.length) {\r\n      this.handleChange(this.values)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.el-cascader {\r\n  height: 40px;\r\n  &--medium {\r\n    height: 36px;\r\n  }\r\n  &--small {\r\n    height: 32px;\r\n  }\r\n  &--mini {\r\n    height: 28px;\r\n  }\r\n}\r\n</style>\r\n", ".el-cascader {\n  height: 40px;\n}\n.el-cascader--medium {\n  height: 36px;\n}\n.el-cascader--small {\n  height: 32px;\n}\n.el-cascader--mini {\n  height: 28px;\n}\n\n/*# sourceMappingURL=main.vue.map */"]
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$4 = "data-v-7dc9a082";
/* module identifier */
const __vue_module_identifier__$4 = undefined;
/* functional template */
const __vue_is_functional_template__$4 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$4 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$4,
  staticRenderFns: __vue_staticRenderFns__$4
}, __vue_inject_styles__$4, __vue_script__$4, __vue_scope_id__$4, __vue_is_functional_template__$4, __vue_module_identifier__$4, false, createInjector, undefined, undefined);

__vue_component__$4.install = Vue => {
  Vue.component(__vue_component__$4.extendOptions.name, __vue_component__$4);
};

let XlDatePicker2 = class XlDatePicker2 extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "attribute1", void 0);
    _defineProperty$1(this, "attribute2", void 0);
    _defineProperty$1(this, "events1", void 0);
    _defineProperty$1(this, "events2", void 0);
    // model =======================
    _defineProperty$1(this, "value", void 0);
    //data ====================
    _defineProperty$1(this, "value1", '');
    _defineProperty$1(this, "value2", '');
    _defineProperty$1(this, "attributes1", {
      type: 'datetime',
      clearable: true,
      placeholder: '请选择日期',
      'value-format': 'yyyy-MM-dd HH:mm:ss',
      'default-time': this.$dayjs().format('HH:mm:ss'),
      'range-separator': '-',
      'picker-options': {
        disabledDate: this.disabledDate1
      }
    });
    _defineProperty$1(this, "attributes2", {
      type: 'datetime',
      clearable: true,
      placeholder: '请选择日期',
      'value-format': 'yyyy-MM-dd HH:mm:ss',
      'default-time': this.$dayjs().format('HH:mm:ss'),
      'range-separator': '-',
      'picker-options': {
        disabledDate: this.disabledDate2
      }
    });
  }
  handleChange() {
    return [this.value1 || '', this.value2 || ''];
  }
  handleWatch(val) {
    if (Object.prototype.toString.call(val) === '[object Array]') {
      this.value1 = val[0] || '';
      this.value2 = val[1] || '';
    }
  }
  async mounted() {
    await this.$nextTick();
  }
  handleChangeDate1(e) {
    if (e === null) {
      this.value2 = '';
    }
    this.value1 = e;
    this.handleChange();
  }
  handleChangeDate2(e) {
    this.value2 = e;
    this.handleChange();
  }
  disabledDate1(time) {
    let boole = false;
    if (this.value2) {
      boole = time.getTime() >= new Date(this.value2).getTime();
    }
    return boole;
  }
  disabledDate2(time) {
    let boole = false;
    let dayTime = 1000 * 60 * 60 * 24;
    if (this.value1) {
      boole = new Date(this.value1).getTime() - dayTime >= time.getTime();
    }
    return boole;
  }
};
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlDatePicker2.prototype, "attribute1", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlDatePicker2.prototype, "attribute2", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlDatePicker2.prototype, "events1", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlDatePicker2.prototype, "events2", void 0);
__decorate([Model('change', {
  type: [String, Array]
})], XlDatePicker2.prototype, "value", void 0);
__decorate([Emit('change')], XlDatePicker2.prototype, "handleChange", null);
__decorate([Watch('value', {
  immediate: true
})], XlDatePicker2.prototype, "handleWatch", null);
XlDatePicker2 = __decorate([Component({
  name: 'XlDatePicker2',
  components: {}
})], XlDatePicker2);
var script$3 = XlDatePicker2;

/* script */
const __vue_script__$3 = script$3;

/* template */
var __vue_render__$3 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "w-full flex justify-start items-center"
  }, [_c("el-date-picker", _vm._g(_vm._b({
    on: {
      change: _vm.handleChangeDate1
    },
    model: {
      value: _vm.value1,
      callback: function ($$v) {
        _vm.value1 = $$v;
      },
      expression: "value1"
    }
  }, "el-date-picker", Object.assign({}, _vm.attributes1, _vm.attribute1), false), _vm.events1 || {})), _vm._v(" "), _c("span", {
    staticClass: "px-2 text-gray-400"
  }, [_vm._v(" - ")]), _vm._v(" "), _c("el-date-picker", _vm._g(_vm._b({
    attrs: {
      disabled: !_vm.value[0]
    },
    on: {
      change: _vm.handleChangeDate2
    },
    model: {
      value: _vm.value2,
      callback: function ($$v) {
        _vm.value2 = $$v;
      },
      expression: "value2"
    }
  }, "el-date-picker", Object.assign({}, _vm.attributes2, _vm.attribute2), false), _vm.events2 || {}))], 1);
};
var __vue_staticRenderFns__$3 = [];
__vue_render__$3._withStripped = true;

/* style */
const __vue_inject_styles__$3 = function (inject) {
  if (!inject) return;
  inject("data-v-9211f3c4_0", {
    source: "\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["main.vue"],
      "names": [],
      "mappings": ";;AAEA,mCAAmC",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$3 = "data-v-9211f3c4";
/* module identifier */
const __vue_module_identifier__$3 = undefined;
/* functional template */
const __vue_is_functional_template__$3 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$3 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$3,
  staticRenderFns: __vue_staticRenderFns__$3
}, __vue_inject_styles__$3, __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, false, createInjector, undefined, undefined);

__vue_component__$3.install = Vue => {
  Vue.component(__vue_component__$3.extendOptions.name, __vue_component__$3);
};

let XlHeaderSearch = class XlHeaderSearch extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "formData", void 0);
    _defineProperty$1(this, "formItem", void 0);
    _defineProperty$1(this, "formAttribute", void 0);
    _defineProperty$1(this, "rules", void 0);
    //显示行数 默认2 1和2
    _defineProperty$1(this, "showRow", void 0);
    _defineProperty$1(this, "layout", void 0);
    _defineProperty$1(this, "btnLast", void 0);
    //data==========================
    _defineProperty$1(this, "collapse", false);
    _defineProperty$1(this, "initform", {});
    _defineProperty$1(this, "form", {});
    _defineProperty$1(this, "label", {});
    _defineProperty$1(this, "colLen", 0);
    _defineProperty$1(this, "defLayout", {
      xs: 24,
      sm: 12,
      md: 8,
      lg: 6,
      xl: 6
    });
  }
  // vmounted
  mounted() {
    this.initform = Object.assign({}, this.formData);
    this.form = Object.assign({}, this.formData);
    this.getWindowWidth();
    window.addEventListener('resize', this.getWindowWidth);
    this.formItem.forEach(item => {
      if (['select'].includes(item.type) && this.formData[item.prop]) {
        this.handleSetLabel(this.formData[item.prop], item.prop);
      }
    });
  }
  beforeDestroy() {
    window.removeEventListener('resize', this.getWindowWidth);
  }
  // methods====================
  getWindowWidth() {
    const w = document.documentElement.clientWidth;
    let count = [2, 4, 6, 8, 8];
    if (this.showRow === 1) {
      count = [1, 2, 3, 4, 4];
    }
    if (w < 768) {
      this.colLen = count[0];
    }
    if (w >= 768) {
      this.colLen = count[1];
    }
    if (w >= 992) {
      this.colLen = count[2];
    }
    if (w >= 1200) {
      this.colLen = count[3];
    }
    if (w >= 1920) {
      this.colLen = count[4];
    }
  }
  handleSetLabel(data, prop) {
    if (prop) {
      this.$set(this.form, prop, data);
    }
  }
  //搜索
  handleSearch() {
    this.$refs.myform.validate(valid => {
      if (valid) {
        let data = {
          ...this.form,
          ...this.label
        };
        for (const key in data) {
          if (Object.prototype.hasOwnProperty.call(data, key)) {
            let item = data[key];
            if (Object.prototype.toString.call(item) === '[object Array]') {
              data[key] = item.join(',');
            }
          }
        }
        this.$emit('search', data);
      }
    });
  }
  //重置表单
  resetForm() {
    this.$refs.myform.resetFields();
    let obj = {};
    for (const key in this.initform) {
      if (Object.prototype.hasOwnProperty.call(this.initform, key)) {
        const item = this.initform[key];
        if (item === undefined) {
          obj[key] = '';
        } else {
          obj[key] = item;
        }
      }
    }
    this.form = obj;
    let data = {
      ...this.form,
      ...this.label
    };
    for (const key in data) {
      if (Object.prototype.hasOwnProperty.call(data, key)) {
        let item = data[key];
        if (Object.prototype.toString.call(item) === '[object Array]') {
          data[key] = item.join(',');
        }
      }
    }
    this.$emit('cancel', data);
  }
};
__decorate([Prop({
  type: Object,
  default: () => {}
})], XlHeaderSearch.prototype, "formData", void 0);
__decorate([Prop({
  type: Array,
  default() {
    return [];
  }
})], XlHeaderSearch.prototype, "formItem", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlHeaderSearch.prototype, "formAttribute", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlHeaderSearch.prototype, "rules", void 0);
__decorate([Prop({
  type: Number,
  default: 1
})], XlHeaderSearch.prototype, "showRow", void 0);
__decorate([Prop({
  type: Object,
  default() {
    return {};
  }
})], XlHeaderSearch.prototype, "layout", void 0);
__decorate([Prop({
  type: Boolean,
  default: false
})], XlHeaderSearch.prototype, "btnLast", void 0);
XlHeaderSearch = __decorate([Component({
  name: 'XlHeaderSearch',
  components: {
    XlFormItem: __vue_component__$7
  }
})], XlHeaderSearch);
var script$2 = XlHeaderSearch;

/* script */
const __vue_script__$2 = script$2;

/* template */
var __vue_render__$2 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_c("el-form", _vm._b({
    ref: "myform",
    attrs: {
      model: _vm.form,
      rules: _vm.rules
    },
    nativeOn: {
      submit: function ($event) {
        $event.preventDefault();
      }
    }
  }, "el-form", Object.assign({}, {
    inline: false,
    "label-width": "100px",
    "label-suffix": "",
    "label-position": "right",
    "show-message": false
  }, _vm.formAttribute), false), [_c("el-row", [_vm._l(_vm.formItem.slice(0, _vm.btnLast ? _vm.formItem.length : _vm.colLen), function (item, index) {
    return _c("el-col", _vm._b({
      key: index
    }, "el-col", item.span ? {
      span: item.span
    } : Object.assign({}, _vm.defLayout, _vm.layout), false), [_c("XlFormItem", {
      attrs: {
        item: item
      },
      on: {
        labelname: function ($event) {
          return _vm.handleSetLabel($event, item.attribute.labelname);
        }
      },
      model: {
        value: _vm.form[item["prop"]],
        callback: function ($$v) {
          _vm.$set(_vm.form, item["prop"], $$v);
        },
        expression: "form[item['prop']]"
      }
    })], 1);
  }), _vm._v(" "), _vm.btnLast ? _c("el-col", _vm._b({}, "el-col", Object.assign({}, _vm.defLayout, _vm.layout), false), [_vm._t("default", [_c("div", {
    staticClass: "pl-3"
  }, [_c("el-button", {
    attrs: {
      type: "primary"
    },
    on: {
      click: _vm.handleSearch
    }
  }, [_vm._v(" 搜索 ")]), _vm._v(" "), _c("el-button", {
    on: {
      click: _vm.resetForm
    }
  }, [_vm._v(" 清空 ")])], 1)])], 2) : _vm._e()], 2), _vm._v(" "), !_vm.btnLast ? [_c("el-collapse-transition", [_c("div", {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: _vm.collapse,
      expression: "collapse"
    }]
  }, [_c("el-row", _vm._l(_vm.formItem.slice(_vm.colLen, _vm.formItem.length), function (item, index) {
    return _c("el-col", _vm._b({
      key: index
    }, "el-col", item.span ? {
      span: item.span
    } : Object.assign({}, _vm.defLayout, _vm.layout), false), [_c("XlFormItem", {
      attrs: {
        item: item
      },
      on: {
        labelname: function ($event) {
          return _vm.handleSetLabel($event, item.attribute.labelname);
        }
      },
      model: {
        value: _vm.form[item["prop"]],
        callback: function ($$v) {
          _vm.$set(_vm.form, item["prop"], $$v);
        },
        expression: "form[item['prop']]"
      }
    })], 1);
  }), 1)], 1)]), _vm._v(" "), _c("div", {
    staticClass: "flex justify-end items-center w-full"
  }, [_vm._t("default", [_c("el-button", {
    attrs: {
      type: "primary"
    },
    on: {
      click: _vm.handleSearch
    }
  }, [_vm._v(" 搜索 ")]), _vm._v(" "), _c("el-button", {
    on: {
      click: _vm.resetForm
    }
  }, [_vm._v("清空")])]), _vm._v(" "), _vm.formItem.length > _vm.colLen ? _c("el-button", {
    attrs: {
      type: "text",
      icon: _vm.collapse ? "el-icon-arrow-up" : "el-icon-arrow-down"
    },
    on: {
      click: function ($event) {
        _vm.collapse = !_vm.collapse;
      }
    }
  }, [_vm._v("\n          " + _vm._s(_vm.collapse ? "收起" : "展开") + "\n        ")]) : _vm._e()], 2)] : _vm._e()], 2)], 1);
};
var __vue_staticRenderFns__$2 = [];
__vue_render__$2._withStripped = true;

/* style */
const __vue_inject_styles__$2 = function (inject) {
  if (!inject) return;
  inject("data-v-29eaf350_0", {
    source: "\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["main.vue"],
      "names": [],
      "mappings": ";;AAEA,mCAAmC",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$2 = "data-v-29eaf350";
/* module identifier */
const __vue_module_identifier__$2 = undefined;
/* functional template */
const __vue_is_functional_template__$2 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$2 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$2,
  staticRenderFns: __vue_staticRenderFns__$2
}, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, false, createInjector, undefined, undefined);

__vue_component__$2.install = Vue => {
  Vue.component(__vue_component__$2.extendOptions.name, __vue_component__$2);
};

var vueTreeselect_cjs = {exports: {}};

var slicedToArray = {exports: {}};

var arrayWithHoles = {exports: {}};

var hasRequiredArrayWithHoles;

function requireArrayWithHoles () {
	if (hasRequiredArrayWithHoles) return arrayWithHoles.exports;
	hasRequiredArrayWithHoles = 1;
	(function (module) {
		function _arrayWithHoles(arr) {
		  if (Array.isArray(arr)) return arr;
		}
		module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (arrayWithHoles));
	return arrayWithHoles.exports;
}

var iterableToArrayLimit = {exports: {}};

var hasRequiredIterableToArrayLimit;

function requireIterableToArrayLimit () {
	if (hasRequiredIterableToArrayLimit) return iterableToArrayLimit.exports;
	hasRequiredIterableToArrayLimit = 1;
	(function (module) {
		function _iterableToArrayLimit(r, l) {
		  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
		  if (null != t) {
		    var e,
		      n,
		      i,
		      u,
		      a = [],
		      f = !0,
		      o = !1;
		    try {
		      if (i = (t = t.call(r)).next, 0 === l) {
		        if (Object(t) !== t) return;
		        f = !1;
		      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
		    } catch (r) {
		      o = !0, n = r;
		    } finally {
		      try {
		        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
		      } finally {
		        if (o) throw n;
		      }
		    }
		    return a;
		  }
		}
		module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (iterableToArrayLimit));
	return iterableToArrayLimit.exports;
}

var unsupportedIterableToArray = {exports: {}};

var arrayLikeToArray = {exports: {}};

var hasRequiredArrayLikeToArray;

function requireArrayLikeToArray () {
	if (hasRequiredArrayLikeToArray) return arrayLikeToArray.exports;
	hasRequiredArrayLikeToArray = 1;
	(function (module) {
		function _arrayLikeToArray(arr, len) {
		  if (len == null || len > arr.length) len = arr.length;
		  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
		  return arr2;
		}
		module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (arrayLikeToArray));
	return arrayLikeToArray.exports;
}

var hasRequiredUnsupportedIterableToArray;

function requireUnsupportedIterableToArray () {
	if (hasRequiredUnsupportedIterableToArray) return unsupportedIterableToArray.exports;
	hasRequiredUnsupportedIterableToArray = 1;
	(function (module) {
		var arrayLikeToArray = requireArrayLikeToArray();
		function _unsupportedIterableToArray(o, minLen) {
		  if (!o) return;
		  if (typeof o === "string") return arrayLikeToArray(o, minLen);
		  var n = Object.prototype.toString.call(o).slice(8, -1);
		  if (n === "Object" && o.constructor) n = o.constructor.name;
		  if (n === "Map" || n === "Set") return Array.from(o);
		  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
		}
		module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (unsupportedIterableToArray));
	return unsupportedIterableToArray.exports;
}

var nonIterableRest = {exports: {}};

var hasRequiredNonIterableRest;

function requireNonIterableRest () {
	if (hasRequiredNonIterableRest) return nonIterableRest.exports;
	hasRequiredNonIterableRest = 1;
	(function (module) {
		function _nonIterableRest() {
		  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
		}
		module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (nonIterableRest));
	return nonIterableRest.exports;
}

var hasRequiredSlicedToArray;

function requireSlicedToArray () {
	if (hasRequiredSlicedToArray) return slicedToArray.exports;
	hasRequiredSlicedToArray = 1;
	(function (module) {
		var arrayWithHoles = requireArrayWithHoles();
		var iterableToArrayLimit = requireIterableToArrayLimit();
		var unsupportedIterableToArray = requireUnsupportedIterableToArray();
		var nonIterableRest = requireNonIterableRest();
		function _slicedToArray(arr, i) {
		  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
		}
		module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (slicedToArray));
	return slicedToArray.exports;
}

var toConsumableArray = {exports: {}};

var arrayWithoutHoles = {exports: {}};

var hasRequiredArrayWithoutHoles;

function requireArrayWithoutHoles () {
	if (hasRequiredArrayWithoutHoles) return arrayWithoutHoles.exports;
	hasRequiredArrayWithoutHoles = 1;
	(function (module) {
		var arrayLikeToArray = requireArrayLikeToArray();
		function _arrayWithoutHoles(arr) {
		  if (Array.isArray(arr)) return arrayLikeToArray(arr);
		}
		module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (arrayWithoutHoles));
	return arrayWithoutHoles.exports;
}

var iterableToArray = {exports: {}};

var hasRequiredIterableToArray;

function requireIterableToArray () {
	if (hasRequiredIterableToArray) return iterableToArray.exports;
	hasRequiredIterableToArray = 1;
	(function (module) {
		function _iterableToArray(iter) {
		  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
		}
		module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (iterableToArray));
	return iterableToArray.exports;
}

var nonIterableSpread = {exports: {}};

var hasRequiredNonIterableSpread;

function requireNonIterableSpread () {
	if (hasRequiredNonIterableSpread) return nonIterableSpread.exports;
	hasRequiredNonIterableSpread = 1;
	(function (module) {
		function _nonIterableSpread() {
		  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
		}
		module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (nonIterableSpread));
	return nonIterableSpread.exports;
}

var hasRequiredToConsumableArray;

function requireToConsumableArray () {
	if (hasRequiredToConsumableArray) return toConsumableArray.exports;
	hasRequiredToConsumableArray = 1;
	(function (module) {
		var arrayWithoutHoles = requireArrayWithoutHoles();
		var iterableToArray = requireIterableToArray();
		var unsupportedIterableToArray = requireUnsupportedIterableToArray();
		var nonIterableSpread = requireNonIterableSpread();
		function _toConsumableArray(arr) {
		  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
		}
		module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (toConsumableArray));
	return toConsumableArray.exports;
}

var defineProperty = {exports: {}};

var toPropertyKey = {exports: {}};

var _typeof = {exports: {}};

var hasRequired_typeof;

function require_typeof () {
	if (hasRequired_typeof) return _typeof.exports;
	hasRequired_typeof = 1;
	(function (module) {
		function _typeof(o) {
		  "@babel/helpers - typeof";

		  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
		    return typeof o;
		  } : function (o) {
		    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
		  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
		}
		module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (_typeof));
	return _typeof.exports;
}

var toPrimitive = {exports: {}};

var hasRequiredToPrimitive;

function requireToPrimitive () {
	if (hasRequiredToPrimitive) return toPrimitive.exports;
	hasRequiredToPrimitive = 1;
	(function (module) {
		var _typeof = require_typeof()["default"];
		function _toPrimitive(input, hint) {
		  if (_typeof(input) !== "object" || input === null) return input;
		  var prim = input[Symbol.toPrimitive];
		  if (prim !== undefined) {
		    var res = prim.call(input, hint || "default");
		    if (_typeof(res) !== "object") return res;
		    throw new TypeError("@@toPrimitive must return a primitive value.");
		  }
		  return (hint === "string" ? String : Number)(input);
		}
		module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (toPrimitive));
	return toPrimitive.exports;
}

var hasRequiredToPropertyKey;

function requireToPropertyKey () {
	if (hasRequiredToPropertyKey) return toPropertyKey.exports;
	hasRequiredToPropertyKey = 1;
	(function (module) {
		var _typeof = require_typeof()["default"];
		var toPrimitive = requireToPrimitive();
		function _toPropertyKey(arg) {
		  var key = toPrimitive(arg, "string");
		  return _typeof(key) === "symbol" ? key : String(key);
		}
		module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (toPropertyKey));
	return toPropertyKey.exports;
}

var hasRequiredDefineProperty;

function requireDefineProperty () {
	if (hasRequiredDefineProperty) return defineProperty.exports;
	hasRequiredDefineProperty = 1;
	(function (module) {
		var toPropertyKey = requireToPropertyKey();
		function _defineProperty(obj, key, value) {
		  key = toPropertyKey(key);
		  if (key in obj) {
		    Object.defineProperty(obj, key, {
		      value: value,
		      enumerable: true,
		      configurable: true,
		      writable: true
		    });
		  } else {
		    obj[key] = value;
		  }
		  return obj;
		}
		module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (defineProperty));
	return defineProperty.exports;
}

var fuzzysearch_1;
var hasRequiredFuzzysearch;

function requireFuzzysearch () {
	if (hasRequiredFuzzysearch) return fuzzysearch_1;
	hasRequiredFuzzysearch = 1;

	function fuzzysearch (needle, haystack) {
	  var tlen = haystack.length;
	  var qlen = needle.length;
	  if (qlen > tlen) {
	    return false;
	  }
	  if (qlen === tlen) {
	    return needle === haystack;
	  }
	  outer: for (var i = 0, j = 0; i < qlen; i++) {
	    var nch = needle.charCodeAt(i);
	    while (j < tlen) {
	      if (haystack.charCodeAt(j++) === nch) {
	        continue outer;
	      }
	    }
	    return false;
	  }
	  return true;
	}

	fuzzysearch_1 = fuzzysearch;
	return fuzzysearch_1;
}

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */

var noop_1;
var hasRequiredNoop;

function requireNoop () {
	if (hasRequiredNoop) return noop_1;
	hasRequiredNoop = 1;
	function noop() {
	  // No operation performed.
	}

	noop_1 = noop;
	return noop_1;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */

var isObject_1;
var hasRequiredIsObject;

function requireIsObject () {
	if (hasRequiredIsObject) return isObject_1;
	hasRequiredIsObject = 1;
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	isObject_1 = isObject;
	return isObject_1;
}

/** Detect free variable `global` from Node.js. */

var _freeGlobal;
var hasRequired_freeGlobal;

function require_freeGlobal () {
	if (hasRequired_freeGlobal) return _freeGlobal;
	hasRequired_freeGlobal = 1;
	var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

	_freeGlobal = freeGlobal;
	return _freeGlobal;
}

var _root;
var hasRequired_root;

function require_root () {
	if (hasRequired_root) return _root;
	hasRequired_root = 1;
	var freeGlobal = require_freeGlobal();

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	_root = root;
	return _root;
}

var now_1;
var hasRequiredNow;

function requireNow () {
	if (hasRequiredNow) return now_1;
	hasRequiredNow = 1;
	var root = require_root();

	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};

	now_1 = now;
	return now_1;
}

/** Used to match a single whitespace character. */

var _trimmedEndIndex;
var hasRequired_trimmedEndIndex;

function require_trimmedEndIndex () {
	if (hasRequired_trimmedEndIndex) return _trimmedEndIndex;
	hasRequired_trimmedEndIndex = 1;
	var reWhitespace = /\s/;

	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
	 * character of `string`.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {number} Returns the index of the last non-whitespace character.
	 */
	function trimmedEndIndex(string) {
	  var index = string.length;

	  while (index-- && reWhitespace.test(string.charAt(index))) {}
	  return index;
	}

	_trimmedEndIndex = trimmedEndIndex;
	return _trimmedEndIndex;
}

var _baseTrim;
var hasRequired_baseTrim;

function require_baseTrim () {
	if (hasRequired_baseTrim) return _baseTrim;
	hasRequired_baseTrim = 1;
	var trimmedEndIndex = require_trimmedEndIndex();

	/** Used to match leading whitespace. */
	var reTrimStart = /^\s+/;

	/**
	 * The base implementation of `_.trim`.
	 *
	 * @private
	 * @param {string} string The string to trim.
	 * @returns {string} Returns the trimmed string.
	 */
	function baseTrim(string) {
	  return string
	    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
	    : string;
	}

	_baseTrim = baseTrim;
	return _baseTrim;
}

var _Symbol;
var hasRequired_Symbol;

function require_Symbol () {
	if (hasRequired_Symbol) return _Symbol;
	hasRequired_Symbol = 1;
	var root = require_root();

	/** Built-in value references. */
	var Symbol = root.Symbol;

	_Symbol = Symbol;
	return _Symbol;
}

var _getRawTag;
var hasRequired_getRawTag;

function require_getRawTag () {
	if (hasRequired_getRawTag) return _getRawTag;
	hasRequired_getRawTag = 1;
	var Symbol = require_Symbol();

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	_getRawTag = getRawTag;
	return _getRawTag;
}

/** Used for built-in method references. */

var _objectToString;
var hasRequired_objectToString;

function require_objectToString () {
	if (hasRequired_objectToString) return _objectToString;
	hasRequired_objectToString = 1;
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	_objectToString = objectToString;
	return _objectToString;
}

var _baseGetTag;
var hasRequired_baseGetTag;

function require_baseGetTag () {
	if (hasRequired_baseGetTag) return _baseGetTag;
	hasRequired_baseGetTag = 1;
	var Symbol = require_Symbol(),
	    getRawTag = require_getRawTag(),
	    objectToString = require_objectToString();

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	_baseGetTag = baseGetTag;
	return _baseGetTag;
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */

var isObjectLike_1;
var hasRequiredIsObjectLike;

function requireIsObjectLike () {
	if (hasRequiredIsObjectLike) return isObjectLike_1;
	hasRequiredIsObjectLike = 1;
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	isObjectLike_1 = isObjectLike;
	return isObjectLike_1;
}

var isSymbol_1;
var hasRequiredIsSymbol;

function requireIsSymbol () {
	if (hasRequiredIsSymbol) return isSymbol_1;
	hasRequiredIsSymbol = 1;
	var baseGetTag = require_baseGetTag(),
	    isObjectLike = requireIsObjectLike();

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}

	isSymbol_1 = isSymbol;
	return isSymbol_1;
}

var toNumber_1;
var hasRequiredToNumber;

function requireToNumber () {
	if (hasRequiredToNumber) return toNumber_1;
	hasRequiredToNumber = 1;
	var baseTrim = require_baseTrim(),
	    isObject = requireIsObject(),
	    isSymbol = requireIsSymbol();

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = baseTrim(value);
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	toNumber_1 = toNumber;
	return toNumber_1;
}

var debounce_1;
var hasRequiredDebounce;

function requireDebounce () {
	if (hasRequiredDebounce) return debounce_1;
	hasRequiredDebounce = 1;
	var isObject = requireIsObject(),
	    now = requireNow(),
	    toNumber = requireToNumber();

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;

	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;

	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }

	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;

	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }

	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }

	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        timeWaiting = wait - timeSinceLastCall;

	    return maxing
	      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
	      : timeWaiting;
	  }

	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;

	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }

	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }

	  function trailingEdge(time) {
	    timerId = undefined;

	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }

	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }

	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }

	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);

	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;

	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        clearTimeout(timerId);
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}

	debounce_1 = debounce;
	return debounce_1;
}

var index$1 = (function (element, listener) {
	var expand = document.createElement('_');
	var shrink = expand.appendChild(document.createElement('_'));
	var expandChild = expand.appendChild(document.createElement('_'));
	var shrinkChild = shrink.appendChild(document.createElement('_'));

	var lastWidth = void 0,
	    lastHeight = void 0;

	shrink.style.cssText = expand.style.cssText = 'height:100%;left:0;opacity:0;overflow:hidden;pointer-events:none;position:absolute;top:0;transition:0s;width:100%;z-index:-1';
	shrinkChild.style.cssText = expandChild.style.cssText = 'display:block;height:100%;transition:0s;width:100%';
	shrinkChild.style.width = shrinkChild.style.height = '200%';

	element.appendChild(expand);

	test();

	return stop;

	function test() {
		unbind();

		var width = element.offsetWidth;
		var height = element.offsetHeight;

		if (width !== lastWidth || height !== lastHeight) {
			lastWidth = width;
			lastHeight = height;

			expandChild.style.width = width * 2 + 'px';
			expandChild.style.height = height * 2 + 'px';

			expand.scrollLeft = expand.scrollWidth;
			expand.scrollTop = expand.scrollHeight;
			shrink.scrollLeft = shrink.scrollWidth;
			shrink.scrollTop = shrink.scrollHeight;

			listener({ width: width, height: height });
		}

		shrink.addEventListener('scroll', test);
		expand.addEventListener('scroll', test);
	}

	function unbind() {
		shrink.removeEventListener('scroll', test);
		expand.removeEventListener('scroll', test);
	}

	function stop() {
		unbind();

		element.removeChild(expand);
	}
});

var index_es = /*#__PURE__*/Object.freeze({
  __proto__: null,
  default: index$1
});

var require$$6 = /*@__PURE__*/getAugmentedNamespace(index_es);

var isPromise = {exports: {}};

var hasRequiredIsPromise;

function requireIsPromise () {
	if (hasRequiredIsPromise) return isPromise.exports;
	hasRequiredIsPromise = 1;
	isPromise.exports = isPromise$1;
	isPromise.exports.default = isPromise$1;

	function isPromise$1(obj) {
	  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
	}
	return isPromise.exports;
}

var toFinite_1;
var hasRequiredToFinite;

function requireToFinite () {
	if (hasRequiredToFinite) return toFinite_1;
	hasRequiredToFinite = 1;
	var toNumber = requireToNumber();

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	toFinite_1 = toFinite;
	return toFinite_1;
}

var toInteger_1;
var hasRequiredToInteger;

function requireToInteger () {
	if (hasRequiredToInteger) return toInteger_1;
	hasRequiredToInteger = 1;
	var toFinite = requireToFinite();

	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;

	  return result === result ? (remainder ? result - remainder : result) : 0;
	}

	toInteger_1 = toInteger;
	return toInteger_1;
}

var before_1;
var hasRequiredBefore;

function requireBefore () {
	if (hasRequiredBefore) return before_1;
	hasRequiredBefore = 1;
	var toInteger = requireToInteger();

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that invokes `func`, with the `this` binding and arguments
	 * of the created function, while it's called less than `n` times. Subsequent
	 * calls to the created function return the result of the last `func` invocation.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Function
	 * @param {number} n The number of calls at which `func` is no longer invoked.
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new restricted function.
	 * @example
	 *
	 * jQuery(element).on('click', _.before(5, addContactToList));
	 * // => Allows adding up to 4 contacts to the list.
	 */
	function before(n, func) {
	  var result;
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  n = toInteger(n);
	  return function() {
	    if (--n > 0) {
	      result = func.apply(this, arguments);
	    }
	    if (n <= 1) {
	      func = undefined;
	    }
	    return result;
	  };
	}

	before_1 = before;
	return before_1;
}

var once_1;
var hasRequiredOnce;

function requireOnce () {
	if (hasRequiredOnce) return once_1;
	hasRequiredOnce = 1;
	var before = requireBefore();

	/**
	 * Creates a function that is restricted to invoking `func` once. Repeat calls
	 * to the function return the value of the first invocation. The `func` is
	 * invoked with the `this` binding and arguments of the created function.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new restricted function.
	 * @example
	 *
	 * var initialize = _.once(createApplication);
	 * initialize();
	 * initialize();
	 * // => `createApplication` is invoked once
	 */
	function once(func) {
	  return before(2, func);
	}

	once_1 = once;
	return once_1;
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */

var identity_1;
var hasRequiredIdentity;

function requireIdentity () {
	if (hasRequiredIdentity) return identity_1;
	hasRequiredIdentity = 1;
	function identity(value) {
	  return value;
	}

	identity_1 = identity;
	return identity_1;
}

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */

var constant_1;
var hasRequiredConstant;

function requireConstant () {
	if (hasRequiredConstant) return constant_1;
	hasRequiredConstant = 1;
	function constant(value) {
	  return function() {
	    return value;
	  };
	}

	constant_1 = constant;
	return constant_1;
}

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */

var last_1;
var hasRequiredLast;

function requireLast () {
	if (hasRequiredLast) return last_1;
	hasRequiredLast = 1;
	function last(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? array[length - 1] : undefined;
	}

	last_1 = last;
	return last_1;
}

/*!
 * vue-treeselect v0.4.0 | (c) 2017-2019 Riophae Lee
 * Released under the MIT License.
 * https://vue-treeselect.js.org/
 */

(function (module) {
	module.exports =
	/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// define __esModule on exports
	/******/ 	__webpack_require__.r = function(exports) {
	/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
	/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
	/******/ 		}
	/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
	/******/ 	};
	/******/
	/******/ 	// create a fake namespace object
	/******/ 	// mode & 1: value is a module id, require it
	/******/ 	// mode & 2: merge all properties of value into the ns
	/******/ 	// mode & 4: return value when already ns object
	/******/ 	// mode & 8|1: behave like require
	/******/ 	__webpack_require__.t = function(value, mode) {
	/******/ 		if(mode & 1) value = __webpack_require__(value);
	/******/ 		if(mode & 8) return value;
	/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
	/******/ 		var ns = Object.create(null);
	/******/ 		__webpack_require__.r(ns);
	/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
	/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
	/******/ 		return ns;
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "/";
	/******/
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 16);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports) {

	module.exports = requireSlicedToArray();

	/***/ }),
	/* 1 */
	/***/ (function(module, exports) {

	module.exports = requireToConsumableArray();

	/***/ }),
	/* 2 */
	/***/ (function(module, exports) {

	module.exports = requireDefineProperty();

	/***/ }),
	/* 3 */
	/***/ (function(module, exports) {

	module.exports = requireFuzzysearch();

	/***/ }),
	/* 4 */
	/***/ (function(module, exports) {

	module.exports = requireNoop();

	/***/ }),
	/* 5 */
	/***/ (function(module, exports) {

	module.exports = requireDebounce();

	/***/ }),
	/* 6 */
	/***/ (function(module, exports) {

	module.exports = require$$6;

	/***/ }),
	/* 7 */
	/***/ (function(module, exports) {

	module.exports = requireIsPromise();

	/***/ }),
	/* 8 */
	/***/ (function(module, exports) {

	module.exports = requireOnce();

	/***/ }),
	/* 9 */
	/***/ (function(module, exports) {

	module.exports = requireIdentity();

	/***/ }),
	/* 10 */
	/***/ (function(module, exports) {

	module.exports = requireConstant();

	/***/ }),
	/* 11 */
	/***/ (function(module, exports) {

	module.exports = require_typeof();

	/***/ }),
	/* 12 */
	/***/ (function(module, exports) {

	module.exports = requireLast();

	/***/ }),
	/* 13 */
	/***/ (function(module, exports) {

	module.exports = requireBabelHelperVueJsxMergeProps();

	/***/ }),
	/* 14 */
	/***/ (function(module, exports) {

	module.exports = Vue;

	/***/ }),
	/* 15 */
	/***/ (function(module, exports, __webpack_require__) {

	// extracted by mini-css-extract-plugin

	/***/ }),
	/* 16 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {
	__webpack_require__.r(__webpack_exports__);

	// EXTERNAL MODULE: external "@babel/runtime/helpers/slicedToArray"
	var slicedToArray_ = __webpack_require__(0);
	var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray_);

	// EXTERNAL MODULE: external "@babel/runtime/helpers/toConsumableArray"
	var toConsumableArray_ = __webpack_require__(1);
	var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray_);

	// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
	var defineProperty_ = __webpack_require__(2);
	var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);

	// EXTERNAL MODULE: external "fuzzysearch"
	var external_fuzzysearch_ = __webpack_require__(3);
	var external_fuzzysearch_default = /*#__PURE__*/__webpack_require__.n(external_fuzzysearch_);

	// EXTERNAL MODULE: external "lodash/noop"
	var noop_ = __webpack_require__(4);
	var noop_default = /*#__PURE__*/__webpack_require__.n(noop_);

	// CONCATENATED MODULE: ./src/utils/noop.js

	// CONCATENATED MODULE: ./src/utils/warning.js


	var warning_warning = noop_default.a ;
	// CONCATENATED MODULE: ./src/utils/onLeftClick.js
	function onLeftClick(mouseDownHandler) {
	  return function onMouseDown(evt) {
	    if (evt.type === 'mousedown' && evt.button === 0) {
	      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      mouseDownHandler.call.apply(mouseDownHandler, [this, evt].concat(args));
	    }
	  };
	}
	// CONCATENATED MODULE: ./src/utils/scrollIntoView.js
	function scrollIntoView($scrollingEl, $focusedEl) {
	  var scrollingReact = $scrollingEl.getBoundingClientRect();
	  var focusedRect = $focusedEl.getBoundingClientRect();
	  var overScroll = $focusedEl.offsetHeight / 3;

	  if (focusedRect.bottom + overScroll > scrollingReact.bottom) {
	    $scrollingEl.scrollTop = Math.min($focusedEl.offsetTop + $focusedEl.clientHeight - $scrollingEl.offsetHeight + overScroll, $scrollingEl.scrollHeight);
	  } else if (focusedRect.top - overScroll < scrollingReact.top) {
	    $scrollingEl.scrollTop = Math.max($focusedEl.offsetTop - overScroll, 0);
	  }
	}
	// EXTERNAL MODULE: external "lodash/debounce"
	var debounce_ = __webpack_require__(5);
	var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

	// CONCATENATED MODULE: ./src/utils/debounce.js

	// EXTERNAL MODULE: external "watch-size"
	var external_watch_size_ = __webpack_require__(6);
	var external_watch_size_default = /*#__PURE__*/__webpack_require__.n(external_watch_size_);

	// CONCATENATED MODULE: ./src/utils/removeFromArray.js
	function removeFromArray(arr, elem) {
	  var idx = arr.indexOf(elem);
	  if (idx !== -1) arr.splice(idx, 1);
	}
	// CONCATENATED MODULE: ./src/utils/watchSize.js


	var intervalId;
	var registered = [];
	var INTERVAL_DURATION = 100;

	function run() {
	  intervalId = setInterval(function () {
	    registered.forEach(test);
	  }, INTERVAL_DURATION);
	}

	function stop() {
	  clearInterval(intervalId);
	  intervalId = null;
	}

	function test(item) {
	  var $el = item.$el,
	      listener = item.listener,
	      lastWidth = item.lastWidth,
	      lastHeight = item.lastHeight;
	  var width = $el.offsetWidth;
	  var height = $el.offsetHeight;

	  if (lastWidth !== width || lastHeight !== height) {
	    item.lastWidth = width;
	    item.lastHeight = height;
	    listener({
	      width: width,
	      height: height
	    });
	  }
	}

	function watchSizeForIE9($el, listener) {
	  var item = {
	    $el: $el,
	    listener: listener,
	    lastWidth: null,
	    lastHeight: null
	  };

	  var unwatch = function unwatch() {
	    removeFromArray(registered, item);
	    if (!registered.length) stop();
	  };

	  registered.push(item);
	  test(item);
	  run();
	  return unwatch;
	}

	function watchSize($el, listener) {
	  var isIE9 = document.documentMode === 9;
	  var locked = true;

	  var wrappedListener = function wrappedListener() {
	    return locked || listener.apply(void 0, arguments);
	  };

	  var implementation = isIE9 ? watchSizeForIE9 : external_watch_size_default.a;
	  var removeSizeWatcher = implementation($el, wrappedListener);
	  locked = false;
	  return removeSizeWatcher;
	}
	// CONCATENATED MODULE: ./src/utils/setupResizeAndScrollEventListeners.js
	function findScrollParents($el) {
	  var $scrollParents = [];
	  var $parent = $el.parentNode;

	  while ($parent && $parent.nodeName !== 'BODY' && $parent.nodeType === document.ELEMENT_NODE) {
	    if (isScrollElment($parent)) $scrollParents.push($parent);
	    $parent = $parent.parentNode;
	  }

	  $scrollParents.push(window);
	  return $scrollParents;
	}

	function isScrollElment($el) {
	  var _getComputedStyle = getComputedStyle($el),
	      overflow = _getComputedStyle.overflow,
	      overflowX = _getComputedStyle.overflowX,
	      overflowY = _getComputedStyle.overflowY;

	  return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX);
	}

	function setupResizeAndScrollEventListeners($el, listener) {
	  var $scrollParents = findScrollParents($el);
	  window.addEventListener('resize', listener, {
	    passive: true
	  });
	  $scrollParents.forEach(function (scrollParent) {
	    scrollParent.addEventListener('scroll', listener, {
	      passive: true
	    });
	  });
	  return function removeEventListeners() {
	    window.removeEventListener('resize', listener, {
	      passive: true
	    });
	    $scrollParents.forEach(function ($scrollParent) {
	      $scrollParent.removeEventListener('scroll', listener, {
	        passive: true
	      });
	    });
	  };
	}
	// CONCATENATED MODULE: ./src/utils/isNaN.js
	function isNaN_isNaN(x) {
	  return x !== x;
	}
	// EXTERNAL MODULE: external "is-promise"
	var external_is_promise_ = __webpack_require__(7);
	var external_is_promise_default = /*#__PURE__*/__webpack_require__.n(external_is_promise_);

	// CONCATENATED MODULE: ./src/utils/isPromise.js

	// EXTERNAL MODULE: external "lodash/once"
	var once_ = __webpack_require__(8);
	var once_default = /*#__PURE__*/__webpack_require__.n(once_);

	// CONCATENATED MODULE: ./src/utils/once.js

	// EXTERNAL MODULE: external "lodash/identity"
	var identity_ = __webpack_require__(9);
	var identity_default = /*#__PURE__*/__webpack_require__.n(identity_);

	// CONCATENATED MODULE: ./src/utils/identity.js

	// EXTERNAL MODULE: external "lodash/constant"
	var constant_ = __webpack_require__(10);
	var constant_default = /*#__PURE__*/__webpack_require__.n(constant_);

	// CONCATENATED MODULE: ./src/utils/constant.js

	// CONCATENATED MODULE: ./src/utils/createMap.js
	var createMap = function createMap() {
	  return Object.create(null);
	};
	// EXTERNAL MODULE: external "@babel/runtime/helpers/typeof"
	var typeof_ = __webpack_require__(11);
	var typeof_default = /*#__PURE__*/__webpack_require__.n(typeof_);

	// CONCATENATED MODULE: ./src/utils/deepExtend.js


	function isPlainObject(value) {
	  if (value == null || typeof_default()(value) !== 'object') return false;
	  return Object.getPrototypeOf(value) === Object.prototype;
	}

	function copy(obj, key, value) {
	  if (isPlainObject(value)) {
	    obj[key] || (obj[key] = {});
	    deepExtend(obj[key], value);
	  } else {
	    obj[key] = value;
	  }
	}

	function deepExtend(target, source) {
	  if (isPlainObject(source)) {
	    var keys = Object.keys(source);

	    for (var i = 0, len = keys.length; i < len; i++) {
	      copy(target, keys[i], source[keys[i]]);
	    }
	  }

	  return target;
	}
	// EXTERNAL MODULE: external "lodash/last"
	var last_ = __webpack_require__(12);
	var last_default = /*#__PURE__*/__webpack_require__.n(last_);

	// CONCATENATED MODULE: ./src/utils/last.js

	// CONCATENATED MODULE: ./src/utils/includes.js
	function includes(arrOrStr, elem) {
	  return arrOrStr.indexOf(elem) !== -1;
	}
	// CONCATENATED MODULE: ./src/utils/find.js
	function find(arr, predicate, ctx) {
	  for (var i = 0, len = arr.length; i < len; i++) {
	    if (predicate.call(ctx, arr[i], i, arr)) return arr[i];
	  }

	  return undefined;
	}
	// CONCATENATED MODULE: ./src/utils/quickDiff.js
	function quickDiff(arrA, arrB) {
	  if (arrA.length !== arrB.length) return true;

	  for (var i = 0; i < arrA.length; i++) {
	    if (arrA[i] !== arrB[i]) return true;
	  }

	  return false;
	}
	// CONCATENATED MODULE: ./src/utils/index.js



















	// CONCATENATED MODULE: ./src/constants.js
	var NO_PARENT_NODE = null;
	var UNCHECKED = 0;
	var INDETERMINATE = 1;
	var CHECKED = 2;
	var ALL_CHILDREN = 'ALL_CHILDREN';
	var ALL_DESCENDANTS = 'ALL_DESCENDANTS';
	var LEAF_CHILDREN = 'LEAF_CHILDREN';
	var LEAF_DESCENDANTS = 'LEAF_DESCENDANTS';
	var LOAD_ROOT_OPTIONS = 'LOAD_ROOT_OPTIONS';
	var LOAD_CHILDREN_OPTIONS = 'LOAD_CHILDREN_OPTIONS';
	var ASYNC_SEARCH = 'ASYNC_SEARCH';
	var ALL = 'ALL';
	var BRANCH_PRIORITY = 'BRANCH_PRIORITY';
	var LEAF_PRIORITY = 'LEAF_PRIORITY';
	var ALL_WITH_INDETERMINATE = 'ALL_WITH_INDETERMINATE';
	var ORDER_SELECTED = 'ORDER_SELECTED';
	var LEVEL = 'LEVEL';
	var INDEX = 'INDEX';
	var KEY_CODES = {
	  BACKSPACE: 8,
	  ENTER: 13,
	  ESCAPE: 27,
	  END: 35,
	  HOME: 36,
	  ARROW_LEFT: 37,
	  ARROW_UP: 38,
	  ARROW_RIGHT: 39,
	  ARROW_DOWN: 40,
	  DELETE: 46
	};
	var INPUT_DEBOUNCE_DELAY = 200;
	var MIN_INPUT_WIDTH = 5;
	var MENU_BUFFER = 40;
	// CONCATENATED MODULE: ./src/mixins/treeselectMixin.js




	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }





	function sortValueByIndex(a, b) {
	  var i = 0;

	  do {
	    if (a.level < i) return -1;
	    if (b.level < i) return 1;
	    if (a.index[i] !== b.index[i]) return a.index[i] - b.index[i];
	    i++;
	  } while (true);
	}

	function sortValueByLevel(a, b) {
	  return a.level === b.level ? sortValueByIndex(a, b) : a.level - b.level;
	}

	function createAsyncOptionsStates() {
	  return {
	    isLoaded: false,
	    isLoading: false,
	    loadingError: ''
	  };
	}

	function stringifyOptionPropValue(value) {
	  if (typeof value === 'string') return value;
	  if (typeof value === 'number' && !isNaN_isNaN(value)) return value + '';
	  return '';
	}

	function match(enableFuzzyMatch, needle, haystack) {
	  return enableFuzzyMatch ? external_fuzzysearch_default()(needle, haystack) : includes(haystack, needle);
	}

	function getErrorMessage(err) {
	  return err.message || String(err);
	}

	var instanceId = 0;
	/* harmony default export */ var treeselectMixin = ({
	  provide: function provide() {
	    return {
	      instance: this
	    };
	  },
	  props: {
	    allowClearingDisabled: {
	      type: Boolean,
	      default: false
	    },
	    allowSelectingDisabledDescendants: {
	      type: Boolean,
	      default: false
	    },
	    alwaysOpen: {
	      type: Boolean,
	      default: false
	    },
	    appendToBody: {
	      type: Boolean,
	      default: false
	    },
	    async: {
	      type: Boolean,
	      default: false
	    },
	    autoFocus: {
	      type: Boolean,
	      default: false
	    },
	    autoLoadRootOptions: {
	      type: Boolean,
	      default: true
	    },
	    autoDeselectAncestors: {
	      type: Boolean,
	      default: false
	    },
	    autoDeselectDescendants: {
	      type: Boolean,
	      default: false
	    },
	    autoSelectAncestors: {
	      type: Boolean,
	      default: false
	    },
	    autoSelectDescendants: {
	      type: Boolean,
	      default: false
	    },
	    backspaceRemoves: {
	      type: Boolean,
	      default: true
	    },
	    beforeClearAll: {
	      type: Function,
	      default: constant_default()(true)
	    },
	    branchNodesFirst: {
	      type: Boolean,
	      default: false
	    },
	    cacheOptions: {
	      type: Boolean,
	      default: true
	    },
	    clearable: {
	      type: Boolean,
	      default: true
	    },
	    clearAllText: {
	      type: String,
	      default: 'Clear all'
	    },
	    clearOnSelect: {
	      type: Boolean,
	      default: false
	    },
	    clearValueText: {
	      type: String,
	      default: 'Clear value'
	    },
	    closeOnSelect: {
	      type: Boolean,
	      default: true
	    },
	    defaultExpandLevel: {
	      type: Number,
	      default: 0
	    },
	    defaultOptions: {
	      default: false
	    },
	    deleteRemoves: {
	      type: Boolean,
	      default: true
	    },
	    delimiter: {
	      type: String,
	      default: ','
	    },
	    flattenSearchResults: {
	      type: Boolean,
	      default: false
	    },
	    disableBranchNodes: {
	      type: Boolean,
	      default: false
	    },
	    disabled: {
	      type: Boolean,
	      default: false
	    },
	    disableFuzzyMatching: {
	      type: Boolean,
	      default: false
	    },
	    flat: {
	      type: Boolean,
	      default: false
	    },
	    instanceId: {
	      default: function _default() {
	        return "".concat(instanceId++, "$$");
	      },
	      type: [String, Number]
	    },
	    joinValues: {
	      type: Boolean,
	      default: false
	    },
	    limit: {
	      type: Number,
	      default: Infinity
	    },
	    limitText: {
	      type: Function,
	      default: function limitTextDefault(count) {
	        return "and ".concat(count, " more");
	      }
	    },
	    loadingText: {
	      type: String,
	      default: 'Loading...'
	    },
	    loadOptions: {
	      type: Function
	    },
	    matchKeys: {
	      type: Array,
	      default: constant_default()(['label'])
	    },
	    maxHeight: {
	      type: Number,
	      default: 300
	    },
	    multiple: {
	      type: Boolean,
	      default: false
	    },
	    name: {
	      type: String
	    },
	    noChildrenText: {
	      type: String,
	      default: 'No sub-options.'
	    },
	    noOptionsText: {
	      type: String,
	      default: 'No options available.'
	    },
	    noResultsText: {
	      type: String,
	      default: 'No results found...'
	    },
	    normalizer: {
	      type: Function,
	      default: identity_default.a
	    },
	    openDirection: {
	      type: String,
	      default: 'auto',
	      validator: function validator(value) {
	        var acceptableValues = ['auto', 'top', 'bottom', 'above', 'below'];
	        return includes(acceptableValues, value);
	      }
	    },
	    openOnClick: {
	      type: Boolean,
	      default: true
	    },
	    openOnFocus: {
	      type: Boolean,
	      default: false
	    },
	    options: {
	      type: Array
	    },
	    placeholder: {
	      type: String,
	      default: 'Select...'
	    },
	    required: {
	      type: Boolean,
	      default: false
	    },
	    retryText: {
	      type: String,
	      default: 'Retry?'
	    },
	    retryTitle: {
	      type: String,
	      default: 'Click to retry'
	    },
	    searchable: {
	      type: Boolean,
	      default: true
	    },
	    searchNested: {
	      type: Boolean,
	      default: false
	    },
	    searchPromptText: {
	      type: String,
	      default: 'Type to search...'
	    },
	    showCount: {
	      type: Boolean,
	      default: false
	    },
	    showCountOf: {
	      type: String,
	      default: ALL_CHILDREN,
	      validator: function validator(value) {
	        var acceptableValues = [ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS];
	        return includes(acceptableValues, value);
	      }
	    },
	    showCountOnSearch: null,
	    sortValueBy: {
	      type: String,
	      default: ORDER_SELECTED,
	      validator: function validator(value) {
	        var acceptableValues = [ORDER_SELECTED, LEVEL, INDEX];
	        return includes(acceptableValues, value);
	      }
	    },
	    tabIndex: {
	      type: Number,
	      default: 0
	    },
	    value: null,
	    valueConsistsOf: {
	      type: String,
	      default: BRANCH_PRIORITY,
	      validator: function validator(value) {
	        var acceptableValues = [ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE];
	        return includes(acceptableValues, value);
	      }
	    },
	    valueFormat: {
	      type: String,
	      default: 'id'
	    },
	    zIndex: {
	      type: [Number, String],
	      default: 999
	    }
	  },
	  data: function data() {
	    return {
	      trigger: {
	        isFocused: false,
	        searchQuery: ''
	      },
	      menu: {
	        isOpen: false,
	        current: null,
	        lastScrollPosition: 0,
	        placement: 'bottom'
	      },
	      forest: {
	        normalizedOptions: [],
	        nodeMap: createMap(),
	        checkedStateMap: createMap(),
	        selectedNodeIds: this.extractCheckedNodeIdsFromValue(),
	        selectedNodeMap: createMap()
	      },
	      rootOptionsStates: createAsyncOptionsStates(),
	      localSearch: {
	        active: false,
	        noResults: true,
	        countMap: createMap()
	      },
	      remoteSearch: createMap()
	    };
	  },
	  computed: {
	    selectedNodes: function selectedNodes() {
	      return this.forest.selectedNodeIds.map(this.getNode);
	    },
	    internalValue: function internalValue() {
	      var _this = this;

	      var internalValue;

	      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {
	        internalValue = this.forest.selectedNodeIds.slice();
	      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {
	        internalValue = this.forest.selectedNodeIds.filter(function (id) {
	          var node = _this.getNode(id);

	          if (node.isRootNode) return true;
	          return !_this.isSelected(node.parentNode);
	        });
	      } else if (this.valueConsistsOf === LEAF_PRIORITY) {
	        internalValue = this.forest.selectedNodeIds.filter(function (id) {
	          var node = _this.getNode(id);

	          if (node.isLeaf) return true;
	          return node.children.length === 0;
	        });
	      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {
	        var _internalValue;

	        var indeterminateNodeIds = [];
	        internalValue = this.forest.selectedNodeIds.slice();
	        this.selectedNodes.forEach(function (selectedNode) {
	          selectedNode.ancestors.forEach(function (ancestor) {
	            if (includes(indeterminateNodeIds, ancestor.id)) return;
	            if (includes(internalValue, ancestor.id)) return;
	            indeterminateNodeIds.push(ancestor.id);
	          });
	        });

	        (_internalValue = internalValue).push.apply(_internalValue, indeterminateNodeIds);
	      }

	      if (this.sortValueBy === LEVEL) {
	        internalValue.sort(function (a, b) {
	          return sortValueByLevel(_this.getNode(a), _this.getNode(b));
	        });
	      } else if (this.sortValueBy === INDEX) {
	        internalValue.sort(function (a, b) {
	          return sortValueByIndex(_this.getNode(a), _this.getNode(b));
	        });
	      }

	      return internalValue;
	    },
	    hasValue: function hasValue() {
	      return this.internalValue.length > 0;
	    },
	    single: function single() {
	      return !this.multiple;
	    },
	    visibleOptionIds: function visibleOptionIds() {
	      var _this2 = this;

	      var visibleOptionIds = [];
	      this.traverseAllNodesByIndex(function (node) {
	        if (!_this2.localSearch.active || _this2.shouldOptionBeIncludedInSearchResult(node)) {
	          visibleOptionIds.push(node.id);
	        }

	        if (node.isBranch && !_this2.shouldExpand(node)) {
	          return false;
	        }
	      });
	      return visibleOptionIds;
	    },
	    hasVisibleOptions: function hasVisibleOptions() {
	      return this.visibleOptionIds.length !== 0;
	    },
	    showCountOnSearchComputed: function showCountOnSearchComputed() {
	      return typeof this.showCountOnSearch === 'boolean' ? this.showCountOnSearch : this.showCount;
	    },
	    hasBranchNodes: function hasBranchNodes() {
	      return this.forest.normalizedOptions.some(function (rootNode) {
	        return rootNode.isBranch;
	      });
	    },
	    shouldFlattenOptions: function shouldFlattenOptions() {
	      return this.localSearch.active && this.flattenSearchResults;
	    }
	  },
	  watch: {
	    alwaysOpen: function alwaysOpen(newValue) {
	      if (newValue) this.openMenu();else this.closeMenu();
	    },
	    branchNodesFirst: function branchNodesFirst() {
	      this.initialize();
	    },
	    disabled: function disabled(newValue) {
	      if (newValue && this.menu.isOpen) this.closeMenu();else if (!newValue && !this.menu.isOpen && this.alwaysOpen) this.openMenu();
	    },
	    flat: function flat() {
	      this.initialize();
	    },
	    internalValue: function internalValue(newValue, oldValue) {
	      var hasChanged = quickDiff(newValue, oldValue);
	      if (hasChanged) this.$emit('input', this.getValue(), this.getInstanceId());
	    },
	    matchKeys: function matchKeys() {
	      this.initialize();
	    },
	    multiple: function multiple(newValue) {
	      if (newValue) this.buildForestState();
	    },
	    options: {
	      handler: function handler() {
	        if (this.async) return;
	        this.initialize();
	        this.rootOptionsStates.isLoaded = Array.isArray(this.options);
	      },
	      deep: true,
	      immediate: true
	    },
	    'trigger.searchQuery': function triggerSearchQuery() {
	      if (this.async) {
	        this.handleRemoteSearch();
	      } else {
	        this.handleLocalSearch();
	      }

	      this.$emit('search-change', this.trigger.searchQuery, this.getInstanceId());
	    },
	    value: function value() {
	      var nodeIdsFromValue = this.extractCheckedNodeIdsFromValue();
	      var hasChanged = quickDiff(nodeIdsFromValue, this.internalValue);
	      if (hasChanged) this.fixSelectedNodeIds(nodeIdsFromValue);
	    }
	  },
	  methods: {
	    verifyProps: function verifyProps() {
	      var _this3 = this;

	      warning_warning(function () {
	        return _this3.async ? _this3.searchable : true;
	      }, function () {
	        return 'For async search mode, the value of "searchable" prop must be true.';
	      });

	      if (this.options == null && !this.loadOptions) {
	        warning_warning(function () {
	          return false;
	        }, function () {
	          return 'Are you meant to dynamically load options? You need to use "loadOptions" prop.';
	        });
	      }

	      if (this.flat) {
	        warning_warning(function () {
	          return _this3.multiple;
	        }, function () {
	          return 'You are using flat mode. But you forgot to add "multiple=true"?';
	        });
	      }

	      if (!this.flat) {
	        var propNames = ['autoSelectAncestors', 'autoSelectDescendants', 'autoDeselectAncestors', 'autoDeselectDescendants'];
	        propNames.forEach(function (propName) {
	          warning_warning(function () {
	            return !_this3[propName];
	          }, function () {
	            return "\"".concat(propName, "\" only applies to flat mode.");
	          });
	        });
	      }
	    },
	    resetFlags: function resetFlags() {
	      this._blurOnSelect = false;
	    },
	    initialize: function initialize() {
	      var options = this.async ? this.getRemoteSearchEntry().options : this.options;

	      if (Array.isArray(options)) {
	        var prevNodeMap = this.forest.nodeMap;
	        this.forest.nodeMap = createMap();
	        this.keepDataOfSelectedNodes(prevNodeMap);
	        this.forest.normalizedOptions = this.normalize(NO_PARENT_NODE, options, prevNodeMap);
	        this.fixSelectedNodeIds(this.internalValue);
	      } else {
	        this.forest.normalizedOptions = [];
	      }
	    },
	    getInstanceId: function getInstanceId() {
	      return this.instanceId == null ? this.id : this.instanceId;
	    },
	    getValue: function getValue() {
	      var _this4 = this;

	      if (this.valueFormat === 'id') {
	        return this.multiple ? this.internalValue.slice() : this.internalValue[0];
	      }

	      var rawNodes = this.internalValue.map(function (id) {
	        return _this4.getNode(id).raw;
	      });
	      return this.multiple ? rawNodes : rawNodes[0];
	    },
	    getNode: function getNode(nodeId) {
	      warning_warning(function () {
	        return nodeId != null;
	      }, function () {
	        return "Invalid node id: ".concat(nodeId);
	      });
	      if (nodeId == null) return null;
	      return nodeId in this.forest.nodeMap ? this.forest.nodeMap[nodeId] : this.createFallbackNode(nodeId);
	    },
	    createFallbackNode: function createFallbackNode(id) {
	      var raw = this.extractNodeFromValue(id);
	      var label = this.enhancedNormalizer(raw).label || "".concat(id, " (unknown)");
	      var fallbackNode = {
	        id: id,
	        label: label,
	        ancestors: [],
	        parentNode: NO_PARENT_NODE,
	        isFallbackNode: true,
	        isRootNode: true,
	        isLeaf: true,
	        isBranch: false,
	        isDisabled: false,
	        isNew: false,
	        index: [-1],
	        level: 0,
	        raw: raw
	      };
	      return this.$set(this.forest.nodeMap, id, fallbackNode);
	    },
	    extractCheckedNodeIdsFromValue: function extractCheckedNodeIdsFromValue() {
	      var _this5 = this;

	      if (this.value == null) return [];

	      if (this.valueFormat === 'id') {
	        return this.multiple ? this.value.slice() : [this.value];
	      }

	      return (this.multiple ? this.value : [this.value]).map(function (node) {
	        return _this5.enhancedNormalizer(node);
	      }).map(function (node) {
	        return node.id;
	      });
	    },
	    extractNodeFromValue: function extractNodeFromValue(id) {
	      var _this6 = this;

	      var defaultNode = {
	        id: id
	      };

	      if (this.valueFormat === 'id') {
	        return defaultNode;
	      }

	      var valueArray = this.multiple ? Array.isArray(this.value) ? this.value : [] : this.value ? [this.value] : [];
	      var matched = find(valueArray, function (node) {
	        return node && _this6.enhancedNormalizer(node).id === id;
	      });
	      return matched || defaultNode;
	    },
	    fixSelectedNodeIds: function fixSelectedNodeIds(nodeIdListOfPrevValue) {
	      var _this7 = this;

	      var nextSelectedNodeIds = [];

	      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {
	        nextSelectedNodeIds = nodeIdListOfPrevValue;
	      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {
	        nodeIdListOfPrevValue.forEach(function (nodeId) {
	          nextSelectedNodeIds.push(nodeId);

	          var node = _this7.getNode(nodeId);

	          if (node.isBranch) _this7.traverseDescendantsBFS(node, function (descendant) {
	            nextSelectedNodeIds.push(descendant.id);
	          });
	        });
	      } else if (this.valueConsistsOf === LEAF_PRIORITY) {
	        var map = createMap();
	        var queue = nodeIdListOfPrevValue.slice();

	        while (queue.length) {
	          var nodeId = queue.shift();
	          var node = this.getNode(nodeId);
	          nextSelectedNodeIds.push(nodeId);
	          if (node.isRootNode) continue;
	          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length;
	          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id);
	        }
	      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {
	        var _map = createMap();

	        var _queue = nodeIdListOfPrevValue.filter(function (nodeId) {
	          var node = _this7.getNode(nodeId);

	          return node.isLeaf || node.children.length === 0;
	        });

	        while (_queue.length) {
	          var _nodeId = _queue.shift();

	          var _node = this.getNode(_nodeId);

	          nextSelectedNodeIds.push(_nodeId);
	          if (_node.isRootNode) continue;
	          if (!(_node.parentNode.id in _map)) _map[_node.parentNode.id] = _node.parentNode.children.length;
	          if (--_map[_node.parentNode.id] === 0) _queue.push(_node.parentNode.id);
	        }
	      }

	      var hasChanged = quickDiff(this.forest.selectedNodeIds, nextSelectedNodeIds);
	      if (hasChanged) this.forest.selectedNodeIds = nextSelectedNodeIds;
	      this.buildForestState();
	    },
	    keepDataOfSelectedNodes: function keepDataOfSelectedNodes(prevNodeMap) {
	      var _this8 = this;

	      this.forest.selectedNodeIds.forEach(function (id) {
	        if (!prevNodeMap[id]) return;

	        var node = _objectSpread({}, prevNodeMap[id], {
	          isFallbackNode: true
	        });

	        _this8.$set(_this8.forest.nodeMap, id, node);
	      });
	    },
	    isSelected: function isSelected(node) {
	      return this.forest.selectedNodeMap[node.id] === true;
	    },
	    traverseDescendantsBFS: function traverseDescendantsBFS(parentNode, callback) {
	      if (!parentNode.isBranch) return;
	      var queue = parentNode.children.slice();

	      while (queue.length) {
	        var currNode = queue[0];
	        if (currNode.isBranch) queue.push.apply(queue, toConsumableArray_default()(currNode.children));
	        callback(currNode);
	        queue.shift();
	      }
	    },
	    traverseDescendantsDFS: function traverseDescendantsDFS(parentNode, callback) {
	      var _this9 = this;

	      if (!parentNode.isBranch) return;
	      parentNode.children.forEach(function (child) {
	        _this9.traverseDescendantsDFS(child, callback);

	        callback(child);
	      });
	    },
	    traverseAllNodesDFS: function traverseAllNodesDFS(callback) {
	      var _this10 = this;

	      this.forest.normalizedOptions.forEach(function (rootNode) {
	        _this10.traverseDescendantsDFS(rootNode, callback);

	        callback(rootNode);
	      });
	    },
	    traverseAllNodesByIndex: function traverseAllNodesByIndex(callback) {
	      var walk = function walk(parentNode) {
	        parentNode.children.forEach(function (child) {
	          if (callback(child) !== false && child.isBranch) {
	            walk(child);
	          }
	        });
	      };

	      walk({
	        children: this.forest.normalizedOptions
	      });
	    },
	    toggleClickOutsideEvent: function toggleClickOutsideEvent(enabled) {
	      if (enabled) {
	        document.addEventListener('mousedown', this.handleClickOutside, false);
	      } else {
	        document.removeEventListener('mousedown', this.handleClickOutside, false);
	      }
	    },
	    getValueContainer: function getValueContainer() {
	      return this.$refs.control.$refs['value-container'];
	    },
	    getInput: function getInput() {
	      return this.getValueContainer().$refs.input;
	    },
	    focusInput: function focusInput() {
	      this.getInput().focus();
	    },
	    blurInput: function blurInput() {
	      this.getInput().blur();
	    },
	    handleMouseDown: onLeftClick(function handleMouseDown(evt) {
	      evt.preventDefault();
	      evt.stopPropagation();
	      if (this.disabled) return;
	      var isClickedOnValueContainer = this.getValueContainer().$el.contains(evt.target);

	      if (isClickedOnValueContainer && !this.menu.isOpen && (this.openOnClick || this.trigger.isFocused)) {
	        this.openMenu();
	      }

	      if (this._blurOnSelect) {
	        this.blurInput();
	      } else {
	        this.focusInput();
	      }

	      this.resetFlags();
	    }),
	    handleClickOutside: function handleClickOutside(evt) {
	      if (this.$refs.wrapper && !this.$refs.wrapper.contains(evt.target)) {
	        this.blurInput();
	        this.closeMenu();
	      }
	    },
	    handleLocalSearch: function handleLocalSearch() {
	      var _this11 = this;

	      var searchQuery = this.trigger.searchQuery;

	      var done = function done() {
	        return _this11.resetHighlightedOptionWhenNecessary(true);
	      };

	      if (!searchQuery) {
	        this.localSearch.active = false;
	        return done();
	      }

	      this.localSearch.active = true;
	      this.localSearch.noResults = true;
	      this.traverseAllNodesDFS(function (node) {
	        if (node.isBranch) {
	          var _this11$$set;

	          node.isExpandedOnSearch = false;
	          node.showAllChildrenOnSearch = false;
	          node.isMatched = false;
	          node.hasMatchedDescendants = false;

	          _this11.$set(_this11.localSearch.countMap, node.id, (_this11$$set = {}, defineProperty_default()(_this11$$set, ALL_CHILDREN, 0), defineProperty_default()(_this11$$set, ALL_DESCENDANTS, 0), defineProperty_default()(_this11$$set, LEAF_CHILDREN, 0), defineProperty_default()(_this11$$set, LEAF_DESCENDANTS, 0), _this11$$set));
	        }
	      });
	      var lowerCasedSearchQuery = searchQuery.trim().toLocaleLowerCase();
	      var splitSearchQuery = lowerCasedSearchQuery.replace(/\s+/g, ' ').split(' ');
	      this.traverseAllNodesDFS(function (node) {
	        if (_this11.searchNested && splitSearchQuery.length > 1) {
	          node.isMatched = splitSearchQuery.every(function (filterValue) {
	            return match(false, filterValue, node.nestedSearchLabel);
	          });
	        } else {
	          node.isMatched = _this11.matchKeys.some(function (matchKey) {
	            return match(!_this11.disableFuzzyMatching, lowerCasedSearchQuery, node.lowerCased[matchKey]);
	          });
	        }

	        if (node.isMatched) {
	          _this11.localSearch.noResults = false;
	          node.ancestors.forEach(function (ancestor) {
	            return _this11.localSearch.countMap[ancestor.id][ALL_DESCENDANTS]++;
	          });
	          if (node.isLeaf) node.ancestors.forEach(function (ancestor) {
	            return _this11.localSearch.countMap[ancestor.id][LEAF_DESCENDANTS]++;
	          });

	          if (node.parentNode !== NO_PARENT_NODE) {
	            _this11.localSearch.countMap[node.parentNode.id][ALL_CHILDREN] += 1;
	            if (node.isLeaf) _this11.localSearch.countMap[node.parentNode.id][LEAF_CHILDREN] += 1;
	          }
	        }

	        if ((node.isMatched || node.isBranch && node.isExpandedOnSearch) && node.parentNode !== NO_PARENT_NODE) {
	          node.parentNode.isExpandedOnSearch = true;
	          node.parentNode.hasMatchedDescendants = true;
	        }
	      });
	      done();
	    },
	    handleRemoteSearch: function handleRemoteSearch() {
	      var _this12 = this;

	      var searchQuery = this.trigger.searchQuery;
	      var entry = this.getRemoteSearchEntry();

	      var done = function done() {
	        _this12.initialize();

	        _this12.resetHighlightedOptionWhenNecessary(true);
	      };

	      if ((searchQuery === '' || this.cacheOptions) && entry.isLoaded) {
	        return done();
	      }

	      this.callLoadOptionsProp({
	        action: ASYNC_SEARCH,
	        args: {
	          searchQuery: searchQuery
	        },
	        isPending: function isPending() {
	          return entry.isLoading;
	        },
	        start: function start() {
	          entry.isLoading = true;
	          entry.isLoaded = false;
	          entry.loadingError = '';
	        },
	        succeed: function succeed(options) {
	          entry.isLoaded = true;
	          entry.options = options;
	          if (_this12.trigger.searchQuery === searchQuery) done();
	        },
	        fail: function fail(err) {
	          entry.loadingError = getErrorMessage(err);
	        },
	        end: function end() {
	          entry.isLoading = false;
	        }
	      });
	    },
	    getRemoteSearchEntry: function getRemoteSearchEntry() {
	      var _this13 = this;

	      var searchQuery = this.trigger.searchQuery;

	      var entry = this.remoteSearch[searchQuery] || _objectSpread({}, createAsyncOptionsStates(), {
	        options: []
	      });

	      this.$watch(function () {
	        return entry.options;
	      }, function () {
	        if (_this13.trigger.searchQuery === searchQuery) _this13.initialize();
	      }, {
	        deep: true
	      });

	      if (searchQuery === '') {
	        if (Array.isArray(this.defaultOptions)) {
	          entry.options = this.defaultOptions;
	          entry.isLoaded = true;
	          return entry;
	        } else if (this.defaultOptions !== true) {
	          entry.isLoaded = true;
	          return entry;
	        }
	      }

	      if (!this.remoteSearch[searchQuery]) {
	        this.$set(this.remoteSearch, searchQuery, entry);
	      }

	      return entry;
	    },
	    shouldExpand: function shouldExpand(node) {
	      return this.localSearch.active ? node.isExpandedOnSearch : node.isExpanded;
	    },
	    shouldOptionBeIncludedInSearchResult: function shouldOptionBeIncludedInSearchResult(node) {
	      if (node.isMatched) return true;
	      if (node.isBranch && node.hasMatchedDescendants && !this.flattenSearchResults) return true;
	      if (!node.isRootNode && node.parentNode.showAllChildrenOnSearch) return true;
	      return false;
	    },
	    shouldShowOptionInMenu: function shouldShowOptionInMenu(node) {
	      if (this.localSearch.active && !this.shouldOptionBeIncludedInSearchResult(node)) {
	        return false;
	      }

	      return true;
	    },
	    getControl: function getControl() {
	      return this.$refs.control.$el;
	    },
	    getMenu: function getMenu() {
	      var ref = this.appendToBody ? this.$refs.portal.portalTarget : this;
	      var $menu = ref.$refs.menu.$refs.menu;
	      return $menu && $menu.nodeName !== '#comment' ? $menu : null;
	    },
	    setCurrentHighlightedOption: function setCurrentHighlightedOption(node) {
	      var _this14 = this;

	      var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	      var prev = this.menu.current;

	      if (prev != null && prev in this.forest.nodeMap) {
	        this.forest.nodeMap[prev].isHighlighted = false;
	      }

	      this.menu.current = node.id;
	      node.isHighlighted = true;

	      if (this.menu.isOpen && scroll) {
	        var scrollToOption = function scrollToOption() {
	          var $menu = _this14.getMenu();

	          var $option = $menu.querySelector(".vue-treeselect__option[data-id=\"".concat(node.id, "\"]"));
	          if ($option) scrollIntoView($menu, $option);
	        };

	        if (this.getMenu()) {
	          scrollToOption();
	        } else {
	          this.$nextTick(scrollToOption);
	        }
	      }
	    },
	    resetHighlightedOptionWhenNecessary: function resetHighlightedOptionWhenNecessary() {
	      var forceReset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	      var current = this.menu.current;

	      if (forceReset || current == null || !(current in this.forest.nodeMap) || !this.shouldShowOptionInMenu(this.getNode(current))) {
	        this.highlightFirstOption();
	      }
	    },
	    highlightFirstOption: function highlightFirstOption() {
	      if (!this.hasVisibleOptions) return;
	      var first = this.visibleOptionIds[0];
	      this.setCurrentHighlightedOption(this.getNode(first));
	    },
	    highlightPrevOption: function highlightPrevOption() {
	      if (!this.hasVisibleOptions) return;
	      var prev = this.visibleOptionIds.indexOf(this.menu.current) - 1;
	      if (prev === -1) return this.highlightLastOption();
	      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[prev]));
	    },
	    highlightNextOption: function highlightNextOption() {
	      if (!this.hasVisibleOptions) return;
	      var next = this.visibleOptionIds.indexOf(this.menu.current) + 1;
	      if (next === this.visibleOptionIds.length) return this.highlightFirstOption();
	      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[next]));
	    },
	    highlightLastOption: function highlightLastOption() {
	      if (!this.hasVisibleOptions) return;
	      var last = last_default()(this.visibleOptionIds);
	      this.setCurrentHighlightedOption(this.getNode(last));
	    },
	    resetSearchQuery: function resetSearchQuery() {
	      this.trigger.searchQuery = '';
	    },
	    closeMenu: function closeMenu() {
	      if (!this.menu.isOpen || !this.disabled && this.alwaysOpen) return;
	      this.saveMenuScrollPosition();
	      this.menu.isOpen = false;
	      this.toggleClickOutsideEvent(false);
	      this.resetSearchQuery();
	      this.$emit('close', this.getValue(), this.getInstanceId());
	    },
	    openMenu: function openMenu() {
	      if (this.disabled || this.menu.isOpen) return;
	      this.menu.isOpen = true;
	      this.$nextTick(this.resetHighlightedOptionWhenNecessary);
	      this.$nextTick(this.restoreMenuScrollPosition);
	      if (!this.options && !this.async) this.loadRootOptions();
	      this.toggleClickOutsideEvent(true);
	      this.$emit('open', this.getInstanceId());
	    },
	    toggleMenu: function toggleMenu() {
	      if (this.menu.isOpen) {
	        this.closeMenu();
	      } else {
	        this.openMenu();
	      }
	    },
	    toggleExpanded: function toggleExpanded(node) {
	      var nextState;

	      if (this.localSearch.active) {
	        nextState = node.isExpandedOnSearch = !node.isExpandedOnSearch;
	        if (nextState) node.showAllChildrenOnSearch = true;
	      } else {
	        nextState = node.isExpanded = !node.isExpanded;
	      }

	      if (nextState && !node.childrenStates.isLoaded) {
	        this.loadChildrenOptions(node);
	      }
	    },
	    buildForestState: function buildForestState() {
	      var _this15 = this;

	      var selectedNodeMap = createMap();
	      this.forest.selectedNodeIds.forEach(function (selectedNodeId) {
	        selectedNodeMap[selectedNodeId] = true;
	      });
	      this.forest.selectedNodeMap = selectedNodeMap;
	      var checkedStateMap = createMap();

	      if (this.multiple) {
	        this.traverseAllNodesByIndex(function (node) {
	          checkedStateMap[node.id] = UNCHECKED;
	        });
	        this.selectedNodes.forEach(function (selectedNode) {
	          checkedStateMap[selectedNode.id] = CHECKED;

	          if (!_this15.flat && !_this15.disableBranchNodes) {
	            selectedNode.ancestors.forEach(function (ancestorNode) {
	              if (!_this15.isSelected(ancestorNode)) {
	                checkedStateMap[ancestorNode.id] = INDETERMINATE;
	              }
	            });
	          }
	        });
	      }

	      this.forest.checkedStateMap = checkedStateMap;
	    },
	    enhancedNormalizer: function enhancedNormalizer(raw) {
	      return _objectSpread({}, raw, {}, this.normalizer(raw, this.getInstanceId()));
	    },
	    normalize: function normalize(parentNode, nodes, prevNodeMap) {
	      var _this16 = this;

	      var normalizedOptions = nodes.map(function (node) {
	        return [_this16.enhancedNormalizer(node), node];
	      }).map(function (_ref, index) {
	        var _ref2 = slicedToArray_default()(_ref, 2),
	            node = _ref2[0],
	            raw = _ref2[1];

	        _this16.checkDuplication(node);

	        _this16.verifyNodeShape(node);

	        var id = node.id,
	            label = node.label,
	            children = node.children,
	            isDefaultExpanded = node.isDefaultExpanded;
	        var isRootNode = parentNode === NO_PARENT_NODE;
	        var level = isRootNode ? 0 : parentNode.level + 1;
	        var isBranch = Array.isArray(children) || children === null;
	        var isLeaf = !isBranch;
	        var isDisabled = !!node.isDisabled || !_this16.flat && !isRootNode && parentNode.isDisabled;
	        var isNew = !!node.isNew;

	        var lowerCased = _this16.matchKeys.reduce(function (prev, key) {
	          return _objectSpread({}, prev, defineProperty_default()({}, key, stringifyOptionPropValue(node[key]).toLocaleLowerCase()));
	        }, {});

	        var nestedSearchLabel = isRootNode ? lowerCased.label : parentNode.nestedSearchLabel + ' ' + lowerCased.label;

	        var normalized = _this16.$set(_this16.forest.nodeMap, id, createMap());

	        _this16.$set(normalized, 'id', id);

	        _this16.$set(normalized, 'label', label);

	        _this16.$set(normalized, 'level', level);

	        _this16.$set(normalized, 'ancestors', isRootNode ? [] : [parentNode].concat(parentNode.ancestors));

	        _this16.$set(normalized, 'index', (isRootNode ? [] : parentNode.index).concat(index));

	        _this16.$set(normalized, 'parentNode', parentNode);

	        _this16.$set(normalized, 'lowerCased', lowerCased);

	        _this16.$set(normalized, 'nestedSearchLabel', nestedSearchLabel);

	        _this16.$set(normalized, 'isDisabled', isDisabled);

	        _this16.$set(normalized, 'isNew', isNew);

	        _this16.$set(normalized, 'isMatched', false);

	        _this16.$set(normalized, 'isHighlighted', false);

	        _this16.$set(normalized, 'isBranch', isBranch);

	        _this16.$set(normalized, 'isLeaf', isLeaf);

	        _this16.$set(normalized, 'isRootNode', isRootNode);

	        _this16.$set(normalized, 'raw', raw);

	        if (isBranch) {
	          var _this16$$set;

	          var isLoaded = Array.isArray(children);

	          _this16.$set(normalized, 'childrenStates', _objectSpread({}, createAsyncOptionsStates(), {
	            isLoaded: isLoaded
	          }));

	          _this16.$set(normalized, 'isExpanded', typeof isDefaultExpanded === 'boolean' ? isDefaultExpanded : level < _this16.defaultExpandLevel);

	          _this16.$set(normalized, 'hasMatchedDescendants', false);

	          _this16.$set(normalized, 'hasDisabledDescendants', false);

	          _this16.$set(normalized, 'isExpandedOnSearch', false);

	          _this16.$set(normalized, 'showAllChildrenOnSearch', false);

	          _this16.$set(normalized, 'count', (_this16$$set = {}, defineProperty_default()(_this16$$set, ALL_CHILDREN, 0), defineProperty_default()(_this16$$set, ALL_DESCENDANTS, 0), defineProperty_default()(_this16$$set, LEAF_CHILDREN, 0), defineProperty_default()(_this16$$set, LEAF_DESCENDANTS, 0), _this16$$set));

	          _this16.$set(normalized, 'children', isLoaded ? _this16.normalize(normalized, children, prevNodeMap) : []);

	          if (isDefaultExpanded === true) normalized.ancestors.forEach(function (ancestor) {
	            ancestor.isExpanded = true;
	          });

	          if (!isLoaded && typeof _this16.loadOptions !== 'function') {
	            warning_warning(function () {
	              return false;
	            }, function () {
	              return 'Unloaded branch node detected. "loadOptions" prop is required to load its children.';
	            });
	          } else if (!isLoaded && normalized.isExpanded) {
	            _this16.loadChildrenOptions(normalized);
	          }
	        }

	        normalized.ancestors.forEach(function (ancestor) {
	          return ancestor.count[ALL_DESCENDANTS]++;
	        });
	        if (isLeaf) normalized.ancestors.forEach(function (ancestor) {
	          return ancestor.count[LEAF_DESCENDANTS]++;
	        });

	        if (!isRootNode) {
	          parentNode.count[ALL_CHILDREN] += 1;
	          if (isLeaf) parentNode.count[LEAF_CHILDREN] += 1;
	          if (isDisabled) parentNode.hasDisabledDescendants = true;
	        }

	        if (prevNodeMap && prevNodeMap[id]) {
	          var prev = prevNodeMap[id];
	          normalized.isMatched = prev.isMatched;
	          normalized.showAllChildrenOnSearch = prev.showAllChildrenOnSearch;
	          normalized.isHighlighted = prev.isHighlighted;

	          if (prev.isBranch && normalized.isBranch) {
	            normalized.isExpanded = prev.isExpanded;
	            normalized.isExpandedOnSearch = prev.isExpandedOnSearch;

	            if (prev.childrenStates.isLoaded && !normalized.childrenStates.isLoaded) {
	              normalized.isExpanded = false;
	            } else {
	              normalized.childrenStates = _objectSpread({}, prev.childrenStates);
	            }
	          }
	        }

	        return normalized;
	      });

	      if (this.branchNodesFirst) {
	        var branchNodes = normalizedOptions.filter(function (option) {
	          return option.isBranch;
	        });
	        var leafNodes = normalizedOptions.filter(function (option) {
	          return option.isLeaf;
	        });
	        normalizedOptions = branchNodes.concat(leafNodes);
	      }

	      return normalizedOptions;
	    },
	    loadRootOptions: function loadRootOptions() {
	      var _this17 = this;

	      this.callLoadOptionsProp({
	        action: LOAD_ROOT_OPTIONS,
	        isPending: function isPending() {
	          return _this17.rootOptionsStates.isLoading;
	        },
	        start: function start() {
	          _this17.rootOptionsStates.isLoading = true;
	          _this17.rootOptionsStates.loadingError = '';
	        },
	        succeed: function succeed() {
	          _this17.rootOptionsStates.isLoaded = true;

	          _this17.$nextTick(function () {
	            _this17.resetHighlightedOptionWhenNecessary(true);
	          });
	        },
	        fail: function fail(err) {
	          _this17.rootOptionsStates.loadingError = getErrorMessage(err);
	        },
	        end: function end() {
	          _this17.rootOptionsStates.isLoading = false;
	        }
	      });
	    },
	    loadChildrenOptions: function loadChildrenOptions(parentNode) {
	      var _this18 = this;

	      var id = parentNode.id,
	          raw = parentNode.raw;
	      this.callLoadOptionsProp({
	        action: LOAD_CHILDREN_OPTIONS,
	        args: {
	          parentNode: raw
	        },
	        isPending: function isPending() {
	          return _this18.getNode(id).childrenStates.isLoading;
	        },
	        start: function start() {
	          _this18.getNode(id).childrenStates.isLoading = true;
	          _this18.getNode(id).childrenStates.loadingError = '';
	        },
	        succeed: function succeed() {
	          _this18.getNode(id).childrenStates.isLoaded = true;
	        },
	        fail: function fail(err) {
	          _this18.getNode(id).childrenStates.loadingError = getErrorMessage(err);
	        },
	        end: function end() {
	          _this18.getNode(id).childrenStates.isLoading = false;
	        }
	      });
	    },
	    callLoadOptionsProp: function callLoadOptionsProp(_ref3) {
	      var action = _ref3.action,
	          args = _ref3.args,
	          isPending = _ref3.isPending,
	          start = _ref3.start,
	          succeed = _ref3.succeed,
	          fail = _ref3.fail,
	          end = _ref3.end;

	      if (!this.loadOptions || isPending()) {
	        return;
	      }

	      start();
	      var callback = once_default()(function (err, result) {
	        if (err) {
	          fail(err);
	        } else {
	          succeed(result);
	        }

	        end();
	      });
	      var result = this.loadOptions(_objectSpread({
	        id: this.getInstanceId(),
	        instanceId: this.getInstanceId(),
	        action: action
	      }, args, {
	        callback: callback
	      }));

	      if (external_is_promise_default()(result)) {
	        result.then(function () {
	          callback();
	        }, function (err) {
	          callback(err);
	        }).catch(function (err) {
	          console.error(err);
	        });
	      }
	    },
	    checkDuplication: function checkDuplication(node) {
	      var _this19 = this;

	      warning_warning(function () {
	        return !(node.id in _this19.forest.nodeMap && !_this19.forest.nodeMap[node.id].isFallbackNode);
	      }, function () {
	        return "Detected duplicate presence of node id ".concat(JSON.stringify(node.id), ". ") + "Their labels are \"".concat(_this19.forest.nodeMap[node.id].label, "\" and \"").concat(node.label, "\" respectively.");
	      });
	    },
	    verifyNodeShape: function verifyNodeShape(node) {
	      warning_warning(function () {
	        return !(node.children === undefined && node.isBranch === true);
	      }, function () {
	        return 'Are you meant to declare an unloaded branch node? ' + '`isBranch: true` is no longer supported, please use `children: null` instead.';
	      });
	    },
	    select: function select(node) {
	      if (this.disabled || node.isDisabled) {
	        return;
	      }

	      if (this.single) {
	        this.clear();
	      }

	      var nextState = this.multiple && !this.flat ? this.forest.checkedStateMap[node.id] === UNCHECKED : !this.isSelected(node);

	      if (nextState) {
	        this._selectNode(node);
	      } else {
	        this._deselectNode(node);
	      }

	      this.buildForestState();

	      if (nextState) {
	        this.$emit('select', node.raw, this.getInstanceId());
	      } else {
	        this.$emit('deselect', node.raw, this.getInstanceId());
	      }

	      if (this.localSearch.active && nextState && (this.single || this.clearOnSelect)) {
	        this.resetSearchQuery();
	      }

	      if (this.single && this.closeOnSelect) {
	        this.closeMenu();

	        if (this.searchable) {
	          this._blurOnSelect = true;
	        }
	      }
	    },
	    clear: function clear() {
	      var _this20 = this;

	      if (this.hasValue) {
	        if (this.single || this.allowClearingDisabled) {
	          this.forest.selectedNodeIds = [];
	        } else {
	            this.forest.selectedNodeIds = this.forest.selectedNodeIds.filter(function (nodeId) {
	              return _this20.getNode(nodeId).isDisabled;
	            });
	          }

	        this.buildForestState();
	      }
	    },
	    _selectNode: function _selectNode(node) {
	      var _this21 = this;

	      if (this.single || this.disableBranchNodes) {
	        return this.addValue(node);
	      }

	      if (this.flat) {
	        this.addValue(node);

	        if (this.autoSelectAncestors) {
	          node.ancestors.forEach(function (ancestor) {
	            if (!_this21.isSelected(ancestor) && !ancestor.isDisabled) _this21.addValue(ancestor);
	          });
	        } else if (this.autoSelectDescendants) {
	          this.traverseDescendantsBFS(node, function (descendant) {
	            if (!_this21.isSelected(descendant) && !descendant.isDisabled) _this21.addValue(descendant);
	          });
	        }

	        return;
	      }

	      var isFullyChecked = node.isLeaf || !node.hasDisabledDescendants || this.allowSelectingDisabledDescendants;

	      if (isFullyChecked) {
	        this.addValue(node);
	      }

	      if (node.isBranch) {
	        this.traverseDescendantsBFS(node, function (descendant) {
	          if (!descendant.isDisabled || _this21.allowSelectingDisabledDescendants) {
	            _this21.addValue(descendant);
	          }
	        });
	      }

	      if (isFullyChecked) {
	        var curr = node;

	        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {
	          if (curr.children.every(this.isSelected)) this.addValue(curr);else break;
	        }
	      }
	    },
	    _deselectNode: function _deselectNode(node) {
	      var _this22 = this;

	      if (this.disableBranchNodes) {
	        return this.removeValue(node);
	      }

	      if (this.flat) {
	        this.removeValue(node);

	        if (this.autoDeselectAncestors) {
	          node.ancestors.forEach(function (ancestor) {
	            if (_this22.isSelected(ancestor) && !ancestor.isDisabled) _this22.removeValue(ancestor);
	          });
	        } else if (this.autoDeselectDescendants) {
	          this.traverseDescendantsBFS(node, function (descendant) {
	            if (_this22.isSelected(descendant) && !descendant.isDisabled) _this22.removeValue(descendant);
	          });
	        }

	        return;
	      }

	      var hasUncheckedSomeDescendants = false;

	      if (node.isBranch) {
	        this.traverseDescendantsDFS(node, function (descendant) {
	          if (!descendant.isDisabled || _this22.allowSelectingDisabledDescendants) {
	            _this22.removeValue(descendant);

	            hasUncheckedSomeDescendants = true;
	          }
	        });
	      }

	      if (node.isLeaf || hasUncheckedSomeDescendants || node.children.length === 0) {
	        this.removeValue(node);
	        var curr = node;

	        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {
	          if (this.isSelected(curr)) this.removeValue(curr);else break;
	        }
	      }
	    },
	    addValue: function addValue(node) {
	      this.forest.selectedNodeIds.push(node.id);
	      this.forest.selectedNodeMap[node.id] = true;
	    },
	    removeValue: function removeValue(node) {
	      removeFromArray(this.forest.selectedNodeIds, node.id);
	      delete this.forest.selectedNodeMap[node.id];
	    },
	    removeLastValue: function removeLastValue() {
	      if (!this.hasValue) return;
	      if (this.single) return this.clear();
	      var lastValue = last_default()(this.internalValue);
	      var lastSelectedNode = this.getNode(lastValue);
	      this.select(lastSelectedNode);
	    },
	    saveMenuScrollPosition: function saveMenuScrollPosition() {
	      var $menu = this.getMenu();
	      if ($menu) this.menu.lastScrollPosition = $menu.scrollTop;
	    },
	    restoreMenuScrollPosition: function restoreMenuScrollPosition() {
	      var $menu = this.getMenu();
	      if ($menu) $menu.scrollTop = this.menu.lastScrollPosition;
	    }
	  },
	  created: function created() {
	    this.verifyProps();
	    this.resetFlags();
	  },
	  mounted: function mounted() {
	    if (this.autoFocus) this.focusInput();
	    if (!this.options && !this.async && this.autoLoadRootOptions) this.loadRootOptions();
	    if (this.alwaysOpen) this.openMenu();
	    if (this.async && this.defaultOptions) this.handleRemoteSearch();
	  },
	  destroyed: function destroyed() {
	    this.toggleClickOutsideEvent(false);
	  }
	});
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/HiddenFields.vue?vue&type=script&lang=js&


	function stringifyValue(value) {
	  if (typeof value === 'string') return value;
	  if (value != null && !isNaN_isNaN(value)) return JSON.stringify(value);
	  return '';
	}

	/* harmony default export */ var HiddenFieldsvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--hidden-fields',
	  inject: ['instance'],
	  functional: true,
	  render: function render(_, context) {
	    var h = arguments[0];
	    var instance = context.injections.instance;
	    if (!instance.name || instance.disabled || !instance.hasValue) return null;
	    var stringifiedValues = instance.internalValue.map(stringifyValue);
	    if (instance.multiple && instance.joinValues) stringifiedValues = [stringifiedValues.join(instance.delimiter)];
	    return stringifiedValues.map(function (stringifiedValue, i) {
	      return h("input", {
	        attrs: {
	          type: "hidden",
	          name: instance.name
	        },
	        domProps: {
	          "value": stringifiedValue
	        },
	        key: 'hidden-field-' + i
	      });
	    });
	  }
	});
	// CONCATENATED MODULE: ./src/components/HiddenFields.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_HiddenFieldsvue_type_script_lang_js_ = (HiddenFieldsvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
	/* globals __VUE_SSR_CONTEXT__ */

	// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
	// This module is a runtime utility for cleaner component module output and will
	// be included in the final webpack user bundle.

	function normalizeComponent (
	  scriptExports,
	  render,
	  staticRenderFns,
	  functionalTemplate,
	  injectStyles,
	  scopeId,
	  moduleIdentifier, /* server only */
	  shadowMode /* vue-cli only */
	) {
	  // Vue.extend constructor export interop
	  var options = typeof scriptExports === 'function'
	    ? scriptExports.options
	    : scriptExports;

	  // render functions
	  if (render) {
	    options.render = render;
	    options.staticRenderFns = staticRenderFns;
	    options._compiled = true;
	  }

	  // functional template
	  if (functionalTemplate) {
	    options.functional = true;
	  }

	  // scopedId
	  if (scopeId) {
	    options._scopeId = 'data-v-' + scopeId;
	  }

	  var hook;
	  if (moduleIdentifier) { // server build
	    hook = function (context) {
	      // 2.3 injection
	      context =
	        context || // cached call
	        (this.$vnode && this.$vnode.ssrContext) || // stateful
	        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
	      // 2.2 with runInNewContext: true
	      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
	        context = __VUE_SSR_CONTEXT__;
	      }
	      // inject component styles
	      if (injectStyles) {
	        injectStyles.call(this, context);
	      }
	      // register component module identifier for async chunk inferrence
	      if (context && context._registeredComponents) {
	        context._registeredComponents.add(moduleIdentifier);
	      }
	    };
	    // used by ssr in case component is cached and beforeCreate
	    // never gets called
	    options._ssrRegister = hook;
	  } else if (injectStyles) {
	    hook = shadowMode
	      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot); }
	      : injectStyles;
	  }

	  if (hook) {
	    if (options.functional) {
	      // for template-only hot-reload because in that case the render fn doesn't
	      // go through the normalizer
	      options._injectStyles = hook;
	      // register for functioal component in vue file
	      var originalRender = options.render;
	      options.render = function renderWithStyleInjection (h, context) {
	        hook.call(context);
	        return originalRender(h, context)
	      };
	    } else {
	      // inject component registration as beforeCreate hook
	      var existing = options.beforeCreate;
	      options.beforeCreate = existing
	        ? [].concat(existing, hook)
	        : [hook];
	    }
	  }

	  return {
	    exports: scriptExports,
	    options: options
	  }
	}

	// CONCATENATED MODULE: ./src/components/HiddenFields.vue
	var HiddenFields_render, staticRenderFns;




	/* normalize component */

	var component = normalizeComponent(
	  components_HiddenFieldsvue_type_script_lang_js_,
	  HiddenFields_render,
	  staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	component.options.__file = "src/components/HiddenFields.vue";
	/* harmony default export */ var HiddenFields = (component.exports);
	// EXTERNAL MODULE: external "babel-helper-vue-jsx-merge-props"
	var external_babel_helper_vue_jsx_merge_props_ = __webpack_require__(13);
	var external_babel_helper_vue_jsx_merge_props_default = /*#__PURE__*/__webpack_require__.n(external_babel_helper_vue_jsx_merge_props_);

	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Input.vue?vue&type=script&lang=js&



	var keysThatRequireMenuBeingOpen = [KEY_CODES.ENTER, KEY_CODES.END, KEY_CODES.HOME, KEY_CODES.ARROW_LEFT, KEY_CODES.ARROW_UP, KEY_CODES.ARROW_RIGHT, KEY_CODES.ARROW_DOWN];
	/* harmony default export */ var Inputvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--input',
	  inject: ['instance'],
	  data: function data() {
	    return {
	      inputWidth: MIN_INPUT_WIDTH,
	      value: ''
	    };
	  },
	  computed: {
	    needAutoSize: function needAutoSize() {
	      var instance = this.instance;
	      return instance.searchable && !instance.disabled && instance.multiple;
	    },
	    inputStyle: function inputStyle() {
	      return {
	        width: this.needAutoSize ? "".concat(this.inputWidth, "px") : null
	      };
	    }
	  },
	  watch: {
	    'instance.trigger.searchQuery': function instanceTriggerSearchQuery(newValue) {
	      this.value = newValue;
	    },
	    value: function value() {
	      if (this.needAutoSize) this.$nextTick(this.updateInputWidth);
	    }
	  },
	  created: function created() {
	    this.debouncedCallback = debounce_default()(this.updateSearchQuery, INPUT_DEBOUNCE_DELAY, {
	      leading: true,
	      trailing: true
	    });
	  },
	  methods: {
	    clear: function clear() {
	      this.onInput({
	        target: {
	          value: ''
	        }
	      });
	    },
	    focus: function focus() {
	      var instance = this.instance;

	      if (!instance.disabled) {
	        this.$refs.input && this.$refs.input.focus();
	      }
	    },
	    blur: function blur() {
	      this.$refs.input && this.$refs.input.blur();
	    },
	    onFocus: function onFocus() {
	      var instance = this.instance;
	      instance.trigger.isFocused = true;
	      if (instance.openOnFocus) instance.openMenu();
	    },
	    onBlur: function onBlur() {
	      var instance = this.instance;
	      var menu = instance.getMenu();

	      if (menu && document.activeElement === menu) {
	        return this.focus();
	      }

	      instance.trigger.isFocused = false;
	      instance.closeMenu();
	    },
	    onInput: function onInput(evt) {
	      var value = evt.target.value;
	      this.value = value;

	      if (value) {
	        this.debouncedCallback();
	      } else {
	        this.debouncedCallback.cancel();
	        this.updateSearchQuery();
	      }
	    },
	    onKeyDown: function onKeyDown(evt) {
	      var instance = this.instance;
	      var key = 'which' in evt ? evt.which : evt.keyCode;
	      if (evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey) return;

	      if (!instance.menu.isOpen && includes(keysThatRequireMenuBeingOpen, key)) {
	        evt.preventDefault();
	        return instance.openMenu();
	      }

	      switch (key) {
	        case KEY_CODES.BACKSPACE:
	          {
	            if (instance.backspaceRemoves && !this.value.length) {
	              instance.removeLastValue();
	            }

	            break;
	          }

	        case KEY_CODES.ENTER:
	          {
	            evt.preventDefault();
	            if (instance.menu.current === null) return;
	            var current = instance.getNode(instance.menu.current);
	            if (current.isBranch && instance.disableBranchNodes) return;
	            instance.select(current);
	            break;
	          }

	        case KEY_CODES.ESCAPE:
	          {
	            if (this.value.length) {
	              this.clear();
	            } else if (instance.menu.isOpen) {
	              instance.closeMenu();
	            }

	            break;
	          }

	        case KEY_CODES.END:
	          {
	            evt.preventDefault();
	            instance.highlightLastOption();
	            break;
	          }

	        case KEY_CODES.HOME:
	          {
	            evt.preventDefault();
	            instance.highlightFirstOption();
	            break;
	          }

	        case KEY_CODES.ARROW_LEFT:
	          {
	            var _current = instance.getNode(instance.menu.current);

	            if (_current.isBranch && instance.shouldExpand(_current)) {
	              evt.preventDefault();
	              instance.toggleExpanded(_current);
	            } else if (!_current.isRootNode && (_current.isLeaf || _current.isBranch && !instance.shouldExpand(_current))) {
	              evt.preventDefault();
	              instance.setCurrentHighlightedOption(_current.parentNode);
	            }

	            break;
	          }

	        case KEY_CODES.ARROW_UP:
	          {
	            evt.preventDefault();
	            instance.highlightPrevOption();
	            break;
	          }

	        case KEY_CODES.ARROW_RIGHT:
	          {
	            var _current2 = instance.getNode(instance.menu.current);

	            if (_current2.isBranch && !instance.shouldExpand(_current2)) {
	              evt.preventDefault();
	              instance.toggleExpanded(_current2);
	            }

	            break;
	          }

	        case KEY_CODES.ARROW_DOWN:
	          {
	            evt.preventDefault();
	            instance.highlightNextOption();
	            break;
	          }

	        case KEY_CODES.DELETE:
	          {
	            if (instance.deleteRemoves && !this.value.length) {
	              instance.removeLastValue();
	            }

	            break;
	          }

	        default:
	          {
	            instance.openMenu();
	          }
	      }
	    },
	    onMouseDown: function onMouseDown(evt) {
	      if (this.value.length) {
	        evt.stopPropagation();
	      }
	    },
	    renderInputContainer: function renderInputContainer() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      var props = {};
	      var children = [];

	      if (instance.searchable && !instance.disabled) {
	        children.push(this.renderInput());
	        if (this.needAutoSize) children.push(this.renderSizer());
	      }

	      if (!instance.searchable) {
	        deepExtend(props, {
	          on: {
	            focus: this.onFocus,
	            blur: this.onBlur,
	            keydown: this.onKeyDown
	          },
	          ref: 'input'
	        });
	      }

	      if (!instance.searchable && !instance.disabled) {
	        deepExtend(props, {
	          attrs: {
	            tabIndex: instance.tabIndex
	          }
	        });
	      }

	      return h("div", external_babel_helper_vue_jsx_merge_props_default()([{
	        "class": "vue-treeselect__input-container"
	      }, props]), [children]);
	    },
	    renderInput: function renderInput() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return h("input", {
	        ref: "input",
	        "class": "vue-treeselect__input",
	        attrs: {
	          type: "text",
	          autocomplete: "off",
	          tabIndex: instance.tabIndex,
	          required: instance.required && !instance.hasValue
	        },
	        domProps: {
	          "value": this.value
	        },
	        style: this.inputStyle,
	        on: {
	          "focus": this.onFocus,
	          "input": this.onInput,
	          "blur": this.onBlur,
	          "keydown": this.onKeyDown,
	          "mousedown": this.onMouseDown
	        }
	      });
	    },
	    renderSizer: function renderSizer() {
	      var h = this.$createElement;
	      return h("div", {
	        ref: "sizer",
	        "class": "vue-treeselect__sizer"
	      }, [this.value]);
	    },
	    updateInputWidth: function updateInputWidth() {
	      this.inputWidth = Math.max(MIN_INPUT_WIDTH, this.$refs.sizer.scrollWidth + 15);
	    },
	    updateSearchQuery: function updateSearchQuery() {
	      var instance = this.instance;
	      instance.trigger.searchQuery = this.value;
	    }
	  },
	  render: function render() {
	    return this.renderInputContainer();
	  }
	});
	// CONCATENATED MODULE: ./src/components/Input.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_Inputvue_type_script_lang_js_ = (Inputvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/Input.vue
	var Input_render, Input_staticRenderFns;




	/* normalize component */

	var Input_component = normalizeComponent(
	  components_Inputvue_type_script_lang_js_,
	  Input_render,
	  Input_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Input_component.options.__file = "src/components/Input.vue";
	/* harmony default export */ var Input = (Input_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Placeholder.vue?vue&type=script&lang=js&
	/* harmony default export */ var Placeholdervue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--placeholder',
	  inject: ['instance'],
	  render: function render() {
	    var h = arguments[0];
	    var instance = this.instance;
	    var placeholderClass = {
	      'vue-treeselect__placeholder': true,
	      'vue-treeselect-helper-zoom-effect-off': true,
	      'vue-treeselect-helper-hide': instance.hasValue || instance.trigger.searchQuery
	    };
	    return h("div", {
	      "class": placeholderClass
	    }, [instance.placeholder]);
	  }
	});
	// CONCATENATED MODULE: ./src/components/Placeholder.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_Placeholdervue_type_script_lang_js_ = (Placeholdervue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/Placeholder.vue
	var Placeholder_render, Placeholder_staticRenderFns;




	/* normalize component */

	var Placeholder_component = normalizeComponent(
	  components_Placeholdervue_type_script_lang_js_,
	  Placeholder_render,
	  Placeholder_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Placeholder_component.options.__file = "src/components/Placeholder.vue";
	/* harmony default export */ var Placeholder = (Placeholder_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/SingleValue.vue?vue&type=script&lang=js&


	/* harmony default export */ var SingleValuevue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--single-value',
	  inject: ['instance'],
	  methods: {
	    renderSingleValueLabel: function renderSingleValueLabel() {
	      var instance = this.instance;
	      var node = instance.selectedNodes[0];
	      var customValueLabelRenderer = instance.$scopedSlots['value-label'];
	      return customValueLabelRenderer ? customValueLabelRenderer({
	        node: node
	      }) : node.label;
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    var instance = this.instance,
	        renderValueContainer = this.$parent.renderValueContainer;
	    var shouldShowValue = instance.hasValue && !instance.trigger.searchQuery;
	    return renderValueContainer([shouldShowValue && h("div", {
	      "class": "vue-treeselect__single-value"
	    }, [this.renderSingleValueLabel()]), h(Placeholder), h(Input, {
	      ref: "input"
	    })]);
	  }
	});
	// CONCATENATED MODULE: ./src/components/SingleValue.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_SingleValuevue_type_script_lang_js_ = (SingleValuevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/SingleValue.vue
	var SingleValue_render, SingleValue_staticRenderFns;




	/* normalize component */

	var SingleValue_component = normalizeComponent(
	  components_SingleValuevue_type_script_lang_js_,
	  SingleValue_render,
	  SingleValue_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	SingleValue_component.options.__file = "src/components/SingleValue.vue";
	/* harmony default export */ var SingleValue = (SingleValue_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js!./node_modules/vue-loader/lib??vue-loader-options!./src/components/icons/Delete.vue?vue&type=template&id=364b6320&
	var Deletevue_type_template_id_364b6320_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    {
	      attrs: {
	        xmlns: "http://www.w3.org/2000/svg",
	        viewBox: "0 0 348.333 348.333"
	      }
	    },
	    [
	      _c("path", {
	        attrs: {
	          d:
	            "M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z"
	        }
	      })
	    ]
	  )
	};
	var Deletevue_type_template_id_364b6320_staticRenderFns = [];
	Deletevue_type_template_id_364b6320_render._withStripped = true;


	// CONCATENATED MODULE: ./src/components/icons/Delete.vue?vue&type=template&id=364b6320&

	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/icons/Delete.vue?vue&type=script&lang=js&
	/* harmony default export */ var Deletevue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--x'
	});
	// CONCATENATED MODULE: ./src/components/icons/Delete.vue?vue&type=script&lang=js&
	 /* harmony default export */ var icons_Deletevue_type_script_lang_js_ = (Deletevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/icons/Delete.vue





	/* normalize component */

	var Delete_component = normalizeComponent(
	  icons_Deletevue_type_script_lang_js_,
	  Deletevue_type_template_id_364b6320_render,
	  Deletevue_type_template_id_364b6320_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Delete_component.options.__file = "src/components/icons/Delete.vue";
	/* harmony default export */ var Delete = (Delete_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/MultiValueItem.vue?vue&type=script&lang=js&


	/* harmony default export */ var MultiValueItemvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--multi-value-item',
	  inject: ['instance'],
	  props: {
	    node: {
	      type: Object,
	      required: true
	    }
	  },
	  methods: {
	    handleMouseDown: onLeftClick(function handleMouseDown() {
	      var instance = this.instance,
	          node = this.node;
	      instance.select(node);
	    })
	  },
	  render: function render() {
	    var h = arguments[0];
	    var instance = this.instance,
	        node = this.node;
	    var itemClass = {
	      'vue-treeselect__multi-value-item': true,
	      'vue-treeselect__multi-value-item-disabled': node.isDisabled,
	      'vue-treeselect__multi-value-item-new': node.isNew
	    };
	    var customValueLabelRenderer = instance.$scopedSlots['value-label'];
	    var labelRenderer = customValueLabelRenderer ? customValueLabelRenderer({
	      node: node
	    }) : node.label;
	    return h("div", {
	      "class": "vue-treeselect__multi-value-item-container"
	    }, [h("div", {
	      "class": itemClass,
	      on: {
	        "mousedown": this.handleMouseDown
	      }
	    }, [h("span", {
	      "class": "vue-treeselect__multi-value-label"
	    }, [labelRenderer]), h("span", {
	      "class": "vue-treeselect__icon vue-treeselect__value-remove"
	    }, [h(Delete)])])]);
	  }
	});
	// CONCATENATED MODULE: ./src/components/MultiValueItem.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_MultiValueItemvue_type_script_lang_js_ = (MultiValueItemvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/MultiValueItem.vue
	var MultiValueItem_render, MultiValueItem_staticRenderFns;




	/* normalize component */

	var MultiValueItem_component = normalizeComponent(
	  components_MultiValueItemvue_type_script_lang_js_,
	  MultiValueItem_render,
	  MultiValueItem_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	MultiValueItem_component.options.__file = "src/components/MultiValueItem.vue";
	/* harmony default export */ var MultiValueItem = (MultiValueItem_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/MultiValue.vue?vue&type=script&lang=js&




	/* harmony default export */ var MultiValuevue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--multi-value',
	  inject: ['instance'],
	  methods: {
	    renderMultiValueItems: function renderMultiValueItems() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return instance.internalValue.slice(0, instance.limit).map(instance.getNode).map(function (node) {
	        return h(MultiValueItem, {
	          key: "multi-value-item-".concat(node.id),
	          attrs: {
	            node: node
	          }
	        });
	      });
	    },
	    renderExceedLimitTip: function renderExceedLimitTip() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      var count = instance.internalValue.length - instance.limit;
	      if (count <= 0) return null;
	      return h("div", {
	        "class": "vue-treeselect__limit-tip vue-treeselect-helper-zoom-effect-off",
	        key: "exceed-limit-tip"
	      }, [h("span", {
	        "class": "vue-treeselect__limit-tip-text"
	      }, [instance.limitText(count)])]);
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    var renderValueContainer = this.$parent.renderValueContainer;
	    var transitionGroupProps = {
	      props: {
	        tag: 'div',
	        name: 'vue-treeselect__multi-value-item--transition',
	        appear: true
	      }
	    };
	    return renderValueContainer(h("transition-group", external_babel_helper_vue_jsx_merge_props_default()([{
	      "class": "vue-treeselect__multi-value"
	    }, transitionGroupProps]), [this.renderMultiValueItems(), this.renderExceedLimitTip(), h(Placeholder, {
	      key: "placeholder"
	    }), h(Input, {
	      ref: "input",
	      key: "input"
	    })]));
	  }
	});
	// CONCATENATED MODULE: ./src/components/MultiValue.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_MultiValuevue_type_script_lang_js_ = (MultiValuevue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/MultiValue.vue
	var MultiValue_render, MultiValue_staticRenderFns;




	/* normalize component */

	var MultiValue_component = normalizeComponent(
	  components_MultiValuevue_type_script_lang_js_,
	  MultiValue_render,
	  MultiValue_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	MultiValue_component.options.__file = "src/components/MultiValue.vue";
	/* harmony default export */ var MultiValue = (MultiValue_component.exports);
	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js!./node_modules/vue-loader/lib??vue-loader-options!./src/components/icons/Arrow.vue?vue&type=template&id=11186cd4&
	var Arrowvue_type_template_id_11186cd4_render = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "svg",
	    {
	      attrs: {
	        xmlns: "http://www.w3.org/2000/svg",
	        viewBox: "0 0 292.362 292.362"
	      }
	    },
	    [
	      _c("path", {
	        attrs: {
	          d:
	            "M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z"
	        }
	      })
	    ]
	  )
	};
	var Arrowvue_type_template_id_11186cd4_staticRenderFns = [];
	Arrowvue_type_template_id_11186cd4_render._withStripped = true;


	// CONCATENATED MODULE: ./src/components/icons/Arrow.vue?vue&type=template&id=11186cd4&

	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/icons/Arrow.vue?vue&type=script&lang=js&
	/* harmony default export */ var Arrowvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--arrow'
	});
	// CONCATENATED MODULE: ./src/components/icons/Arrow.vue?vue&type=script&lang=js&
	 /* harmony default export */ var icons_Arrowvue_type_script_lang_js_ = (Arrowvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/icons/Arrow.vue





	/* normalize component */

	var Arrow_component = normalizeComponent(
	  icons_Arrowvue_type_script_lang_js_,
	  Arrowvue_type_template_id_11186cd4_render,
	  Arrowvue_type_template_id_11186cd4_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Arrow_component.options.__file = "src/components/icons/Arrow.vue";
	/* harmony default export */ var Arrow = (Arrow_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Control.vue?vue&type=script&lang=js&





	/* harmony default export */ var Controlvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--control',
	  inject: ['instance'],
	  computed: {
	    shouldShowX: function shouldShowX() {
	      var instance = this.instance;
	      return instance.clearable && !instance.disabled && instance.hasValue && (this.hasUndisabledValue || instance.allowClearingDisabled);
	    },
	    shouldShowArrow: function shouldShowArrow() {
	      var instance = this.instance;
	      if (!instance.alwaysOpen) return true;
	      return !instance.menu.isOpen;
	    },
	    hasUndisabledValue: function hasUndisabledValue() {
	      var instance = this.instance;
	      return instance.hasValue && instance.internalValue.some(function (id) {
	        return !instance.getNode(id).isDisabled;
	      });
	    }
	  },
	  methods: {
	    renderX: function renderX() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      var title = instance.multiple ? instance.clearAllText : instance.clearValueText;
	      if (!this.shouldShowX) return null;
	      return h("div", {
	        "class": "vue-treeselect__x-container",
	        attrs: {
	          title: title
	        },
	        on: {
	          "mousedown": this.handleMouseDownOnX
	        }
	      }, [h(Delete, {
	        "class": "vue-treeselect__x"
	      })]);
	    },
	    renderArrow: function renderArrow() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      var arrowClass = {
	        'vue-treeselect__control-arrow': true,
	        'vue-treeselect__control-arrow--rotated': instance.menu.isOpen
	      };
	      if (!this.shouldShowArrow) return null;
	      return h("div", {
	        "class": "vue-treeselect__control-arrow-container",
	        on: {
	          "mousedown": this.handleMouseDownOnArrow
	        }
	      }, [h(Arrow, {
	        "class": arrowClass
	      })]);
	    },
	    handleMouseDownOnX: onLeftClick(function handleMouseDownOnX(evt) {
	      evt.stopPropagation();
	      evt.preventDefault();
	      var instance = this.instance;
	      var result = instance.beforeClearAll();

	      var handler = function handler(shouldClear) {
	        if (shouldClear) instance.clear();
	      };

	      if (external_is_promise_default()(result)) {
	        result.then(handler);
	      } else {
	        setTimeout(function () {
	          return handler(result);
	        }, 0);
	      }
	    }),
	    handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnArrow(evt) {
	      evt.preventDefault();
	      evt.stopPropagation();
	      var instance = this.instance;
	      instance.focusInput();
	      instance.toggleMenu();
	    }),
	    renderValueContainer: function renderValueContainer(children) {
	      var h = this.$createElement;
	      return h("div", {
	        "class": "vue-treeselect__value-container"
	      }, [children]);
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    var instance = this.instance;
	    var ValueContainer = instance.single ? SingleValue : MultiValue;
	    return h("div", {
	      "class": "vue-treeselect__control",
	      on: {
	        "mousedown": instance.handleMouseDown
	      }
	    }, [h(ValueContainer, {
	      ref: "value-container"
	    }), this.renderX(), this.renderArrow()]);
	  }
	});
	// CONCATENATED MODULE: ./src/components/Control.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_Controlvue_type_script_lang_js_ = (Controlvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/Control.vue
	var Control_render, Control_staticRenderFns;




	/* normalize component */

	var Control_component = normalizeComponent(
	  components_Controlvue_type_script_lang_js_,
	  Control_render,
	  Control_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Control_component.options.__file = "src/components/Control.vue";
	/* harmony default export */ var Control = (Control_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Tip.vue?vue&type=script&lang=js&
	/* harmony default export */ var Tipvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--tip',
	  functional: true,
	  props: {
	    type: {
	      type: String,
	      required: true
	    },
	    icon: {
	      type: String,
	      required: true
	    }
	  },
	  render: function render(_, context) {
	    var h = arguments[0];
	    var props = context.props,
	        children = context.children;
	    return h("div", {
	      "class": "vue-treeselect__tip vue-treeselect__".concat(props.type, "-tip")
	    }, [h("div", {
	      "class": "vue-treeselect__icon-container"
	    }, [h("span", {
	      "class": "vue-treeselect__icon-".concat(props.icon)
	    })]), h("span", {
	      "class": "vue-treeselect__tip-text vue-treeselect__".concat(props.type, "-tip-text")
	    }, [children])]);
	  }
	});
	// CONCATENATED MODULE: ./src/components/Tip.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_Tipvue_type_script_lang_js_ = (Tipvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/Tip.vue
	var Tip_render, Tip_staticRenderFns;




	/* normalize component */

	var Tip_component = normalizeComponent(
	  components_Tipvue_type_script_lang_js_,
	  Tip_render,
	  Tip_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Tip_component.options.__file = "src/components/Tip.vue";
	/* harmony default export */ var Tip = (Tip_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Option.vue?vue&type=script&lang=js&





	var arrowPlaceholder, checkMark, minusMark;
	var Option = {
	  name: 'vue-treeselect--option',
	  inject: ['instance'],
	  props: {
	    node: {
	      type: Object,
	      required: true
	    }
	  },
	  computed: {
	    shouldExpand: function shouldExpand() {
	      var instance = this.instance,
	          node = this.node;
	      return node.isBranch && instance.shouldExpand(node);
	    },
	    shouldShow: function shouldShow() {
	      var instance = this.instance,
	          node = this.node;
	      return instance.shouldShowOptionInMenu(node);
	    }
	  },
	  methods: {
	    renderOption: function renderOption() {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      var optionClass = {
	        'vue-treeselect__option': true,
	        'vue-treeselect__option--disabled': node.isDisabled,
	        'vue-treeselect__option--selected': instance.isSelected(node),
	        'vue-treeselect__option--highlight': node.isHighlighted,
	        'vue-treeselect__option--matched': instance.localSearch.active && node.isMatched,
	        'vue-treeselect__option--hide': !this.shouldShow
	      };
	      return h("div", {
	        "class": optionClass,
	        on: {
	          "mouseenter": this.handleMouseEnterOption
	        },
	        attrs: {
	          "data-id": node.id
	        }
	      }, [this.renderArrow(), this.renderLabelContainer([this.renderCheckboxContainer([this.renderCheckbox()]), this.renderLabel()])]);
	    },
	    renderSubOptionsList: function renderSubOptionsList() {
	      var h = this.$createElement;
	      if (!this.shouldExpand) return null;
	      return h("div", {
	        "class": "vue-treeselect__list"
	      }, [this.renderSubOptions(), this.renderNoChildrenTip(), this.renderLoadingChildrenTip(), this.renderLoadingChildrenErrorTip()]);
	    },
	    renderArrow: function renderArrow() {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      if (instance.shouldFlattenOptions && this.shouldShow) return null;

	      if (node.isBranch) {
	        var transitionProps = {
	          props: {
	            name: 'vue-treeselect__option-arrow--prepare',
	            appear: true
	          }
	        };
	        var arrowClass = {
	          'vue-treeselect__option-arrow': true,
	          'vue-treeselect__option-arrow--rotated': this.shouldExpand
	        };
	        return h("div", {
	          "class": "vue-treeselect__option-arrow-container",
	          on: {
	            "mousedown": this.handleMouseDownOnArrow
	          }
	        }, [h("transition", transitionProps, [h(Arrow, {
	          "class": arrowClass
	        })])]);
	      }

	      if (instance.hasBranchNodes) {
	        if (!arrowPlaceholder) arrowPlaceholder = h("div", {
	          "class": "vue-treeselect__option-arrow-placeholder"
	        }, ["\xA0"]);
	        return arrowPlaceholder;
	      }

	      return null;
	    },
	    renderLabelContainer: function renderLabelContainer(children) {
	      var h = this.$createElement;
	      return h("div", {
	        "class": "vue-treeselect__label-container",
	        on: {
	          "mousedown": this.handleMouseDownOnLabelContainer
	        }
	      }, [children]);
	    },
	    renderCheckboxContainer: function renderCheckboxContainer(children) {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      if (instance.single) return null;
	      if (instance.disableBranchNodes && node.isBranch) return null;
	      return h("div", {
	        "class": "vue-treeselect__checkbox-container"
	      }, [children]);
	    },
	    renderCheckbox: function renderCheckbox() {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      var checkedState = instance.forest.checkedStateMap[node.id];
	      var checkboxClass = {
	        'vue-treeselect__checkbox': true,
	        'vue-treeselect__checkbox--checked': checkedState === CHECKED,
	        'vue-treeselect__checkbox--indeterminate': checkedState === INDETERMINATE,
	        'vue-treeselect__checkbox--unchecked': checkedState === UNCHECKED,
	        'vue-treeselect__checkbox--disabled': node.isDisabled
	      };
	      if (!checkMark) checkMark = h("span", {
	        "class": "vue-treeselect__check-mark"
	      });
	      if (!minusMark) minusMark = h("span", {
	        "class": "vue-treeselect__minus-mark"
	      });
	      return h("span", {
	        "class": checkboxClass
	      }, [checkMark, minusMark]);
	    },
	    renderLabel: function renderLabel() {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      var shouldShowCount = node.isBranch && (instance.localSearch.active ? instance.showCountOnSearchComputed : instance.showCount);
	      var count = shouldShowCount ? instance.localSearch.active ? instance.localSearch.countMap[node.id][instance.showCountOf] : node.count[instance.showCountOf] : NaN;
	      var labelClassName = 'vue-treeselect__label';
	      var countClassName = 'vue-treeselect__count';
	      var customLabelRenderer = instance.$scopedSlots['option-label'];
	      if (customLabelRenderer) return customLabelRenderer({
	        node: node,
	        shouldShowCount: shouldShowCount,
	        count: count,
	        labelClassName: labelClassName,
	        countClassName: countClassName
	      });
	      return h("label", {
	        "class": labelClassName
	      }, [node.label, shouldShowCount && h("span", {
	        "class": countClassName
	      }, ["(", count, ")"])]);
	    },
	    renderSubOptions: function renderSubOptions() {
	      var h = this.$createElement;
	      var node = this.node;
	      if (!node.childrenStates.isLoaded) return null;
	      return node.children.map(function (childNode) {
	        return h(Option, {
	          attrs: {
	            node: childNode
	          },
	          key: childNode.id
	        });
	      });
	    },
	    renderNoChildrenTip: function renderNoChildrenTip() {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      if (!node.childrenStates.isLoaded || node.children.length) return null;
	      return h(Tip, {
	        attrs: {
	          type: "no-children",
	          icon: "warning"
	        }
	      }, [instance.noChildrenText]);
	    },
	    renderLoadingChildrenTip: function renderLoadingChildrenTip() {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      if (!node.childrenStates.isLoading) return null;
	      return h(Tip, {
	        attrs: {
	          type: "loading",
	          icon: "loader"
	        }
	      }, [instance.loadingText]);
	    },
	    renderLoadingChildrenErrorTip: function renderLoadingChildrenErrorTip() {
	      var h = this.$createElement;
	      var instance = this.instance,
	          node = this.node;
	      if (!node.childrenStates.loadingError) return null;
	      return h(Tip, {
	        attrs: {
	          type: "error",
	          icon: "error"
	        }
	      }, [node.childrenStates.loadingError, h("a", {
	        "class": "vue-treeselect__retry",
	        attrs: {
	          title: instance.retryTitle
	        },
	        on: {
	          "mousedown": this.handleMouseDownOnRetry
	        }
	      }, [instance.retryText])]);
	    },
	    handleMouseEnterOption: function handleMouseEnterOption(evt) {
	      var instance = this.instance,
	          node = this.node;
	      if (evt.target !== evt.currentTarget) return;
	      instance.setCurrentHighlightedOption(node, false);
	    },
	    handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnOptionArrow() {
	      var instance = this.instance,
	          node = this.node;
	      instance.toggleExpanded(node);
	    }),
	    handleMouseDownOnLabelContainer: onLeftClick(function handleMouseDownOnLabelContainer() {
	      var instance = this.instance,
	          node = this.node;

	      if (node.isBranch && instance.disableBranchNodes) {
	        instance.toggleExpanded(node);
	      } else {
	        instance.select(node);
	      }
	    }),
	    handleMouseDownOnRetry: onLeftClick(function handleMouseDownOnRetry() {
	      var instance = this.instance,
	          node = this.node;
	      instance.loadChildrenOptions(node);
	    })
	  },
	  render: function render() {
	    var h = arguments[0];
	    var node = this.node;
	    var indentLevel = this.instance.shouldFlattenOptions ? 0 : node.level;

	    var listItemClass = defineProperty_default()({
	      'vue-treeselect__list-item': true
	    }, "vue-treeselect__indent-level-".concat(indentLevel), true);

	    var transitionProps = {
	      props: {
	        name: 'vue-treeselect__list--transition'
	      }
	    };
	    return h("div", {
	      "class": listItemClass
	    }, [this.renderOption(), node.isBranch && h("transition", transitionProps, [this.renderSubOptionsList()])]);
	  }
	};
	/* harmony default export */ var Optionvue_type_script_lang_js_ = (Option);
	// CONCATENATED MODULE: ./src/components/Option.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_Optionvue_type_script_lang_js_ = (Optionvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/Option.vue
	var Option_render, Option_staticRenderFns;




	/* normalize component */

	var Option_component = normalizeComponent(
	  components_Optionvue_type_script_lang_js_,
	  Option_render,
	  Option_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Option_component.options.__file = "src/components/Option.vue";
	/* harmony default export */ var components_Option = (Option_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Menu.vue?vue&type=script&lang=js&




	var directionMap = {
	  top: 'top',
	  bottom: 'bottom',
	  above: 'top',
	  below: 'bottom'
	};
	/* harmony default export */ var Menuvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--menu',
	  inject: ['instance'],
	  computed: {
	    menuStyle: function menuStyle() {
	      var instance = this.instance;
	      return {
	        maxHeight: instance.maxHeight + 'px'
	      };
	    },
	    menuContainerStyle: function menuContainerStyle() {
	      var instance = this.instance;
	      return {
	        zIndex: instance.appendToBody ? null : instance.zIndex
	      };
	    }
	  },
	  watch: {
	    'instance.menu.isOpen': function instanceMenuIsOpen(newValue) {
	      if (newValue) {
	        this.$nextTick(this.onMenuOpen);
	      } else {
	        this.onMenuClose();
	      }
	    }
	  },
	  created: function created() {
	    this.menuSizeWatcher = null;
	    this.menuResizeAndScrollEventListeners = null;
	  },
	  mounted: function mounted() {
	    var instance = this.instance;
	    if (instance.menu.isOpen) this.$nextTick(this.onMenuOpen);
	  },
	  destroyed: function destroyed() {
	    this.onMenuClose();
	  },
	  methods: {
	    renderMenu: function renderMenu() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      if (!instance.menu.isOpen) return null;
	      return h("div", {
	        ref: "menu",
	        "class": "vue-treeselect__menu",
	        on: {
	          "mousedown": instance.handleMouseDown
	        },
	        style: this.menuStyle
	      }, [this.renderBeforeList(), instance.async ? this.renderAsyncSearchMenuInner() : instance.localSearch.active ? this.renderLocalSearchMenuInner() : this.renderNormalMenuInner(), this.renderAfterList()]);
	    },
	    renderBeforeList: function renderBeforeList() {
	      var instance = this.instance;
	      var beforeListRenderer = instance.$scopedSlots['before-list'];
	      return beforeListRenderer ? beforeListRenderer() : null;
	    },
	    renderAfterList: function renderAfterList() {
	      var instance = this.instance;
	      var afterListRenderer = instance.$scopedSlots['after-list'];
	      return afterListRenderer ? afterListRenderer() : null;
	    },
	    renderNormalMenuInner: function renderNormalMenuInner() {
	      var instance = this.instance;

	      if (instance.rootOptionsStates.isLoading) {
	        return this.renderLoadingOptionsTip();
	      } else if (instance.rootOptionsStates.loadingError) {
	        return this.renderLoadingRootOptionsErrorTip();
	      } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {
	        return this.renderNoAvailableOptionsTip();
	      } else {
	        return this.renderOptionList();
	      }
	    },
	    renderLocalSearchMenuInner: function renderLocalSearchMenuInner() {
	      var instance = this.instance;

	      if (instance.rootOptionsStates.isLoading) {
	        return this.renderLoadingOptionsTip();
	      } else if (instance.rootOptionsStates.loadingError) {
	        return this.renderLoadingRootOptionsErrorTip();
	      } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {
	        return this.renderNoAvailableOptionsTip();
	      } else if (instance.localSearch.noResults) {
	        return this.renderNoResultsTip();
	      } else {
	        return this.renderOptionList();
	      }
	    },
	    renderAsyncSearchMenuInner: function renderAsyncSearchMenuInner() {
	      var instance = this.instance;
	      var entry = instance.getRemoteSearchEntry();
	      var shouldShowSearchPromptTip = instance.trigger.searchQuery === '' && !instance.defaultOptions;
	      var shouldShowNoResultsTip = shouldShowSearchPromptTip ? false : entry.isLoaded && entry.options.length === 0;

	      if (shouldShowSearchPromptTip) {
	        return this.renderSearchPromptTip();
	      } else if (entry.isLoading) {
	        return this.renderLoadingOptionsTip();
	      } else if (entry.loadingError) {
	        return this.renderAsyncSearchLoadingErrorTip();
	      } else if (shouldShowNoResultsTip) {
	        return this.renderNoResultsTip();
	      } else {
	        return this.renderOptionList();
	      }
	    },
	    renderOptionList: function renderOptionList() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return h("div", {
	        "class": "vue-treeselect__list"
	      }, [instance.forest.normalizedOptions.map(function (rootNode) {
	        return h(components_Option, {
	          attrs: {
	            node: rootNode
	          },
	          key: rootNode.id
	        });
	      })]);
	    },
	    renderSearchPromptTip: function renderSearchPromptTip() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return h(Tip, {
	        attrs: {
	          type: "search-prompt",
	          icon: "warning"
	        }
	      }, [instance.searchPromptText]);
	    },
	    renderLoadingOptionsTip: function renderLoadingOptionsTip() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return h(Tip, {
	        attrs: {
	          type: "loading",
	          icon: "loader"
	        }
	      }, [instance.loadingText]);
	    },
	    renderLoadingRootOptionsErrorTip: function renderLoadingRootOptionsErrorTip() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return h(Tip, {
	        attrs: {
	          type: "error",
	          icon: "error"
	        }
	      }, [instance.rootOptionsStates.loadingError, h("a", {
	        "class": "vue-treeselect__retry",
	        on: {
	          "click": instance.loadRootOptions
	        },
	        attrs: {
	          title: instance.retryTitle
	        }
	      }, [instance.retryText])]);
	    },
	    renderAsyncSearchLoadingErrorTip: function renderAsyncSearchLoadingErrorTip() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      var entry = instance.getRemoteSearchEntry();
	      return h(Tip, {
	        attrs: {
	          type: "error",
	          icon: "error"
	        }
	      }, [entry.loadingError, h("a", {
	        "class": "vue-treeselect__retry",
	        on: {
	          "click": instance.handleRemoteSearch
	        },
	        attrs: {
	          title: instance.retryTitle
	        }
	      }, [instance.retryText])]);
	    },
	    renderNoAvailableOptionsTip: function renderNoAvailableOptionsTip() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return h(Tip, {
	        attrs: {
	          type: "no-options",
	          icon: "warning"
	        }
	      }, [instance.noOptionsText]);
	    },
	    renderNoResultsTip: function renderNoResultsTip() {
	      var h = this.$createElement;
	      var instance = this.instance;
	      return h(Tip, {
	        attrs: {
	          type: "no-results",
	          icon: "warning"
	        }
	      }, [instance.noResultsText]);
	    },
	    onMenuOpen: function onMenuOpen() {
	      this.adjustMenuOpenDirection();
	      this.setupMenuSizeWatcher();
	      this.setupMenuResizeAndScrollEventListeners();
	    },
	    onMenuClose: function onMenuClose() {
	      this.removeMenuSizeWatcher();
	      this.removeMenuResizeAndScrollEventListeners();
	    },
	    adjustMenuOpenDirection: function adjustMenuOpenDirection() {
	      var instance = this.instance;
	      if (!instance.menu.isOpen) return;
	      var $menu = instance.getMenu();
	      var $control = instance.getControl();
	      var menuRect = $menu.getBoundingClientRect();
	      var controlRect = $control.getBoundingClientRect();
	      var menuHeight = menuRect.height;
	      var viewportHeight = window.innerHeight;
	      var spaceAbove = controlRect.top;
	      var spaceBelow = window.innerHeight - controlRect.bottom;
	      var isControlInViewport = controlRect.top >= 0 && controlRect.top <= viewportHeight || controlRect.top < 0 && controlRect.bottom > 0;
	      var hasEnoughSpaceBelow = spaceBelow > menuHeight + MENU_BUFFER;
	      var hasEnoughSpaceAbove = spaceAbove > menuHeight + MENU_BUFFER;

	      if (!isControlInViewport) {
	        instance.closeMenu();
	      } else if (instance.openDirection !== 'auto') {
	        instance.menu.placement = directionMap[instance.openDirection];
	      } else if (hasEnoughSpaceBelow || !hasEnoughSpaceAbove) {
	        instance.menu.placement = 'bottom';
	      } else {
	        instance.menu.placement = 'top';
	      }
	    },
	    setupMenuSizeWatcher: function setupMenuSizeWatcher() {
	      var instance = this.instance;
	      var $menu = instance.getMenu();
	      if (this.menuSizeWatcher) return;
	      this.menuSizeWatcher = {
	        remove: watchSize($menu, this.adjustMenuOpenDirection)
	      };
	    },
	    setupMenuResizeAndScrollEventListeners: function setupMenuResizeAndScrollEventListeners() {
	      var instance = this.instance;
	      var $control = instance.getControl();
	      if (this.menuResizeAndScrollEventListeners) return;
	      this.menuResizeAndScrollEventListeners = {
	        remove: setupResizeAndScrollEventListeners($control, this.adjustMenuOpenDirection)
	      };
	    },
	    removeMenuSizeWatcher: function removeMenuSizeWatcher() {
	      if (!this.menuSizeWatcher) return;
	      this.menuSizeWatcher.remove();
	      this.menuSizeWatcher = null;
	    },
	    removeMenuResizeAndScrollEventListeners: function removeMenuResizeAndScrollEventListeners() {
	      if (!this.menuResizeAndScrollEventListeners) return;
	      this.menuResizeAndScrollEventListeners.remove();
	      this.menuResizeAndScrollEventListeners = null;
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    return h("div", {
	      ref: "menu-container",
	      "class": "vue-treeselect__menu-container",
	      style: this.menuContainerStyle
	    }, [h("transition", {
	      attrs: {
	        name: "vue-treeselect__menu--transition"
	      }
	    }, [this.renderMenu()])]);
	  }
	});
	// CONCATENATED MODULE: ./src/components/Menu.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_Menuvue_type_script_lang_js_ = (Menuvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/Menu.vue
	var Menu_render, Menu_staticRenderFns;




	/* normalize component */

	var Menu_component = normalizeComponent(
	  components_Menuvue_type_script_lang_js_,
	  Menu_render,
	  Menu_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Menu_component.options.__file = "src/components/Menu.vue";
	/* harmony default export */ var Menu = (Menu_component.exports);
	// EXTERNAL MODULE: external "vue"
	var external_vue_ = __webpack_require__(14);
	var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/MenuPortal.vue?vue&type=script&lang=js&


	function MenuPortalvue_type_script_lang_js_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

	function MenuPortalvue_type_script_lang_js_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { MenuPortalvue_type_script_lang_js_ownKeys(source, true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { MenuPortalvue_type_script_lang_js_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




	var PortalTarget = {
	  name: 'vue-treeselect--portal-target',
	  inject: ['instance'],
	  watch: {
	    'instance.menu.isOpen': function instanceMenuIsOpen(newValue) {
	      if (newValue) {
	        this.setupHandlers();
	      } else {
	        this.removeHandlers();
	      }
	    },
	    'instance.menu.placement': function instanceMenuPlacement() {
	      this.updateMenuContainerOffset();
	    }
	  },
	  created: function created() {
	    this.controlResizeAndScrollEventListeners = null;
	    this.controlSizeWatcher = null;
	  },
	  mounted: function mounted() {
	    var instance = this.instance;
	    if (instance.menu.isOpen) this.setupHandlers();
	  },
	  methods: {
	    setupHandlers: function setupHandlers() {
	      this.updateWidth();
	      this.updateMenuContainerOffset();
	      this.setupControlResizeAndScrollEventListeners();
	      this.setupControlSizeWatcher();
	    },
	    removeHandlers: function removeHandlers() {
	      this.removeControlResizeAndScrollEventListeners();
	      this.removeControlSizeWatcher();
	    },
	    setupControlResizeAndScrollEventListeners: function setupControlResizeAndScrollEventListeners() {
	      var instance = this.instance;
	      var $control = instance.getControl();
	      if (this.controlResizeAndScrollEventListeners) return;
	      this.controlResizeAndScrollEventListeners = {
	        remove: setupResizeAndScrollEventListeners($control, this.updateMenuContainerOffset)
	      };
	    },
	    setupControlSizeWatcher: function setupControlSizeWatcher() {
	      var _this = this;

	      var instance = this.instance;
	      var $control = instance.getControl();
	      if (this.controlSizeWatcher) return;
	      this.controlSizeWatcher = {
	        remove: watchSize($control, function () {
	          _this.updateWidth();

	          _this.updateMenuContainerOffset();
	        })
	      };
	    },
	    removeControlResizeAndScrollEventListeners: function removeControlResizeAndScrollEventListeners() {
	      if (!this.controlResizeAndScrollEventListeners) return;
	      this.controlResizeAndScrollEventListeners.remove();
	      this.controlResizeAndScrollEventListeners = null;
	    },
	    removeControlSizeWatcher: function removeControlSizeWatcher() {
	      if (!this.controlSizeWatcher) return;
	      this.controlSizeWatcher.remove();
	      this.controlSizeWatcher = null;
	    },
	    updateWidth: function updateWidth() {
	      var instance = this.instance;
	      var $portalTarget = this.$el;
	      var $control = instance.getControl();
	      var controlRect = $control.getBoundingClientRect();
	      $portalTarget.style.width = controlRect.width + 'px';
	    },
	    updateMenuContainerOffset: function updateMenuContainerOffset() {
	      var instance = this.instance;
	      var $control = instance.getControl();
	      var $portalTarget = this.$el;
	      var controlRect = $control.getBoundingClientRect();
	      var portalTargetRect = $portalTarget.getBoundingClientRect();
	      var offsetY = instance.menu.placement === 'bottom' ? controlRect.height : 0;
	      var left = Math.round(controlRect.left - portalTargetRect.left) + 'px';
	      var top = Math.round(controlRect.top - portalTargetRect.top + offsetY) + 'px';
	      var menuContainerStyle = this.$refs.menu.$refs['menu-container'].style;
	      var transformVariations = ['transform', 'webkitTransform', 'MozTransform', 'msTransform'];
	      var transform = find(transformVariations, function (t) {
	        return t in document.body.style;
	      });
	      menuContainerStyle[transform] = "translate(".concat(left, ", ").concat(top, ")");
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    var instance = this.instance;
	    var portalTargetClass = ['vue-treeselect__portal-target', instance.wrapperClass];
	    var portalTargetStyle = {
	      zIndex: instance.zIndex
	    };
	    return h("div", {
	      "class": portalTargetClass,
	      style: portalTargetStyle,
	      attrs: {
	        "data-instance-id": instance.getInstanceId()
	      }
	    }, [h(Menu, {
	      ref: "menu"
	    })]);
	  },
	  destroyed: function destroyed() {
	    this.removeHandlers();
	  }
	};
	var placeholder;
	/* harmony default export */ var MenuPortalvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect--menu-portal',
	  created: function created() {
	    this.portalTarget = null;
	  },
	  mounted: function mounted() {
	    this.setup();
	  },
	  destroyed: function destroyed() {
	    this.teardown();
	  },
	  methods: {
	    setup: function setup() {
	      var el = document.createElement('div');
	      document.body.appendChild(el);
	      this.portalTarget = new external_vue_default.a(MenuPortalvue_type_script_lang_js_objectSpread({
	        el: el,
	        parent: this
	      }, PortalTarget));
	    },
	    teardown: function teardown() {
	      document.body.removeChild(this.portalTarget.$el);
	      this.portalTarget.$el.innerHTML = '';
	      this.portalTarget.$destroy();
	      this.portalTarget = null;
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    if (!placeholder) placeholder = h("div", {
	      "class": "vue-treeselect__menu-placeholder"
	    });
	    return placeholder;
	  }
	});
	// CONCATENATED MODULE: ./src/components/MenuPortal.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_MenuPortalvue_type_script_lang_js_ = (MenuPortalvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/MenuPortal.vue
	var MenuPortal_render, MenuPortal_staticRenderFns;




	/* normalize component */

	var MenuPortal_component = normalizeComponent(
	  components_MenuPortalvue_type_script_lang_js_,
	  MenuPortal_render,
	  MenuPortal_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	MenuPortal_component.options.__file = "src/components/MenuPortal.vue";
	/* harmony default export */ var MenuPortal = (MenuPortal_component.exports);
	// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Treeselect.vue?vue&type=script&lang=js&





	/* harmony default export */ var Treeselectvue_type_script_lang_js_ = ({
	  name: 'vue-treeselect',
	  mixins: [treeselectMixin],
	  computed: {
	    wrapperClass: function wrapperClass() {
	      return {
	        'vue-treeselect': true,
	        'vue-treeselect--single': this.single,
	        'vue-treeselect--multi': this.multiple,
	        'vue-treeselect--searchable': this.searchable,
	        'vue-treeselect--disabled': this.disabled,
	        'vue-treeselect--focused': this.trigger.isFocused,
	        'vue-treeselect--has-value': this.hasValue,
	        'vue-treeselect--open': this.menu.isOpen,
	        'vue-treeselect--open-above': this.menu.placement === 'top',
	        'vue-treeselect--open-below': this.menu.placement === 'bottom',
	        'vue-treeselect--branch-nodes-disabled': this.disableBranchNodes,
	        'vue-treeselect--append-to-body': this.appendToBody
	      };
	    }
	  },
	  render: function render() {
	    var h = arguments[0];
	    return h("div", {
	      ref: "wrapper",
	      "class": this.wrapperClass
	    }, [h(HiddenFields), h(Control, {
	      ref: "control"
	    }), this.appendToBody ? h(MenuPortal, {
	      ref: "portal"
	    }) : h(Menu, {
	      ref: "menu"
	    })]);
	  }
	});
	// CONCATENATED MODULE: ./src/components/Treeselect.vue?vue&type=script&lang=js&
	 /* harmony default export */ var components_Treeselectvue_type_script_lang_js_ = (Treeselectvue_type_script_lang_js_); 
	// CONCATENATED MODULE: ./src/components/Treeselect.vue
	var Treeselect_render, Treeselect_staticRenderFns;




	/* normalize component */

	var Treeselect_component = normalizeComponent(
	  components_Treeselectvue_type_script_lang_js_,
	  Treeselect_render,
	  Treeselect_staticRenderFns,
	  false,
	  null,
	  null,
	  null
	  
	);
	Treeselect_component.options.__file = "src/components/Treeselect.vue";
	/* harmony default export */ var Treeselect = (Treeselect_component.exports);
	// EXTERNAL MODULE: ./src/style.less
	__webpack_require__(15);

	// CONCATENATED MODULE: ./src/index.js
	/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
	/* concated harmony reexport Treeselect */__webpack_require__.d(__webpack_exports__, "Treeselect", function() { return Treeselect; });
	/* concated harmony reexport treeselectMixin */__webpack_require__.d(__webpack_exports__, "treeselectMixin", function() { return treeselectMixin; });
	/* concated harmony reexport LOAD_ROOT_OPTIONS */__webpack_require__.d(__webpack_exports__, "LOAD_ROOT_OPTIONS", function() { return LOAD_ROOT_OPTIONS; });
	/* concated harmony reexport LOAD_CHILDREN_OPTIONS */__webpack_require__.d(__webpack_exports__, "LOAD_CHILDREN_OPTIONS", function() { return LOAD_CHILDREN_OPTIONS; });
	/* concated harmony reexport ASYNC_SEARCH */__webpack_require__.d(__webpack_exports__, "ASYNC_SEARCH", function() { return ASYNC_SEARCH; });



	/* harmony default export */ __webpack_exports__["default"] = (Treeselect);


	var VERSION = "0.4.0";

	/***/ })
	/******/ ]);
	
} (vueTreeselect_cjs));

var vueTreeselect_cjsExports = vueTreeselect_cjs.exports;
var Treeselect = /*@__PURE__*/getDefaultExportFromCjs(vueTreeselect_cjsExports);

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/**
 * //数据结构
      node: {
        id: '', //用于识别树中的选项。它的值在所有选项中都必须是唯一的
        label: '', //用于显示选项
        children: [], //子级数据
        isDisabled: false, //用于禁用项目选择
        isNew: true, //用于为新节点赋予不同的颜色
        isDefaultExpanded: true //默认情况下是否应展开此文件夹选项
      },
 * 事件
 *  events: {
        open: instanceId => {}, //当菜单打开时发出
        close: (value, instanceId) => {}, //当菜单关闭时发出
        input: (value, instanceId) => {}, //值更改后发出
        select: (node, instanceId) => {}, //选择选项后发出
        deselect: (node, instanceId) => {}, //取消选择选项后发出
        'search-change': (searchQuery, instanceId) => {} //在搜索查询更改后发出
      },

 * slots:{
      自定义选项标签模板的插槽。有关详细信息，请参阅此处
      option-label:{node, shouldShowCount, count, labelClassName, countClassName}
      自定义值标签模板的插槽。
      value-label	{node}
      显示在菜单列表之前的插槽
      before-list
      菜单列表后显示的插槽
      after-list
    }
 */
var script$1 = {
  name: 'XlTreeSelect',
  components: {
    Treeselect
  },
  props: {
    data: {
      type: Array,
      default() {
        return [{
          id: '1',
          label: '一级分类',
          children: [{
            id: '1-1',
            label: '一级子分类1'
          }, {
            id: '1-2',
            label: '一级子分类2'
          }]
        }, {
          id: '2',
          label: '二级分类'
        }, {
          id: '3',
          label: '三级分类'
        }];
      }
    },
    attribute: {
      type: Object,
      default() {
        return {};
      }
    },
    value: {
      type: [String, Number, Array],
      default: ''
    }
  },
  model: {
    prop: 'value',
    event: 'change'
  },
  data() {
    return {
      values: null,
      labels: '',
      defAttribute: {
        name: 'MyTreeSelect',
        allowClearingDisabled: false,
        //即使有禁用的选定节点，是否允许重置值
        allowSelectingDisabledDescendants: false,
        //选择/取消选择祖先节点时，是否应选择/取消选中其禁用的子节点。您可能希望将其与allowClearingDisabled道具一起使用
        alwaysOpen: false,
        //菜单是否应始终打开
        appendToBody: true,
        //将菜单附加到＜body＞
        async: false,
        //是否启用异步搜索模式
        autoFocus: false,
        //自动将组件集中在装载上
        autoLoadRootOptions: true,
        //装载时自动加载根选项。设置为false时，打开菜单时将加载根选项
        autoDeselectAncestors: false,
        //当用户取消选择节点时，会自动取消选择其祖先。仅适用于平面模式
        autoDeselectDescendants: false,
        //当用户取消选择节点时，会自动取消选择其子节点。仅适用于平面模式
        autoSelectAncestors: false,
        //当用户选择一个节点时，会自动选择其祖先。仅适用于平面模式
        autoSelectDescendants: false,
        //当用户选择一个节点时，会自动选择其子节点。仅适用于平面模式
        backspaceRemoves: true,
        //如果没有文本输入，Backspace是否删除最后一项
        beforeClearAll: () => true,
        //在清除所有输入字段之前进行处理的函数。返回false以停止清除值
        branchNodesFirst: false,
        //在叶节点之前显示分支节点
        cacheOptions: true,
        //是否缓存异步搜索模式下每个搜索请求的结果
        clearable: true,
        //是否显示重置值的“×”按钮
        clearAllText: '清除所有',
        //当：multiple=“true”时，“×”按钮的标题
        clearOnSelect: false,
        //选择选项后是否清除搜索输入。仅在以下情况下使用：multiple=“true”。对于单选模式，无论道具值如何，它总是在选择后清除输入
        defaultExpandLevel: Infinity,
        //加载时应自动展开多少级别的分支节点。设置“Infinity”以使所有分支节点在默认情况下展开
        defaultOptions: false,
        //在用户开始搜索之前显示的默认选项集。用于异步搜索模式。当设置为true时，将自动加载作为空字符串的搜索查询结果
        deleteRemoves: true,
        //如果没有文本输入，是否删除最后一项
        delimiter: ',',
        //用于连接隐藏字段值的多个值的分隔符
        flattenSearchResults: false,
        //搜索时是否展开树（仅限同步搜索模式）
        disableBranchNodes: true,
        //是否阻止选择分支节点,只选择子级
        disabled: false,
        //是否禁用控制
        disableFuzzyMatching: false,
        //设置为true可禁用默认情况下启用的模糊匹配功能
        flat: false,
        //是否启用平面模式
        instanceId: '10$$',
        //将以所有事件作为最后一个参数进行传递。有助于识别事件来源
        joinValues: false,
        //使用分隔符将多个值合并到单个表单字段中（传统模式）
        limit: Infinity,
        //多选时最多显示个数 default Infinity
        limitText: count => `+${count}`,
        //当所选元素超过定义的限制时，处理显示的消息的函数
        loadingText: '加载中...',
        //加载选项时显示的文本
        loadOptions: undefined,
        //用于动态加载选项
        matchKeys: ['label'],
        //要筛选的节点对象的哪些键
        maxHeight: 200,
        //设置菜单的最大高度样式值
        multiple: false,
        //是否多选
        placeholder: '请选择',
        noOptionsText: '暂无数据',
        //没有可用选项时显示的文本
        noChildrenText: '暂无子级',
        //分支节点没有子节点时显示的文本
        noResultsText: '未找到结果',
        //没有匹配的搜索结果时显示的文本
        normalizer: node => node,
        //用于规范化源数据
        openDirection: 'auto',
        //默认情况下（“自动”），菜单将在控件下方打开。如果没有足够的空间，vue-treeselect将自动翻转菜单。您可以使用其他四个选项中的一个来强制菜单始终按指定方向打开。 "auto", "below", "bottom", "above" or "top"
        openOnClick: true,
        //单击控件时是否自动打开菜单
        openOnFocus: false,
        //控件聚焦时是否自动打开菜单
        required: false,
        //需要时应用HTML5必需的属性
        retryText: '是否重试？',
        //显示的文本询问用户是否重试加载子选项
        retryTitle: '单击重试',
        //重试按钮的标题
        searchable: true,
        //是否启用搜索功能
        searchNested: false,
        //如果搜索查询也应在所有祖先节点中搜索，则设置true
        searchPromptText: '要搜索的类型',
        //提示异步搜索的文本提示。用于异步搜索模式
        showCount: false,
        //是否在每个分支节点的标签旁边显示子计数
        showCountOf: 'ALL_CHILDREN',
        //与showCount一起使用，指定应显示的计数类型。"ALL_CHILDREN", "ALL_DESCENDANTS", "LEAF_CHILDREN" or "LEAF_DESCENDANTS"
        showCountOnSearch: undefined,
        //搜索时是否显示子项计数。未指定时回退到showCount的值
        sortValueBy: 'LEVEL',
        //所选选项应按哪个顺序显示在触发器中并按值数组排序。仅在以下情况下使用：multiple=“true”,"ORDER_SELECTED", "LEVEL" or "INDEX"
        tabIndex: 0,
        //控件的选项卡索引
        valueConsistsOf: 'BRANCH_PRIORITY',
        //在多选模式下，值数组中应包括哪种节点,"ALL", "BRANCH_PRIORITY", "LEAF_PRIORITY" or "ALL_WITH_INDETERMINATE"
        valueFormat: 'id',
        //值道具的格式。请注意，当设置为“object”时，在值中的每个节点对象中只需要id和label属性。可接受的值：“id”或“object”
        zIndex: 999
      },
      size: 'medium'
    };
  },
  watch: {
    value: {
      handler: function (val) {
        this.values = val || null;
      },
      immediate: true
    }
  },
  mounted() {
    this.size = this.$ELEMENT && this.$ELEMENT.size || 'medium';
  },
  methods: {
    handleInput() {
      const data = this.$refs.mytree.selectedNodes;
      const labels = data.map(item => item.label);
      this.labels = labels;
      this.$emit('update:labelName', this.labels.join(','));
      this.$emit('change', this.values || '');
    }
  }
};

/* script */
const __vue_script__$1 = script$1;

/* template */
var __vue_render__$1 = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticStyle: {
      "line-height": "normal"
    }
  }, [_c("Treeselect", _vm._g(_vm._b({
    ref: "mytree",
    class: _vm.size,
    attrs: {
      options: _vm.data
    },
    scopedSlots: _vm._u([{
      key: "value-label",
      fn: function (ref) {
        var node = ref.node;
        return _c("div", {}, [_vm._t("value-label", [_vm._v("\n        " + _vm._s(node.raw.label) + "\n      ")], {
          node: node
        })], 2);
      }
    }, {
      key: "option-label",
      fn: function (ref) {
        var node = ref.node;
        var shouldShowCount = ref.shouldShowCount;
        var count = ref.count;
        var labelClassName = ref.labelClassName;
        var countClassName = ref.countClassName;
        return _c("div", {}, [_vm._t("option-label", [_vm._v("\n        " + _vm._s(node.label) + "\n      ")], {
          node: node,
          shouldShowCount: shouldShowCount,
          count: count,
          labelClassName: labelClassName,
          countClassName: countClassName
        })], 2);
      }
    }], null, true),
    model: {
      value: _vm.values,
      callback: function ($$v) {
        _vm.values = $$v;
      },
      expression: "values"
    }
  }, "Treeselect", Object.assign({}, _vm.defAttribute, _vm.attribute), false), {
    input: _vm.handleInput
  }), [_vm._v(" "), _vm._v(" "), _c("div", {
    attrs: {
      slot: "before-list"
    },
    slot: "before-list"
  }, [_vm._t("before-list")], 2), _vm._v(" "), _c("div", {
    attrs: {
      slot: "after-list"
    },
    slot: "after-list"
  }, [_vm._t("after-list")], 2)])], 1);
};
var __vue_staticRenderFns__$1 = [];
__vue_render__$1._withStripped = true;

/* style */
const __vue_inject_styles__$1 = function (inject) {
  if (!inject) return;
  inject("data-v-473686a8_0", {
    source: "\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["main.vue"],
      "names": [],
      "mappings": ";;AAEA,mCAAmC",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__$1 = "data-v-473686a8";
/* module identifier */
const __vue_module_identifier__$1 = undefined;
/* functional template */
const __vue_is_functional_template__$1 = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__$1 = /*#__PURE__*/normalizeComponent({
  render: __vue_render__$1,
  staticRenderFns: __vue_staticRenderFns__$1
}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, false, createInjector, undefined, undefined);

__vue_component__$1.install = Vue => {
  Vue.component(__vue_component__$1.extendOptions.name, __vue_component__$1);
};

let XlDateTime = class XlDateTime extends Vue {
  constructor() {
    super(...arguments);
    // prop ========================
    _defineProperty$1(this, "attribute", void 0);
    // model =======================
    _defineProperty$1(this, "value", void 0);
    _defineProperty$1(this, "value1", '');
    _defineProperty$1(this, "value2", '');
  }
  // emit ========================
  handleChange() {
    return '';
  }
  // Watch ======================
  handleWatch(val) {}
};
__decorate([Prop({
  type: String,
  default: ''
})], XlDateTime.prototype, "attribute", void 0);
__decorate([Model('change', {
  type: String
})], XlDateTime.prototype, "value", void 0);
__decorate([Emit('change')], XlDateTime.prototype, "handleChange", null);
__decorate([Watch('value', {
  immediate: true,
  deep: true
})], XlDateTime.prototype, "handleWatch", null);
XlDateTime = __decorate([Component({
  name: 'XlDateTime',
  components: {}
})], XlDateTime);
var script = XlDateTime;

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "flex justify-start items-center"
  }, [_c("el-date-picker", _vm._b({
    attrs: {
      type: "date"
    },
    model: {
      value: _vm.value1,
      callback: function ($$v) {
        _vm.value1 = $$v;
      },
      expression: "value1"
    }
  }, "el-date-picker", {
    placeholder: "请选择日期"
  }, false)), _vm._v(" "), _c("span", {
    staticClass: "px-1 text-gray-400"
  }, [_vm._v("-")]), _vm._v(" "), _c("el-time-picker", _vm._b({
    model: {
      value: _vm.value2,
      callback: function ($$v) {
        _vm.value2 = $$v;
      },
      expression: "value2"
    }
  }, "el-time-picker", {
    "picker-options": {
      selectableRange: "00:00:00 - 23:59:59",
      format: "HH:mm:ss"
    },
    placeholder: "请选择时间",
    "default-value": new Date()
  }, false))], 1);
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

/* style */
const __vue_inject_styles__ = function (inject) {
  if (!inject) return;
  inject("data-v-6613f191_0", {
    source: "\n\n/*# sourceMappingURL=main.vue.map */",
    map: {
      "version": 3,
      "sources": ["main.vue"],
      "names": [],
      "mappings": ";;AAEA,mCAAmC",
      "file": "main.vue"
    },
    media: undefined
  });
};
/* scoped */
const __vue_scope_id__ = "data-v-6613f191";
/* module identifier */
const __vue_module_identifier__ = undefined;
/* functional template */
const __vue_is_functional_template__ = false;
/* style inject SSR */

/* style inject shadow dom */

const __vue_component__ = /*#__PURE__*/normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, createInjector, undefined, undefined);

__vue_component__.install = Vue => {
  Vue.component(__vue_component__.extendOptions.name, __vue_component__);
};

var dayjs_min = {exports: {}};

(function (module, exports) {
	!function(t,e){module.exports=e();}(commonjsGlobal,(function(){var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",c="month",f="quarter",h="year",d="date",l="Invalid Date",$=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return "["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},m=function(t,e,n){var r=String(t);return !r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return (e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return -t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return +(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return {M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},g="en",D={};D[g]=M;var p="$isDayjsObject",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if("string"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split("-");if(!i&&u.length>1)return t(u[0])}else {var a=e.name;D[a]=e,i=a;}return !r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0;}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init();},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds();},m.$utils=function(){return b},m.isValid=function(){return !(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v="set"+(this.$u?"UTC":"");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+"Hours",0);case u:return $(v+"Minutes",1);case s:return $(v+"Seconds",2);case i:return $(v+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f="set"+(this.$u?"UTC":""),l=(n={},n[a]=f+"Date",n[d]=f+"Date",n[c]=f+"Month",n[h]=f+"FullYear",n[u]=f+"Hours",n[s]=f+"Minutes",n[i]=f+"Seconds",n[r]=f+"Milliseconds",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d;}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,"0")},$=f||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case"YY":return String(e.$y).slice(-2);case"YYYY":return b.s(e.$y,4,"0");case"M":return a+1;case"MM":return b.s(a+1,2,"0");case"MMM":return h(n.monthsShort,a,c,3);case"MMMM":return h(c,a);case"D":return e.$D;case"DD":return b.s(e.$D,2,"0");case"d":return String(e.$W);case"dd":return h(n.weekdaysMin,e.$W,o,2);case"ddd":return h(n.weekdaysShort,e.$W,o,3);case"dddd":return o[e.$W];case"H":return String(s);case"HH":return b.s(s,2,"0");case"h":return d(1);case"hh":return d(2);case"a":return $(s,u,!0);case"A":return $(s,u,!1);case"m":return String(u);case"mm":return b.s(u,2,"0");case"s":return String(e.$s);case"ss":return b.s(e.$s,2,"0");case"SSS":return b.s(e.$ms,3,"0");case"Z":return i}return null}(t)||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g;}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",c],["$y",h],["$D",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])};})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O})); 
} (dayjs_min));

var dayjs_minExports = dayjs_min.exports;
var dayjs = /*@__PURE__*/getDefaultExportFromCjs(dayjs_minExports);

var cryptoJs = {exports: {}};

function commonjsRequire(path) {
	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}

var core = {exports: {}};

var _polyfillNode_crypto = {};

var _polyfillNode_crypto$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  default: _polyfillNode_crypto
});

var require$$0 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_crypto$1);

var hasRequiredCore;

function requireCore () {
	if (hasRequiredCore) return core.exports;
	hasRequiredCore = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory();
			}
		}(commonjsGlobal, function () {

			/*globals window, global, require*/

			/**
			 * CryptoJS core components.
			 */
			var CryptoJS = CryptoJS || (function (Math, undefined$1) {

			    var crypto;

			    // Native crypto from window (Browser)
			    if (typeof window !== 'undefined' && window.crypto) {
			        crypto = window.crypto;
			    }

			    // Native crypto in web worker (Browser)
			    if (typeof self !== 'undefined' && self.crypto) {
			        crypto = self.crypto;
			    }

			    // Native crypto from worker
			    if (typeof globalThis !== 'undefined' && globalThis.crypto) {
			        crypto = globalThis.crypto;
			    }

			    // Native (experimental IE 11) crypto from window (Browser)
			    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {
			        crypto = window.msCrypto;
			    }

			    // Native crypto from global (NodeJS)
			    if (!crypto && typeof commonjsGlobal !== 'undefined' && commonjsGlobal.crypto) {
			        crypto = commonjsGlobal.crypto;
			    }

			    // Native crypto import via require (NodeJS)
			    if (!crypto && typeof commonjsRequire === 'function') {
			        try {
			            crypto = require$$0;
			        } catch (err) {}
			    }

			    /*
			     * Cryptographically secure pseudorandom number generator
			     *
			     * As Math.random() is cryptographically not safe to use
			     */
			    var cryptoSecureRandomInt = function () {
			        if (crypto) {
			            // Use getRandomValues method (Browser)
			            if (typeof crypto.getRandomValues === 'function') {
			                try {
			                    return crypto.getRandomValues(new Uint32Array(1))[0];
			                } catch (err) {}
			            }

			            // Use randomBytes method (NodeJS)
			            if (typeof crypto.randomBytes === 'function') {
			                try {
			                    return crypto.randomBytes(4).readInt32LE();
			                } catch (err) {}
			            }
			        }

			        throw new Error('Native crypto module could not be used to get secure random number.');
			    };

			    /*
			     * Local polyfill of Object.create

			     */
			    var create = Object.create || (function () {
			        function F() {}

			        return function (obj) {
			            var subtype;

			            F.prototype = obj;

			            subtype = new F();

			            F.prototype = null;

			            return subtype;
			        };
			    }());

			    /**
			     * CryptoJS namespace.
			     */
			    var C = {};

			    /**
			     * Library namespace.
			     */
			    var C_lib = C.lib = {};

			    /**
			     * Base object for prototypal inheritance.
			     */
			    var Base = C_lib.Base = (function () {


			        return {
			            /**
			             * Creates a new object that inherits from this object.
			             *
			             * @param {Object} overrides Properties to copy into the new object.
			             *
			             * @return {Object} The new object.
			             *
			             * @static
			             *
			             * @example
			             *
			             *     var MyType = CryptoJS.lib.Base.extend({
			             *         field: 'value',
			             *
			             *         method: function () {
			             *         }
			             *     });
			             */
			            extend: function (overrides) {
			                // Spawn
			                var subtype = create(this);

			                // Augment
			                if (overrides) {
			                    subtype.mixIn(overrides);
			                }

			                // Create default initializer
			                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
			                    subtype.init = function () {
			                        subtype.$super.init.apply(this, arguments);
			                    };
			                }

			                // Initializer's prototype is the subtype object
			                subtype.init.prototype = subtype;

			                // Reference supertype
			                subtype.$super = this;

			                return subtype;
			            },

			            /**
			             * Extends this object and runs the init method.
			             * Arguments to create() will be passed to init().
			             *
			             * @return {Object} The new object.
			             *
			             * @static
			             *
			             * @example
			             *
			             *     var instance = MyType.create();
			             */
			            create: function () {
			                var instance = this.extend();
			                instance.init.apply(instance, arguments);

			                return instance;
			            },

			            /**
			             * Initializes a newly created object.
			             * Override this method to add some logic when your objects are created.
			             *
			             * @example
			             *
			             *     var MyType = CryptoJS.lib.Base.extend({
			             *         init: function () {
			             *             // ...
			             *         }
			             *     });
			             */
			            init: function () {
			            },

			            /**
			             * Copies properties into this object.
			             *
			             * @param {Object} properties The properties to mix in.
			             *
			             * @example
			             *
			             *     MyType.mixIn({
			             *         field: 'value'
			             *     });
			             */
			            mixIn: function (properties) {
			                for (var propertyName in properties) {
			                    if (properties.hasOwnProperty(propertyName)) {
			                        this[propertyName] = properties[propertyName];
			                    }
			                }

			                // IE won't copy toString using the loop above
			                if (properties.hasOwnProperty('toString')) {
			                    this.toString = properties.toString;
			                }
			            },

			            /**
			             * Creates a copy of this object.
			             *
			             * @return {Object} The clone.
			             *
			             * @example
			             *
			             *     var clone = instance.clone();
			             */
			            clone: function () {
			                return this.init.prototype.extend(this);
			            }
			        };
			    }());

			    /**
			     * An array of 32-bit words.
			     *
			     * @property {Array} words The array of 32-bit words.
			     * @property {number} sigBytes The number of significant bytes in this word array.
			     */
			    var WordArray = C_lib.WordArray = Base.extend({
			        /**
			         * Initializes a newly created word array.
			         *
			         * @param {Array} words (Optional) An array of 32-bit words.
			         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.lib.WordArray.create();
			         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
			         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
			         */
			        init: function (words, sigBytes) {
			            words = this.words = words || [];

			            if (sigBytes != undefined$1) {
			                this.sigBytes = sigBytes;
			            } else {
			                this.sigBytes = words.length * 4;
			            }
			        },

			        /**
			         * Converts this word array to a string.
			         *
			         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
			         *
			         * @return {string} The stringified word array.
			         *
			         * @example
			         *
			         *     var string = wordArray + '';
			         *     var string = wordArray.toString();
			         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
			         */
			        toString: function (encoder) {
			            return (encoder || Hex).stringify(this);
			        },

			        /**
			         * Concatenates a word array to this word array.
			         *
			         * @param {WordArray} wordArray The word array to append.
			         *
			         * @return {WordArray} This word array.
			         *
			         * @example
			         *
			         *     wordArray1.concat(wordArray2);
			         */
			        concat: function (wordArray) {
			            // Shortcuts
			            var thisWords = this.words;
			            var thatWords = wordArray.words;
			            var thisSigBytes = this.sigBytes;
			            var thatSigBytes = wordArray.sigBytes;

			            // Clamp excess bits
			            this.clamp();

			            // Concat
			            if (thisSigBytes % 4) {
			                // Copy one byte at a time
			                for (var i = 0; i < thatSigBytes; i++) {
			                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
			                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
			                }
			            } else {
			                // Copy one word at a time
			                for (var j = 0; j < thatSigBytes; j += 4) {
			                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];
			                }
			            }
			            this.sigBytes += thatSigBytes;

			            // Chainable
			            return this;
			        },

			        /**
			         * Removes insignificant bits.
			         *
			         * @example
			         *
			         *     wordArray.clamp();
			         */
			        clamp: function () {
			            // Shortcuts
			            var words = this.words;
			            var sigBytes = this.sigBytes;

			            // Clamp
			            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
			            words.length = Math.ceil(sigBytes / 4);
			        },

			        /**
			         * Creates a copy of this word array.
			         *
			         * @return {WordArray} The clone.
			         *
			         * @example
			         *
			         *     var clone = wordArray.clone();
			         */
			        clone: function () {
			            var clone = Base.clone.call(this);
			            clone.words = this.words.slice(0);

			            return clone;
			        },

			        /**
			         * Creates a word array filled with random bytes.
			         *
			         * @param {number} nBytes The number of random bytes to generate.
			         *
			         * @return {WordArray} The random word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.lib.WordArray.random(16);
			         */
			        random: function (nBytes) {
			            var words = [];

			            for (var i = 0; i < nBytes; i += 4) {
			                words.push(cryptoSecureRandomInt());
			            }

			            return new WordArray.init(words, nBytes);
			        }
			    });

			    /**
			     * Encoder namespace.
			     */
			    var C_enc = C.enc = {};

			    /**
			     * Hex encoding strategy.
			     */
			    var Hex = C_enc.Hex = {
			        /**
			         * Converts a word array to a hex string.
			         *
			         * @param {WordArray} wordArray The word array.
			         *
			         * @return {string} The hex string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
			         */
			        stringify: function (wordArray) {
			            // Shortcuts
			            var words = wordArray.words;
			            var sigBytes = wordArray.sigBytes;

			            // Convert
			            var hexChars = [];
			            for (var i = 0; i < sigBytes; i++) {
			                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
			                hexChars.push((bite >>> 4).toString(16));
			                hexChars.push((bite & 0x0f).toString(16));
			            }

			            return hexChars.join('');
			        },

			        /**
			         * Converts a hex string to a word array.
			         *
			         * @param {string} hexStr The hex string.
			         *
			         * @return {WordArray} The word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
			         */
			        parse: function (hexStr) {
			            // Shortcut
			            var hexStrLength = hexStr.length;

			            // Convert
			            var words = [];
			            for (var i = 0; i < hexStrLength; i += 2) {
			                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
			            }

			            return new WordArray.init(words, hexStrLength / 2);
			        }
			    };

			    /**
			     * Latin1 encoding strategy.
			     */
			    var Latin1 = C_enc.Latin1 = {
			        /**
			         * Converts a word array to a Latin1 string.
			         *
			         * @param {WordArray} wordArray The word array.
			         *
			         * @return {string} The Latin1 string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
			         */
			        stringify: function (wordArray) {
			            // Shortcuts
			            var words = wordArray.words;
			            var sigBytes = wordArray.sigBytes;

			            // Convert
			            var latin1Chars = [];
			            for (var i = 0; i < sigBytes; i++) {
			                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
			                latin1Chars.push(String.fromCharCode(bite));
			            }

			            return latin1Chars.join('');
			        },

			        /**
			         * Converts a Latin1 string to a word array.
			         *
			         * @param {string} latin1Str The Latin1 string.
			         *
			         * @return {WordArray} The word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
			         */
			        parse: function (latin1Str) {
			            // Shortcut
			            var latin1StrLength = latin1Str.length;

			            // Convert
			            var words = [];
			            for (var i = 0; i < latin1StrLength; i++) {
			                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
			            }

			            return new WordArray.init(words, latin1StrLength);
			        }
			    };

			    /**
			     * UTF-8 encoding strategy.
			     */
			    var Utf8 = C_enc.Utf8 = {
			        /**
			         * Converts a word array to a UTF-8 string.
			         *
			         * @param {WordArray} wordArray The word array.
			         *
			         * @return {string} The UTF-8 string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
			         */
			        stringify: function (wordArray) {
			            try {
			                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
			            } catch (e) {
			                throw new Error('Malformed UTF-8 data');
			            }
			        },

			        /**
			         * Converts a UTF-8 string to a word array.
			         *
			         * @param {string} utf8Str The UTF-8 string.
			         *
			         * @return {WordArray} The word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
			         */
			        parse: function (utf8Str) {
			            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
			        }
			    };

			    /**
			     * Abstract buffered block algorithm template.
			     *
			     * The property blockSize must be implemented in a concrete subtype.
			     *
			     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
			     */
			    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
			        /**
			         * Resets this block algorithm's data buffer to its initial state.
			         *
			         * @example
			         *
			         *     bufferedBlockAlgorithm.reset();
			         */
			        reset: function () {
			            // Initial values
			            this._data = new WordArray.init();
			            this._nDataBytes = 0;
			        },

			        /**
			         * Adds new data to this block algorithm's buffer.
			         *
			         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
			         *
			         * @example
			         *
			         *     bufferedBlockAlgorithm._append('data');
			         *     bufferedBlockAlgorithm._append(wordArray);
			         */
			        _append: function (data) {
			            // Convert string to WordArray, else assume WordArray already
			            if (typeof data == 'string') {
			                data = Utf8.parse(data);
			            }

			            // Append
			            this._data.concat(data);
			            this._nDataBytes += data.sigBytes;
			        },

			        /**
			         * Processes available data blocks.
			         *
			         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
			         *
			         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
			         *
			         * @return {WordArray} The processed data.
			         *
			         * @example
			         *
			         *     var processedData = bufferedBlockAlgorithm._process();
			         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
			         */
			        _process: function (doFlush) {
			            var processedWords;

			            // Shortcuts
			            var data = this._data;
			            var dataWords = data.words;
			            var dataSigBytes = data.sigBytes;
			            var blockSize = this.blockSize;
			            var blockSizeBytes = blockSize * 4;

			            // Count blocks ready
			            var nBlocksReady = dataSigBytes / blockSizeBytes;
			            if (doFlush) {
			                // Round up to include partial blocks
			                nBlocksReady = Math.ceil(nBlocksReady);
			            } else {
			                // Round down to include only full blocks,
			                // less the number of blocks that must remain in the buffer
			                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
			            }

			            // Count words ready
			            var nWordsReady = nBlocksReady * blockSize;

			            // Count bytes ready
			            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

			            // Process blocks
			            if (nWordsReady) {
			                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
			                    // Perform concrete-algorithm logic
			                    this._doProcessBlock(dataWords, offset);
			                }

			                // Remove processed words
			                processedWords = dataWords.splice(0, nWordsReady);
			                data.sigBytes -= nBytesReady;
			            }

			            // Return processed words
			            return new WordArray.init(processedWords, nBytesReady);
			        },

			        /**
			         * Creates a copy of this object.
			         *
			         * @return {Object} The clone.
			         *
			         * @example
			         *
			         *     var clone = bufferedBlockAlgorithm.clone();
			         */
			        clone: function () {
			            var clone = Base.clone.call(this);
			            clone._data = this._data.clone();

			            return clone;
			        },

			        _minBufferSize: 0
			    });

			    /**
			     * Abstract hasher template.
			     *
			     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
			     */
			    C_lib.Hasher = BufferedBlockAlgorithm.extend({
			        /**
			         * Configuration options.
			         */
			        cfg: Base.extend(),

			        /**
			         * Initializes a newly created hasher.
			         *
			         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
			         *
			         * @example
			         *
			         *     var hasher = CryptoJS.algo.SHA256.create();
			         */
			        init: function (cfg) {
			            // Apply config defaults
			            this.cfg = this.cfg.extend(cfg);

			            // Set initial values
			            this.reset();
			        },

			        /**
			         * Resets this hasher to its initial state.
			         *
			         * @example
			         *
			         *     hasher.reset();
			         */
			        reset: function () {
			            // Reset data buffer
			            BufferedBlockAlgorithm.reset.call(this);

			            // Perform concrete-hasher logic
			            this._doReset();
			        },

			        /**
			         * Updates this hasher with a message.
			         *
			         * @param {WordArray|string} messageUpdate The message to append.
			         *
			         * @return {Hasher} This hasher.
			         *
			         * @example
			         *
			         *     hasher.update('message');
			         *     hasher.update(wordArray);
			         */
			        update: function (messageUpdate) {
			            // Append
			            this._append(messageUpdate);

			            // Update the hash
			            this._process();

			            // Chainable
			            return this;
			        },

			        /**
			         * Finalizes the hash computation.
			         * Note that the finalize operation is effectively a destructive, read-once operation.
			         *
			         * @param {WordArray|string} messageUpdate (Optional) A final message update.
			         *
			         * @return {WordArray} The hash.
			         *
			         * @example
			         *
			         *     var hash = hasher.finalize();
			         *     var hash = hasher.finalize('message');
			         *     var hash = hasher.finalize(wordArray);
			         */
			        finalize: function (messageUpdate) {
			            // Final message update
			            if (messageUpdate) {
			                this._append(messageUpdate);
			            }

			            // Perform concrete-hasher logic
			            var hash = this._doFinalize();

			            return hash;
			        },

			        blockSize: 512/32,

			        /**
			         * Creates a shortcut function to a hasher's object interface.
			         *
			         * @param {Hasher} hasher The hasher to create a helper for.
			         *
			         * @return {Function} The shortcut function.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
			         */
			        _createHelper: function (hasher) {
			            return function (message, cfg) {
			                return new hasher.init(cfg).finalize(message);
			            };
			        },

			        /**
			         * Creates a shortcut function to the HMAC's object interface.
			         *
			         * @param {Hasher} hasher The hasher to use in this HMAC helper.
			         *
			         * @return {Function} The shortcut function.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
			         */
			        _createHmacHelper: function (hasher) {
			            return function (message, key) {
			                return new C_algo.HMAC.init(hasher, key).finalize(message);
			            };
			        }
			    });

			    /**
			     * Algorithm namespace.
			     */
			    var C_algo = C.algo = {};

			    return C;
			}(Math));


			return CryptoJS;

		})); 
	} (core));
	return core.exports;
}

var x64Core = {exports: {}};

var hasRequiredX64Core;

function requireX64Core () {
	if (hasRequiredX64Core) return x64Core.exports;
	hasRequiredX64Core = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function (undefined$1) {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var Base = C_lib.Base;
			    var X32WordArray = C_lib.WordArray;

			    /**
			     * x64 namespace.
			     */
			    var C_x64 = C.x64 = {};

			    /**
			     * A 64-bit word.
			     */
			    C_x64.Word = Base.extend({
			        /**
			         * Initializes a newly created 64-bit word.
			         *
			         * @param {number} high The high 32 bits.
			         * @param {number} low The low 32 bits.
			         *
			         * @example
			         *
			         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
			         */
			        init: function (high, low) {
			            this.high = high;
			            this.low = low;
			        }

			        /**
			         * Bitwise NOTs this word.
			         *
			         * @return {X64Word} A new x64-Word object after negating.
			         *
			         * @example
			         *
			         *     var negated = x64Word.not();
			         */
			        // not: function () {
			            // var high = ~this.high;
			            // var low = ~this.low;

			            // return X64Word.create(high, low);
			        // },

			        /**
			         * Bitwise ANDs this word with the passed word.
			         *
			         * @param {X64Word} word The x64-Word to AND with this word.
			         *
			         * @return {X64Word} A new x64-Word object after ANDing.
			         *
			         * @example
			         *
			         *     var anded = x64Word.and(anotherX64Word);
			         */
			        // and: function (word) {
			            // var high = this.high & word.high;
			            // var low = this.low & word.low;

			            // return X64Word.create(high, low);
			        // },

			        /**
			         * Bitwise ORs this word with the passed word.
			         *
			         * @param {X64Word} word The x64-Word to OR with this word.
			         *
			         * @return {X64Word} A new x64-Word object after ORing.
			         *
			         * @example
			         *
			         *     var ored = x64Word.or(anotherX64Word);
			         */
			        // or: function (word) {
			            // var high = this.high | word.high;
			            // var low = this.low | word.low;

			            // return X64Word.create(high, low);
			        // },

			        /**
			         * Bitwise XORs this word with the passed word.
			         *
			         * @param {X64Word} word The x64-Word to XOR with this word.
			         *
			         * @return {X64Word} A new x64-Word object after XORing.
			         *
			         * @example
			         *
			         *     var xored = x64Word.xor(anotherX64Word);
			         */
			        // xor: function (word) {
			            // var high = this.high ^ word.high;
			            // var low = this.low ^ word.low;

			            // return X64Word.create(high, low);
			        // },

			        /**
			         * Shifts this word n bits to the left.
			         *
			         * @param {number} n The number of bits to shift.
			         *
			         * @return {X64Word} A new x64-Word object after shifting.
			         *
			         * @example
			         *
			         *     var shifted = x64Word.shiftL(25);
			         */
			        // shiftL: function (n) {
			            // if (n < 32) {
			                // var high = (this.high << n) | (this.low >>> (32 - n));
			                // var low = this.low << n;
			            // } else {
			                // var high = this.low << (n - 32);
			                // var low = 0;
			            // }

			            // return X64Word.create(high, low);
			        // },

			        /**
			         * Shifts this word n bits to the right.
			         *
			         * @param {number} n The number of bits to shift.
			         *
			         * @return {X64Word} A new x64-Word object after shifting.
			         *
			         * @example
			         *
			         *     var shifted = x64Word.shiftR(7);
			         */
			        // shiftR: function (n) {
			            // if (n < 32) {
			                // var low = (this.low >>> n) | (this.high << (32 - n));
			                // var high = this.high >>> n;
			            // } else {
			                // var low = this.high >>> (n - 32);
			                // var high = 0;
			            // }

			            // return X64Word.create(high, low);
			        // },

			        /**
			         * Rotates this word n bits to the left.
			         *
			         * @param {number} n The number of bits to rotate.
			         *
			         * @return {X64Word} A new x64-Word object after rotating.
			         *
			         * @example
			         *
			         *     var rotated = x64Word.rotL(25);
			         */
			        // rotL: function (n) {
			            // return this.shiftL(n).or(this.shiftR(64 - n));
			        // },

			        /**
			         * Rotates this word n bits to the right.
			         *
			         * @param {number} n The number of bits to rotate.
			         *
			         * @return {X64Word} A new x64-Word object after rotating.
			         *
			         * @example
			         *
			         *     var rotated = x64Word.rotR(7);
			         */
			        // rotR: function (n) {
			            // return this.shiftR(n).or(this.shiftL(64 - n));
			        // },

			        /**
			         * Adds this word with the passed word.
			         *
			         * @param {X64Word} word The x64-Word to add with this word.
			         *
			         * @return {X64Word} A new x64-Word object after adding.
			         *
			         * @example
			         *
			         *     var added = x64Word.add(anotherX64Word);
			         */
			        // add: function (word) {
			            // var low = (this.low + word.low) | 0;
			            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
			            // var high = (this.high + word.high + carry) | 0;

			            // return X64Word.create(high, low);
			        // }
			    });

			    /**
			     * An array of 64-bit words.
			     *
			     * @property {Array} words The array of CryptoJS.x64.Word objects.
			     * @property {number} sigBytes The number of significant bytes in this word array.
			     */
			    C_x64.WordArray = Base.extend({
			        /**
			         * Initializes a newly created word array.
			         *
			         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
			         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.x64.WordArray.create();
			         *
			         *     var wordArray = CryptoJS.x64.WordArray.create([
			         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
			         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
			         *     ]);
			         *
			         *     var wordArray = CryptoJS.x64.WordArray.create([
			         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
			         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
			         *     ], 10);
			         */
			        init: function (words, sigBytes) {
			            words = this.words = words || [];

			            if (sigBytes != undefined$1) {
			                this.sigBytes = sigBytes;
			            } else {
			                this.sigBytes = words.length * 8;
			            }
			        },

			        /**
			         * Converts this 64-bit word array to a 32-bit word array.
			         *
			         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
			         *
			         * @example
			         *
			         *     var x32WordArray = x64WordArray.toX32();
			         */
			        toX32: function () {
			            // Shortcuts
			            var x64Words = this.words;
			            var x64WordsLength = x64Words.length;

			            // Convert
			            var x32Words = [];
			            for (var i = 0; i < x64WordsLength; i++) {
			                var x64Word = x64Words[i];
			                x32Words.push(x64Word.high);
			                x32Words.push(x64Word.low);
			            }

			            return X32WordArray.create(x32Words, this.sigBytes);
			        },

			        /**
			         * Creates a copy of this word array.
			         *
			         * @return {X64WordArray} The clone.
			         *
			         * @example
			         *
			         *     var clone = x64WordArray.clone();
			         */
			        clone: function () {
			            var clone = Base.clone.call(this);

			            // Clone "words" array
			            var words = clone.words = this.words.slice(0);

			            // Clone each X64Word object
			            var wordsLength = words.length;
			            for (var i = 0; i < wordsLength; i++) {
			                words[i] = words[i].clone();
			            }

			            return clone;
			        }
			    });
			}());


			return CryptoJS;

		})); 
	} (x64Core));
	return x64Core.exports;
}

var libTypedarrays = {exports: {}};

var hasRequiredLibTypedarrays;

function requireLibTypedarrays () {
	if (hasRequiredLibTypedarrays) return libTypedarrays.exports;
	hasRequiredLibTypedarrays = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Check if typed arrays are supported
			    if (typeof ArrayBuffer != 'function') {
			        return;
			    }

			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;

			    // Reference original init
			    var superInit = WordArray.init;

			    // Augment WordArray.init to handle typed arrays
			    var subInit = WordArray.init = function (typedArray) {
			        // Convert buffers to uint8
			        if (typedArray instanceof ArrayBuffer) {
			            typedArray = new Uint8Array(typedArray);
			        }

			        // Convert other array views to uint8
			        if (
			            typedArray instanceof Int8Array ||
			            (typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray) ||
			            typedArray instanceof Int16Array ||
			            typedArray instanceof Uint16Array ||
			            typedArray instanceof Int32Array ||
			            typedArray instanceof Uint32Array ||
			            typedArray instanceof Float32Array ||
			            typedArray instanceof Float64Array
			        ) {
			            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
			        }

			        // Handle Uint8Array
			        if (typedArray instanceof Uint8Array) {
			            // Shortcut
			            var typedArrayByteLength = typedArray.byteLength;

			            // Extract bytes
			            var words = [];
			            for (var i = 0; i < typedArrayByteLength; i++) {
			                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);
			            }

			            // Initialize this word array
			            superInit.call(this, words, typedArrayByteLength);
			        } else {
			            // Else call normal init
			            superInit.apply(this, arguments);
			        }
			    };

			    subInit.prototype = WordArray;
			}());


			return CryptoJS.lib.WordArray;

		})); 
	} (libTypedarrays));
	return libTypedarrays.exports;
}

var encUtf16 = {exports: {}};

var hasRequiredEncUtf16;

function requireEncUtf16 () {
	if (hasRequiredEncUtf16) return encUtf16.exports;
	hasRequiredEncUtf16 = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var C_enc = C.enc;

			    /**
			     * UTF-16 BE encoding strategy.
			     */
			    C_enc.Utf16 = C_enc.Utf16BE = {
			        /**
			         * Converts a word array to a UTF-16 BE string.
			         *
			         * @param {WordArray} wordArray The word array.
			         *
			         * @return {string} The UTF-16 BE string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
			         */
			        stringify: function (wordArray) {
			            // Shortcuts
			            var words = wordArray.words;
			            var sigBytes = wordArray.sigBytes;

			            // Convert
			            var utf16Chars = [];
			            for (var i = 0; i < sigBytes; i += 2) {
			                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;
			                utf16Chars.push(String.fromCharCode(codePoint));
			            }

			            return utf16Chars.join('');
			        },

			        /**
			         * Converts a UTF-16 BE string to a word array.
			         *
			         * @param {string} utf16Str The UTF-16 BE string.
			         *
			         * @return {WordArray} The word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
			         */
			        parse: function (utf16Str) {
			            // Shortcut
			            var utf16StrLength = utf16Str.length;

			            // Convert
			            var words = [];
			            for (var i = 0; i < utf16StrLength; i++) {
			                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);
			            }

			            return WordArray.create(words, utf16StrLength * 2);
			        }
			    };

			    /**
			     * UTF-16 LE encoding strategy.
			     */
			    C_enc.Utf16LE = {
			        /**
			         * Converts a word array to a UTF-16 LE string.
			         *
			         * @param {WordArray} wordArray The word array.
			         *
			         * @return {string} The UTF-16 LE string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
			         */
			        stringify: function (wordArray) {
			            // Shortcuts
			            var words = wordArray.words;
			            var sigBytes = wordArray.sigBytes;

			            // Convert
			            var utf16Chars = [];
			            for (var i = 0; i < sigBytes; i += 2) {
			                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);
			                utf16Chars.push(String.fromCharCode(codePoint));
			            }

			            return utf16Chars.join('');
			        },

			        /**
			         * Converts a UTF-16 LE string to a word array.
			         *
			         * @param {string} utf16Str The UTF-16 LE string.
			         *
			         * @return {WordArray} The word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
			         */
			        parse: function (utf16Str) {
			            // Shortcut
			            var utf16StrLength = utf16Str.length;

			            // Convert
			            var words = [];
			            for (var i = 0; i < utf16StrLength; i++) {
			                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));
			            }

			            return WordArray.create(words, utf16StrLength * 2);
			        }
			    };

			    function swapEndian(word) {
			        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);
			    }
			}());


			return CryptoJS.enc.Utf16;

		})); 
	} (encUtf16));
	return encUtf16.exports;
}

var encBase64 = {exports: {}};

var hasRequiredEncBase64;

function requireEncBase64 () {
	if (hasRequiredEncBase64) return encBase64.exports;
	hasRequiredEncBase64 = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var C_enc = C.enc;

			    /**
			     * Base64 encoding strategy.
			     */
			    C_enc.Base64 = {
			        /**
			         * Converts a word array to a Base64 string.
			         *
			         * @param {WordArray} wordArray The word array.
			         *
			         * @return {string} The Base64 string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
			         */
			        stringify: function (wordArray) {
			            // Shortcuts
			            var words = wordArray.words;
			            var sigBytes = wordArray.sigBytes;
			            var map = this._map;

			            // Clamp excess bits
			            wordArray.clamp();

			            // Convert
			            var base64Chars = [];
			            for (var i = 0; i < sigBytes; i += 3) {
			                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
			                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
			                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

			                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

			                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
			                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
			                }
			            }

			            // Add padding
			            var paddingChar = map.charAt(64);
			            if (paddingChar) {
			                while (base64Chars.length % 4) {
			                    base64Chars.push(paddingChar);
			                }
			            }

			            return base64Chars.join('');
			        },

			        /**
			         * Converts a Base64 string to a word array.
			         *
			         * @param {string} base64Str The Base64 string.
			         *
			         * @return {WordArray} The word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
			         */
			        parse: function (base64Str) {
			            // Shortcuts
			            var base64StrLength = base64Str.length;
			            var map = this._map;
			            var reverseMap = this._reverseMap;

			            if (!reverseMap) {
			                    reverseMap = this._reverseMap = [];
			                    for (var j = 0; j < map.length; j++) {
			                        reverseMap[map.charCodeAt(j)] = j;
			                    }
			            }

			            // Ignore padding
			            var paddingChar = map.charAt(64);
			            if (paddingChar) {
			                var paddingIndex = base64Str.indexOf(paddingChar);
			                if (paddingIndex !== -1) {
			                    base64StrLength = paddingIndex;
			                }
			            }

			            // Convert
			            return parseLoop(base64Str, base64StrLength, reverseMap);

			        },

			        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
			    };

			    function parseLoop(base64Str, base64StrLength, reverseMap) {
			      var words = [];
			      var nBytes = 0;
			      for (var i = 0; i < base64StrLength; i++) {
			          if (i % 4) {
			              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
			              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
			              var bitsCombined = bits1 | bits2;
			              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);
			              nBytes++;
			          }
			      }
			      return WordArray.create(words, nBytes);
			    }
			}());


			return CryptoJS.enc.Base64;

		})); 
	} (encBase64));
	return encBase64.exports;
}

var encBase64url = {exports: {}};

var hasRequiredEncBase64url;

function requireEncBase64url () {
	if (hasRequiredEncBase64url) return encBase64url.exports;
	hasRequiredEncBase64url = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var C_enc = C.enc;

			    /**
			     * Base64url encoding strategy.
			     */
			    C_enc.Base64url = {
			        /**
			         * Converts a word array to a Base64url string.
			         *
			         * @param {WordArray} wordArray The word array.
			         *
			         * @param {boolean} urlSafe Whether to use url safe
			         *
			         * @return {string} The Base64url string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
			         */
			        stringify: function (wordArray, urlSafe) {
			            if (urlSafe === undefined) {
			                urlSafe = true;
			            }
			            // Shortcuts
			            var words = wordArray.words;
			            var sigBytes = wordArray.sigBytes;
			            var map = urlSafe ? this._safe_map : this._map;

			            // Clamp excess bits
			            wordArray.clamp();

			            // Convert
			            var base64Chars = [];
			            for (var i = 0; i < sigBytes; i += 3) {
			                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
			                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
			                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

			                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

			                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
			                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
			                }
			            }

			            // Add padding
			            var paddingChar = map.charAt(64);
			            if (paddingChar) {
			                while (base64Chars.length % 4) {
			                    base64Chars.push(paddingChar);
			                }
			            }

			            return base64Chars.join('');
			        },

			        /**
			         * Converts a Base64url string to a word array.
			         *
			         * @param {string} base64Str The Base64url string.
			         *
			         * @param {boolean} urlSafe Whether to use url safe
			         *
			         * @return {WordArray} The word array.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
			         */
			        parse: function (base64Str, urlSafe) {
			            if (urlSafe === undefined) {
			                urlSafe = true;
			            }

			            // Shortcuts
			            var base64StrLength = base64Str.length;
			            var map = urlSafe ? this._safe_map : this._map;
			            var reverseMap = this._reverseMap;

			            if (!reverseMap) {
			                reverseMap = this._reverseMap = [];
			                for (var j = 0; j < map.length; j++) {
			                    reverseMap[map.charCodeAt(j)] = j;
			                }
			            }

			            // Ignore padding
			            var paddingChar = map.charAt(64);
			            if (paddingChar) {
			                var paddingIndex = base64Str.indexOf(paddingChar);
			                if (paddingIndex !== -1) {
			                    base64StrLength = paddingIndex;
			                }
			            }

			            // Convert
			            return parseLoop(base64Str, base64StrLength, reverseMap);

			        },

			        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
			        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
			    };

			    function parseLoop(base64Str, base64StrLength, reverseMap) {
			        var words = [];
			        var nBytes = 0;
			        for (var i = 0; i < base64StrLength; i++) {
			            if (i % 4) {
			                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
			                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
			                var bitsCombined = bits1 | bits2;
			                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);
			                nBytes++;
			            }
			        }
			        return WordArray.create(words, nBytes);
			    }
			}());


			return CryptoJS.enc.Base64url;

		})); 
	} (encBase64url));
	return encBase64url.exports;
}

var md5 = {exports: {}};

var hasRequiredMd5;

function requireMd5 () {
	if (hasRequiredMd5) return md5.exports;
	hasRequiredMd5 = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function (Math) {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var Hasher = C_lib.Hasher;
			    var C_algo = C.algo;

			    // Constants table
			    var T = [];

			    // Compute constants
			    (function () {
			        for (var i = 0; i < 64; i++) {
			            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;
			        }
			    }());

			    /**
			     * MD5 hash algorithm.
			     */
			    var MD5 = C_algo.MD5 = Hasher.extend({
			        _doReset: function () {
			            this._hash = new WordArray.init([
			                0x67452301, 0xefcdab89,
			                0x98badcfe, 0x10325476
			            ]);
			        },

			        _doProcessBlock: function (M, offset) {
			            // Swap endian
			            for (var i = 0; i < 16; i++) {
			                // Shortcuts
			                var offset_i = offset + i;
			                var M_offset_i = M[offset_i];

			                M[offset_i] = (
			                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
			                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
			                );
			            }

			            // Shortcuts
			            var H = this._hash.words;

			            var M_offset_0  = M[offset + 0];
			            var M_offset_1  = M[offset + 1];
			            var M_offset_2  = M[offset + 2];
			            var M_offset_3  = M[offset + 3];
			            var M_offset_4  = M[offset + 4];
			            var M_offset_5  = M[offset + 5];
			            var M_offset_6  = M[offset + 6];
			            var M_offset_7  = M[offset + 7];
			            var M_offset_8  = M[offset + 8];
			            var M_offset_9  = M[offset + 9];
			            var M_offset_10 = M[offset + 10];
			            var M_offset_11 = M[offset + 11];
			            var M_offset_12 = M[offset + 12];
			            var M_offset_13 = M[offset + 13];
			            var M_offset_14 = M[offset + 14];
			            var M_offset_15 = M[offset + 15];

			            // Working variables
			            var a = H[0];
			            var b = H[1];
			            var c = H[2];
			            var d = H[3];

			            // Computation
			            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);
			            d = FF(d, a, b, c, M_offset_1,  12, T[1]);
			            c = FF(c, d, a, b, M_offset_2,  17, T[2]);
			            b = FF(b, c, d, a, M_offset_3,  22, T[3]);
			            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);
			            d = FF(d, a, b, c, M_offset_5,  12, T[5]);
			            c = FF(c, d, a, b, M_offset_6,  17, T[6]);
			            b = FF(b, c, d, a, M_offset_7,  22, T[7]);
			            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);
			            d = FF(d, a, b, c, M_offset_9,  12, T[9]);
			            c = FF(c, d, a, b, M_offset_10, 17, T[10]);
			            b = FF(b, c, d, a, M_offset_11, 22, T[11]);
			            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);
			            d = FF(d, a, b, c, M_offset_13, 12, T[13]);
			            c = FF(c, d, a, b, M_offset_14, 17, T[14]);
			            b = FF(b, c, d, a, M_offset_15, 22, T[15]);

			            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);
			            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);
			            c = GG(c, d, a, b, M_offset_11, 14, T[18]);
			            b = GG(b, c, d, a, M_offset_0,  20, T[19]);
			            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);
			            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);
			            c = GG(c, d, a, b, M_offset_15, 14, T[22]);
			            b = GG(b, c, d, a, M_offset_4,  20, T[23]);
			            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);
			            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);
			            c = GG(c, d, a, b, M_offset_3,  14, T[26]);
			            b = GG(b, c, d, a, M_offset_8,  20, T[27]);
			            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);
			            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);
			            c = GG(c, d, a, b, M_offset_7,  14, T[30]);
			            b = GG(b, c, d, a, M_offset_12, 20, T[31]);

			            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);
			            d = HH(d, a, b, c, M_offset_8,  11, T[33]);
			            c = HH(c, d, a, b, M_offset_11, 16, T[34]);
			            b = HH(b, c, d, a, M_offset_14, 23, T[35]);
			            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);
			            d = HH(d, a, b, c, M_offset_4,  11, T[37]);
			            c = HH(c, d, a, b, M_offset_7,  16, T[38]);
			            b = HH(b, c, d, a, M_offset_10, 23, T[39]);
			            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);
			            d = HH(d, a, b, c, M_offset_0,  11, T[41]);
			            c = HH(c, d, a, b, M_offset_3,  16, T[42]);
			            b = HH(b, c, d, a, M_offset_6,  23, T[43]);
			            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);
			            d = HH(d, a, b, c, M_offset_12, 11, T[45]);
			            c = HH(c, d, a, b, M_offset_15, 16, T[46]);
			            b = HH(b, c, d, a, M_offset_2,  23, T[47]);

			            a = II(a, b, c, d, M_offset_0,  6,  T[48]);
			            d = II(d, a, b, c, M_offset_7,  10, T[49]);
			            c = II(c, d, a, b, M_offset_14, 15, T[50]);
			            b = II(b, c, d, a, M_offset_5,  21, T[51]);
			            a = II(a, b, c, d, M_offset_12, 6,  T[52]);
			            d = II(d, a, b, c, M_offset_3,  10, T[53]);
			            c = II(c, d, a, b, M_offset_10, 15, T[54]);
			            b = II(b, c, d, a, M_offset_1,  21, T[55]);
			            a = II(a, b, c, d, M_offset_8,  6,  T[56]);
			            d = II(d, a, b, c, M_offset_15, 10, T[57]);
			            c = II(c, d, a, b, M_offset_6,  15, T[58]);
			            b = II(b, c, d, a, M_offset_13, 21, T[59]);
			            a = II(a, b, c, d, M_offset_4,  6,  T[60]);
			            d = II(d, a, b, c, M_offset_11, 10, T[61]);
			            c = II(c, d, a, b, M_offset_2,  15, T[62]);
			            b = II(b, c, d, a, M_offset_9,  21, T[63]);

			            // Intermediate hash value
			            H[0] = (H[0] + a) | 0;
			            H[1] = (H[1] + b) | 0;
			            H[2] = (H[2] + c) | 0;
			            H[3] = (H[3] + d) | 0;
			        },

			        _doFinalize: function () {
			            // Shortcuts
			            var data = this._data;
			            var dataWords = data.words;

			            var nBitsTotal = this._nDataBytes * 8;
			            var nBitsLeft = data.sigBytes * 8;

			            // Add padding
			            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);

			            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
			            var nBitsTotalL = nBitsTotal;
			            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (
			                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |
			                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)
			            );
			            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
			                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |
			                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)
			            );

			            data.sigBytes = (dataWords.length + 1) * 4;

			            // Hash final blocks
			            this._process();

			            // Shortcuts
			            var hash = this._hash;
			            var H = hash.words;

			            // Swap endian
			            for (var i = 0; i < 4; i++) {
			                // Shortcut
			                var H_i = H[i];

			                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
			                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
			            }

			            // Return final computed hash
			            return hash;
			        },

			        clone: function () {
			            var clone = Hasher.clone.call(this);
			            clone._hash = this._hash.clone();

			            return clone;
			        }
			    });

			    function FF(a, b, c, d, x, s, t) {
			        var n = a + ((b & c) | (~b & d)) + x + t;
			        return ((n << s) | (n >>> (32 - s))) + b;
			    }

			    function GG(a, b, c, d, x, s, t) {
			        var n = a + ((b & d) | (c & ~d)) + x + t;
			        return ((n << s) | (n >>> (32 - s))) + b;
			    }

			    function HH(a, b, c, d, x, s, t) {
			        var n = a + (b ^ c ^ d) + x + t;
			        return ((n << s) | (n >>> (32 - s))) + b;
			    }

			    function II(a, b, c, d, x, s, t) {
			        var n = a + (c ^ (b | ~d)) + x + t;
			        return ((n << s) | (n >>> (32 - s))) + b;
			    }

			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.MD5('message');
			     *     var hash = CryptoJS.MD5(wordArray);
			     */
			    C.MD5 = Hasher._createHelper(MD5);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacMD5(message, key);
			     */
			    C.HmacMD5 = Hasher._createHmacHelper(MD5);
			}(Math));


			return CryptoJS.MD5;

		})); 
	} (md5));
	return md5.exports;
}

var sha1 = {exports: {}};

var hasRequiredSha1;

function requireSha1 () {
	if (hasRequiredSha1) return sha1.exports;
	hasRequiredSha1 = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var Hasher = C_lib.Hasher;
			    var C_algo = C.algo;

			    // Reusable object
			    var W = [];

			    /**
			     * SHA-1 hash algorithm.
			     */
			    var SHA1 = C_algo.SHA1 = Hasher.extend({
			        _doReset: function () {
			            this._hash = new WordArray.init([
			                0x67452301, 0xefcdab89,
			                0x98badcfe, 0x10325476,
			                0xc3d2e1f0
			            ]);
			        },

			        _doProcessBlock: function (M, offset) {
			            // Shortcut
			            var H = this._hash.words;

			            // Working variables
			            var a = H[0];
			            var b = H[1];
			            var c = H[2];
			            var d = H[3];
			            var e = H[4];

			            // Computation
			            for (var i = 0; i < 80; i++) {
			                if (i < 16) {
			                    W[i] = M[offset + i] | 0;
			                } else {
			                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
			                    W[i] = (n << 1) | (n >>> 31);
			                }

			                var t = ((a << 5) | (a >>> 27)) + e + W[i];
			                if (i < 20) {
			                    t += ((b & c) | (~b & d)) + 0x5a827999;
			                } else if (i < 40) {
			                    t += (b ^ c ^ d) + 0x6ed9eba1;
			                } else if (i < 60) {
			                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;
			                } else /* if (i < 80) */ {
			                    t += (b ^ c ^ d) - 0x359d3e2a;
			                }

			                e = d;
			                d = c;
			                c = (b << 30) | (b >>> 2);
			                b = a;
			                a = t;
			            }

			            // Intermediate hash value
			            H[0] = (H[0] + a) | 0;
			            H[1] = (H[1] + b) | 0;
			            H[2] = (H[2] + c) | 0;
			            H[3] = (H[3] + d) | 0;
			            H[4] = (H[4] + e) | 0;
			        },

			        _doFinalize: function () {
			            // Shortcuts
			            var data = this._data;
			            var dataWords = data.words;

			            var nBitsTotal = this._nDataBytes * 8;
			            var nBitsLeft = data.sigBytes * 8;

			            // Add padding
			            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
			            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
			            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
			            data.sigBytes = dataWords.length * 4;

			            // Hash final blocks
			            this._process();

			            // Return final computed hash
			            return this._hash;
			        },

			        clone: function () {
			            var clone = Hasher.clone.call(this);
			            clone._hash = this._hash.clone();

			            return clone;
			        }
			    });

			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.SHA1('message');
			     *     var hash = CryptoJS.SHA1(wordArray);
			     */
			    C.SHA1 = Hasher._createHelper(SHA1);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacSHA1(message, key);
			     */
			    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
			}());


			return CryptoJS.SHA1;

		})); 
	} (sha1));
	return sha1.exports;
}

var sha256 = {exports: {}};

var hasRequiredSha256;

function requireSha256 () {
	if (hasRequiredSha256) return sha256.exports;
	hasRequiredSha256 = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function (Math) {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var Hasher = C_lib.Hasher;
			    var C_algo = C.algo;

			    // Initialization and round constants tables
			    var H = [];
			    var K = [];

			    // Compute constants
			    (function () {
			        function isPrime(n) {
			            var sqrtN = Math.sqrt(n);
			            for (var factor = 2; factor <= sqrtN; factor++) {
			                if (!(n % factor)) {
			                    return false;
			                }
			            }

			            return true;
			        }

			        function getFractionalBits(n) {
			            return ((n - (n | 0)) * 0x100000000) | 0;
			        }

			        var n = 2;
			        var nPrime = 0;
			        while (nPrime < 64) {
			            if (isPrime(n)) {
			                if (nPrime < 8) {
			                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
			                }
			                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

			                nPrime++;
			            }

			            n++;
			        }
			    }());

			    // Reusable object
			    var W = [];

			    /**
			     * SHA-256 hash algorithm.
			     */
			    var SHA256 = C_algo.SHA256 = Hasher.extend({
			        _doReset: function () {
			            this._hash = new WordArray.init(H.slice(0));
			        },

			        _doProcessBlock: function (M, offset) {
			            // Shortcut
			            var H = this._hash.words;

			            // Working variables
			            var a = H[0];
			            var b = H[1];
			            var c = H[2];
			            var d = H[3];
			            var e = H[4];
			            var f = H[5];
			            var g = H[6];
			            var h = H[7];

			            // Computation
			            for (var i = 0; i < 64; i++) {
			                if (i < 16) {
			                    W[i] = M[offset + i] | 0;
			                } else {
			                    var gamma0x = W[i - 15];
			                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^
			                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^
			                                   (gamma0x >>> 3);

			                    var gamma1x = W[i - 2];
			                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^
			                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^
			                                   (gamma1x >>> 10);

			                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
			                }

			                var ch  = (e & f) ^ (~e & g);
			                var maj = (a & b) ^ (a & c) ^ (b & c);

			                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));
			                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));

			                var t1 = h + sigma1 + ch + K[i] + W[i];
			                var t2 = sigma0 + maj;

			                h = g;
			                g = f;
			                f = e;
			                e = (d + t1) | 0;
			                d = c;
			                c = b;
			                b = a;
			                a = (t1 + t2) | 0;
			            }

			            // Intermediate hash value
			            H[0] = (H[0] + a) | 0;
			            H[1] = (H[1] + b) | 0;
			            H[2] = (H[2] + c) | 0;
			            H[3] = (H[3] + d) | 0;
			            H[4] = (H[4] + e) | 0;
			            H[5] = (H[5] + f) | 0;
			            H[6] = (H[6] + g) | 0;
			            H[7] = (H[7] + h) | 0;
			        },

			        _doFinalize: function () {
			            // Shortcuts
			            var data = this._data;
			            var dataWords = data.words;

			            var nBitsTotal = this._nDataBytes * 8;
			            var nBitsLeft = data.sigBytes * 8;

			            // Add padding
			            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
			            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
			            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
			            data.sigBytes = dataWords.length * 4;

			            // Hash final blocks
			            this._process();

			            // Return final computed hash
			            return this._hash;
			        },

			        clone: function () {
			            var clone = Hasher.clone.call(this);
			            clone._hash = this._hash.clone();

			            return clone;
			        }
			    });

			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.SHA256('message');
			     *     var hash = CryptoJS.SHA256(wordArray);
			     */
			    C.SHA256 = Hasher._createHelper(SHA256);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacSHA256(message, key);
			     */
			    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
			}(Math));


			return CryptoJS.SHA256;

		})); 
	} (sha256));
	return sha256.exports;
}

var sha224 = {exports: {}};

var hasRequiredSha224;

function requireSha224 () {
	if (hasRequiredSha224) return sha224.exports;
	hasRequiredSha224 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireSha256());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var C_algo = C.algo;
			    var SHA256 = C_algo.SHA256;

			    /**
			     * SHA-224 hash algorithm.
			     */
			    var SHA224 = C_algo.SHA224 = SHA256.extend({
			        _doReset: function () {
			            this._hash = new WordArray.init([
			                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
			                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4
			            ]);
			        },

			        _doFinalize: function () {
			            var hash = SHA256._doFinalize.call(this);

			            hash.sigBytes -= 4;

			            return hash;
			        }
			    });

			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.SHA224('message');
			     *     var hash = CryptoJS.SHA224(wordArray);
			     */
			    C.SHA224 = SHA256._createHelper(SHA224);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacSHA224(message, key);
			     */
			    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
			}());


			return CryptoJS.SHA224;

		})); 
	} (sha224));
	return sha224.exports;
}

var sha512 = {exports: {}};

var hasRequiredSha512;

function requireSha512 () {
	if (hasRequiredSha512) return sha512.exports;
	hasRequiredSha512 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireX64Core());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var Hasher = C_lib.Hasher;
			    var C_x64 = C.x64;
			    var X64Word = C_x64.Word;
			    var X64WordArray = C_x64.WordArray;
			    var C_algo = C.algo;

			    function X64Word_create() {
			        return X64Word.create.apply(X64Word, arguments);
			    }

			    // Constants
			    var K = [
			        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
			        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
			        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
			        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
			        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
			        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
			        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
			        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
			        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
			        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
			        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
			        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
			        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
			        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
			        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
			        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
			        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
			        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
			        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
			        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
			        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
			        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
			        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
			        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
			        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
			        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
			        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
			        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
			        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
			        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
			        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
			        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
			        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
			        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
			        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
			        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
			        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
			        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
			        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
			        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)
			    ];

			    // Reusable objects
			    var W = [];
			    (function () {
			        for (var i = 0; i < 80; i++) {
			            W[i] = X64Word_create();
			        }
			    }());

			    /**
			     * SHA-512 hash algorithm.
			     */
			    var SHA512 = C_algo.SHA512 = Hasher.extend({
			        _doReset: function () {
			            this._hash = new X64WordArray.init([
			                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
			                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
			                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
			                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)
			            ]);
			        },

			        _doProcessBlock: function (M, offset) {
			            // Shortcuts
			            var H = this._hash.words;

			            var H0 = H[0];
			            var H1 = H[1];
			            var H2 = H[2];
			            var H3 = H[3];
			            var H4 = H[4];
			            var H5 = H[5];
			            var H6 = H[6];
			            var H7 = H[7];

			            var H0h = H0.high;
			            var H0l = H0.low;
			            var H1h = H1.high;
			            var H1l = H1.low;
			            var H2h = H2.high;
			            var H2l = H2.low;
			            var H3h = H3.high;
			            var H3l = H3.low;
			            var H4h = H4.high;
			            var H4l = H4.low;
			            var H5h = H5.high;
			            var H5l = H5.low;
			            var H6h = H6.high;
			            var H6l = H6.low;
			            var H7h = H7.high;
			            var H7l = H7.low;

			            // Working variables
			            var ah = H0h;
			            var al = H0l;
			            var bh = H1h;
			            var bl = H1l;
			            var ch = H2h;
			            var cl = H2l;
			            var dh = H3h;
			            var dl = H3l;
			            var eh = H4h;
			            var el = H4l;
			            var fh = H5h;
			            var fl = H5l;
			            var gh = H6h;
			            var gl = H6l;
			            var hh = H7h;
			            var hl = H7l;

			            // Rounds
			            for (var i = 0; i < 80; i++) {
			                var Wil;
			                var Wih;

			                // Shortcut
			                var Wi = W[i];

			                // Extend message
			                if (i < 16) {
			                    Wih = Wi.high = M[offset + i * 2]     | 0;
			                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;
			                } else {
			                    // Gamma0
			                    var gamma0x  = W[i - 15];
			                    var gamma0xh = gamma0x.high;
			                    var gamma0xl = gamma0x.low;
			                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);
			                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));

			                    // Gamma1
			                    var gamma1x  = W[i - 2];
			                    var gamma1xh = gamma1x.high;
			                    var gamma1xl = gamma1x.low;
			                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);
			                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));

			                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
			                    var Wi7  = W[i - 7];
			                    var Wi7h = Wi7.high;
			                    var Wi7l = Wi7.low;

			                    var Wi16  = W[i - 16];
			                    var Wi16h = Wi16.high;
			                    var Wi16l = Wi16.low;

			                    Wil = gamma0l + Wi7l;
			                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);
			                    Wil = Wil + gamma1l;
			                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);
			                    Wil = Wil + Wi16l;
			                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);

			                    Wi.high = Wih;
			                    Wi.low  = Wil;
			                }

			                var chh  = (eh & fh) ^ (~eh & gh);
			                var chl  = (el & fl) ^ (~el & gl);
			                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);
			                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);

			                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));
			                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));
			                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));
			                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));

			                // t1 = h + sigma1 + ch + K[i] + W[i]
			                var Ki  = K[i];
			                var Kih = Ki.high;
			                var Kil = Ki.low;

			                var t1l = hl + sigma1l;
			                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);
			                var t1l = t1l + chl;
			                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);
			                var t1l = t1l + Kil;
			                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);
			                var t1l = t1l + Wil;
			                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);

			                // t2 = sigma0 + maj
			                var t2l = sigma0l + majl;
			                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);

			                // Update working variables
			                hh = gh;
			                hl = gl;
			                gh = fh;
			                gl = fl;
			                fh = eh;
			                fl = el;
			                el = (dl + t1l) | 0;
			                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;
			                dh = ch;
			                dl = cl;
			                ch = bh;
			                cl = bl;
			                bh = ah;
			                bl = al;
			                al = (t1l + t2l) | 0;
			                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;
			            }

			            // Intermediate hash value
			            H0l = H0.low  = (H0l + al);
			            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));
			            H1l = H1.low  = (H1l + bl);
			            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));
			            H2l = H2.low  = (H2l + cl);
			            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));
			            H3l = H3.low  = (H3l + dl);
			            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));
			            H4l = H4.low  = (H4l + el);
			            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));
			            H5l = H5.low  = (H5l + fl);
			            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));
			            H6l = H6.low  = (H6l + gl);
			            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));
			            H7l = H7.low  = (H7l + hl);
			            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));
			        },

			        _doFinalize: function () {
			            // Shortcuts
			            var data = this._data;
			            var dataWords = data.words;

			            var nBitsTotal = this._nDataBytes * 8;
			            var nBitsLeft = data.sigBytes * 8;

			            // Add padding
			            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
			            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
			            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;
			            data.sigBytes = dataWords.length * 4;

			            // Hash final blocks
			            this._process();

			            // Convert hash to 32-bit word array before returning
			            var hash = this._hash.toX32();

			            // Return final computed hash
			            return hash;
			        },

			        clone: function () {
			            var clone = Hasher.clone.call(this);
			            clone._hash = this._hash.clone();

			            return clone;
			        },

			        blockSize: 1024/32
			    });

			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.SHA512('message');
			     *     var hash = CryptoJS.SHA512(wordArray);
			     */
			    C.SHA512 = Hasher._createHelper(SHA512);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacSHA512(message, key);
			     */
			    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
			}());


			return CryptoJS.SHA512;

		})); 
	} (sha512));
	return sha512.exports;
}

var sha384 = {exports: {}};

var hasRequiredSha384;

function requireSha384 () {
	if (hasRequiredSha384) return sha384.exports;
	hasRequiredSha384 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireX64Core(), requireSha512());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_x64 = C.x64;
			    var X64Word = C_x64.Word;
			    var X64WordArray = C_x64.WordArray;
			    var C_algo = C.algo;
			    var SHA512 = C_algo.SHA512;

			    /**
			     * SHA-384 hash algorithm.
			     */
			    var SHA384 = C_algo.SHA384 = SHA512.extend({
			        _doReset: function () {
			            this._hash = new X64WordArray.init([
			                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
			                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
			                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
			                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)
			            ]);
			        },

			        _doFinalize: function () {
			            var hash = SHA512._doFinalize.call(this);

			            hash.sigBytes -= 16;

			            return hash;
			        }
			    });

			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.SHA384('message');
			     *     var hash = CryptoJS.SHA384(wordArray);
			     */
			    C.SHA384 = SHA512._createHelper(SHA384);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacSHA384(message, key);
			     */
			    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
			}());


			return CryptoJS.SHA384;

		})); 
	} (sha384));
	return sha384.exports;
}

var sha3 = {exports: {}};

var hasRequiredSha3;

function requireSha3 () {
	if (hasRequiredSha3) return sha3.exports;
	hasRequiredSha3 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireX64Core());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function (Math) {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var Hasher = C_lib.Hasher;
			    var C_x64 = C.x64;
			    var X64Word = C_x64.Word;
			    var C_algo = C.algo;

			    // Constants tables
			    var RHO_OFFSETS = [];
			    var PI_INDEXES  = [];
			    var ROUND_CONSTANTS = [];

			    // Compute Constants
			    (function () {
			        // Compute rho offset constants
			        var x = 1, y = 0;
			        for (var t = 0; t < 24; t++) {
			            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;

			            var newX = y % 5;
			            var newY = (2 * x + 3 * y) % 5;
			            x = newX;
			            y = newY;
			        }

			        // Compute pi index constants
			        for (var x = 0; x < 5; x++) {
			            for (var y = 0; y < 5; y++) {
			                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;
			            }
			        }

			        // Compute round constants
			        var LFSR = 0x01;
			        for (var i = 0; i < 24; i++) {
			            var roundConstantMsw = 0;
			            var roundConstantLsw = 0;

			            for (var j = 0; j < 7; j++) {
			                if (LFSR & 0x01) {
			                    var bitPosition = (1 << j) - 1;
			                    if (bitPosition < 32) {
			                        roundConstantLsw ^= 1 << bitPosition;
			                    } else /* if (bitPosition >= 32) */ {
			                        roundConstantMsw ^= 1 << (bitPosition - 32);
			                    }
			                }

			                // Compute next LFSR
			                if (LFSR & 0x80) {
			                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
			                    LFSR = (LFSR << 1) ^ 0x71;
			                } else {
			                    LFSR <<= 1;
			                }
			            }

			            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
			        }
			    }());

			    // Reusable objects for temporary values
			    var T = [];
			    (function () {
			        for (var i = 0; i < 25; i++) {
			            T[i] = X64Word.create();
			        }
			    }());

			    /**
			     * SHA-3 hash algorithm.
			     */
			    var SHA3 = C_algo.SHA3 = Hasher.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {number} outputLength
			         *   The desired number of bits in the output hash.
			         *   Only values permitted are: 224, 256, 384, 512.
			         *   Default: 512
			         */
			        cfg: Hasher.cfg.extend({
			            outputLength: 512
			        }),

			        _doReset: function () {
			            var state = this._state = [];
			            for (var i = 0; i < 25; i++) {
			                state[i] = new X64Word.init();
			            }

			            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
			        },

			        _doProcessBlock: function (M, offset) {
			            // Shortcuts
			            var state = this._state;
			            var nBlockSizeLanes = this.blockSize / 2;

			            // Absorb
			            for (var i = 0; i < nBlockSizeLanes; i++) {
			                // Shortcuts
			                var M2i  = M[offset + 2 * i];
			                var M2i1 = M[offset + 2 * i + 1];

			                // Swap endian
			                M2i = (
			                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |
			                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)
			                );
			                M2i1 = (
			                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |
			                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)
			                );

			                // Absorb message into state
			                var lane = state[i];
			                lane.high ^= M2i1;
			                lane.low  ^= M2i;
			            }

			            // Rounds
			            for (var round = 0; round < 24; round++) {
			                // Theta
			                for (var x = 0; x < 5; x++) {
			                    // Mix column lanes
			                    var tMsw = 0, tLsw = 0;
			                    for (var y = 0; y < 5; y++) {
			                        var lane = state[x + 5 * y];
			                        tMsw ^= lane.high;
			                        tLsw ^= lane.low;
			                    }

			                    // Temporary values
			                    var Tx = T[x];
			                    Tx.high = tMsw;
			                    Tx.low  = tLsw;
			                }
			                for (var x = 0; x < 5; x++) {
			                    // Shortcuts
			                    var Tx4 = T[(x + 4) % 5];
			                    var Tx1 = T[(x + 1) % 5];
			                    var Tx1Msw = Tx1.high;
			                    var Tx1Lsw = Tx1.low;

			                    // Mix surrounding columns
			                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));
			                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));
			                    for (var y = 0; y < 5; y++) {
			                        var lane = state[x + 5 * y];
			                        lane.high ^= tMsw;
			                        lane.low  ^= tLsw;
			                    }
			                }

			                // Rho Pi
			                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
			                    var tMsw;
			                    var tLsw;

			                    // Shortcuts
			                    var lane = state[laneIndex];
			                    var laneMsw = lane.high;
			                    var laneLsw = lane.low;
			                    var rhoOffset = RHO_OFFSETS[laneIndex];

			                    // Rotate lanes
			                    if (rhoOffset < 32) {
			                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));
			                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));
			                    } else /* if (rhoOffset >= 32) */ {
			                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));
			                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));
			                    }

			                    // Transpose lanes
			                    var TPiLane = T[PI_INDEXES[laneIndex]];
			                    TPiLane.high = tMsw;
			                    TPiLane.low  = tLsw;
			                }

			                // Rho pi at x = y = 0
			                var T0 = T[0];
			                var state0 = state[0];
			                T0.high = state0.high;
			                T0.low  = state0.low;

			                // Chi
			                for (var x = 0; x < 5; x++) {
			                    for (var y = 0; y < 5; y++) {
			                        // Shortcuts
			                        var laneIndex = x + 5 * y;
			                        var lane = state[laneIndex];
			                        var TLane = T[laneIndex];
			                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];
			                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];

			                        // Mix rows
			                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);
			                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);
			                    }
			                }

			                // Iota
			                var lane = state[0];
			                var roundConstant = ROUND_CONSTANTS[round];
			                lane.high ^= roundConstant.high;
			                lane.low  ^= roundConstant.low;
			            }
			        },

			        _doFinalize: function () {
			            // Shortcuts
			            var data = this._data;
			            var dataWords = data.words;
			            this._nDataBytes * 8;
			            var nBitsLeft = data.sigBytes * 8;
			            var blockSizeBits = this.blockSize * 32;

			            // Add padding
			            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);
			            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;
			            data.sigBytes = dataWords.length * 4;

			            // Hash final blocks
			            this._process();

			            // Shortcuts
			            var state = this._state;
			            var outputLengthBytes = this.cfg.outputLength / 8;
			            var outputLengthLanes = outputLengthBytes / 8;

			            // Squeeze
			            var hashWords = [];
			            for (var i = 0; i < outputLengthLanes; i++) {
			                // Shortcuts
			                var lane = state[i];
			                var laneMsw = lane.high;
			                var laneLsw = lane.low;

			                // Swap endian
			                laneMsw = (
			                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |
			                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)
			                );
			                laneLsw = (
			                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |
			                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)
			                );

			                // Squeeze state to retrieve hash
			                hashWords.push(laneLsw);
			                hashWords.push(laneMsw);
			            }

			            // Return final computed hash
			            return new WordArray.init(hashWords, outputLengthBytes);
			        },

			        clone: function () {
			            var clone = Hasher.clone.call(this);

			            var state = clone._state = this._state.slice(0);
			            for (var i = 0; i < 25; i++) {
			                state[i] = state[i].clone();
			            }

			            return clone;
			        }
			    });

			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.SHA3('message');
			     *     var hash = CryptoJS.SHA3(wordArray);
			     */
			    C.SHA3 = Hasher._createHelper(SHA3);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacSHA3(message, key);
			     */
			    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
			}(Math));


			return CryptoJS.SHA3;

		})); 
	} (sha3));
	return sha3.exports;
}

var ripemd160 = {exports: {}};

var hasRequiredRipemd160;

function requireRipemd160 () {
	if (hasRequiredRipemd160) return ripemd160.exports;
	hasRequiredRipemd160 = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/

			(function (Math) {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var Hasher = C_lib.Hasher;
			    var C_algo = C.algo;

			    // Constants table
			    var _zl = WordArray.create([
			        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
			        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
			        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
			        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
			        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);
			    var _zr = WordArray.create([
			        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
			        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
			        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
			        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
			        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);
			    var _sl = WordArray.create([
			         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
			        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
			        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
			          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
			        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);
			    var _sr = WordArray.create([
			        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
			        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
			        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
			        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
			        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);

			    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
			    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

			    /**
			     * RIPEMD160 hash algorithm.
			     */
			    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
			        _doReset: function () {
			            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
			        },

			        _doProcessBlock: function (M, offset) {

			            // Swap endian
			            for (var i = 0; i < 16; i++) {
			                // Shortcuts
			                var offset_i = offset + i;
			                var M_offset_i = M[offset_i];

			                // Swap
			                M[offset_i] = (
			                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
			                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
			                );
			            }
			            // Shortcut
			            var H  = this._hash.words;
			            var hl = _hl.words;
			            var hr = _hr.words;
			            var zl = _zl.words;
			            var zr = _zr.words;
			            var sl = _sl.words;
			            var sr = _sr.words;

			            // Working variables
			            var al, bl, cl, dl, el;
			            var ar, br, cr, dr, er;

			            ar = al = H[0];
			            br = bl = H[1];
			            cr = cl = H[2];
			            dr = dl = H[3];
			            er = el = H[4];
			            // Computation
			            var t;
			            for (var i = 0; i < 80; i += 1) {
			                t = (al +  M[offset+zl[i]])|0;
			                if (i<16){
				            t +=  f1(bl,cl,dl) + hl[0];
			                } else if (i<32) {
				            t +=  f2(bl,cl,dl) + hl[1];
			                } else if (i<48) {
				            t +=  f3(bl,cl,dl) + hl[2];
			                } else if (i<64) {
				            t +=  f4(bl,cl,dl) + hl[3];
			                } else {// if (i<80) {
				            t +=  f5(bl,cl,dl) + hl[4];
			                }
			                t = t|0;
			                t =  rotl(t,sl[i]);
			                t = (t+el)|0;
			                al = el;
			                el = dl;
			                dl = rotl(cl, 10);
			                cl = bl;
			                bl = t;

			                t = (ar + M[offset+zr[i]])|0;
			                if (i<16){
				            t +=  f5(br,cr,dr) + hr[0];
			                } else if (i<32) {
				            t +=  f4(br,cr,dr) + hr[1];
			                } else if (i<48) {
				            t +=  f3(br,cr,dr) + hr[2];
			                } else if (i<64) {
				            t +=  f2(br,cr,dr) + hr[3];
			                } else {// if (i<80) {
				            t +=  f1(br,cr,dr) + hr[4];
			                }
			                t = t|0;
			                t =  rotl(t,sr[i]) ;
			                t = (t+er)|0;
			                ar = er;
			                er = dr;
			                dr = rotl(cr, 10);
			                cr = br;
			                br = t;
			            }
			            // Intermediate hash value
			            t    = (H[1] + cl + dr)|0;
			            H[1] = (H[2] + dl + er)|0;
			            H[2] = (H[3] + el + ar)|0;
			            H[3] = (H[4] + al + br)|0;
			            H[4] = (H[0] + bl + cr)|0;
			            H[0] =  t;
			        },

			        _doFinalize: function () {
			            // Shortcuts
			            var data = this._data;
			            var dataWords = data.words;

			            var nBitsTotal = this._nDataBytes * 8;
			            var nBitsLeft = data.sigBytes * 8;

			            // Add padding
			            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
			            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
			                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
			                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
			            );
			            data.sigBytes = (dataWords.length + 1) * 4;

			            // Hash final blocks
			            this._process();

			            // Shortcuts
			            var hash = this._hash;
			            var H = hash.words;

			            // Swap endian
			            for (var i = 0; i < 5; i++) {
			                // Shortcut
			                var H_i = H[i];

			                // Swap
			                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
			                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
			            }

			            // Return final computed hash
			            return hash;
			        },

			        clone: function () {
			            var clone = Hasher.clone.call(this);
			            clone._hash = this._hash.clone();

			            return clone;
			        }
			    });


			    function f1(x, y, z) {
			        return ((x) ^ (y) ^ (z));

			    }

			    function f2(x, y, z) {
			        return (((x)&(y)) | ((~x)&(z)));
			    }

			    function f3(x, y, z) {
			        return (((x) | (~(y))) ^ (z));
			    }

			    function f4(x, y, z) {
			        return (((x) & (z)) | ((y)&(~(z))));
			    }

			    function f5(x, y, z) {
			        return ((x) ^ ((y) |(~(z))));

			    }

			    function rotl(x,n) {
			        return (x<<n) | (x>>>(32-n));
			    }


			    /**
			     * Shortcut function to the hasher's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     *
			     * @return {WordArray} The hash.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hash = CryptoJS.RIPEMD160('message');
			     *     var hash = CryptoJS.RIPEMD160(wordArray);
			     */
			    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

			    /**
			     * Shortcut function to the HMAC's object interface.
			     *
			     * @param {WordArray|string} message The message to hash.
			     * @param {WordArray|string} key The secret key.
			     *
			     * @return {WordArray} The HMAC.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
			     */
			    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
			}());


			return CryptoJS.RIPEMD160;

		})); 
	} (ripemd160));
	return ripemd160.exports;
}

var hmac = {exports: {}};

var hasRequiredHmac;

function requireHmac () {
	if (hasRequiredHmac) return hmac.exports;
	hasRequiredHmac = 1;
	(function (module, exports) {
(function (root, factory) {
			{
				// CommonJS
				module.exports = factory(requireCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var Base = C_lib.Base;
			    var C_enc = C.enc;
			    var Utf8 = C_enc.Utf8;
			    var C_algo = C.algo;

			    /**
			     * HMAC algorithm.
			     */
			    C_algo.HMAC = Base.extend({
			        /**
			         * Initializes a newly created HMAC.
			         *
			         * @param {Hasher} hasher The hash algorithm to use.
			         * @param {WordArray|string} key The secret key.
			         *
			         * @example
			         *
			         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
			         */
			        init: function (hasher, key) {
			            // Init hasher
			            hasher = this._hasher = new hasher.init();

			            // Convert string to WordArray, else assume WordArray already
			            if (typeof key == 'string') {
			                key = Utf8.parse(key);
			            }

			            // Shortcuts
			            var hasherBlockSize = hasher.blockSize;
			            var hasherBlockSizeBytes = hasherBlockSize * 4;

			            // Allow arbitrary length keys
			            if (key.sigBytes > hasherBlockSizeBytes) {
			                key = hasher.finalize(key);
			            }

			            // Clamp excess bits
			            key.clamp();

			            // Clone key for inner and outer pads
			            var oKey = this._oKey = key.clone();
			            var iKey = this._iKey = key.clone();

			            // Shortcuts
			            var oKeyWords = oKey.words;
			            var iKeyWords = iKey.words;

			            // XOR keys with pad constants
			            for (var i = 0; i < hasherBlockSize; i++) {
			                oKeyWords[i] ^= 0x5c5c5c5c;
			                iKeyWords[i] ^= 0x36363636;
			            }
			            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

			            // Set initial values
			            this.reset();
			        },

			        /**
			         * Resets this HMAC to its initial state.
			         *
			         * @example
			         *
			         *     hmacHasher.reset();
			         */
			        reset: function () {
			            // Shortcut
			            var hasher = this._hasher;

			            // Reset
			            hasher.reset();
			            hasher.update(this._iKey);
			        },

			        /**
			         * Updates this HMAC with a message.
			         *
			         * @param {WordArray|string} messageUpdate The message to append.
			         *
			         * @return {HMAC} This HMAC instance.
			         *
			         * @example
			         *
			         *     hmacHasher.update('message');
			         *     hmacHasher.update(wordArray);
			         */
			        update: function (messageUpdate) {
			            this._hasher.update(messageUpdate);

			            // Chainable
			            return this;
			        },

			        /**
			         * Finalizes the HMAC computation.
			         * Note that the finalize operation is effectively a destructive, read-once operation.
			         *
			         * @param {WordArray|string} messageUpdate (Optional) A final message update.
			         *
			         * @return {WordArray} The HMAC.
			         *
			         * @example
			         *
			         *     var hmac = hmacHasher.finalize();
			         *     var hmac = hmacHasher.finalize('message');
			         *     var hmac = hmacHasher.finalize(wordArray);
			         */
			        finalize: function (messageUpdate) {
			            // Shortcut
			            var hasher = this._hasher;

			            // Compute HMAC
			            var innerHash = hasher.finalize(messageUpdate);
			            hasher.reset();
			            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

			            return hmac;
			        }
			    });
			}());


		})); 
	} (hmac));
	return hmac.exports;
}

var pbkdf2 = {exports: {}};

var hasRequiredPbkdf2;

function requirePbkdf2 () {
	if (hasRequiredPbkdf2) return pbkdf2.exports;
	hasRequiredPbkdf2 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireSha256(), requireHmac());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var Base = C_lib.Base;
			    var WordArray = C_lib.WordArray;
			    var C_algo = C.algo;
			    var SHA256 = C_algo.SHA256;
			    var HMAC = C_algo.HMAC;

			    /**
			     * Password-Based Key Derivation Function 2 algorithm.
			     */
			    var PBKDF2 = C_algo.PBKDF2 = Base.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
			         * @property {Hasher} hasher The hasher to use. Default: SHA256
			         * @property {number} iterations The number of iterations to perform. Default: 250000
			         */
			        cfg: Base.extend({
			            keySize: 128/32,
			            hasher: SHA256,
			            iterations: 250000
			        }),

			        /**
			         * Initializes a newly created key derivation function.
			         *
			         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
			         *
			         * @example
			         *
			         *     var kdf = CryptoJS.algo.PBKDF2.create();
			         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
			         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
			         */
			        init: function (cfg) {
			            this.cfg = this.cfg.extend(cfg);
			        },

			        /**
			         * Computes the Password-Based Key Derivation Function 2.
			         *
			         * @param {WordArray|string} password The password.
			         * @param {WordArray|string} salt A salt.
			         *
			         * @return {WordArray} The derived key.
			         *
			         * @example
			         *
			         *     var key = kdf.compute(password, salt);
			         */
			        compute: function (password, salt) {
			            // Shortcut
			            var cfg = this.cfg;

			            // Init HMAC
			            var hmac = HMAC.create(cfg.hasher, password);

			            // Initial values
			            var derivedKey = WordArray.create();
			            var blockIndex = WordArray.create([0x00000001]);

			            // Shortcuts
			            var derivedKeyWords = derivedKey.words;
			            var blockIndexWords = blockIndex.words;
			            var keySize = cfg.keySize;
			            var iterations = cfg.iterations;

			            // Generate key
			            while (derivedKeyWords.length < keySize) {
			                var block = hmac.update(salt).finalize(blockIndex);
			                hmac.reset();

			                // Shortcuts
			                var blockWords = block.words;
			                var blockWordsLength = blockWords.length;

			                // Iterations
			                var intermediate = block;
			                for (var i = 1; i < iterations; i++) {
			                    intermediate = hmac.finalize(intermediate);
			                    hmac.reset();

			                    // Shortcut
			                    var intermediateWords = intermediate.words;

			                    // XOR intermediate with block
			                    for (var j = 0; j < blockWordsLength; j++) {
			                        blockWords[j] ^= intermediateWords[j];
			                    }
			                }

			                derivedKey.concat(block);
			                blockIndexWords[0]++;
			            }
			            derivedKey.sigBytes = keySize * 4;

			            return derivedKey;
			        }
			    });

			    /**
			     * Computes the Password-Based Key Derivation Function 2.
			     *
			     * @param {WordArray|string} password The password.
			     * @param {WordArray|string} salt A salt.
			     * @param {Object} cfg (Optional) The configuration options to use for this computation.
			     *
			     * @return {WordArray} The derived key.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var key = CryptoJS.PBKDF2(password, salt);
			     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
			     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
			     */
			    C.PBKDF2 = function (password, salt, cfg) {
			        return PBKDF2.create(cfg).compute(password, salt);
			    };
			}());


			return CryptoJS.PBKDF2;

		})); 
	} (pbkdf2));
	return pbkdf2.exports;
}

var evpkdf = {exports: {}};

var hasRequiredEvpkdf;

function requireEvpkdf () {
	if (hasRequiredEvpkdf) return evpkdf.exports;
	hasRequiredEvpkdf = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireSha1(), requireHmac());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var Base = C_lib.Base;
			    var WordArray = C_lib.WordArray;
			    var C_algo = C.algo;
			    var MD5 = C_algo.MD5;

			    /**
			     * This key derivation function is meant to conform with EVP_BytesToKey.
			     * www.openssl.org/docs/crypto/EVP_BytesToKey.html
			     */
			    var EvpKDF = C_algo.EvpKDF = Base.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
			         * @property {Hasher} hasher The hash algorithm to use. Default: MD5
			         * @property {number} iterations The number of iterations to perform. Default: 1
			         */
			        cfg: Base.extend({
			            keySize: 128/32,
			            hasher: MD5,
			            iterations: 1
			        }),

			        /**
			         * Initializes a newly created key derivation function.
			         *
			         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
			         *
			         * @example
			         *
			         *     var kdf = CryptoJS.algo.EvpKDF.create();
			         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
			         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
			         */
			        init: function (cfg) {
			            this.cfg = this.cfg.extend(cfg);
			        },

			        /**
			         * Derives a key from a password.
			         *
			         * @param {WordArray|string} password The password.
			         * @param {WordArray|string} salt A salt.
			         *
			         * @return {WordArray} The derived key.
			         *
			         * @example
			         *
			         *     var key = kdf.compute(password, salt);
			         */
			        compute: function (password, salt) {
			            var block;

			            // Shortcut
			            var cfg = this.cfg;

			            // Init hasher
			            var hasher = cfg.hasher.create();

			            // Initial values
			            var derivedKey = WordArray.create();

			            // Shortcuts
			            var derivedKeyWords = derivedKey.words;
			            var keySize = cfg.keySize;
			            var iterations = cfg.iterations;

			            // Generate key
			            while (derivedKeyWords.length < keySize) {
			                if (block) {
			                    hasher.update(block);
			                }
			                block = hasher.update(password).finalize(salt);
			                hasher.reset();

			                // Iterations
			                for (var i = 1; i < iterations; i++) {
			                    block = hasher.finalize(block);
			                    hasher.reset();
			                }

			                derivedKey.concat(block);
			            }
			            derivedKey.sigBytes = keySize * 4;

			            return derivedKey;
			        }
			    });

			    /**
			     * Derives a key from a password.
			     *
			     * @param {WordArray|string} password The password.
			     * @param {WordArray|string} salt A salt.
			     * @param {Object} cfg (Optional) The configuration options to use for this computation.
			     *
			     * @return {WordArray} The derived key.
			     *
			     * @static
			     *
			     * @example
			     *
			     *     var key = CryptoJS.EvpKDF(password, salt);
			     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
			     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
			     */
			    C.EvpKDF = function (password, salt, cfg) {
			        return EvpKDF.create(cfg).compute(password, salt);
			    };
			}());


			return CryptoJS.EvpKDF;

		})); 
	} (evpkdf));
	return evpkdf.exports;
}

var cipherCore = {exports: {}};

var hasRequiredCipherCore;

function requireCipherCore () {
	if (hasRequiredCipherCore) return cipherCore.exports;
	hasRequiredCipherCore = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireEvpkdf());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * Cipher core components.
			 */
			CryptoJS.lib.Cipher || (function (undefined$1) {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var Base = C_lib.Base;
			    var WordArray = C_lib.WordArray;
			    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
			    var C_enc = C.enc;
			    C_enc.Utf8;
			    var Base64 = C_enc.Base64;
			    var C_algo = C.algo;
			    var EvpKDF = C_algo.EvpKDF;

			    /**
			     * Abstract base cipher template.
			     *
			     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
			     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
			     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
			     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
			     */
			    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {WordArray} iv The IV to use for this operation.
			         */
			        cfg: Base.extend(),

			        /**
			         * Creates this cipher in encryption mode.
			         *
			         * @param {WordArray} key The key.
			         * @param {Object} cfg (Optional) The configuration options to use for this operation.
			         *
			         * @return {Cipher} A cipher instance.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
			         */
			        createEncryptor: function (key, cfg) {
			            return this.create(this._ENC_XFORM_MODE, key, cfg);
			        },

			        /**
			         * Creates this cipher in decryption mode.
			         *
			         * @param {WordArray} key The key.
			         * @param {Object} cfg (Optional) The configuration options to use for this operation.
			         *
			         * @return {Cipher} A cipher instance.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
			         */
			        createDecryptor: function (key, cfg) {
			            return this.create(this._DEC_XFORM_MODE, key, cfg);
			        },

			        /**
			         * Initializes a newly created cipher.
			         *
			         * @param {number} xformMode Either the encryption or decryption transormation mode constant.
			         * @param {WordArray} key The key.
			         * @param {Object} cfg (Optional) The configuration options to use for this operation.
			         *
			         * @example
			         *
			         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
			         */
			        init: function (xformMode, key, cfg) {
			            // Apply config defaults
			            this.cfg = this.cfg.extend(cfg);

			            // Store transform mode and key
			            this._xformMode = xformMode;
			            this._key = key;

			            // Set initial values
			            this.reset();
			        },

			        /**
			         * Resets this cipher to its initial state.
			         *
			         * @example
			         *
			         *     cipher.reset();
			         */
			        reset: function () {
			            // Reset data buffer
			            BufferedBlockAlgorithm.reset.call(this);

			            // Perform concrete-cipher logic
			            this._doReset();
			        },

			        /**
			         * Adds data to be encrypted or decrypted.
			         *
			         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
			         *
			         * @return {WordArray} The data after processing.
			         *
			         * @example
			         *
			         *     var encrypted = cipher.process('data');
			         *     var encrypted = cipher.process(wordArray);
			         */
			        process: function (dataUpdate) {
			            // Append
			            this._append(dataUpdate);

			            // Process available blocks
			            return this._process();
			        },

			        /**
			         * Finalizes the encryption or decryption process.
			         * Note that the finalize operation is effectively a destructive, read-once operation.
			         *
			         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
			         *
			         * @return {WordArray} The data after final processing.
			         *
			         * @example
			         *
			         *     var encrypted = cipher.finalize();
			         *     var encrypted = cipher.finalize('data');
			         *     var encrypted = cipher.finalize(wordArray);
			         */
			        finalize: function (dataUpdate) {
			            // Final data update
			            if (dataUpdate) {
			                this._append(dataUpdate);
			            }

			            // Perform concrete-cipher logic
			            var finalProcessedData = this._doFinalize();

			            return finalProcessedData;
			        },

			        keySize: 128/32,

			        ivSize: 128/32,

			        _ENC_XFORM_MODE: 1,

			        _DEC_XFORM_MODE: 2,

			        /**
			         * Creates shortcut functions to a cipher's object interface.
			         *
			         * @param {Cipher} cipher The cipher to create a helper for.
			         *
			         * @return {Object} An object with encrypt and decrypt shortcut functions.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
			         */
			        _createHelper: (function () {
			            function selectCipherStrategy(key) {
			                if (typeof key == 'string') {
			                    return PasswordBasedCipher;
			                } else {
			                    return SerializableCipher;
			                }
			            }

			            return function (cipher) {
			                return {
			                    encrypt: function (message, key, cfg) {
			                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
			                    },

			                    decrypt: function (ciphertext, key, cfg) {
			                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
			                    }
			                };
			            };
			        }())
			    });

			    /**
			     * Abstract base stream cipher template.
			     *
			     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
			     */
			    C_lib.StreamCipher = Cipher.extend({
			        _doFinalize: function () {
			            // Process partial blocks
			            var finalProcessedBlocks = this._process(!!'flush');

			            return finalProcessedBlocks;
			        },

			        blockSize: 1
			    });

			    /**
			     * Mode namespace.
			     */
			    var C_mode = C.mode = {};

			    /**
			     * Abstract base block cipher mode template.
			     */
			    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
			        /**
			         * Creates this mode for encryption.
			         *
			         * @param {Cipher} cipher A block cipher instance.
			         * @param {Array} iv The IV words.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
			         */
			        createEncryptor: function (cipher, iv) {
			            return this.Encryptor.create(cipher, iv);
			        },

			        /**
			         * Creates this mode for decryption.
			         *
			         * @param {Cipher} cipher A block cipher instance.
			         * @param {Array} iv The IV words.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
			         */
			        createDecryptor: function (cipher, iv) {
			            return this.Decryptor.create(cipher, iv);
			        },

			        /**
			         * Initializes a newly created mode.
			         *
			         * @param {Cipher} cipher A block cipher instance.
			         * @param {Array} iv The IV words.
			         *
			         * @example
			         *
			         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
			         */
			        init: function (cipher, iv) {
			            this._cipher = cipher;
			            this._iv = iv;
			        }
			    });

			    /**
			     * Cipher Block Chaining mode.
			     */
			    var CBC = C_mode.CBC = (function () {
			        /**
			         * Abstract base CBC mode.
			         */
			        var CBC = BlockCipherMode.extend();

			        /**
			         * CBC encryptor.
			         */
			        CBC.Encryptor = CBC.extend({
			            /**
			             * Processes the data block at offset.
			             *
			             * @param {Array} words The data words to operate on.
			             * @param {number} offset The offset where the block starts.
			             *
			             * @example
			             *
			             *     mode.processBlock(data.words, offset);
			             */
			            processBlock: function (words, offset) {
			                // Shortcuts
			                var cipher = this._cipher;
			                var blockSize = cipher.blockSize;

			                // XOR and encrypt
			                xorBlock.call(this, words, offset, blockSize);
			                cipher.encryptBlock(words, offset);

			                // Remember this block to use with next block
			                this._prevBlock = words.slice(offset, offset + blockSize);
			            }
			        });

			        /**
			         * CBC decryptor.
			         */
			        CBC.Decryptor = CBC.extend({
			            /**
			             * Processes the data block at offset.
			             *
			             * @param {Array} words The data words to operate on.
			             * @param {number} offset The offset where the block starts.
			             *
			             * @example
			             *
			             *     mode.processBlock(data.words, offset);
			             */
			            processBlock: function (words, offset) {
			                // Shortcuts
			                var cipher = this._cipher;
			                var blockSize = cipher.blockSize;

			                // Remember this block to use with next block
			                var thisBlock = words.slice(offset, offset + blockSize);

			                // Decrypt and XOR
			                cipher.decryptBlock(words, offset);
			                xorBlock.call(this, words, offset, blockSize);

			                // This block becomes the previous block
			                this._prevBlock = thisBlock;
			            }
			        });

			        function xorBlock(words, offset, blockSize) {
			            var block;

			            // Shortcut
			            var iv = this._iv;

			            // Choose mixing block
			            if (iv) {
			                block = iv;

			                // Remove IV for subsequent blocks
			                this._iv = undefined$1;
			            } else {
			                block = this._prevBlock;
			            }

			            // XOR blocks
			            for (var i = 0; i < blockSize; i++) {
			                words[offset + i] ^= block[i];
			            }
			        }

			        return CBC;
			    }());

			    /**
			     * Padding namespace.
			     */
			    var C_pad = C.pad = {};

			    /**
			     * PKCS #5/7 padding strategy.
			     */
			    var Pkcs7 = C_pad.Pkcs7 = {
			        /**
			         * Pads data using the algorithm defined in PKCS #5/7.
			         *
			         * @param {WordArray} data The data to pad.
			         * @param {number} blockSize The multiple that the data should be padded to.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
			         */
			        pad: function (data, blockSize) {
			            // Shortcut
			            var blockSizeBytes = blockSize * 4;

			            // Count padding bytes
			            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

			            // Create padding word
			            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;

			            // Create padding
			            var paddingWords = [];
			            for (var i = 0; i < nPaddingBytes; i += 4) {
			                paddingWords.push(paddingWord);
			            }
			            var padding = WordArray.create(paddingWords, nPaddingBytes);

			            // Add padding
			            data.concat(padding);
			        },

			        /**
			         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
			         *
			         * @param {WordArray} data The data to unpad.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     CryptoJS.pad.Pkcs7.unpad(wordArray);
			         */
			        unpad: function (data) {
			            // Get number of padding bytes from last byte
			            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

			            // Remove padding
			            data.sigBytes -= nPaddingBytes;
			        }
			    };

			    /**
			     * Abstract base block cipher template.
			     *
			     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
			     */
			    C_lib.BlockCipher = Cipher.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {Mode} mode The block mode to use. Default: CBC
			         * @property {Padding} padding The padding strategy to use. Default: Pkcs7
			         */
			        cfg: Cipher.cfg.extend({
			            mode: CBC,
			            padding: Pkcs7
			        }),

			        reset: function () {
			            var modeCreator;

			            // Reset cipher
			            Cipher.reset.call(this);

			            // Shortcuts
			            var cfg = this.cfg;
			            var iv = cfg.iv;
			            var mode = cfg.mode;

			            // Reset block mode
			            if (this._xformMode == this._ENC_XFORM_MODE) {
			                modeCreator = mode.createEncryptor;
			            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
			                modeCreator = mode.createDecryptor;
			                // Keep at least one block in the buffer for unpadding
			                this._minBufferSize = 1;
			            }

			            if (this._mode && this._mode.__creator == modeCreator) {
			                this._mode.init(this, iv && iv.words);
			            } else {
			                this._mode = modeCreator.call(mode, this, iv && iv.words);
			                this._mode.__creator = modeCreator;
			            }
			        },

			        _doProcessBlock: function (words, offset) {
			            this._mode.processBlock(words, offset);
			        },

			        _doFinalize: function () {
			            var finalProcessedBlocks;

			            // Shortcut
			            var padding = this.cfg.padding;

			            // Finalize
			            if (this._xformMode == this._ENC_XFORM_MODE) {
			                // Pad data
			                padding.pad(this._data, this.blockSize);

			                // Process final blocks
			                finalProcessedBlocks = this._process(!!'flush');
			            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
			                // Process final blocks
			                finalProcessedBlocks = this._process(!!'flush');

			                // Unpad data
			                padding.unpad(finalProcessedBlocks);
			            }

			            return finalProcessedBlocks;
			        },

			        blockSize: 128/32
			    });

			    /**
			     * A collection of cipher parameters.
			     *
			     * @property {WordArray} ciphertext The raw ciphertext.
			     * @property {WordArray} key The key to this ciphertext.
			     * @property {WordArray} iv The IV used in the ciphering operation.
			     * @property {WordArray} salt The salt used with a key derivation function.
			     * @property {Cipher} algorithm The cipher algorithm.
			     * @property {Mode} mode The block mode used in the ciphering operation.
			     * @property {Padding} padding The padding scheme used in the ciphering operation.
			     * @property {number} blockSize The block size of the cipher.
			     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
			     */
			    var CipherParams = C_lib.CipherParams = Base.extend({
			        /**
			         * Initializes a newly created cipher params object.
			         *
			         * @param {Object} cipherParams An object with any of the possible cipher parameters.
			         *
			         * @example
			         *
			         *     var cipherParams = CryptoJS.lib.CipherParams.create({
			         *         ciphertext: ciphertextWordArray,
			         *         key: keyWordArray,
			         *         iv: ivWordArray,
			         *         salt: saltWordArray,
			         *         algorithm: CryptoJS.algo.AES,
			         *         mode: CryptoJS.mode.CBC,
			         *         padding: CryptoJS.pad.PKCS7,
			         *         blockSize: 4,
			         *         formatter: CryptoJS.format.OpenSSL
			         *     });
			         */
			        init: function (cipherParams) {
			            this.mixIn(cipherParams);
			        },

			        /**
			         * Converts this cipher params object to a string.
			         *
			         * @param {Format} formatter (Optional) The formatting strategy to use.
			         *
			         * @return {string} The stringified cipher params.
			         *
			         * @throws Error If neither the formatter nor the default formatter is set.
			         *
			         * @example
			         *
			         *     var string = cipherParams + '';
			         *     var string = cipherParams.toString();
			         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
			         */
			        toString: function (formatter) {
			            return (formatter || this.formatter).stringify(this);
			        }
			    });

			    /**
			     * Format namespace.
			     */
			    var C_format = C.format = {};

			    /**
			     * OpenSSL formatting strategy.
			     */
			    var OpenSSLFormatter = C_format.OpenSSL = {
			        /**
			         * Converts a cipher params object to an OpenSSL-compatible string.
			         *
			         * @param {CipherParams} cipherParams The cipher params object.
			         *
			         * @return {string} The OpenSSL-compatible string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
			         */
			        stringify: function (cipherParams) {
			            var wordArray;

			            // Shortcuts
			            var ciphertext = cipherParams.ciphertext;
			            var salt = cipherParams.salt;

			            // Format
			            if (salt) {
			                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
			            } else {
			                wordArray = ciphertext;
			            }

			            return wordArray.toString(Base64);
			        },

			        /**
			         * Converts an OpenSSL-compatible string to a cipher params object.
			         *
			         * @param {string} openSSLStr The OpenSSL-compatible string.
			         *
			         * @return {CipherParams} The cipher params object.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
			         */
			        parse: function (openSSLStr) {
			            var salt;

			            // Parse base64
			            var ciphertext = Base64.parse(openSSLStr);

			            // Shortcut
			            var ciphertextWords = ciphertext.words;

			            // Test for salt
			            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
			                // Extract salt
			                salt = WordArray.create(ciphertextWords.slice(2, 4));

			                // Remove salt from ciphertext
			                ciphertextWords.splice(0, 4);
			                ciphertext.sigBytes -= 16;
			            }

			            return CipherParams.create({ ciphertext: ciphertext, salt: salt });
			        }
			    };

			    /**
			     * A cipher wrapper that returns ciphertext as a serializable cipher params object.
			     */
			    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
			         */
			        cfg: Base.extend({
			            format: OpenSSLFormatter
			        }),

			        /**
			         * Encrypts a message.
			         *
			         * @param {Cipher} cipher The cipher algorithm to use.
			         * @param {WordArray|string} message The message to encrypt.
			         * @param {WordArray} key The key.
			         * @param {Object} cfg (Optional) The configuration options to use for this operation.
			         *
			         * @return {CipherParams} A cipher params object.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
			         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
			         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
			         */
			        encrypt: function (cipher, message, key, cfg) {
			            // Apply config defaults
			            cfg = this.cfg.extend(cfg);

			            // Encrypt
			            var encryptor = cipher.createEncryptor(key, cfg);
			            var ciphertext = encryptor.finalize(message);

			            // Shortcut
			            var cipherCfg = encryptor.cfg;

			            // Create and return serializable cipher params
			            return CipherParams.create({
			                ciphertext: ciphertext,
			                key: key,
			                iv: cipherCfg.iv,
			                algorithm: cipher,
			                mode: cipherCfg.mode,
			                padding: cipherCfg.padding,
			                blockSize: cipher.blockSize,
			                formatter: cfg.format
			            });
			        },

			        /**
			         * Decrypts serialized ciphertext.
			         *
			         * @param {Cipher} cipher The cipher algorithm to use.
			         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
			         * @param {WordArray} key The key.
			         * @param {Object} cfg (Optional) The configuration options to use for this operation.
			         *
			         * @return {WordArray} The plaintext.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
			         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
			         */
			        decrypt: function (cipher, ciphertext, key, cfg) {
			            // Apply config defaults
			            cfg = this.cfg.extend(cfg);

			            // Convert string to CipherParams
			            ciphertext = this._parse(ciphertext, cfg.format);

			            // Decrypt
			            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

			            return plaintext;
			        },

			        /**
			         * Converts serialized ciphertext to CipherParams,
			         * else assumed CipherParams already and returns ciphertext unchanged.
			         *
			         * @param {CipherParams|string} ciphertext The ciphertext.
			         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
			         *
			         * @return {CipherParams} The unserialized ciphertext.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
			         */
			        _parse: function (ciphertext, format) {
			            if (typeof ciphertext == 'string') {
			                return format.parse(ciphertext, this);
			            } else {
			                return ciphertext;
			            }
			        }
			    });

			    /**
			     * Key derivation function namespace.
			     */
			    var C_kdf = C.kdf = {};

			    /**
			     * OpenSSL key derivation function.
			     */
			    var OpenSSLKdf = C_kdf.OpenSSL = {
			        /**
			         * Derives a key and IV from a password.
			         *
			         * @param {string} password The password to derive from.
			         * @param {number} keySize The size in words of the key to generate.
			         * @param {number} ivSize The size in words of the IV to generate.
			         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
			         *
			         * @return {CipherParams} A cipher params object with the key, IV, and salt.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
			         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
			         */
			        execute: function (password, keySize, ivSize, salt, hasher) {
			            // Generate random salt
			            if (!salt) {
			                salt = WordArray.random(64/8);
			            }

			            // Derive key and IV
			            if (!hasher) {
			                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);
			            } else {
			                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);
			            }


			            // Separate key and IV
			            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
			            key.sigBytes = keySize * 4;

			            // Return params
			            return CipherParams.create({ key: key, iv: iv, salt: salt });
			        }
			    };

			    /**
			     * A serializable cipher wrapper that derives the key from a password,
			     * and returns ciphertext as a serializable cipher params object.
			     */
			    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
			         */
			        cfg: SerializableCipher.cfg.extend({
			            kdf: OpenSSLKdf
			        }),

			        /**
			         * Encrypts a message using a password.
			         *
			         * @param {Cipher} cipher The cipher algorithm to use.
			         * @param {WordArray|string} message The message to encrypt.
			         * @param {string} password The password.
			         * @param {Object} cfg (Optional) The configuration options to use for this operation.
			         *
			         * @return {CipherParams} A cipher params object.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
			         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
			         */
			        encrypt: function (cipher, message, password, cfg) {
			            // Apply config defaults
			            cfg = this.cfg.extend(cfg);

			            // Derive key and other params
			            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);

			            // Add IV to config
			            cfg.iv = derivedParams.iv;

			            // Encrypt
			            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

			            // Mix in derived params
			            ciphertext.mixIn(derivedParams);

			            return ciphertext;
			        },

			        /**
			         * Decrypts serialized ciphertext using a password.
			         *
			         * @param {Cipher} cipher The cipher algorithm to use.
			         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
			         * @param {string} password The password.
			         * @param {Object} cfg (Optional) The configuration options to use for this operation.
			         *
			         * @return {WordArray} The plaintext.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
			         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
			         */
			        decrypt: function (cipher, ciphertext, password, cfg) {
			            // Apply config defaults
			            cfg = this.cfg.extend(cfg);

			            // Convert string to CipherParams
			            ciphertext = this._parse(ciphertext, cfg.format);

			            // Derive key and other params
			            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);

			            // Add IV to config
			            cfg.iv = derivedParams.iv;

			            // Decrypt
			            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

			            return plaintext;
			        }
			    });
			}());


		})); 
	} (cipherCore));
	return cipherCore.exports;
}

var modeCfb = {exports: {}};

var hasRequiredModeCfb;

function requireModeCfb () {
	if (hasRequiredModeCfb) return modeCfb.exports;
	hasRequiredModeCfb = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * Cipher Feedback block mode.
			 */
			CryptoJS.mode.CFB = (function () {
			    var CFB = CryptoJS.lib.BlockCipherMode.extend();

			    CFB.Encryptor = CFB.extend({
			        processBlock: function (words, offset) {
			            // Shortcuts
			            var cipher = this._cipher;
			            var blockSize = cipher.blockSize;

			            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

			            // Remember this block to use with next block
			            this._prevBlock = words.slice(offset, offset + blockSize);
			        }
			    });

			    CFB.Decryptor = CFB.extend({
			        processBlock: function (words, offset) {
			            // Shortcuts
			            var cipher = this._cipher;
			            var blockSize = cipher.blockSize;

			            // Remember this block to use with next block
			            var thisBlock = words.slice(offset, offset + blockSize);

			            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

			            // This block becomes the previous block
			            this._prevBlock = thisBlock;
			        }
			    });

			    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
			        var keystream;

			        // Shortcut
			        var iv = this._iv;

			        // Generate keystream
			        if (iv) {
			            keystream = iv.slice(0);

			            // Remove IV for subsequent blocks
			            this._iv = undefined;
			        } else {
			            keystream = this._prevBlock;
			        }
			        cipher.encryptBlock(keystream, 0);

			        // Encrypt
			        for (var i = 0; i < blockSize; i++) {
			            words[offset + i] ^= keystream[i];
			        }
			    }

			    return CFB;
			}());


			return CryptoJS.mode.CFB;

		})); 
	} (modeCfb));
	return modeCfb.exports;
}

var modeCtr = {exports: {}};

var hasRequiredModeCtr;

function requireModeCtr () {
	if (hasRequiredModeCtr) return modeCtr.exports;
	hasRequiredModeCtr = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * Counter block mode.
			 */
			CryptoJS.mode.CTR = (function () {
			    var CTR = CryptoJS.lib.BlockCipherMode.extend();

			    var Encryptor = CTR.Encryptor = CTR.extend({
			        processBlock: function (words, offset) {
			            // Shortcuts
			            var cipher = this._cipher;
			            var blockSize = cipher.blockSize;
			            var iv = this._iv;
			            var counter = this._counter;

			            // Generate keystream
			            if (iv) {
			                counter = this._counter = iv.slice(0);

			                // Remove IV for subsequent blocks
			                this._iv = undefined;
			            }
			            var keystream = counter.slice(0);
			            cipher.encryptBlock(keystream, 0);

			            // Increment counter
			            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;

			            // Encrypt
			            for (var i = 0; i < blockSize; i++) {
			                words[offset + i] ^= keystream[i];
			            }
			        }
			    });

			    CTR.Decryptor = Encryptor;

			    return CTR;
			}());


			return CryptoJS.mode.CTR;

		})); 
	} (modeCtr));
	return modeCtr.exports;
}

var modeCtrGladman = {exports: {}};

var hasRequiredModeCtrGladman;

function requireModeCtrGladman () {
	if (hasRequiredModeCtrGladman) return modeCtrGladman.exports;
	hasRequiredModeCtrGladman = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/** @preserve
			 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
			 * derived from CryptoJS.mode.CTR
			 * Jan Hruby jhruby.web@gmail.com
			 */
			CryptoJS.mode.CTRGladman = (function () {
			    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

				function incWord(word)
				{
					if (((word >> 24) & 0xff) === 0xff) { //overflow
					var b1 = (word >> 16)&0xff;
					var b2 = (word >> 8)&0xff;
					var b3 = word & 0xff;

					if (b1 === 0xff) // overflow b1
					{
					b1 = 0;
					if (b2 === 0xff)
					{
						b2 = 0;
						if (b3 === 0xff)
						{
							b3 = 0;
						}
						else
						{
							++b3;
						}
					}
					else
					{
						++b2;
					}
					}
					else
					{
					++b1;
					}

					word = 0;
					word += (b1 << 16);
					word += (b2 << 8);
					word += b3;
					}
					else
					{
					word += (0x01 << 24);
					}
					return word;
				}

				function incCounter(counter)
				{
					if ((counter[0] = incWord(counter[0])) === 0)
					{
						// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
						counter[1] = incWord(counter[1]);
					}
					return counter;
				}

			    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
			        processBlock: function (words, offset) {
			            // Shortcuts
			            var cipher = this._cipher;
			            var blockSize = cipher.blockSize;
			            var iv = this._iv;
			            var counter = this._counter;

			            // Generate keystream
			            if (iv) {
			                counter = this._counter = iv.slice(0);

			                // Remove IV for subsequent blocks
			                this._iv = undefined;
			            }

						incCounter(counter);

						var keystream = counter.slice(0);
			            cipher.encryptBlock(keystream, 0);

			            // Encrypt
			            for (var i = 0; i < blockSize; i++) {
			                words[offset + i] ^= keystream[i];
			            }
			        }
			    });

			    CTRGladman.Decryptor = Encryptor;

			    return CTRGladman;
			}());




			return CryptoJS.mode.CTRGladman;

		})); 
	} (modeCtrGladman));
	return modeCtrGladman.exports;
}

var modeOfb = {exports: {}};

var hasRequiredModeOfb;

function requireModeOfb () {
	if (hasRequiredModeOfb) return modeOfb.exports;
	hasRequiredModeOfb = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * Output Feedback block mode.
			 */
			CryptoJS.mode.OFB = (function () {
			    var OFB = CryptoJS.lib.BlockCipherMode.extend();

			    var Encryptor = OFB.Encryptor = OFB.extend({
			        processBlock: function (words, offset) {
			            // Shortcuts
			            var cipher = this._cipher;
			            var blockSize = cipher.blockSize;
			            var iv = this._iv;
			            var keystream = this._keystream;

			            // Generate keystream
			            if (iv) {
			                keystream = this._keystream = iv.slice(0);

			                // Remove IV for subsequent blocks
			                this._iv = undefined;
			            }
			            cipher.encryptBlock(keystream, 0);

			            // Encrypt
			            for (var i = 0; i < blockSize; i++) {
			                words[offset + i] ^= keystream[i];
			            }
			        }
			    });

			    OFB.Decryptor = Encryptor;

			    return OFB;
			}());


			return CryptoJS.mode.OFB;

		})); 
	} (modeOfb));
	return modeOfb.exports;
}

var modeEcb = {exports: {}};

var hasRequiredModeEcb;

function requireModeEcb () {
	if (hasRequiredModeEcb) return modeEcb.exports;
	hasRequiredModeEcb = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * Electronic Codebook block mode.
			 */
			CryptoJS.mode.ECB = (function () {
			    var ECB = CryptoJS.lib.BlockCipherMode.extend();

			    ECB.Encryptor = ECB.extend({
			        processBlock: function (words, offset) {
			            this._cipher.encryptBlock(words, offset);
			        }
			    });

			    ECB.Decryptor = ECB.extend({
			        processBlock: function (words, offset) {
			            this._cipher.decryptBlock(words, offset);
			        }
			    });

			    return ECB;
			}());


			return CryptoJS.mode.ECB;

		})); 
	} (modeEcb));
	return modeEcb.exports;
}

var padAnsix923 = {exports: {}};

var hasRequiredPadAnsix923;

function requirePadAnsix923 () {
	if (hasRequiredPadAnsix923) return padAnsix923.exports;
	hasRequiredPadAnsix923 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * ANSI X.923 padding strategy.
			 */
			CryptoJS.pad.AnsiX923 = {
			    pad: function (data, blockSize) {
			        // Shortcuts
			        var dataSigBytes = data.sigBytes;
			        var blockSizeBytes = blockSize * 4;

			        // Count padding bytes
			        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

			        // Compute last byte position
			        var lastBytePos = dataSigBytes + nPaddingBytes - 1;

			        // Pad
			        data.clamp();
			        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);
			        data.sigBytes += nPaddingBytes;
			    },

			    unpad: function (data) {
			        // Get number of padding bytes from last byte
			        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

			        // Remove padding
			        data.sigBytes -= nPaddingBytes;
			    }
			};


			return CryptoJS.pad.Ansix923;

		})); 
	} (padAnsix923));
	return padAnsix923.exports;
}

var padIso10126 = {exports: {}};

var hasRequiredPadIso10126;

function requirePadIso10126 () {
	if (hasRequiredPadIso10126) return padIso10126.exports;
	hasRequiredPadIso10126 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * ISO 10126 padding strategy.
			 */
			CryptoJS.pad.Iso10126 = {
			    pad: function (data, blockSize) {
			        // Shortcut
			        var blockSizeBytes = blockSize * 4;

			        // Count padding bytes
			        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

			        // Pad
			        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
			             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
			    },

			    unpad: function (data) {
			        // Get number of padding bytes from last byte
			        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

			        // Remove padding
			        data.sigBytes -= nPaddingBytes;
			    }
			};


			return CryptoJS.pad.Iso10126;

		})); 
	} (padIso10126));
	return padIso10126.exports;
}

var padIso97971 = {exports: {}};

var hasRequiredPadIso97971;

function requirePadIso97971 () {
	if (hasRequiredPadIso97971) return padIso97971.exports;
	hasRequiredPadIso97971 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * ISO/IEC 9797-1 Padding Method 2.
			 */
			CryptoJS.pad.Iso97971 = {
			    pad: function (data, blockSize) {
			        // Add 0x80 byte
			        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

			        // Zero pad the rest
			        CryptoJS.pad.ZeroPadding.pad(data, blockSize);
			    },

			    unpad: function (data) {
			        // Remove zero padding
			        CryptoJS.pad.ZeroPadding.unpad(data);

			        // Remove one more byte -- the 0x80 byte
			        data.sigBytes--;
			    }
			};


			return CryptoJS.pad.Iso97971;

		})); 
	} (padIso97971));
	return padIso97971.exports;
}

var padZeropadding = {exports: {}};

var hasRequiredPadZeropadding;

function requirePadZeropadding () {
	if (hasRequiredPadZeropadding) return padZeropadding.exports;
	hasRequiredPadZeropadding = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * Zero padding strategy.
			 */
			CryptoJS.pad.ZeroPadding = {
			    pad: function (data, blockSize) {
			        // Shortcut
			        var blockSizeBytes = blockSize * 4;

			        // Pad
			        data.clamp();
			        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);
			    },

			    unpad: function (data) {
			        // Shortcut
			        var dataWords = data.words;

			        // Unpad
			        var i = data.sigBytes - 1;
			        for (var i = data.sigBytes - 1; i >= 0; i--) {
			            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {
			                data.sigBytes = i + 1;
			                break;
			            }
			        }
			    }
			};


			return CryptoJS.pad.ZeroPadding;

		})); 
	} (padZeropadding));
	return padZeropadding.exports;
}

var padNopadding = {exports: {}};

var hasRequiredPadNopadding;

function requirePadNopadding () {
	if (hasRequiredPadNopadding) return padNopadding.exports;
	hasRequiredPadNopadding = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			/**
			 * A noop padding strategy.
			 */
			CryptoJS.pad.NoPadding = {
			    pad: function () {
			    },

			    unpad: function () {
			    }
			};


			return CryptoJS.pad.NoPadding;

		})); 
	} (padNopadding));
	return padNopadding.exports;
}

var formatHex = {exports: {}};

var hasRequiredFormatHex;

function requireFormatHex () {
	if (hasRequiredFormatHex) return formatHex.exports;
	hasRequiredFormatHex = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function (undefined$1) {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var CipherParams = C_lib.CipherParams;
			    var C_enc = C.enc;
			    var Hex = C_enc.Hex;
			    var C_format = C.format;

			    C_format.Hex = {
			        /**
			         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
			         *
			         * @param {CipherParams} cipherParams The cipher params object.
			         *
			         * @return {string} The hexadecimally encoded string.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
			         */
			        stringify: function (cipherParams) {
			            return cipherParams.ciphertext.toString(Hex);
			        },

			        /**
			         * Converts a hexadecimally encoded ciphertext string to a cipher params object.
			         *
			         * @param {string} input The hexadecimally encoded string.
			         *
			         * @return {CipherParams} The cipher params object.
			         *
			         * @static
			         *
			         * @example
			         *
			         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
			         */
			        parse: function (input) {
			            var ciphertext = Hex.parse(input);
			            return CipherParams.create({ ciphertext: ciphertext });
			        }
			    };
			}());


			return CryptoJS.format.Hex;

		})); 
	} (formatHex));
	return formatHex.exports;
}

var aes = {exports: {}};

var hasRequiredAes;

function requireAes () {
	if (hasRequiredAes) return aes.exports;
	hasRequiredAes = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var BlockCipher = C_lib.BlockCipher;
			    var C_algo = C.algo;

			    // Lookup tables
			    var SBOX = [];
			    var INV_SBOX = [];
			    var SUB_MIX_0 = [];
			    var SUB_MIX_1 = [];
			    var SUB_MIX_2 = [];
			    var SUB_MIX_3 = [];
			    var INV_SUB_MIX_0 = [];
			    var INV_SUB_MIX_1 = [];
			    var INV_SUB_MIX_2 = [];
			    var INV_SUB_MIX_3 = [];

			    // Compute lookup tables
			    (function () {
			        // Compute double table
			        var d = [];
			        for (var i = 0; i < 256; i++) {
			            if (i < 128) {
			                d[i] = i << 1;
			            } else {
			                d[i] = (i << 1) ^ 0x11b;
			            }
			        }

			        // Walk GF(2^8)
			        var x = 0;
			        var xi = 0;
			        for (var i = 0; i < 256; i++) {
			            // Compute sbox
			            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
			            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
			            SBOX[x] = sx;
			            INV_SBOX[sx] = x;

			            // Compute multiplication
			            var x2 = d[x];
			            var x4 = d[x2];
			            var x8 = d[x4];

			            // Compute sub bytes, mix columns tables
			            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);
			            SUB_MIX_0[x] = (t << 24) | (t >>> 8);
			            SUB_MIX_1[x] = (t << 16) | (t >>> 16);
			            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);
			            SUB_MIX_3[x] = t;

			            // Compute inv sub bytes, inv mix columns tables
			            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);
			            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);
			            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);
			            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);
			            INV_SUB_MIX_3[sx] = t;

			            // Compute next counter
			            if (!x) {
			                x = xi = 1;
			            } else {
			                x = x2 ^ d[d[d[x8 ^ x2]]];
			                xi ^= d[d[xi]];
			            }
			        }
			    }());

			    // Precomputed Rcon lookup
			    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

			    /**
			     * AES block cipher algorithm.
			     */
			    var AES = C_algo.AES = BlockCipher.extend({
			        _doReset: function () {
			            var t;

			            // Skip reset of nRounds has been set before and key did not change
			            if (this._nRounds && this._keyPriorReset === this._key) {
			                return;
			            }

			            // Shortcuts
			            var key = this._keyPriorReset = this._key;
			            var keyWords = key.words;
			            var keySize = key.sigBytes / 4;

			            // Compute number of rounds
			            var nRounds = this._nRounds = keySize + 6;

			            // Compute number of key schedule rows
			            var ksRows = (nRounds + 1) * 4;

			            // Compute key schedule
			            var keySchedule = this._keySchedule = [];
			            for (var ksRow = 0; ksRow < ksRows; ksRow++) {
			                if (ksRow < keySize) {
			                    keySchedule[ksRow] = keyWords[ksRow];
			                } else {
			                    t = keySchedule[ksRow - 1];

			                    if (!(ksRow % keySize)) {
			                        // Rot word
			                        t = (t << 8) | (t >>> 24);

			                        // Sub word
			                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];

			                        // Mix Rcon
			                        t ^= RCON[(ksRow / keySize) | 0] << 24;
			                    } else if (keySize > 6 && ksRow % keySize == 4) {
			                        // Sub word
			                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];
			                    }

			                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
			                }
			            }

			            // Compute inv key schedule
			            var invKeySchedule = this._invKeySchedule = [];
			            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
			                var ksRow = ksRows - invKsRow;

			                if (invKsRow % 4) {
			                    var t = keySchedule[ksRow];
			                } else {
			                    var t = keySchedule[ksRow - 4];
			                }

			                if (invKsRow < 4 || ksRow <= 4) {
			                    invKeySchedule[invKsRow] = t;
			                } else {
			                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^
			                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
			                }
			            }
			        },

			        encryptBlock: function (M, offset) {
			            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
			        },

			        decryptBlock: function (M, offset) {
			            // Swap 2nd and 4th rows
			            var t = M[offset + 1];
			            M[offset + 1] = M[offset + 3];
			            M[offset + 3] = t;

			            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

			            // Inv swap 2nd and 4th rows
			            var t = M[offset + 1];
			            M[offset + 1] = M[offset + 3];
			            M[offset + 3] = t;
			        },

			        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
			            // Shortcut
			            var nRounds = this._nRounds;

			            // Get input, add round key
			            var s0 = M[offset]     ^ keySchedule[0];
			            var s1 = M[offset + 1] ^ keySchedule[1];
			            var s2 = M[offset + 2] ^ keySchedule[2];
			            var s3 = M[offset + 3] ^ keySchedule[3];

			            // Key schedule row counter
			            var ksRow = 4;

			            // Rounds
			            for (var round = 1; round < nRounds; round++) {
			                // Shift rows, sub bytes, mix columns, add round key
			                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
			                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
			                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
			                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

			                // Update state
			                s0 = t0;
			                s1 = t1;
			                s2 = t2;
			                s3 = t3;
			            }

			            // Shift rows, sub bytes, add round key
			            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
			            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
			            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
			            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

			            // Set output
			            M[offset]     = t0;
			            M[offset + 1] = t1;
			            M[offset + 2] = t2;
			            M[offset + 3] = t3;
			        },

			        keySize: 256/32
			    });

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
			     */
			    C.AES = BlockCipher._createHelper(AES);
			}());


			return CryptoJS.AES;

		})); 
	} (aes));
	return aes.exports;
}

var tripledes = {exports: {}};

var hasRequiredTripledes;

function requireTripledes () {
	if (hasRequiredTripledes) return tripledes.exports;
	hasRequiredTripledes = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var WordArray = C_lib.WordArray;
			    var BlockCipher = C_lib.BlockCipher;
			    var C_algo = C.algo;

			    // Permuted Choice 1 constants
			    var PC1 = [
			        57, 49, 41, 33, 25, 17, 9,  1,
			        58, 50, 42, 34, 26, 18, 10, 2,
			        59, 51, 43, 35, 27, 19, 11, 3,
			        60, 52, 44, 36, 63, 55, 47, 39,
			        31, 23, 15, 7,  62, 54, 46, 38,
			        30, 22, 14, 6,  61, 53, 45, 37,
			        29, 21, 13, 5,  28, 20, 12, 4
			    ];

			    // Permuted Choice 2 constants
			    var PC2 = [
			        14, 17, 11, 24, 1,  5,
			        3,  28, 15, 6,  21, 10,
			        23, 19, 12, 4,  26, 8,
			        16, 7,  27, 20, 13, 2,
			        41, 52, 31, 37, 47, 55,
			        30, 40, 51, 45, 33, 48,
			        44, 49, 39, 56, 34, 53,
			        46, 42, 50, 36, 29, 32
			    ];

			    // Cumulative bit shift constants
			    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

			    // SBOXes and round permutation constants
			    var SBOX_P = [
			        {
			            0x0: 0x808200,
			            0x10000000: 0x8000,
			            0x20000000: 0x808002,
			            0x30000000: 0x2,
			            0x40000000: 0x200,
			            0x50000000: 0x808202,
			            0x60000000: 0x800202,
			            0x70000000: 0x800000,
			            0x80000000: 0x202,
			            0x90000000: 0x800200,
			            0xa0000000: 0x8200,
			            0xb0000000: 0x808000,
			            0xc0000000: 0x8002,
			            0xd0000000: 0x800002,
			            0xe0000000: 0x0,
			            0xf0000000: 0x8202,
			            0x8000000: 0x0,
			            0x18000000: 0x808202,
			            0x28000000: 0x8202,
			            0x38000000: 0x8000,
			            0x48000000: 0x808200,
			            0x58000000: 0x200,
			            0x68000000: 0x808002,
			            0x78000000: 0x2,
			            0x88000000: 0x800200,
			            0x98000000: 0x8200,
			            0xa8000000: 0x808000,
			            0xb8000000: 0x800202,
			            0xc8000000: 0x800002,
			            0xd8000000: 0x8002,
			            0xe8000000: 0x202,
			            0xf8000000: 0x800000,
			            0x1: 0x8000,
			            0x10000001: 0x2,
			            0x20000001: 0x808200,
			            0x30000001: 0x800000,
			            0x40000001: 0x808002,
			            0x50000001: 0x8200,
			            0x60000001: 0x200,
			            0x70000001: 0x800202,
			            0x80000001: 0x808202,
			            0x90000001: 0x808000,
			            0xa0000001: 0x800002,
			            0xb0000001: 0x8202,
			            0xc0000001: 0x202,
			            0xd0000001: 0x800200,
			            0xe0000001: 0x8002,
			            0xf0000001: 0x0,
			            0x8000001: 0x808202,
			            0x18000001: 0x808000,
			            0x28000001: 0x800000,
			            0x38000001: 0x200,
			            0x48000001: 0x8000,
			            0x58000001: 0x800002,
			            0x68000001: 0x2,
			            0x78000001: 0x8202,
			            0x88000001: 0x8002,
			            0x98000001: 0x800202,
			            0xa8000001: 0x202,
			            0xb8000001: 0x808200,
			            0xc8000001: 0x800200,
			            0xd8000001: 0x0,
			            0xe8000001: 0x8200,
			            0xf8000001: 0x808002
			        },
			        {
			            0x0: 0x40084010,
			            0x1000000: 0x4000,
			            0x2000000: 0x80000,
			            0x3000000: 0x40080010,
			            0x4000000: 0x40000010,
			            0x5000000: 0x40084000,
			            0x6000000: 0x40004000,
			            0x7000000: 0x10,
			            0x8000000: 0x84000,
			            0x9000000: 0x40004010,
			            0xa000000: 0x40000000,
			            0xb000000: 0x84010,
			            0xc000000: 0x80010,
			            0xd000000: 0x0,
			            0xe000000: 0x4010,
			            0xf000000: 0x40080000,
			            0x800000: 0x40004000,
			            0x1800000: 0x84010,
			            0x2800000: 0x10,
			            0x3800000: 0x40004010,
			            0x4800000: 0x40084010,
			            0x5800000: 0x40000000,
			            0x6800000: 0x80000,
			            0x7800000: 0x40080010,
			            0x8800000: 0x80010,
			            0x9800000: 0x0,
			            0xa800000: 0x4000,
			            0xb800000: 0x40080000,
			            0xc800000: 0x40000010,
			            0xd800000: 0x84000,
			            0xe800000: 0x40084000,
			            0xf800000: 0x4010,
			            0x10000000: 0x0,
			            0x11000000: 0x40080010,
			            0x12000000: 0x40004010,
			            0x13000000: 0x40084000,
			            0x14000000: 0x40080000,
			            0x15000000: 0x10,
			            0x16000000: 0x84010,
			            0x17000000: 0x4000,
			            0x18000000: 0x4010,
			            0x19000000: 0x80000,
			            0x1a000000: 0x80010,
			            0x1b000000: 0x40000010,
			            0x1c000000: 0x84000,
			            0x1d000000: 0x40004000,
			            0x1e000000: 0x40000000,
			            0x1f000000: 0x40084010,
			            0x10800000: 0x84010,
			            0x11800000: 0x80000,
			            0x12800000: 0x40080000,
			            0x13800000: 0x4000,
			            0x14800000: 0x40004000,
			            0x15800000: 0x40084010,
			            0x16800000: 0x10,
			            0x17800000: 0x40000000,
			            0x18800000: 0x40084000,
			            0x19800000: 0x40000010,
			            0x1a800000: 0x40004010,
			            0x1b800000: 0x80010,
			            0x1c800000: 0x0,
			            0x1d800000: 0x4010,
			            0x1e800000: 0x40080010,
			            0x1f800000: 0x84000
			        },
			        {
			            0x0: 0x104,
			            0x100000: 0x0,
			            0x200000: 0x4000100,
			            0x300000: 0x10104,
			            0x400000: 0x10004,
			            0x500000: 0x4000004,
			            0x600000: 0x4010104,
			            0x700000: 0x4010000,
			            0x800000: 0x4000000,
			            0x900000: 0x4010100,
			            0xa00000: 0x10100,
			            0xb00000: 0x4010004,
			            0xc00000: 0x4000104,
			            0xd00000: 0x10000,
			            0xe00000: 0x4,
			            0xf00000: 0x100,
			            0x80000: 0x4010100,
			            0x180000: 0x4010004,
			            0x280000: 0x0,
			            0x380000: 0x4000100,
			            0x480000: 0x4000004,
			            0x580000: 0x10000,
			            0x680000: 0x10004,
			            0x780000: 0x104,
			            0x880000: 0x4,
			            0x980000: 0x100,
			            0xa80000: 0x4010000,
			            0xb80000: 0x10104,
			            0xc80000: 0x10100,
			            0xd80000: 0x4000104,
			            0xe80000: 0x4010104,
			            0xf80000: 0x4000000,
			            0x1000000: 0x4010100,
			            0x1100000: 0x10004,
			            0x1200000: 0x10000,
			            0x1300000: 0x4000100,
			            0x1400000: 0x100,
			            0x1500000: 0x4010104,
			            0x1600000: 0x4000004,
			            0x1700000: 0x0,
			            0x1800000: 0x4000104,
			            0x1900000: 0x4000000,
			            0x1a00000: 0x4,
			            0x1b00000: 0x10100,
			            0x1c00000: 0x4010000,
			            0x1d00000: 0x104,
			            0x1e00000: 0x10104,
			            0x1f00000: 0x4010004,
			            0x1080000: 0x4000000,
			            0x1180000: 0x104,
			            0x1280000: 0x4010100,
			            0x1380000: 0x0,
			            0x1480000: 0x10004,
			            0x1580000: 0x4000100,
			            0x1680000: 0x100,
			            0x1780000: 0x4010004,
			            0x1880000: 0x10000,
			            0x1980000: 0x4010104,
			            0x1a80000: 0x10104,
			            0x1b80000: 0x4000004,
			            0x1c80000: 0x4000104,
			            0x1d80000: 0x4010000,
			            0x1e80000: 0x4,
			            0x1f80000: 0x10100
			        },
			        {
			            0x0: 0x80401000,
			            0x10000: 0x80001040,
			            0x20000: 0x401040,
			            0x30000: 0x80400000,
			            0x40000: 0x0,
			            0x50000: 0x401000,
			            0x60000: 0x80000040,
			            0x70000: 0x400040,
			            0x80000: 0x80000000,
			            0x90000: 0x400000,
			            0xa0000: 0x40,
			            0xb0000: 0x80001000,
			            0xc0000: 0x80400040,
			            0xd0000: 0x1040,
			            0xe0000: 0x1000,
			            0xf0000: 0x80401040,
			            0x8000: 0x80001040,
			            0x18000: 0x40,
			            0x28000: 0x80400040,
			            0x38000: 0x80001000,
			            0x48000: 0x401000,
			            0x58000: 0x80401040,
			            0x68000: 0x0,
			            0x78000: 0x80400000,
			            0x88000: 0x1000,
			            0x98000: 0x80401000,
			            0xa8000: 0x400000,
			            0xb8000: 0x1040,
			            0xc8000: 0x80000000,
			            0xd8000: 0x400040,
			            0xe8000: 0x401040,
			            0xf8000: 0x80000040,
			            0x100000: 0x400040,
			            0x110000: 0x401000,
			            0x120000: 0x80000040,
			            0x130000: 0x0,
			            0x140000: 0x1040,
			            0x150000: 0x80400040,
			            0x160000: 0x80401000,
			            0x170000: 0x80001040,
			            0x180000: 0x80401040,
			            0x190000: 0x80000000,
			            0x1a0000: 0x80400000,
			            0x1b0000: 0x401040,
			            0x1c0000: 0x80001000,
			            0x1d0000: 0x400000,
			            0x1e0000: 0x40,
			            0x1f0000: 0x1000,
			            0x108000: 0x80400000,
			            0x118000: 0x80401040,
			            0x128000: 0x0,
			            0x138000: 0x401000,
			            0x148000: 0x400040,
			            0x158000: 0x80000000,
			            0x168000: 0x80001040,
			            0x178000: 0x40,
			            0x188000: 0x80000040,
			            0x198000: 0x1000,
			            0x1a8000: 0x80001000,
			            0x1b8000: 0x80400040,
			            0x1c8000: 0x1040,
			            0x1d8000: 0x80401000,
			            0x1e8000: 0x400000,
			            0x1f8000: 0x401040
			        },
			        {
			            0x0: 0x80,
			            0x1000: 0x1040000,
			            0x2000: 0x40000,
			            0x3000: 0x20000000,
			            0x4000: 0x20040080,
			            0x5000: 0x1000080,
			            0x6000: 0x21000080,
			            0x7000: 0x40080,
			            0x8000: 0x1000000,
			            0x9000: 0x20040000,
			            0xa000: 0x20000080,
			            0xb000: 0x21040080,
			            0xc000: 0x21040000,
			            0xd000: 0x0,
			            0xe000: 0x1040080,
			            0xf000: 0x21000000,
			            0x800: 0x1040080,
			            0x1800: 0x21000080,
			            0x2800: 0x80,
			            0x3800: 0x1040000,
			            0x4800: 0x40000,
			            0x5800: 0x20040080,
			            0x6800: 0x21040000,
			            0x7800: 0x20000000,
			            0x8800: 0x20040000,
			            0x9800: 0x0,
			            0xa800: 0x21040080,
			            0xb800: 0x1000080,
			            0xc800: 0x20000080,
			            0xd800: 0x21000000,
			            0xe800: 0x1000000,
			            0xf800: 0x40080,
			            0x10000: 0x40000,
			            0x11000: 0x80,
			            0x12000: 0x20000000,
			            0x13000: 0x21000080,
			            0x14000: 0x1000080,
			            0x15000: 0x21040000,
			            0x16000: 0x20040080,
			            0x17000: 0x1000000,
			            0x18000: 0x21040080,
			            0x19000: 0x21000000,
			            0x1a000: 0x1040000,
			            0x1b000: 0x20040000,
			            0x1c000: 0x40080,
			            0x1d000: 0x20000080,
			            0x1e000: 0x0,
			            0x1f000: 0x1040080,
			            0x10800: 0x21000080,
			            0x11800: 0x1000000,
			            0x12800: 0x1040000,
			            0x13800: 0x20040080,
			            0x14800: 0x20000000,
			            0x15800: 0x1040080,
			            0x16800: 0x80,
			            0x17800: 0x21040000,
			            0x18800: 0x40080,
			            0x19800: 0x21040080,
			            0x1a800: 0x0,
			            0x1b800: 0x21000000,
			            0x1c800: 0x1000080,
			            0x1d800: 0x40000,
			            0x1e800: 0x20040000,
			            0x1f800: 0x20000080
			        },
			        {
			            0x0: 0x10000008,
			            0x100: 0x2000,
			            0x200: 0x10200000,
			            0x300: 0x10202008,
			            0x400: 0x10002000,
			            0x500: 0x200000,
			            0x600: 0x200008,
			            0x700: 0x10000000,
			            0x800: 0x0,
			            0x900: 0x10002008,
			            0xa00: 0x202000,
			            0xb00: 0x8,
			            0xc00: 0x10200008,
			            0xd00: 0x202008,
			            0xe00: 0x2008,
			            0xf00: 0x10202000,
			            0x80: 0x10200000,
			            0x180: 0x10202008,
			            0x280: 0x8,
			            0x380: 0x200000,
			            0x480: 0x202008,
			            0x580: 0x10000008,
			            0x680: 0x10002000,
			            0x780: 0x2008,
			            0x880: 0x200008,
			            0x980: 0x2000,
			            0xa80: 0x10002008,
			            0xb80: 0x10200008,
			            0xc80: 0x0,
			            0xd80: 0x10202000,
			            0xe80: 0x202000,
			            0xf80: 0x10000000,
			            0x1000: 0x10002000,
			            0x1100: 0x10200008,
			            0x1200: 0x10202008,
			            0x1300: 0x2008,
			            0x1400: 0x200000,
			            0x1500: 0x10000000,
			            0x1600: 0x10000008,
			            0x1700: 0x202000,
			            0x1800: 0x202008,
			            0x1900: 0x0,
			            0x1a00: 0x8,
			            0x1b00: 0x10200000,
			            0x1c00: 0x2000,
			            0x1d00: 0x10002008,
			            0x1e00: 0x10202000,
			            0x1f00: 0x200008,
			            0x1080: 0x8,
			            0x1180: 0x202000,
			            0x1280: 0x200000,
			            0x1380: 0x10000008,
			            0x1480: 0x10002000,
			            0x1580: 0x2008,
			            0x1680: 0x10202008,
			            0x1780: 0x10200000,
			            0x1880: 0x10202000,
			            0x1980: 0x10200008,
			            0x1a80: 0x2000,
			            0x1b80: 0x202008,
			            0x1c80: 0x200008,
			            0x1d80: 0x0,
			            0x1e80: 0x10000000,
			            0x1f80: 0x10002008
			        },
			        {
			            0x0: 0x100000,
			            0x10: 0x2000401,
			            0x20: 0x400,
			            0x30: 0x100401,
			            0x40: 0x2100401,
			            0x50: 0x0,
			            0x60: 0x1,
			            0x70: 0x2100001,
			            0x80: 0x2000400,
			            0x90: 0x100001,
			            0xa0: 0x2000001,
			            0xb0: 0x2100400,
			            0xc0: 0x2100000,
			            0xd0: 0x401,
			            0xe0: 0x100400,
			            0xf0: 0x2000000,
			            0x8: 0x2100001,
			            0x18: 0x0,
			            0x28: 0x2000401,
			            0x38: 0x2100400,
			            0x48: 0x100000,
			            0x58: 0x2000001,
			            0x68: 0x2000000,
			            0x78: 0x401,
			            0x88: 0x100401,
			            0x98: 0x2000400,
			            0xa8: 0x2100000,
			            0xb8: 0x100001,
			            0xc8: 0x400,
			            0xd8: 0x2100401,
			            0xe8: 0x1,
			            0xf8: 0x100400,
			            0x100: 0x2000000,
			            0x110: 0x100000,
			            0x120: 0x2000401,
			            0x130: 0x2100001,
			            0x140: 0x100001,
			            0x150: 0x2000400,
			            0x160: 0x2100400,
			            0x170: 0x100401,
			            0x180: 0x401,
			            0x190: 0x2100401,
			            0x1a0: 0x100400,
			            0x1b0: 0x1,
			            0x1c0: 0x0,
			            0x1d0: 0x2100000,
			            0x1e0: 0x2000001,
			            0x1f0: 0x400,
			            0x108: 0x100400,
			            0x118: 0x2000401,
			            0x128: 0x2100001,
			            0x138: 0x1,
			            0x148: 0x2000000,
			            0x158: 0x100000,
			            0x168: 0x401,
			            0x178: 0x2100400,
			            0x188: 0x2000001,
			            0x198: 0x2100000,
			            0x1a8: 0x0,
			            0x1b8: 0x2100401,
			            0x1c8: 0x100401,
			            0x1d8: 0x400,
			            0x1e8: 0x2000400,
			            0x1f8: 0x100001
			        },
			        {
			            0x0: 0x8000820,
			            0x1: 0x20000,
			            0x2: 0x8000000,
			            0x3: 0x20,
			            0x4: 0x20020,
			            0x5: 0x8020820,
			            0x6: 0x8020800,
			            0x7: 0x800,
			            0x8: 0x8020000,
			            0x9: 0x8000800,
			            0xa: 0x20800,
			            0xb: 0x8020020,
			            0xc: 0x820,
			            0xd: 0x0,
			            0xe: 0x8000020,
			            0xf: 0x20820,
			            0x80000000: 0x800,
			            0x80000001: 0x8020820,
			            0x80000002: 0x8000820,
			            0x80000003: 0x8000000,
			            0x80000004: 0x8020000,
			            0x80000005: 0x20800,
			            0x80000006: 0x20820,
			            0x80000007: 0x20,
			            0x80000008: 0x8000020,
			            0x80000009: 0x820,
			            0x8000000a: 0x20020,
			            0x8000000b: 0x8020800,
			            0x8000000c: 0x0,
			            0x8000000d: 0x8020020,
			            0x8000000e: 0x8000800,
			            0x8000000f: 0x20000,
			            0x10: 0x20820,
			            0x11: 0x8020800,
			            0x12: 0x20,
			            0x13: 0x800,
			            0x14: 0x8000800,
			            0x15: 0x8000020,
			            0x16: 0x8020020,
			            0x17: 0x20000,
			            0x18: 0x0,
			            0x19: 0x20020,
			            0x1a: 0x8020000,
			            0x1b: 0x8000820,
			            0x1c: 0x8020820,
			            0x1d: 0x20800,
			            0x1e: 0x820,
			            0x1f: 0x8000000,
			            0x80000010: 0x20000,
			            0x80000011: 0x800,
			            0x80000012: 0x8020020,
			            0x80000013: 0x20820,
			            0x80000014: 0x20,
			            0x80000015: 0x8020000,
			            0x80000016: 0x8000000,
			            0x80000017: 0x8000820,
			            0x80000018: 0x8020820,
			            0x80000019: 0x8000020,
			            0x8000001a: 0x8000800,
			            0x8000001b: 0x0,
			            0x8000001c: 0x20800,
			            0x8000001d: 0x820,
			            0x8000001e: 0x20020,
			            0x8000001f: 0x8020800
			        }
			    ];

			    // Masks that select the SBOX input
			    var SBOX_MASK = [
			        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
			        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f
			    ];

			    /**
			     * DES block cipher algorithm.
			     */
			    var DES = C_algo.DES = BlockCipher.extend({
			        _doReset: function () {
			            // Shortcuts
			            var key = this._key;
			            var keyWords = key.words;

			            // Select 56 bits according to PC1
			            var keyBits = [];
			            for (var i = 0; i < 56; i++) {
			                var keyBitPos = PC1[i] - 1;
			                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;
			            }

			            // Assemble 16 subkeys
			            var subKeys = this._subKeys = [];
			            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
			                // Create subkey
			                var subKey = subKeys[nSubKey] = [];

			                // Shortcut
			                var bitShift = BIT_SHIFTS[nSubKey];

			                // Select 48 bits according to PC2
			                for (var i = 0; i < 24; i++) {
			                    // Select from the left 28 key bits
			                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);

			                    // Select from the right 28 key bits
			                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);
			                }

			                // Since each subkey is applied to an expanded 32-bit input,
			                // the subkey can be broken into 8 values scaled to 32-bits,
			                // which allows the key to be used without expansion
			                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);
			                for (var i = 1; i < 7; i++) {
			                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);
			                }
			                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);
			            }

			            // Compute inverse subkeys
			            var invSubKeys = this._invSubKeys = [];
			            for (var i = 0; i < 16; i++) {
			                invSubKeys[i] = subKeys[15 - i];
			            }
			        },

			        encryptBlock: function (M, offset) {
			            this._doCryptBlock(M, offset, this._subKeys);
			        },

			        decryptBlock: function (M, offset) {
			            this._doCryptBlock(M, offset, this._invSubKeys);
			        },

			        _doCryptBlock: function (M, offset, subKeys) {
			            // Get input
			            this._lBlock = M[offset];
			            this._rBlock = M[offset + 1];

			            // Initial permutation
			            exchangeLR.call(this, 4,  0x0f0f0f0f);
			            exchangeLR.call(this, 16, 0x0000ffff);
			            exchangeRL.call(this, 2,  0x33333333);
			            exchangeRL.call(this, 8,  0x00ff00ff);
			            exchangeLR.call(this, 1,  0x55555555);

			            // Rounds
			            for (var round = 0; round < 16; round++) {
			                // Shortcuts
			                var subKey = subKeys[round];
			                var lBlock = this._lBlock;
			                var rBlock = this._rBlock;

			                // Feistel function
			                var f = 0;
			                for (var i = 0; i < 8; i++) {
			                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
			                }
			                this._lBlock = rBlock;
			                this._rBlock = lBlock ^ f;
			            }

			            // Undo swap from last round
			            var t = this._lBlock;
			            this._lBlock = this._rBlock;
			            this._rBlock = t;

			            // Final permutation
			            exchangeLR.call(this, 1,  0x55555555);
			            exchangeRL.call(this, 8,  0x00ff00ff);
			            exchangeRL.call(this, 2,  0x33333333);
			            exchangeLR.call(this, 16, 0x0000ffff);
			            exchangeLR.call(this, 4,  0x0f0f0f0f);

			            // Set output
			            M[offset] = this._lBlock;
			            M[offset + 1] = this._rBlock;
			        },

			        keySize: 64/32,

			        ivSize: 64/32,

			        blockSize: 64/32
			    });

			    // Swap bits across the left and right words
			    function exchangeLR(offset, mask) {
			        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;
			        this._rBlock ^= t;
			        this._lBlock ^= t << offset;
			    }

			    function exchangeRL(offset, mask) {
			        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;
			        this._lBlock ^= t;
			        this._rBlock ^= t << offset;
			    }

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
			     */
			    C.DES = BlockCipher._createHelper(DES);

			    /**
			     * Triple-DES block cipher algorithm.
			     */
			    var TripleDES = C_algo.TripleDES = BlockCipher.extend({
			        _doReset: function () {
			            // Shortcuts
			            var key = this._key;
			            var keyWords = key.words;
			            // Make sure the key length is valid (64, 128 or >= 192 bit)
			            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {
			                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');
			            }

			            // Extend the key according to the keying options defined in 3DES standard
			            var key1 = keyWords.slice(0, 2);
			            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);
			            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);

			            // Create DES instances
			            this._des1 = DES.createEncryptor(WordArray.create(key1));
			            this._des2 = DES.createEncryptor(WordArray.create(key2));
			            this._des3 = DES.createEncryptor(WordArray.create(key3));
			        },

			        encryptBlock: function (M, offset) {
			            this._des1.encryptBlock(M, offset);
			            this._des2.decryptBlock(M, offset);
			            this._des3.encryptBlock(M, offset);
			        },

			        decryptBlock: function (M, offset) {
			            this._des3.decryptBlock(M, offset);
			            this._des2.encryptBlock(M, offset);
			            this._des1.decryptBlock(M, offset);
			        },

			        keySize: 192/32,

			        ivSize: 64/32,

			        blockSize: 64/32
			    });

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
			     */
			    C.TripleDES = BlockCipher._createHelper(TripleDES);
			}());


			return CryptoJS.TripleDES;

		})); 
	} (tripledes));
	return tripledes.exports;
}

var rc4 = {exports: {}};

var hasRequiredRc4;

function requireRc4 () {
	if (hasRequiredRc4) return rc4.exports;
	hasRequiredRc4 = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var StreamCipher = C_lib.StreamCipher;
			    var C_algo = C.algo;

			    /**
			     * RC4 stream cipher algorithm.
			     */
			    var RC4 = C_algo.RC4 = StreamCipher.extend({
			        _doReset: function () {
			            // Shortcuts
			            var key = this._key;
			            var keyWords = key.words;
			            var keySigBytes = key.sigBytes;

			            // Init sbox
			            var S = this._S = [];
			            for (var i = 0; i < 256; i++) {
			                S[i] = i;
			            }

			            // Key setup
			            for (var i = 0, j = 0; i < 256; i++) {
			                var keyByteIndex = i % keySigBytes;
			                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;

			                j = (j + S[i] + keyByte) % 256;

			                // Swap
			                var t = S[i];
			                S[i] = S[j];
			                S[j] = t;
			            }

			            // Counters
			            this._i = this._j = 0;
			        },

			        _doProcessBlock: function (M, offset) {
			            M[offset] ^= generateKeystreamWord.call(this);
			        },

			        keySize: 256/32,

			        ivSize: 0
			    });

			    function generateKeystreamWord() {
			        // Shortcuts
			        var S = this._S;
			        var i = this._i;
			        var j = this._j;

			        // Generate keystream word
			        var keystreamWord = 0;
			        for (var n = 0; n < 4; n++) {
			            i = (i + 1) % 256;
			            j = (j + S[i]) % 256;

			            // Swap
			            var t = S[i];
			            S[i] = S[j];
			            S[j] = t;

			            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);
			        }

			        // Update counters
			        this._i = i;
			        this._j = j;

			        return keystreamWord;
			    }

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
			     */
			    C.RC4 = StreamCipher._createHelper(RC4);

			    /**
			     * Modified RC4 stream cipher algorithm.
			     */
			    var RC4Drop = C_algo.RC4Drop = RC4.extend({
			        /**
			         * Configuration options.
			         *
			         * @property {number} drop The number of keystream words to drop. Default 192
			         */
			        cfg: RC4.cfg.extend({
			            drop: 192
			        }),

			        _doReset: function () {
			            RC4._doReset.call(this);

			            // Drop
			            for (var i = this.cfg.drop; i > 0; i--) {
			                generateKeystreamWord.call(this);
			            }
			        }
			    });

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
			     */
			    C.RC4Drop = StreamCipher._createHelper(RC4Drop);
			}());


			return CryptoJS.RC4;

		})); 
	} (rc4));
	return rc4.exports;
}

var rabbit = {exports: {}};

var hasRequiredRabbit;

function requireRabbit () {
	if (hasRequiredRabbit) return rabbit.exports;
	hasRequiredRabbit = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var StreamCipher = C_lib.StreamCipher;
			    var C_algo = C.algo;

			    // Reusable objects
			    var S  = [];
			    var C_ = [];
			    var G  = [];

			    /**
			     * Rabbit stream cipher algorithm
			     */
			    var Rabbit = C_algo.Rabbit = StreamCipher.extend({
			        _doReset: function () {
			            // Shortcuts
			            var K = this._key.words;
			            var iv = this.cfg.iv;

			            // Swap endian
			            for (var i = 0; i < 4; i++) {
			                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |
			                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);
			            }

			            // Generate initial state values
			            var X = this._X = [
			                K[0], (K[3] << 16) | (K[2] >>> 16),
			                K[1], (K[0] << 16) | (K[3] >>> 16),
			                K[2], (K[1] << 16) | (K[0] >>> 16),
			                K[3], (K[2] << 16) | (K[1] >>> 16)
			            ];

			            // Generate initial counter values
			            var C = this._C = [
			                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
			                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
			                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
			                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
			            ];

			            // Carry bit
			            this._b = 0;

			            // Iterate the system four times
			            for (var i = 0; i < 4; i++) {
			                nextState.call(this);
			            }

			            // Modify the counters
			            for (var i = 0; i < 8; i++) {
			                C[i] ^= X[(i + 4) & 7];
			            }

			            // IV setup
			            if (iv) {
			                // Shortcuts
			                var IV = iv.words;
			                var IV_0 = IV[0];
			                var IV_1 = IV[1];

			                // Generate four subvectors
			                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
			                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
			                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
			                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

			                // Modify counter values
			                C[0] ^= i0;
			                C[1] ^= i1;
			                C[2] ^= i2;
			                C[3] ^= i3;
			                C[4] ^= i0;
			                C[5] ^= i1;
			                C[6] ^= i2;
			                C[7] ^= i3;

			                // Iterate the system four times
			                for (var i = 0; i < 4; i++) {
			                    nextState.call(this);
			                }
			            }
			        },

			        _doProcessBlock: function (M, offset) {
			            // Shortcut
			            var X = this._X;

			            // Iterate the system
			            nextState.call(this);

			            // Generate four keystream words
			            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
			            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
			            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
			            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

			            for (var i = 0; i < 4; i++) {
			                // Swap endian
			                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
			                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

			                // Encrypt
			                M[offset + i] ^= S[i];
			            }
			        },

			        blockSize: 128/32,

			        ivSize: 64/32
			    });

			    function nextState() {
			        // Shortcuts
			        var X = this._X;
			        var C = this._C;

			        // Save old counter values
			        for (var i = 0; i < 8; i++) {
			            C_[i] = C[i];
			        }

			        // Calculate new counter values
			        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
			        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
			        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
			        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
			        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
			        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
			        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
			        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
			        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

			        // Calculate the g-values
			        for (var i = 0; i < 8; i++) {
			            var gx = X[i] + C[i];

			            // Construct high and low argument for squaring
			            var ga = gx & 0xffff;
			            var gb = gx >>> 16;

			            // Calculate high and low result of squaring
			            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
			            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

			            // High XOR low
			            G[i] = gh ^ gl;
			        }

			        // Calculate new state values
			        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
			        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
			        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
			        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
			        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
			        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
			        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
			        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
			    }

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
			     */
			    C.Rabbit = StreamCipher._createHelper(Rabbit);
			}());


			return CryptoJS.Rabbit;

		})); 
	} (rabbit));
	return rabbit.exports;
}

var rabbitLegacy = {exports: {}};

var hasRequiredRabbitLegacy;

function requireRabbitLegacy () {
	if (hasRequiredRabbitLegacy) return rabbitLegacy.exports;
	hasRequiredRabbitLegacy = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var StreamCipher = C_lib.StreamCipher;
			    var C_algo = C.algo;

			    // Reusable objects
			    var S  = [];
			    var C_ = [];
			    var G  = [];

			    /**
			     * Rabbit stream cipher algorithm.
			     *
			     * This is a legacy version that neglected to convert the key to little-endian.
			     * This error doesn't affect the cipher's security,
			     * but it does affect its compatibility with other implementations.
			     */
			    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
			        _doReset: function () {
			            // Shortcuts
			            var K = this._key.words;
			            var iv = this.cfg.iv;

			            // Generate initial state values
			            var X = this._X = [
			                K[0], (K[3] << 16) | (K[2] >>> 16),
			                K[1], (K[0] << 16) | (K[3] >>> 16),
			                K[2], (K[1] << 16) | (K[0] >>> 16),
			                K[3], (K[2] << 16) | (K[1] >>> 16)
			            ];

			            // Generate initial counter values
			            var C = this._C = [
			                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
			                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
			                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
			                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
			            ];

			            // Carry bit
			            this._b = 0;

			            // Iterate the system four times
			            for (var i = 0; i < 4; i++) {
			                nextState.call(this);
			            }

			            // Modify the counters
			            for (var i = 0; i < 8; i++) {
			                C[i] ^= X[(i + 4) & 7];
			            }

			            // IV setup
			            if (iv) {
			                // Shortcuts
			                var IV = iv.words;
			                var IV_0 = IV[0];
			                var IV_1 = IV[1];

			                // Generate four subvectors
			                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
			                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
			                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
			                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

			                // Modify counter values
			                C[0] ^= i0;
			                C[1] ^= i1;
			                C[2] ^= i2;
			                C[3] ^= i3;
			                C[4] ^= i0;
			                C[5] ^= i1;
			                C[6] ^= i2;
			                C[7] ^= i3;

			                // Iterate the system four times
			                for (var i = 0; i < 4; i++) {
			                    nextState.call(this);
			                }
			            }
			        },

			        _doProcessBlock: function (M, offset) {
			            // Shortcut
			            var X = this._X;

			            // Iterate the system
			            nextState.call(this);

			            // Generate four keystream words
			            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
			            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
			            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
			            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

			            for (var i = 0; i < 4; i++) {
			                // Swap endian
			                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
			                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

			                // Encrypt
			                M[offset + i] ^= S[i];
			            }
			        },

			        blockSize: 128/32,

			        ivSize: 64/32
			    });

			    function nextState() {
			        // Shortcuts
			        var X = this._X;
			        var C = this._C;

			        // Save old counter values
			        for (var i = 0; i < 8; i++) {
			            C_[i] = C[i];
			        }

			        // Calculate new counter values
			        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
			        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
			        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
			        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
			        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
			        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
			        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
			        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
			        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

			        // Calculate the g-values
			        for (var i = 0; i < 8; i++) {
			            var gx = X[i] + C[i];

			            // Construct high and low argument for squaring
			            var ga = gx & 0xffff;
			            var gb = gx >>> 16;

			            // Calculate high and low result of squaring
			            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
			            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

			            // High XOR low
			            G[i] = gh ^ gl;
			        }

			        // Calculate new state values
			        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
			        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
			        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
			        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
			        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
			        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
			        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
			        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
			    }

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
			     */
			    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
			}());


			return CryptoJS.RabbitLegacy;

		})); 
	} (rabbitLegacy));
	return rabbitLegacy.exports;
}

var blowfish = {exports: {}};

var hasRequiredBlowfish;

function requireBlowfish () {
	if (hasRequiredBlowfish) return blowfish.exports;
	hasRequiredBlowfish = 1;
	(function (module, exports) {
(function (root, factory, undef) {
			{
				// CommonJS
				module.exports = factory(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
			}
		}(commonjsGlobal, function (CryptoJS) {

			(function () {
			    // Shortcuts
			    var C = CryptoJS;
			    var C_lib = C.lib;
			    var BlockCipher = C_lib.BlockCipher;
			    var C_algo = C.algo;

			    const N = 16;

			    //Origin pbox and sbox, derived from PI
			    const ORIG_P = [
			        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,
			        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,
			        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,
			        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,
			        0x9216D5D9, 0x8979FB1B
			    ];

			    const ORIG_S = [
			        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,
			            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,
			            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,
			            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,
			            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,
			            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,
			            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,
			            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,
			            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,
			            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,
			            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,
			            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,
			            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,
			            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,
			            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,
			            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,
			            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,
			            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,
			            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,
			            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,
			            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,
			            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,
			            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,
			            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,
			            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,
			            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,
			            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,
			            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,
			            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,
			            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,
			            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,
			            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,
			            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,
			            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,
			            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,
			            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,
			            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,
			            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,
			            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,
			            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,
			            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,
			            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,
			            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,
			            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,
			            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,
			            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,
			            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,
			            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,
			            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,
			            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,
			            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,
			            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,
			            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,
			            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,
			            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,
			            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,
			            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,
			            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,
			            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,
			            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,
			            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,
			            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,
			            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,
			            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],
			        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,
			            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,
			            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,
			            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,
			            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,
			            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,
			            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,
			            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,
			            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,
			            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,
			            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,
			            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,
			            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,
			            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,
			            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,
			            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,
			            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,
			            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,
			            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,
			            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,
			            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,
			            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,
			            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,
			            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,
			            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,
			            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,
			            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,
			            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,
			            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,
			            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,
			            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,
			            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,
			            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,
			            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,
			            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,
			            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,
			            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,
			            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,
			            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,
			            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,
			            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,
			            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,
			            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,
			            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,
			            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,
			            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,
			            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,
			            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,
			            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,
			            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,
			            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,
			            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,
			            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,
			            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,
			            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,
			            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,
			            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,
			            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,
			            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,
			            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,
			            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,
			            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,
			            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,
			            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],
			        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,
			            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,
			            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,
			            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,
			            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,
			            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,
			            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,
			            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,
			            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,
			            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,
			            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,
			            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,
			            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,
			            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,
			            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,
			            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,
			            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,
			            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,
			            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,
			            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,
			            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,
			            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,
			            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,
			            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,
			            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,
			            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,
			            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,
			            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,
			            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,
			            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,
			            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,
			            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,
			            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,
			            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,
			            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,
			            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,
			            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,
			            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,
			            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,
			            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,
			            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,
			            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,
			            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,
			            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,
			            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,
			            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,
			            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,
			            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,
			            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,
			            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,
			            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,
			            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,
			            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,
			            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,
			            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,
			            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,
			            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,
			            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,
			            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,
			            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,
			            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,
			            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,
			            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,
			            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],
			        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,
			            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,
			            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,
			            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,
			            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,
			            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,
			            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,
			            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,
			            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,
			            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,
			            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,
			            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,
			            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,
			            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,
			            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,
			            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,
			            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,
			            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,
			            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,
			            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,
			            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,
			            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,
			            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,
			            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,
			            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,
			            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,
			            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,
			            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,
			            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,
			            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,
			            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,
			            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,
			            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,
			            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,
			            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,
			            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,
			            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,
			            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,
			            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,
			            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,
			            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,
			            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,
			            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,
			            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,
			            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,
			            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,
			            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,
			            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,
			            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,
			            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,
			            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,
			            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,
			            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,
			            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,
			            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,
			            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,
			            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,
			            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,
			            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,
			            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,
			            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,
			            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,
			            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,
			            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]
			    ];

			    var BLOWFISH_CTX = {
			        pbox: [],
			        sbox: []
			    };

			    function F(ctx, x){
			        let a = (x >> 24) & 0xFF;
			        let b = (x >> 16) & 0xFF;
			        let c = (x >> 8) & 0xFF;
			        let d = x & 0xFF;

			        let y = ctx.sbox[0][a] + ctx.sbox[1][b];
			        y = y ^ ctx.sbox[2][c];
			        y = y + ctx.sbox[3][d];

			        return y;
			    }

			    function BlowFish_Encrypt(ctx, left, right){
			        let Xl = left;
			        let Xr = right;
			        let temp;

			        for(let i = 0; i < N; ++i){
			            Xl = Xl ^ ctx.pbox[i];
			            Xr = F(ctx, Xl) ^ Xr;

			            temp = Xl;
			            Xl = Xr;
			            Xr = temp;
			        }

			        temp = Xl;
			        Xl = Xr;
			        Xr = temp;

			        Xr = Xr ^ ctx.pbox[N];
			        Xl = Xl ^ ctx.pbox[N + 1];

			        return {left: Xl, right: Xr};
			    }

			    function BlowFish_Decrypt(ctx, left, right){
			        let Xl = left;
			        let Xr = right;
			        let temp;

			        for(let i = N + 1; i > 1; --i){
			            Xl = Xl ^ ctx.pbox[i];
			            Xr = F(ctx, Xl) ^ Xr;

			            temp = Xl;
			            Xl = Xr;
			            Xr = temp;
			        }

			        temp = Xl;
			        Xl = Xr;
			        Xr = temp;

			        Xr = Xr ^ ctx.pbox[1];
			        Xl = Xl ^ ctx.pbox[0];

			        return {left: Xl, right: Xr};
			    }

			    /**
			     * Initialization ctx's pbox and sbox.
			     *
			     * @param {Object} ctx The object has pbox and sbox.
			     * @param {Array} key An array of 32-bit words.
			     * @param {int} keysize The length of the key.
			     *
			     * @example
			     *
			     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);
			     */
			    function BlowFishInit(ctx, key, keysize)
			    {
			        for(let Row = 0; Row < 4; Row++)
			        {
			            ctx.sbox[Row] = [];
			            for(let Col = 0; Col < 256; Col++)
			            {
			                ctx.sbox[Row][Col] = ORIG_S[Row][Col];
			            }
			        }

			        let keyIndex = 0;
			        for(let index = 0; index < N + 2; index++)
			        {
			            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];
			            keyIndex++;
			            if(keyIndex >= keysize)
			            {
			                keyIndex = 0;
			            }
			        }

			        let Data1 = 0;
			        let Data2 = 0;
			        let res = 0;
			        for(let i = 0; i < N + 2; i += 2)
			        {
			            res = BlowFish_Encrypt(ctx, Data1, Data2);
			            Data1 = res.left;
			            Data2 = res.right;
			            ctx.pbox[i] = Data1;
			            ctx.pbox[i + 1] = Data2;
			        }

			        for(let i = 0; i < 4; i++)
			        {
			            for(let j = 0; j < 256; j += 2)
			            {
			                res = BlowFish_Encrypt(ctx, Data1, Data2);
			                Data1 = res.left;
			                Data2 = res.right;
			                ctx.sbox[i][j] = Data1;
			                ctx.sbox[i][j + 1] = Data2;
			            }
			        }

			        return true;
			    }

			    /**
			     * Blowfish block cipher algorithm.
			     */
			    var Blowfish = C_algo.Blowfish = BlockCipher.extend({
			        _doReset: function () {
			            // Skip reset of nRounds has been set before and key did not change
			            if (this._keyPriorReset === this._key) {
			                return;
			            }

			            // Shortcuts
			            var key = this._keyPriorReset = this._key;
			            var keyWords = key.words;
			            var keySize = key.sigBytes / 4;

			            //Initialization pbox and sbox
			            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);
			        },

			        encryptBlock: function (M, offset) {
			            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);
			            M[offset] = res.left;
			            M[offset + 1] = res.right;
			        },

			        decryptBlock: function (M, offset) {
			            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);
			            M[offset] = res.left;
			            M[offset + 1] = res.right;
			        },

			        blockSize: 64/32,

			        keySize: 128/32,

			        ivSize: 64/32
			    });

			    /**
			     * Shortcut functions to the cipher's object interface.
			     *
			     * @example
			     *
			     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);
			     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);
			     */
			    C.Blowfish = BlockCipher._createHelper(Blowfish);
			}());


			return CryptoJS.Blowfish;

		})); 
	} (blowfish));
	return blowfish.exports;
}

(function (module, exports) {
(function (root, factory, undef) {
		{
			// CommonJS
			module.exports = factory(requireCore(), requireX64Core(), requireLibTypedarrays(), requireEncUtf16(), requireEncBase64(), requireEncBase64url(), requireMd5(), requireSha1(), requireSha256(), requireSha224(), requireSha512(), requireSha384(), requireSha3(), requireRipemd160(), requireHmac(), requirePbkdf2(), requireEvpkdf(), requireCipherCore(), requireModeCfb(), requireModeCtr(), requireModeCtrGladman(), requireModeOfb(), requireModeEcb(), requirePadAnsix923(), requirePadIso10126(), requirePadIso97971(), requirePadZeropadding(), requirePadNopadding(), requireFormatHex(), requireAes(), requireTripledes(), requireRc4(), requireRabbit(), requireRabbitLegacy(), requireBlowfish());
		}
	}(commonjsGlobal, function (CryptoJS) {

		return CryptoJS;

	})); 
} (cryptoJs));

var cryptoJsExports = cryptoJs.exports;
var CryptoJS = /*@__PURE__*/getDefaultExportFromCjs(cryptoJsExports);

const generateKey = key => {
  const keys = CryptoJS.MD5(key).toString();
  const SECRET_KEY = CryptoJS.enc.Utf8.parse(keys); //十六位十六进制数作为密钥
  return SECRET_KEY;
};
const generateIv = iv => {
  const vi = CryptoJS.MD5('e3bbe7e3ba84431a').toString();
  const SECRET_IV = CryptoJS.enc.Utf8.parse(vi); //十六位十六进制数作为密钥偏移量
  return SECRET_IV;
};
/**
 * AES加密
 * @param data 加密数据
 * @returns 返回加密数据
 */
const encryptData = (data, key, iv) => {
  if (typeof data === 'object') {
    try {
      data = JSON.stringify(data);
    } catch (e) {
      throw new Error('encrypt error' + e);
    }
  }
  const dataHex = CryptoJS.enc.Utf8.parse(data);
  const encrypted = CryptoJS.AES.encrypt(dataHex, generateKey(key), {
    iv: generateIv(),
    mode: CryptoJS.mode.CBC,
    padding: CryptoJS.pad.Pkcs7
  });
  return encrypted.ciphertext.toString();
};
/**
 * AES解密
 * @param data 解密数据
 * @returns 返回解密结果
 */
const decryptData = (data, key, iv) => {
  //解密
  const encryptedHexStr = CryptoJS.enc.Hex.parse(data);
  const str = CryptoJS.enc.Base64.stringify(encryptedHexStr);
  const decrypt = CryptoJS.AES.decrypt(str, generateKey(key), {
    iv: generateIv(),
    mode: CryptoJS.mode.CBC,
    padding: CryptoJS.pad.Pkcs7
  });
  const decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);
  return decryptedStr.toString();
};

//https://blog.csdn.net/m0_46995864/article/details/125383362
//https://blog.csdn.net/jx520/article/details/129688159
/**
 * 设置缓存时间,返回时间戳
 * @param {*} expireTimes
 */
const getExpireTimes = expireTimes => {
  let _expires = dayjs().add(1, 'day').valueOf(); // 默认一天时间
  const reg = /^(\d{1,})(?:y|m|d|h|min|s)$/i;
  const expireTime = expireTimes.replace(reg, '$1');
  if (expireTimes) {
    switch (expireTimes.constructor) {
      case Number:
        _expires = dayjs().add(expireTimes, 'second').valueOf();
        break;
      case String:
        if (/^(?:\d{1,}(y|m|d|h|min|s))$/i.test(expireTimes.toString())) {
          // get capture type group , to lower case
          switch (expireTimes.toString().replace(/^(?:\d{1,})(y|m|d|h|min|s)$/i, '$1').toLowerCase()) {
            // Frequency sorting
            case 'm':
              //月
              _expires = dayjs().add(expireTime, 'month').valueOf();
              break;
            case 'd':
              //天
              _expires = dayjs().add(expireTime, 'day').valueOf();
              break;
            case 'h':
              //小时
              _expires = dayjs().add(expireTime, 'hour').valueOf();
              break;
            case 'min':
              //分钟
              _expires = dayjs().add(expireTime, 'minute').valueOf();
              break;
            case 's':
              //秒
              _expires = dayjs().add(expireTime, 'second').valueOf();
              break;
            case 'y':
              //年
              _expires = dayjs().add(expireTime, 'year').valueOf();
              break;
          }
        } else {
          _expires = dayjs().add(expireTime, 'second').valueOf();
        }
        break;
      case Date:
        _expires = dayjs(expireTimes.toUTCString()).valueOf();
        break;
    }
  }
  return _expires;
};
const expireTime = (option, expire) => {
  let _expire = 0;
  if (expire) {
    _expire = getExpireTimes(expire);
  } else if (option && option.expire) {
    _expire = getExpireTimes(option.expire);
  }
  return _expire;
};
var cache = {
  install(Vue, option) {
    const prefix = option.prefix || 'xl-';
    const local = {
      set(key, value, expire) {
        if (!localStorage) {
          return;
        }
        if (key != null && value != null) {
          const data = {
            value: option.isEncrypt ? encryptData(value, option.SECRET_KEY, option.SECRET_IV) : value,
            expire: expireTime(option, expire)
          };
          localStorage.setItem(prefix + key, JSON.stringify(data));
        }
      },
      get(key) {
        if (!localStorage) {
          return null;
        }
        if (key == null) {
          return null;
        }
        let value = null;
        let data = localStorage.getItem(prefix + key);
        if (data !== null) {
          data = JSON.parse(data);
          if (data.expire === 0) {
            value = data.value;
          } else if (data.expire < Date.now()) {
            value = null;
            this.remove(key);
          } else {
            value = data.value;
          }
          if (value) {
            value = option.isEncrypt ? decryptData(value, option.SECRET_KEY, option.SECRET_IV) : value;
          }
        }
        return value;
      },
      setJSON(key, jsonValue, expire) {
        if (jsonValue != null) {
          this.set(key, jsonValue, option.expire || expire);
        }
      },
      getJSON(key) {
        const value = this.get(key);
        if (value != null) {
          return value;
        } else {
          return null;
        }
      },
      remove(key) {
        localStorage.removeItem(prefix + key);
      }
    };
    const session = {
      set(key, value, expire) {
        if (!sessionStorage) {
          return;
        }
        if (key != null && value != null) {
          const data = {
            value: option.isEncrypt ? encryptData(value, option.SECRET_KEY, option.SECRET_IV) : value,
            expire: expireTime(option, expire)
          };
          sessionStorage.setItem(prefix + key, JSON.stringify(data));
        }
      },
      get(key) {
        if (!sessionStorage) {
          return null;
        }
        if (key == null) {
          return null;
        }
        let value = null;
        let data = sessionStorage.getItem(prefix + key);
        if (data !== null) {
          data = JSON.parse(data);
          if (data.expire === 0) {
            value = data.value;
          } else if (data.expire < Date.now()) {
            value = null;
            this.remove(key);
          } else {
            value = data.value;
          }
        }
        if (value) {
          value = option.isEncrypt ? decryptData(value, option.SECRET_KEY, option.SECRET_IV) : value;
        }
        return value;
      },
      setJSON(key, jsonValue, expire) {
        if (jsonValue != null) {
          this.set(key, jsonValue, expire);
        }
      },
      getJSON(key) {
        const value = this.get(key);
        if (value != null) {
          return value;
        } else {
          return null;
        }
      },
      remove(key) {
        sessionStorage.removeItem(prefix + key);
      }
    };
    Vue.prototype.$cache = {
      local: local,
      session: session
    };
  }
};

// 存储组件列表
const components = [__vue_component__$d, __vue_component__$c, __vue_component__$b, __vue_component__$a, __vue_component__$9, __vue_component__$8, __vue_component__$6, __vue_component__$5, __vue_component__$4, __vue_component__$3, __vue_component__$2, __vue_component__$1, __vue_component__];
// 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册
const install = function (Vue) {
  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  Vue.prototype.$global = {
    ...{
      codeApi: '/index/system/index/code/'
    },
    ...opts
  };
  // 判断是否安装
  if (install.installed) return;
  // 遍历注册全局组件
  components.forEach(component => {
    //console.log(component.name)
    Vue.component(component.name, component);
  });
  Vue.use(cache, {
    ...{
      prefix: 'xl-',
      expire: '1d',
      isEncrypt: true,
      SECRET_KEY: 'ccdde6e143439161',
      SECRET_IV: 'aabbe7e3ba84431a' //加密的IV,十六位十六进制数作为密钥偏移量
    },

    ...opts.storage
  });
};
// 判断是否是直接引入文件
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}
var index = {
  version: '0.1.0',
  install,
  // 以下是单个导出的组件
  XlTable: __vue_component__$d,
  XlPagination: __vue_component__$c,
  virtualSelect: __vue_component__$b,
  XlSelect: __vue_component__$a,
  XlCheckBox: __vue_component__$9,
  SpeakTts: __vue_component__$8,
  XlForm: __vue_component__$6,
  XlRadio: __vue_component__$5,
  XlCascader: __vue_component__$4,
  XlDatePicker: __vue_component__$3,
  XlHeaderSearch: __vue_component__$2,
  XlTreeSelect: __vue_component__$1,
  XlDateTime: __vue_component__
};

export { index as default };
